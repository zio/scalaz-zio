Index.PACKAGES = {"zio.metrics.jvm" : [{"name" : "zio.metrics.jvm.BufferPools", "shortDescription" : "", "object" : "zio\/metrics\/jvm\/BufferPools$.html", "members_object" : [{"label" : "live", "tail" : ": ZLayer[JvmMetricsSchedule, Throwable, Reloadable[BufferPools]]", "member" : "zio.metrics.jvm.BufferPools.live", "link" : "zio\/metrics\/jvm\/BufferPools$.html#live:zio.ZLayer[zio.metrics.jvm.JvmMetricsSchedule,Throwable,zio.Reloadable[zio.metrics.jvm.BufferPools]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/jvm\/BufferPools$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/jvm\/BufferPools$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/jvm\/BufferPools$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/jvm\/BufferPools$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/jvm\/BufferPools$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/jvm\/BufferPools$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/jvm\/BufferPools$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/jvm\/BufferPools$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/jvm\/BufferPools$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/jvm\/BufferPools$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/metrics\/jvm\/BufferPools$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/jvm\/BufferPools$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/BufferPools$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/BufferPools$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/BufferPools$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/metrics\/jvm\/BufferPools$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/metrics\/jvm\/BufferPools$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/jvm\/BufferPools$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/jvm\/BufferPools$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "zio.metrics.jvm.BufferPools#<init>", "error" : "unsupported entity"}, {"label" : "bufferPoolUsedBuffers", "tail" : ": PollingMetric[Any, Throwable, Chunk[Gauge]]", "member" : "zio.metrics.jvm.BufferPools.bufferPoolUsedBuffers", "link" : "zio\/metrics\/jvm\/BufferPools.html#bufferPoolUsedBuffers:zio.metrics.PollingMetric[Any,Throwable,zio.Chunk[zio.metrics.MetricState.Gauge]]", "kind" : "val"}, {"label" : "bufferPoolCapacityBytes", "tail" : ": PollingMetric[Any, Throwable, Chunk[Gauge]]", "member" : "zio.metrics.jvm.BufferPools.bufferPoolCapacityBytes", "link" : "zio\/metrics\/jvm\/BufferPools.html#bufferPoolCapacityBytes:zio.metrics.PollingMetric[Any,Throwable,zio.Chunk[zio.metrics.MetricState.Gauge]]", "kind" : "val"}, {"label" : "bufferPoolUsedBytes", "tail" : ": PollingMetric[Any, Throwable, Chunk[Gauge]]", "member" : "zio.metrics.jvm.BufferPools.bufferPoolUsedBytes", "link" : "zio\/metrics\/jvm\/BufferPools.html#bufferPoolUsedBytes:zio.metrics.PollingMetric[Any,Throwable,zio.Chunk[zio.metrics.MetricState.Gauge]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/metrics\/jvm\/BufferPools.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/jvm\/BufferPools.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/jvm\/BufferPools.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/jvm\/BufferPools.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/jvm\/BufferPools.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/jvm\/BufferPools.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/jvm\/BufferPools.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/jvm\/BufferPools.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/jvm\/BufferPools.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/jvm\/BufferPools.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/jvm\/BufferPools.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/jvm\/BufferPools.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/BufferPools.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/BufferPools.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/BufferPools.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/jvm\/BufferPools.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/jvm\/BufferPools.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/metrics\/jvm\/BufferPools.html", "kind" : "case class"}, {"name" : "zio.metrics.jvm.ClassLoading", "shortDescription" : "", "object" : "zio\/metrics\/jvm\/ClassLoading$.html", "members_object" : [{"label" : "live", "tail" : ": ZLayer[JvmMetricsSchedule, Throwable, ClassLoading]", "member" : "zio.metrics.jvm.ClassLoading.live", "link" : "zio\/metrics\/jvm\/ClassLoading$.html#live:zio.ZLayer[zio.metrics.jvm.JvmMetricsSchedule,Throwable,zio.metrics.jvm.ClassLoading]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/jvm\/ClassLoading$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/jvm\/ClassLoading$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/jvm\/ClassLoading$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/jvm\/ClassLoading$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/jvm\/ClassLoading$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/jvm\/ClassLoading$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/jvm\/ClassLoading$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/jvm\/ClassLoading$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/jvm\/ClassLoading$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/jvm\/ClassLoading$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/metrics\/jvm\/ClassLoading$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/jvm\/ClassLoading$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/ClassLoading$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/ClassLoading$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/ClassLoading$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/metrics\/jvm\/ClassLoading$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/metrics\/jvm\/ClassLoading$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/jvm\/ClassLoading$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/jvm\/ClassLoading$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "zio.metrics.jvm.ClassLoading#<init>", "error" : "unsupported entity"}, {"label" : "unloadedClassCount", "tail" : ": PollingMetric[Any, Throwable, Gauge]", "member" : "zio.metrics.jvm.ClassLoading.unloadedClassCount", "link" : "zio\/metrics\/jvm\/ClassLoading.html#unloadedClassCount:zio.metrics.PollingMetric[Any,Throwable,zio.metrics.MetricState.Gauge]", "kind" : "val"}, {"label" : "totalLoadedClassCount", "tail" : ": PollingMetric[Any, Throwable, Gauge]", "member" : "zio.metrics.jvm.ClassLoading.totalLoadedClassCount", "link" : "zio\/metrics\/jvm\/ClassLoading.html#totalLoadedClassCount:zio.metrics.PollingMetric[Any,Throwable,zio.metrics.MetricState.Gauge]", "kind" : "val"}, {"label" : "loadedClassCount", "tail" : ": PollingMetric[Any, Throwable, Gauge]", "member" : "zio.metrics.jvm.ClassLoading.loadedClassCount", "link" : "zio\/metrics\/jvm\/ClassLoading.html#loadedClassCount:zio.metrics.PollingMetric[Any,Throwable,zio.metrics.MetricState.Gauge]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/metrics\/jvm\/ClassLoading.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/jvm\/ClassLoading.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/jvm\/ClassLoading.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/jvm\/ClassLoading.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/jvm\/ClassLoading.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/jvm\/ClassLoading.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/jvm\/ClassLoading.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/jvm\/ClassLoading.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/jvm\/ClassLoading.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/jvm\/ClassLoading.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/jvm\/ClassLoading.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/jvm\/ClassLoading.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/ClassLoading.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/ClassLoading.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/ClassLoading.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/jvm\/ClassLoading.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/jvm\/ClassLoading.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/metrics\/jvm\/ClassLoading.html", "kind" : "case class"}, {"name" : "zio.metrics.jvm.DefaultJvmMetrics", "object" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html", "members_object" : [{"label" : "jvmMetricsSchedule", "tail" : "(): ULayer[JvmMetricsSchedule]", "member" : "zio.metrics.jvm.DefaultJvmMetrics.jvmMetricsSchedule", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html#jvmMetricsSchedule:zio.ULayer[zio.metrics.jvm.JvmMetricsSchedule]", "kind" : "def"}, {"label" : "live", "tail" : ": ZLayer[Any, Throwable, Reloadable[BufferPools] with ClassLoading with GarbageCollector with MemoryAllocation with MemoryPools with Standard with Thread with VersionInfo]", "member" : "zio.metrics.jvm.DefaultJvmMetrics.live", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html#live:zio.ZLayer[Any,Throwable,zio.Reloadable[zio.metrics.jvm.BufferPools]withzio.metrics.jvm.ClassLoadingwithzio.metrics.jvm.GarbageCollectorwithzio.metrics.jvm.MemoryAllocationwithzio.metrics.jvm.MemoryPoolswithzio.metrics.jvm.Standardwithzio.metrics.jvm.Threadwithzio.metrics.jvm.VersionInfo]", "kind" : "lazy val"}, {"label" : "app", "tail" : ": ZIOAppDefault", "member" : "zio.metrics.jvm.DefaultJvmMetrics.app", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html#app:zio.ZIOAppDefault", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html", "kind" : "trait", "members_trait" : [{"label" : "live", "tail" : ": ZLayer[Any, Throwable, Reloadable[BufferPools] with ClassLoading with GarbageCollector with MemoryAllocation with MemoryPools with Standard with Thread with VersionInfo]", "member" : "zio.metrics.jvm.DefaultJvmMetrics.live", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html#live:zio.ZLayer[Any,Throwable,zio.Reloadable[zio.metrics.jvm.BufferPools]withzio.metrics.jvm.ClassLoadingwithzio.metrics.jvm.GarbageCollectorwithzio.metrics.jvm.MemoryAllocationwithzio.metrics.jvm.MemoryPoolswithzio.metrics.jvm.Standardwithzio.metrics.jvm.Threadwithzio.metrics.jvm.VersionInfo]", "kind" : "lazy val"}, {"label" : "app", "tail" : ": ZIOAppDefault", "member" : "zio.metrics.jvm.DefaultJvmMetrics.app", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html#app:zio.ZIOAppDefault", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "jvmMetricsSchedule", "tail" : "(): ULayer[JvmMetricsSchedule]", "member" : "zio.metrics.jvm.DefaultJvmMetrics.jvmMetricsSchedule", "link" : "zio\/metrics\/jvm\/DefaultJvmMetrics.html#jvmMetricsSchedule:zio.ULayer[zio.metrics.jvm.JvmMetricsSchedule]", "kind" : "abstract def"}], "shortDescription" : "JVM metrics, compatible with the prometheus-hotspot library, withconfigurable schedule"}, {"name" : "zio.metrics.jvm.GarbageCollector", "shortDescription" : "", "object" : "zio\/metrics\/jvm\/GarbageCollector$.html", "members_object" : [{"label" : "live", "tail" : ": ZLayer[JvmMetricsSchedule, Throwable, GarbageCollector]", "member" : "zio.metrics.jvm.GarbageCollector.live", "link" : "zio\/metrics\/jvm\/GarbageCollector$.html#live:zio.ZLayer[zio.metrics.jvm.JvmMetricsSchedule,Throwable,zio.metrics.jvm.GarbageCollector]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/jvm\/GarbageCollector$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/jvm\/GarbageCollector$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/jvm\/GarbageCollector$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/jvm\/GarbageCollector$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/jvm\/GarbageCollector$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/jvm\/GarbageCollector$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/jvm\/GarbageCollector$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/jvm\/GarbageCollector$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/jvm\/GarbageCollector$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/jvm\/GarbageCollector$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/metrics\/jvm\/GarbageCollector$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/jvm\/GarbageCollector$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/GarbageCollector$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/GarbageCollector$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/GarbageCollector$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/metrics\/jvm\/GarbageCollector$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/metrics\/jvm\/GarbageCollector$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/jvm\/GarbageCollector$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/jvm\/GarbageCollector$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "zio.metrics.jvm.GarbageCollector#<init>", "error" : "unsupported entity"}, {"label" : "gcCollectionSecondsCount", "tail" : ": PollingMetric[Any, Throwable, Chunk[Gauge]]", "member" : "zio.metrics.jvm.GarbageCollector.gcCollectionSecondsCount", "link" : "zio\/metrics\/jvm\/GarbageCollector.html#gcCollectionSecondsCount:zio.metrics.PollingMetric[Any,Throwable,zio.Chunk[zio.metrics.MetricState.Gauge]]", "kind" : "val"}, {"label" : "gcCollectionSecondsSum", "tail" : ": PollingMetric[Any, Throwable, Chunk[Gauge]]", "member" : "zio.metrics.jvm.GarbageCollector.gcCollectionSecondsSum", "link" : "zio\/metrics\/jvm\/GarbageCollector.html#gcCollectionSecondsSum:zio.metrics.PollingMetric[Any,Throwable,zio.Chunk[zio.metrics.MetricState.Gauge]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/metrics\/jvm\/GarbageCollector.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/jvm\/GarbageCollector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/jvm\/GarbageCollector.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/jvm\/GarbageCollector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/jvm\/GarbageCollector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/jvm\/GarbageCollector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/jvm\/GarbageCollector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/jvm\/GarbageCollector.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/jvm\/GarbageCollector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/jvm\/GarbageCollector.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/jvm\/GarbageCollector.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/jvm\/GarbageCollector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/GarbageCollector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/GarbageCollector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/GarbageCollector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/jvm\/GarbageCollector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/jvm\/GarbageCollector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/metrics\/jvm\/GarbageCollector.html", "kind" : "case class"}, {"name" : "zio.metrics.jvm.JvmMetricsSchedule", "shortDescription" : "Configuration for the JVM metrics", "object" : "zio\/metrics\/jvm\/JvmMetricsSchedule$.html", "members_object" : [{"label" : "default", "tail" : ": ULayer[JvmMetricsSchedule]", "member" : "zio.metrics.jvm.JvmMetricsSchedule.default", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule$.html#default:zio.ULayer[zio.metrics.jvm.JvmMetricsSchedule]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "zio.metrics.jvm.JvmMetricsSchedule#<init>", "error" : "unsupported entity"}, {"label" : "reloadDynamicMetrics", "tail" : ": Schedule[Any, Any, Any]", "member" : "zio.metrics.jvm.JvmMetricsSchedule.reloadDynamicMetrics", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule.html#reloadDynamicMetrics:zio.Schedule[Any,Any,Any]", "kind" : "val"}, {"label" : "updateMetrics", "tail" : ": Schedule[Any, Any, Any]", "member" : "zio.metrics.jvm.JvmMetricsSchedule.updateMetrics", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule.html#updateMetrics:zio.Schedule[Any,Any,Any]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/jvm\/JvmMetricsSchedule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/metrics\/jvm\/JvmMetricsSchedule.html", "kind" : "case class"}, {"name" : "zio.metrics.jvm.MemoryAllocation", "shortDescription" : "", "object" : "zio\/metrics\/jvm\/MemoryAllocation$.html", "members_object" : [{"label" : "live", "tail" : ": ZLayer[Any, Throwable, MemoryAllocation]", "member" : "zio.metrics.jvm.MemoryAllocation.live", "link" : "zio\/metrics\/jvm\/MemoryAllocation$.html#live:zio.ZLayer[Any,Throwable,zio.metrics.jvm.MemoryAllocation]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/jvm\/MemoryAllocation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/jvm\/MemoryAllocation$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/jvm\/MemoryAllocation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/jvm\/MemoryAllocation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/jvm\/MemoryAllocation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/jvm\/MemoryAllocation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/jvm\/MemoryAllocation$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/jvm\/MemoryAllocation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/jvm\/MemoryAllocation$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/jvm\/MemoryAllocation$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/metrics\/jvm\/MemoryAllocation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/jvm\/MemoryAllocation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/MemoryAllocation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/MemoryAllocation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/MemoryAllocation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/metrics\/jvm\/MemoryAllocation$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/metrics\/jvm\/MemoryAllocation$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/jvm\/MemoryAllocation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/jvm\/MemoryAllocation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "zio.metrics.jvm.MemoryAllocation#<init>", "error" : "unsupported entity"}, {"label" : "garbageCollectorMXBeans", "tail" : ": List[GarbageCollectorMXBean]", "member" : "zio.metrics.jvm.MemoryAllocation.garbageCollectorMXBeans", "link" : "zio\/metrics\/jvm\/MemoryAllocation.html#garbageCollectorMXBeans:List[java.lang.management.GarbageCollectorMXBean]", "kind" : "val"}, {"label" : "listener", "tail" : ": NotificationListener", "member" : "zio.metrics.jvm.MemoryAllocation.listener", "link" : "zio\/metrics\/jvm\/MemoryAllocation.html#listener:javax.management.NotificationListener", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/metrics\/jvm\/MemoryAllocation.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/jvm\/MemoryAllocation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/jvm\/MemoryAllocation.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/jvm\/MemoryAllocation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/jvm\/MemoryAllocation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/jvm\/MemoryAllocation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/jvm\/MemoryAllocation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/jvm\/MemoryAllocation.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/jvm\/MemoryAllocation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/jvm\/MemoryAllocation.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/jvm\/MemoryAllocation.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/jvm\/MemoryAllocation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/MemoryAllocation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/MemoryAllocation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/MemoryAllocation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/jvm\/MemoryAllocation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/jvm\/MemoryAllocation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/metrics\/jvm\/MemoryAllocation.html", "kind" : "case class"}, {"name" : "zio.metrics.jvm.MemoryPools", "shortDescription" : "", "object" : "zio\/metrics\/jvm\/MemoryPools$.html", "members_object" : [{"label" : "live", "tail" : ": ZLayer[JvmMetricsSchedule, Throwable, MemoryPools]", "member" : "zio.metrics.jvm.MemoryPools.live", "link" : "zio\/metrics\/jvm\/MemoryPools$.html#live:zio.ZLayer[zio.metrics.jvm.JvmMetricsSchedule,Throwable,zio.metrics.jvm.MemoryPools]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/jvm\/MemoryPools$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/jvm\/MemoryPools$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/jvm\/MemoryPools$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/jvm\/MemoryPools$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/jvm\/MemoryPools$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/jvm\/MemoryPools$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/jvm\/MemoryPools$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/jvm\/MemoryPools$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/jvm\/MemoryPools$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/jvm\/MemoryPools$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/metrics\/jvm\/MemoryPools$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/jvm\/MemoryPools$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/MemoryPools$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/MemoryPools$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/MemoryPools$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/metrics\/jvm\/MemoryPools$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/metrics\/jvm\/MemoryPools$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/jvm\/MemoryPools$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/jvm\/MemoryPools$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "zio.metrics.jvm.MemoryPools#<init>", "error" : "unsupported entity"}, {"label" : "poolBytesInit", "tail" : ": PollingMetric[Any, Throwable, Chunk[Gauge]]", "member" : "zio.metrics.jvm.MemoryPools.poolBytesInit", "link" : "zio\/metrics\/jvm\/MemoryPools.html#poolBytesInit:zio.metrics.PollingMetric[Any,Throwable,zio.Chunk[zio.metrics.MetricState.Gauge]]", "kind" : "val"}, {"label" : "poolBytesMax", "tail" : ": PollingMetric[Any, Throwable, Chunk[Gauge]]", "member" : "zio.metrics.jvm.MemoryPools.poolBytesMax", "link" : "zio\/metrics\/jvm\/MemoryPools.html#poolBytesMax:zio.metrics.PollingMetric[Any,Throwable,zio.Chunk[zio.metrics.MetricState.Gauge]]", "kind" : "val"}, {"label" : "poolBytesCommitted", "tail" : ": PollingMetric[Any, Throwable, Chunk[Gauge]]", "member" : "zio.metrics.jvm.MemoryPools.poolBytesCommitted", "link" : "zio\/metrics\/jvm\/MemoryPools.html#poolBytesCommitted:zio.metrics.PollingMetric[Any,Throwable,zio.Chunk[zio.metrics.MetricState.Gauge]]", "kind" : "val"}, {"label" : "poolBytesUsed", "tail" : ": PollingMetric[Any, Throwable, Chunk[Gauge]]", "member" : "zio.metrics.jvm.MemoryPools.poolBytesUsed", "link" : "zio\/metrics\/jvm\/MemoryPools.html#poolBytesUsed:zio.metrics.PollingMetric[Any,Throwable,zio.Chunk[zio.metrics.MetricState.Gauge]]", "kind" : "val"}, {"label" : "memoryBytesInit", "tail" : ": PollingMetric[Any, Throwable, Chunk[Gauge]]", "member" : "zio.metrics.jvm.MemoryPools.memoryBytesInit", "link" : "zio\/metrics\/jvm\/MemoryPools.html#memoryBytesInit:zio.metrics.PollingMetric[Any,Throwable,zio.Chunk[zio.metrics.MetricState.Gauge]]", "kind" : "val"}, {"label" : "memoryBytesMax", "tail" : ": PollingMetric[Any, Throwable, Chunk[Gauge]]", "member" : "zio.metrics.jvm.MemoryPools.memoryBytesMax", "link" : "zio\/metrics\/jvm\/MemoryPools.html#memoryBytesMax:zio.metrics.PollingMetric[Any,Throwable,zio.Chunk[zio.metrics.MetricState.Gauge]]", "kind" : "val"}, {"label" : "memoryBytesCommitted", "tail" : ": PollingMetric[Any, Throwable, Chunk[Gauge]]", "member" : "zio.metrics.jvm.MemoryPools.memoryBytesCommitted", "link" : "zio\/metrics\/jvm\/MemoryPools.html#memoryBytesCommitted:zio.metrics.PollingMetric[Any,Throwable,zio.Chunk[zio.metrics.MetricState.Gauge]]", "kind" : "val"}, {"label" : "memoryBytesUsed", "tail" : ": PollingMetric[Any, Throwable, Chunk[Gauge]]", "member" : "zio.metrics.jvm.MemoryPools.memoryBytesUsed", "link" : "zio\/metrics\/jvm\/MemoryPools.html#memoryBytesUsed:zio.metrics.PollingMetric[Any,Throwable,zio.Chunk[zio.metrics.MetricState.Gauge]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/metrics\/jvm\/MemoryPools.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/jvm\/MemoryPools.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/jvm\/MemoryPools.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/jvm\/MemoryPools.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/jvm\/MemoryPools.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/jvm\/MemoryPools.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/jvm\/MemoryPools.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/jvm\/MemoryPools.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/jvm\/MemoryPools.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/jvm\/MemoryPools.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/jvm\/MemoryPools.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/jvm\/MemoryPools.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/MemoryPools.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/MemoryPools.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/MemoryPools.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/jvm\/MemoryPools.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/jvm\/MemoryPools.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/metrics\/jvm\/MemoryPools.html", "kind" : "case class"}, {"name" : "zio.metrics.jvm.Standard", "shortDescription" : "", "object" : "zio\/metrics\/jvm\/Standard$.html", "members_object" : [{"label" : "live", "tail" : ": ZLayer[JvmMetricsSchedule, Throwable, Standard]", "member" : "zio.metrics.jvm.Standard.live", "link" : "zio\/metrics\/jvm\/Standard$.html#live:zio.ZLayer[zio.metrics.jvm.JvmMetricsSchedule,Throwable,zio.metrics.jvm.Standard]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/jvm\/Standard$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/jvm\/Standard$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/jvm\/Standard$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/jvm\/Standard$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/jvm\/Standard$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/jvm\/Standard$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/jvm\/Standard$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/jvm\/Standard$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/jvm\/Standard$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/jvm\/Standard$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/metrics\/jvm\/Standard$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/jvm\/Standard$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/Standard$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/Standard$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/Standard$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/metrics\/jvm\/Standard$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/metrics\/jvm\/Standard$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/jvm\/Standard$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/jvm\/Standard$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "zio.metrics.jvm.Standard#<init>", "error" : "unsupported entity"}, {"label" : "residentMemorySize", "tail" : ": Gauge[Double]", "member" : "zio.metrics.jvm.Standard.residentMemorySize", "link" : "zio\/metrics\/jvm\/Standard.html#residentMemorySize:zio.metrics.Metric.Gauge[Double]", "kind" : "val"}, {"label" : "virtualMemorySize", "tail" : ": Gauge[Double]", "member" : "zio.metrics.jvm.Standard.virtualMemorySize", "link" : "zio\/metrics\/jvm\/Standard.html#virtualMemorySize:zio.metrics.Metric.Gauge[Double]", "kind" : "val"}, {"label" : "maxFdCount", "tail" : ": PollingMetric[Any, Throwable, Gauge]", "member" : "zio.metrics.jvm.Standard.maxFdCount", "link" : "zio\/metrics\/jvm\/Standard.html#maxFdCount:zio.metrics.PollingMetric[Any,Throwable,zio.metrics.MetricState.Gauge]", "kind" : "val"}, {"label" : "openFdCount", "tail" : ": PollingMetric[Any, Throwable, Gauge]", "member" : "zio.metrics.jvm.Standard.openFdCount", "link" : "zio\/metrics\/jvm\/Standard.html#openFdCount:zio.metrics.PollingMetric[Any,Throwable,zio.metrics.MetricState.Gauge]", "kind" : "val"}, {"label" : "processStartTime", "tail" : ": PollingMetric[Any, Throwable, Gauge]", "member" : "zio.metrics.jvm.Standard.processStartTime", "link" : "zio\/metrics\/jvm\/Standard.html#processStartTime:zio.metrics.PollingMetric[Any,Throwable,zio.metrics.MetricState.Gauge]", "kind" : "val"}, {"label" : "cpuSecondsTotal", "tail" : ": PollingMetric[Any, Throwable, Gauge]", "member" : "zio.metrics.jvm.Standard.cpuSecondsTotal", "link" : "zio\/metrics\/jvm\/Standard.html#cpuSecondsTotal:zio.metrics.PollingMetric[Any,Throwable,zio.metrics.MetricState.Gauge]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/metrics\/jvm\/Standard.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/jvm\/Standard.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/jvm\/Standard.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/jvm\/Standard.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/jvm\/Standard.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/jvm\/Standard.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/jvm\/Standard.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/jvm\/Standard.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/jvm\/Standard.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/jvm\/Standard.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/jvm\/Standard.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/jvm\/Standard.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/Standard.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/Standard.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/Standard.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/jvm\/Standard.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/jvm\/Standard.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/metrics\/jvm\/Standard.html", "kind" : "case class"}, {"name" : "zio.metrics.jvm.Thread", "shortDescription" : "", "object" : "zio\/metrics\/jvm\/Thread$.html", "members_object" : [{"label" : "live", "tail" : ": ZLayer[JvmMetricsSchedule, Throwable, Thread]", "member" : "zio.metrics.jvm.Thread.live", "link" : "zio\/metrics\/jvm\/Thread$.html#live:zio.ZLayer[zio.metrics.jvm.JvmMetricsSchedule,Throwable,zio.metrics.jvm.Thread]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/jvm\/Thread$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/jvm\/Thread$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/jvm\/Thread$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/jvm\/Thread$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/jvm\/Thread$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/jvm\/Thread$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/jvm\/Thread$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/jvm\/Thread$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/jvm\/Thread$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/jvm\/Thread$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/metrics\/jvm\/Thread$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/jvm\/Thread$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/Thread$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/Thread$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/Thread$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/metrics\/jvm\/Thread$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/metrics\/jvm\/Thread$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/jvm\/Thread$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/jvm\/Thread$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "zio.metrics.jvm.Thread#<init>", "error" : "unsupported entity"}, {"label" : "threadsDeadlockedMonitor", "tail" : ": PollingMetric[Any, Throwable, Gauge]", "member" : "zio.metrics.jvm.Thread.threadsDeadlockedMonitor", "link" : "zio\/metrics\/jvm\/Thread.html#threadsDeadlockedMonitor:zio.metrics.PollingMetric[Any,Throwable,zio.metrics.MetricState.Gauge]", "kind" : "val"}, {"label" : "threadsDeadlocked", "tail" : ": PollingMetric[Any, Throwable, Gauge]", "member" : "zio.metrics.jvm.Thread.threadsDeadlocked", "link" : "zio\/metrics\/jvm\/Thread.html#threadsDeadlocked:zio.metrics.PollingMetric[Any,Throwable,zio.metrics.MetricState.Gauge]", "kind" : "val"}, {"label" : "threadsStartedTotal", "tail" : ": PollingMetric[Any, Throwable, Gauge]", "member" : "zio.metrics.jvm.Thread.threadsStartedTotal", "link" : "zio\/metrics\/jvm\/Thread.html#threadsStartedTotal:zio.metrics.PollingMetric[Any,Throwable,zio.metrics.MetricState.Gauge]", "kind" : "val"}, {"label" : "threadsPeak", "tail" : ": PollingMetric[Any, Throwable, Gauge]", "member" : "zio.metrics.jvm.Thread.threadsPeak", "link" : "zio\/metrics\/jvm\/Thread.html#threadsPeak:zio.metrics.PollingMetric[Any,Throwable,zio.metrics.MetricState.Gauge]", "kind" : "val"}, {"label" : "threadsDaemon", "tail" : ": PollingMetric[Any, Throwable, Gauge]", "member" : "zio.metrics.jvm.Thread.threadsDaemon", "link" : "zio\/metrics\/jvm\/Thread.html#threadsDaemon:zio.metrics.PollingMetric[Any,Throwable,zio.metrics.MetricState.Gauge]", "kind" : "val"}, {"label" : "threadsCurrent", "tail" : ": PollingMetric[Any, Throwable, Gauge]", "member" : "zio.metrics.jvm.Thread.threadsCurrent", "link" : "zio\/metrics\/jvm\/Thread.html#threadsCurrent:zio.metrics.PollingMetric[Any,Throwable,zio.metrics.MetricState.Gauge]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/metrics\/jvm\/Thread.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/jvm\/Thread.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/jvm\/Thread.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/jvm\/Thread.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/jvm\/Thread.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/jvm\/Thread.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/jvm\/Thread.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/jvm\/Thread.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/jvm\/Thread.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/jvm\/Thread.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/jvm\/Thread.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/jvm\/Thread.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/Thread.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/Thread.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/Thread.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/jvm\/Thread.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/jvm\/Thread.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/metrics\/jvm\/Thread.html", "kind" : "case class"}, {"name" : "zio.metrics.jvm.VersionInfo", "shortDescription" : "", "object" : "zio\/metrics\/jvm\/VersionInfo$.html", "members_object" : [{"label" : "live", "tail" : ": ZLayer[Any, Throwable, VersionInfo]", "member" : "zio.metrics.jvm.VersionInfo.live", "link" : "zio\/metrics\/jvm\/VersionInfo$.html#live:zio.ZLayer[Any,Throwable,zio.metrics.jvm.VersionInfo]", "kind" : "val"}, {"label" : "jvmInfo", "tail" : "(version: String, vendor: String, runtime: String): Gauge[Unit]", "member" : "zio.metrics.jvm.VersionInfo.jvmInfo", "link" : "zio\/metrics\/jvm\/VersionInfo$.html#jvmInfo(version:String,vendor:String,runtime:String):zio.metrics.Metric.Gauge[Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/jvm\/VersionInfo$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/jvm\/VersionInfo$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/jvm\/VersionInfo$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/jvm\/VersionInfo$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/jvm\/VersionInfo$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/jvm\/VersionInfo$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/jvm\/VersionInfo$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/jvm\/VersionInfo$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/jvm\/VersionInfo$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/jvm\/VersionInfo$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/metrics\/jvm\/VersionInfo$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/jvm\/VersionInfo$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/VersionInfo$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/VersionInfo$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/VersionInfo$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/metrics\/jvm\/VersionInfo$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/metrics\/jvm\/VersionInfo$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/jvm\/VersionInfo$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/jvm\/VersionInfo$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "zio.metrics.jvm.VersionInfo#<init>", "error" : "unsupported entity"}, {"label" : "runtime", "tail" : ": String", "member" : "zio.metrics.jvm.VersionInfo.runtime", "link" : "zio\/metrics\/jvm\/VersionInfo.html#runtime:String", "kind" : "val"}, {"label" : "vendor", "tail" : ": String", "member" : "zio.metrics.jvm.VersionInfo.vendor", "link" : "zio\/metrics\/jvm\/VersionInfo.html#vendor:String", "kind" : "val"}, {"label" : "version", "tail" : ": String", "member" : "zio.metrics.jvm.VersionInfo.version", "link" : "zio\/metrics\/jvm\/VersionInfo.html#version:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/metrics\/jvm\/VersionInfo.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/jvm\/VersionInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/jvm\/VersionInfo.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/jvm\/VersionInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/jvm\/VersionInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/jvm\/VersionInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/jvm\/VersionInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/jvm\/VersionInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/jvm\/VersionInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/jvm\/VersionInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/jvm\/VersionInfo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/jvm\/VersionInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/VersionInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/VersionInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/jvm\/VersionInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/jvm\/VersionInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/jvm\/VersionInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/metrics\/jvm\/VersionInfo.html", "kind" : "case class"}], "zio.internal.macros" : [{"name" : "zio.internal.macros.Graph", "shortDescription" : "", "members_case class" : [{"label" : "map", "tail" : "(f: (A) => B): Graph[Key, B]", "member" : "zio.internal.macros.Graph.map", "link" : "zio\/internal\/macros\/Graph.html#map[B](f:A=>B):zio.internal.macros.Graph[Key,B]", "kind" : "def"}, {"label" : "buildNodes", "tail" : "(nodes: List[Node[Key, A]]): Either[::[GraphError[Key, A]], LayerTree[A]]", "member" : "zio.internal.macros.Graph.buildNodes", "link" : "zio\/internal\/macros\/Graph.html#buildNodes(nodes:List[zio.internal.macros.Node[Key,A]]):Either[::[zio.internal.macros.GraphError[Key,A]],zio.internal.macros.LayerTree[A]]", "kind" : "def"}, {"label" : "buildComplete", "tail" : "(outputs: List[Key]): Either[::[GraphError[Key, A]], LayerTree[A]]", "member" : "zio.internal.macros.Graph.buildComplete", "link" : "zio\/internal\/macros\/Graph.html#buildComplete(outputs:List[Key]):Either[::[zio.internal.macros.GraphError[Key,A]],zio.internal.macros.LayerTree[A]]", "kind" : "def"}, {"member" : "zio.internal.macros.Graph#<init>", "error" : "unsupported entity"}, {"label" : "keyEquals", "tail" : ": (Key, Key) => Boolean", "member" : "zio.internal.macros.Graph.keyEquals", "link" : "zio\/internal\/macros\/Graph.html#keyEquals:(Key,Key)=>Boolean", "kind" : "val"}, {"label" : "nodes", "tail" : ": List[Node[Key, A]]", "member" : "zio.internal.macros.Graph.nodes", "link" : "zio\/internal\/macros\/Graph.html#nodes:List[zio.internal.macros.Node[Key,A]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/internal\/macros\/Graph.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/internal\/macros\/Graph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/internal\/macros\/Graph.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/internal\/macros\/Graph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/internal\/macros\/Graph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/internal\/macros\/Graph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/internal\/macros\/Graph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/internal\/macros\/Graph.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/internal\/macros\/Graph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/internal\/macros\/Graph.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/internal\/macros\/Graph.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/internal\/macros\/Graph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/Graph.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/Graph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/Graph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/internal\/macros\/Graph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/internal\/macros\/Graph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/internal\/macros\/Graph.html", "kind" : "case class"}, {"name" : "zio.internal.macros.GraphError", "object" : "zio\/internal\/macros\/GraphError$.html", "members_object" : [{"label" : "CircularDependency", "tail" : "", "member" : "zio.internal.macros.GraphError.CircularDependency", "link" : "zio\/internal\/macros\/GraphError$.html#CircularDependency[+Key,+A]extendsGraphError[Key,A]withProductwithSerializable", "kind" : "case class"}, {"label" : "MissingTopLevelDependency", "tail" : "", "member" : "zio.internal.macros.GraphError.MissingTopLevelDependency", "link" : "zio\/internal\/macros\/GraphError$.html#MissingTopLevelDependency[+Key]extendsGraphError[Key,Nothing]withProductwithSerializable", "kind" : "case class"}, {"label" : "MissingTransitiveDependencies", "tail" : "", "member" : "zio.internal.macros.GraphError.MissingTransitiveDependencies", "link" : "zio\/internal\/macros\/GraphError$.html#MissingTransitiveDependencies[+Key,+A]extendsGraphError[Key,A]withProductwithSerializable", "kind" : "case class"}, {"label" : "missingTransitiveDependency", "tail" : "(node: Node[Key, A], dependency: Key): GraphError[Key, A]", "member" : "zio.internal.macros.GraphError.missingTransitiveDependency", "link" : "zio\/internal\/macros\/GraphError$.html#missingTransitiveDependency[Key,A](node:zio.internal.macros.Node[Key,A],dependency:Key):zio.internal.macros.GraphError[Key,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/internal\/macros\/GraphError$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/internal\/macros\/GraphError$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/internal\/macros\/GraphError$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/internal\/macros\/GraphError$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/internal\/macros\/GraphError$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/internal\/macros\/GraphError$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/internal\/macros\/GraphError$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/internal\/macros\/GraphError$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/internal\/macros\/GraphError$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/internal\/macros\/GraphError$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/internal\/macros\/GraphError$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/internal\/macros\/GraphError$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/GraphError$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/GraphError$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/GraphError$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/internal\/macros\/GraphError$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/internal\/macros\/GraphError$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/internal\/macros\/GraphError$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/internal\/macros\/GraphError$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/internal\/macros\/GraphError.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/internal\/macros\/GraphError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/internal\/macros\/GraphError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/internal\/macros\/GraphError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/internal\/macros\/GraphError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/internal\/macros\/GraphError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/internal\/macros\/GraphError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/internal\/macros\/GraphError.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/internal\/macros\/GraphError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/internal\/macros\/GraphError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/internal\/macros\/GraphError.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/internal\/macros\/GraphError.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/internal\/macros\/GraphError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/GraphError.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/GraphError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/GraphError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/internal\/macros\/GraphError.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/internal\/macros\/GraphError.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/internal\/macros\/GraphError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/internal\/macros\/GraphError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.internal.macros.IsReloadableMacros", "shortDescription" : "", "members_class" : [{"label" : "makeImpl", "tail" : "(arg0: scala.reflect.macros.blackbox.Context.WeakTypeTag[A]): scala.reflect.macros.blackbox.Context.Expr[IsReloadable[A]]", "member" : "zio.internal.macros.IsReloadableMacros.makeImpl", "link" : "zio\/internal\/macros\/IsReloadableMacros.html#makeImpl[A](implicitevidence$1:IsReloadableMacros.this.c.WeakTypeTag[A]):IsReloadableMacros.this.c.Expr[zio.IsReloadable[A]]", "kind" : "def"}, {"member" : "zio.internal.macros.IsReloadableMacros#<init>", "error" : "unsupported entity"}, {"label" : "c", "tail" : ": Context", "member" : "zio.internal.macros.IsReloadableMacros.c", "link" : "zio\/internal\/macros\/IsReloadableMacros.html#c:scala.reflect.macros.blackbox.Context", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/internal\/macros\/IsReloadableMacros.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/internal\/macros\/IsReloadableMacros.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/internal\/macros\/IsReloadableMacros.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/internal\/macros\/IsReloadableMacros.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/internal\/macros\/IsReloadableMacros.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/internal\/macros\/IsReloadableMacros.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/internal\/macros\/IsReloadableMacros.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/internal\/macros\/IsReloadableMacros.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/internal\/macros\/IsReloadableMacros.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/internal\/macros\/IsReloadableMacros.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/internal\/macros\/IsReloadableMacros.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/internal\/macros\/IsReloadableMacros.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/IsReloadableMacros.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/IsReloadableMacros.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/IsReloadableMacros.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/internal\/macros\/IsReloadableMacros.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/internal\/macros\/IsReloadableMacros.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/internal\/macros\/IsReloadableMacros.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/internal\/macros\/IsReloadableMacros.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/internal\/macros\/IsReloadableMacros.html", "kind" : "class"}, {"name" : "zio.internal.macros.LayerBuilder", "shortDescription" : "LayerBuilder houses the core logic for compile-time layer construction.", "members_case class" : [{"label" : "MermaidGraph", "tail" : "", "member" : "zio.internal.macros.LayerBuilder.MermaidGraph", "link" : "zio\/internal\/macros\/LayerBuilder.html#MermaidGraph", "kind" : "object"}, {"label" : "MermaidGraph", "tail" : "", "member" : "zio.internal.macros.LayerBuilder.MermaidGraph", "link" : "zio\/internal\/macros\/LayerBuilder.html#MermaidGraphextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "build", "tail" : "(): Expr", "member" : "zio.internal.macros.LayerBuilder.build", "link" : "zio\/internal\/macros\/LayerBuilder.html#build:Expr", "kind" : "def"}, {"label" : "target", "tail" : ": List[Type]", "member" : "zio.internal.macros.LayerBuilder.target", "link" : "zio\/internal\/macros\/LayerBuilder.html#target:List[Type]", "kind" : "lazy val"}, {"member" : "zio.internal.macros.LayerBuilder#<init>", "error" : "unsupported entity"}, {"label" : "reportError", "tail" : ": (String) => Nothing", "member" : "zio.internal.macros.LayerBuilder.reportError", "link" : "zio\/internal\/macros\/LayerBuilder.html#reportError:String=>Nothing", "kind" : "val"}, {"label" : "reportWarn", "tail" : ": (String) => Unit", "member" : "zio.internal.macros.LayerBuilder.reportWarn", "link" : "zio\/internal\/macros\/LayerBuilder.html#reportWarn:String=>Unit", "kind" : "val"}, {"label" : "showType", "tail" : ": (Type) => String", "member" : "zio.internal.macros.LayerBuilder.showType", "link" : "zio\/internal\/macros\/LayerBuilder.html#showType:Type=>String", "kind" : "val"}, {"label" : "showExpr", "tail" : ": (Expr) => String", "member" : "zio.internal.macros.LayerBuilder.showExpr", "link" : "zio\/internal\/macros\/LayerBuilder.html#showExpr:Expr=>String", "kind" : "val"}, {"label" : "typeToNode", "tail" : ": (Type) => Node[Type, Expr]", "member" : "zio.internal.macros.LayerBuilder.typeToNode", "link" : "zio\/internal\/macros\/LayerBuilder.html#typeToNode:Type=>zio.internal.macros.Node[Type,Expr]", "kind" : "val"}, {"label" : "exprToNode", "tail" : ": (Expr) => Node[Type, Expr]", "member" : "zio.internal.macros.LayerBuilder.exprToNode", "link" : "zio\/internal\/macros\/LayerBuilder.html#exprToNode:Expr=>zio.internal.macros.Node[Type,Expr]", "kind" : "val"}, {"label" : "method", "tail" : ": ProvideMethod", "member" : "zio.internal.macros.LayerBuilder.method", "link" : "zio\/internal\/macros\/LayerBuilder.html#method:zio.internal.macros.ProvideMethod", "kind" : "val"}, {"label" : "foldTree", "tail" : ": (LayerTree[Expr]) => Expr", "member" : "zio.internal.macros.LayerBuilder.foldTree", "link" : "zio\/internal\/macros\/LayerBuilder.html#foldTree:zio.internal.macros.LayerTree[Expr]=>Expr", "kind" : "val"}, {"label" : "typeEquals", "tail" : ": (Type, Type) => Boolean", "member" : "zio.internal.macros.LayerBuilder.typeEquals", "link" : "zio\/internal\/macros\/LayerBuilder.html#typeEquals:(Type,Type)=>Boolean", "kind" : "val"}, {"label" : "anyType", "tail" : ": Type", "member" : "zio.internal.macros.LayerBuilder.anyType", "link" : "zio\/internal\/macros\/LayerBuilder.html#anyType:Type", "kind" : "val"}, {"label" : "sideEffectType", "tail" : ": Type", "member" : "zio.internal.macros.LayerBuilder.sideEffectType", "link" : "zio\/internal\/macros\/LayerBuilder.html#sideEffectType:Type", "kind" : "val"}, {"label" : "layerToDebug", "tail" : ": PartialFunction[Expr, Debug]", "member" : "zio.internal.macros.LayerBuilder.layerToDebug", "link" : "zio\/internal\/macros\/LayerBuilder.html#layerToDebug:PartialFunction[Expr,zio.ZLayer.Debug]", "kind" : "val"}, {"label" : "providedLayers0", "tail" : ": List[Expr]", "member" : "zio.internal.macros.LayerBuilder.providedLayers0", "link" : "zio\/internal\/macros\/LayerBuilder.html#providedLayers0:List[Expr]", "kind" : "val"}, {"label" : "remainder", "tail" : ": List[Type]", "member" : "zio.internal.macros.LayerBuilder.remainder", "link" : "zio\/internal\/macros\/LayerBuilder.html#remainder:List[Type]", "kind" : "val"}, {"label" : "target0", "tail" : ": List[Type]", "member" : "zio.internal.macros.LayerBuilder.target0", "link" : "zio\/internal\/macros\/LayerBuilder.html#target0:List[Type]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/internal\/macros\/LayerBuilder.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/internal\/macros\/LayerBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/internal\/macros\/LayerBuilder.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/internal\/macros\/LayerBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/internal\/macros\/LayerBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/internal\/macros\/LayerBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/internal\/macros\/LayerBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/internal\/macros\/LayerBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/internal\/macros\/LayerBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/internal\/macros\/LayerBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/internal\/macros\/LayerBuilder.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/internal\/macros\/LayerBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/LayerBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/LayerBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/LayerBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/internal\/macros\/LayerBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/internal\/macros\/LayerBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/internal\/macros\/LayerBuilder.html", "kind" : "case class"}, {"name" : "zio.internal.macros.LayerTree", "shortDescription" : "", "object" : "zio\/internal\/macros\/LayerTree$.html", "members_class" : [{"label" : "toList", "tail" : "(): List[A]", "member" : "zio.internal.macros.LayerTree.toList", "link" : "zio\/internal\/macros\/LayerTree.html#toList:List[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[A1]", "member" : "zio.internal.macros.LayerTree.toSet", "link" : "zio\/internal\/macros\/LayerTree.html#toSet[A1>:A]:Set[A1]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B): LayerTree[B]", "member" : "zio.internal.macros.LayerTree.map", "link" : "zio\/internal\/macros\/LayerTree.html#map[B](f:A=>B):zio.internal.macros.LayerTree[B]", "kind" : "def"}, {"label" : "fold", "tail" : "(z: B, value: (A) => B, composeH: (B, B) => B, composeV: (B, B) => B): B", "member" : "zio.internal.macros.LayerTree.fold", "link" : "zio\/internal\/macros\/LayerTree.html#fold[B](z:B,value:A=>B,composeH:(B,B)=>B,composeV:(B,B)=>B):B", "kind" : "def"}, {"label" : "++", "tail" : "(that: LayerTree[A1]): LayerTree[A1]", "member" : "zio.internal.macros.LayerTree.++", "link" : "zio\/internal\/macros\/LayerTree.html#++[A1>:A](that:zio.internal.macros.LayerTree[A1]):zio.internal.macros.LayerTree[A1]", "kind" : "def"}, {"label" : ">>>", "tail" : "(that: LayerTree[A1]): LayerTree[A1]", "member" : "zio.internal.macros.LayerTree.>>>", "link" : "zio\/internal\/macros\/LayerTree.html#>>>[A1>:A](that:zio.internal.macros.LayerTree[A1]):zio.internal.macros.LayerTree[A1]", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/internal\/macros\/LayerTree.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "zio\/internal\/macros\/LayerTree.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "zio\/internal\/macros\/LayerTree.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "zio\/internal\/macros\/LayerTree.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/internal\/macros\/LayerTree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/internal\/macros\/LayerTree.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/internal\/macros\/LayerTree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/internal\/macros\/LayerTree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/internal\/macros\/LayerTree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/internal\/macros\/LayerTree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/internal\/macros\/LayerTree.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/internal\/macros\/LayerTree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/internal\/macros\/LayerTree.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/internal\/macros\/LayerTree.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/internal\/macros\/LayerTree.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/internal\/macros\/LayerTree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/LayerTree.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/LayerTree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/LayerTree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/internal\/macros\/LayerTree.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/internal\/macros\/LayerTree.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/internal\/macros\/LayerTree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/internal\/macros\/LayerTree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "zio\/internal\/macros\/LayerTree.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "zio\/internal\/macros\/LayerTree.html#productArity:Int", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "zio\/internal\/macros\/LayerTree.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "members_object" : [{"label" : "LayerComposeIterableOps", "tail" : "", "member" : "zio.internal.macros.LayerTree.LayerComposeIterableOps", "link" : "zio\/internal\/macros\/LayerTree$.html#LayerComposeIterableOps[A]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "ComposeV", "tail" : "", "member" : "zio.internal.macros.LayerTree.ComposeV", "link" : "zio\/internal\/macros\/LayerTree$.html#ComposeV[+A]extendsLayerTree[A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "ComposeH", "tail" : "", "member" : "zio.internal.macros.LayerTree.ComposeH", "link" : "zio\/internal\/macros\/LayerTree$.html#ComposeH[+A]extendsLayerTree[A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Value", "tail" : "", "member" : "zio.internal.macros.LayerTree.Value", "link" : "zio\/internal\/macros\/LayerTree$.html#Value[+A]extendsLayerTree[A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Empty", "tail" : "", "member" : "zio.internal.macros.LayerTree.Empty", "link" : "zio\/internal\/macros\/LayerTree$.html#Empty", "kind" : "case object"}, {"label" : "empty", "tail" : "(): LayerTree[Nothing]", "member" : "zio.internal.macros.LayerTree.empty", "link" : "zio\/internal\/macros\/LayerTree$.html#empty:zio.internal.macros.LayerTree[Nothing]", "kind" : "def"}, {"label" : "succeed", "tail" : "(value: A): LayerTree[A]", "member" : "zio.internal.macros.LayerTree.succeed", "link" : "zio\/internal\/macros\/LayerTree$.html#succeed[A](value:A):zio.internal.macros.LayerTree[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/internal\/macros\/LayerTree$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/internal\/macros\/LayerTree$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/internal\/macros\/LayerTree$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/internal\/macros\/LayerTree$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/internal\/macros\/LayerTree$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/internal\/macros\/LayerTree$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/internal\/macros\/LayerTree$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/internal\/macros\/LayerTree$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/internal\/macros\/LayerTree$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/internal\/macros\/LayerTree$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/internal\/macros\/LayerTree$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/internal\/macros\/LayerTree$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/LayerTree$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/LayerTree$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/LayerTree$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/internal\/macros\/LayerTree$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/internal\/macros\/LayerTree$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/internal\/macros\/LayerTree$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/internal\/macros\/LayerTree$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/internal\/macros\/LayerTree.html", "kind" : "class"}, {"name" : "zio.internal.macros.Node", "shortDescription" : "", "members_case class" : [{"label" : "map", "tail" : "(f: (A) => B): Node[Key, B]", "member" : "zio.internal.macros.Node.map", "link" : "zio\/internal\/macros\/Node.html#map[B](f:A=>B):zio.internal.macros.Node[Key,B]", "kind" : "def"}, {"member" : "zio.internal.macros.Node#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": A", "member" : "zio.internal.macros.Node.value", "link" : "zio\/internal\/macros\/Node.html#value:A", "kind" : "val"}, {"label" : "outputs", "tail" : ": List[Key]", "member" : "zio.internal.macros.Node.outputs", "link" : "zio\/internal\/macros\/Node.html#outputs:List[Key]", "kind" : "val"}, {"label" : "inputs", "tail" : ": List[Key]", "member" : "zio.internal.macros.Node.inputs", "link" : "zio\/internal\/macros\/Node.html#inputs:List[Key]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/internal\/macros\/Node.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/internal\/macros\/Node.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/internal\/macros\/Node.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/internal\/macros\/Node.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/internal\/macros\/Node.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/internal\/macros\/Node.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/internal\/macros\/Node.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/internal\/macros\/Node.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/internal\/macros\/Node.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/internal\/macros\/Node.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/internal\/macros\/Node.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/internal\/macros\/Node.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/Node.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/Node.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/Node.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/internal\/macros\/Node.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/internal\/macros\/Node.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/internal\/macros\/Node.html", "kind" : "case class"}, {"name" : "zio.internal.macros.ProvideMethod", "object" : "zio\/internal\/macros\/ProvideMethod$.html", "members_object" : [{"label" : "ProvideCustom", "tail" : "", "member" : "zio.internal.macros.ProvideMethod.ProvideCustom", "link" : "zio\/internal\/macros\/ProvideMethod$.html#ProvideCustom", "kind" : "case object"}, {"label" : "ProvideSomeShared", "tail" : "", "member" : "zio.internal.macros.ProvideMethod.ProvideSomeShared", "link" : "zio\/internal\/macros\/ProvideMethod$.html#ProvideSomeShared", "kind" : "case object"}, {"label" : "ProvideSome", "tail" : "", "member" : "zio.internal.macros.ProvideMethod.ProvideSome", "link" : "zio\/internal\/macros\/ProvideMethod$.html#ProvideSome", "kind" : "case object"}, {"label" : "Provide", "tail" : "", "member" : "zio.internal.macros.ProvideMethod.Provide", "link" : "zio\/internal\/macros\/ProvideMethod$.html#Provide", "kind" : "case object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/internal\/macros\/ProvideMethod$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/internal\/macros\/ProvideMethod$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/internal\/macros\/ProvideMethod$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/internal\/macros\/ProvideMethod$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/internal\/macros\/ProvideMethod$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/internal\/macros\/ProvideMethod$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/internal\/macros\/ProvideMethod$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/internal\/macros\/ProvideMethod$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/internal\/macros\/ProvideMethod$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/internal\/macros\/ProvideMethod$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/internal\/macros\/ProvideMethod$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/internal\/macros\/ProvideMethod$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/ProvideMethod$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/ProvideMethod$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/ProvideMethod$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/internal\/macros\/ProvideMethod$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/internal\/macros\/ProvideMethod$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/internal\/macros\/ProvideMethod$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/internal\/macros\/ProvideMethod$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/internal\/macros\/ProvideMethod.html", "kind" : "trait", "members_trait" : [{"label" : "isProvideSome", "tail" : "(): Boolean", "member" : "zio.internal.macros.ProvideMethod.isProvideSome", "link" : "zio\/internal\/macros\/ProvideMethod.html#isProvideSome:Boolean", "kind" : "def"}, {"label" : "isProvideSomeShared", "tail" : "(): Boolean", "member" : "zio.internal.macros.ProvideMethod.isProvideSomeShared", "link" : "zio\/internal\/macros\/ProvideMethod.html#isProvideSomeShared:Boolean", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/internal\/macros\/ProvideMethod.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "zio\/internal\/macros\/ProvideMethod.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "zio\/internal\/macros\/ProvideMethod.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "zio\/internal\/macros\/ProvideMethod.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/internal\/macros\/ProvideMethod.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/internal\/macros\/ProvideMethod.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/internal\/macros\/ProvideMethod.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/internal\/macros\/ProvideMethod.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/internal\/macros\/ProvideMethod.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/internal\/macros\/ProvideMethod.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/internal\/macros\/ProvideMethod.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/internal\/macros\/ProvideMethod.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/internal\/macros\/ProvideMethod.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/internal\/macros\/ProvideMethod.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/internal\/macros\/ProvideMethod.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/internal\/macros\/ProvideMethod.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/ProvideMethod.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/ProvideMethod.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/ProvideMethod.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/internal\/macros\/ProvideMethod.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/internal\/macros\/ProvideMethod.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/internal\/macros\/ProvideMethod.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/internal\/macros\/ProvideMethod.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "zio\/internal\/macros\/ProvideMethod.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "zio\/internal\/macros\/ProvideMethod.html#productArity:Int", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "zio\/internal\/macros\/ProvideMethod.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.internal.macros.ZLayerMakeMacros", "shortDescription" : "", "members_class" : [{"label" : "TypeOps", "tail" : "", "member" : "zio.internal.macros.LayerMacroUtils.TypeOps", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#TypeOpsextendsAnyRef", "kind" : "implicit class"}, {"label" : "runWithImpl", "tail" : "(layers: scala.reflect.macros.blackbox.Context.Expr[ZLayer[_, E, _]]*)(ev: scala.reflect.macros.blackbox.Context.Expr[IsSubtypeOfOutput[A, Unit]])(arg0: scala.reflect.macros.blackbox.Context.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[ZIO[Any, E, Unit]]", "member" : "zio.internal.macros.ZLayerMakeMacros.runWithImpl", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#runWithImpl[R,E,A](layers:ZLayerMakeMacros.this.c.Expr[zio.ZLayer[_,E,_]]*)(ev:ZLayerMakeMacros.this.c.Expr[zio.IsSubtypeOfOutput[A,Unit]])(implicitevidence$5:ZLayerMakeMacros.this.c.WeakTypeTag[R]):ZLayerMakeMacros.this.c.Expr[zio.ZIO[Any,E,Unit]]", "kind" : "def"}, {"label" : "makeSomeImpl", "tail" : "(layer: scala.reflect.macros.blackbox.Context.Expr[ZLayer[_, E, _]]*)(dummyKRemainder: scala.reflect.macros.blackbox.Context.Expr[DummyK[R0]], dummyK: scala.reflect.macros.blackbox.Context.Expr[DummyK[R]])(arg0: scala.reflect.macros.blackbox.Context.WeakTypeTag[R0], arg1: scala.reflect.macros.blackbox.Context.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[ZLayer[R0, E, R]]", "member" : "zio.internal.macros.ZLayerMakeMacros.makeSomeImpl", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#makeSomeImpl[E,R0,R](layer:ZLayerMakeMacros.this.c.Expr[zio.ZLayer[_,E,_]]*)(dummyKRemainder:ZLayerMakeMacros.this.c.Expr[zio.internal.macros.DummyK[R0]],dummyK:ZLayerMakeMacros.this.c.Expr[zio.internal.macros.DummyK[R]])(implicitevidence$3:ZLayerMakeMacros.this.c.WeakTypeTag[R0],implicitevidence$4:ZLayerMakeMacros.this.c.WeakTypeTag[R]):ZLayerMakeMacros.this.c.Expr[zio.ZLayer[R0,E,R]]", "kind" : "def"}, {"label" : "makeImpl", "tail" : "(layer: scala.reflect.macros.blackbox.Context.Expr[ZLayer[_, E, _]]*)(dummyKRemainder: scala.reflect.macros.blackbox.Context.Expr[DummyK[R0]], dummyK: scala.reflect.macros.blackbox.Context.Expr[DummyK[R]])(arg0: scala.reflect.macros.blackbox.Context.WeakTypeTag[R0], arg1: scala.reflect.macros.blackbox.Context.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[ZLayer[R0, E, R]]", "member" : "zio.internal.macros.ZLayerMakeMacros.makeImpl", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#makeImpl[E,R0,R](layer:ZLayerMakeMacros.this.c.Expr[zio.ZLayer[_,E,_]]*)(dummyKRemainder:ZLayerMakeMacros.this.c.Expr[zio.internal.macros.DummyK[R0]],dummyK:ZLayerMakeMacros.this.c.Expr[zio.internal.macros.DummyK[R]])(implicitevidence$1:ZLayerMakeMacros.this.c.WeakTypeTag[R0],implicitevidence$2:ZLayerMakeMacros.this.c.WeakTypeTag[R]):ZLayerMakeMacros.this.c.Expr[zio.ZLayer[R0,E,R]]", "kind" : "def"}, {"member" : "zio.internal.macros.ZLayerMakeMacros#<init>", "error" : "unsupported entity"}, {"label" : "c", "tail" : ": Context", "member" : "zio.internal.macros.ZLayerMakeMacros.c", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#c:scala.reflect.macros.blackbox.Context", "kind" : "val"}, {"label" : "assertProperVarArgs", "tail" : "(layer: Seq[scala.reflect.macros.Universe.Expr[_]]): Unit", "member" : "zio.internal.macros.LayerMacroUtils.assertProperVarArgs", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#assertProperVarArgs(layer:Seq[LayerMacroUtils.this.c.universe.Expr[_]]):Unit", "kind" : "def"}, {"label" : "getRequirements", "tail" : "(tpe: scala.reflect.macros.Universe.Type): List[scala.reflect.macros.Universe.Type]", "member" : "zio.internal.macros.LayerMacroUtils.getRequirements", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#getRequirements(tpe:LayerMacroUtils.this.c.universe.Type):List[LayerMacroUtils.this.c.universe.Type]", "kind" : "def"}, {"label" : "getRequirements", "tail" : "(arg0: scala.reflect.macros.Universe.WeakTypeTag[T]): List[scala.reflect.macros.Universe.Type]", "member" : "zio.internal.macros.LayerMacroUtils.getRequirements", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#getRequirements[T](implicitevidence$5:LayerMacroUtils.this.c.universe.WeakTypeTag[T]):List[LayerMacroUtils.this.c.universe.Type]", "kind" : "def"}, {"label" : "getNode", "tail" : "(layer: LayerExpr): Node[scala.reflect.macros.Universe.Type, LayerExpr]", "member" : "zio.internal.macros.LayerMacroUtils.getNode", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#getNode(layer:LayerMacroUtils.this.LayerExpr):zio.internal.macros.Node[LayerMacroUtils.this.c.universe.Type,LayerMacroUtils.this.LayerExpr]", "kind" : "def"}, {"label" : "provideBaseImpl", "tail" : "(layers: Seq[LayerExpr], method: String, provideMethod: ProvideMethod)(arg0: scala.reflect.macros.Universe.WeakTypeTag[R0], arg1: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.Universe.Expr[F[R0, E, A]]", "member" : "zio.internal.macros.LayerMacroUtils.provideBaseImpl", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#provideBaseImpl[F[_,_,_],R0,R,E,A](layers:Seq[LayerMacroUtils.this.LayerExpr],method:String,provideMethod:zio.internal.macros.ProvideMethod)(implicitevidence$3:LayerMacroUtils.this.c.universe.WeakTypeTag[R0],implicitevidence$4:LayerMacroUtils.this.c.universe.WeakTypeTag[R]):LayerMacroUtils.this.c.universe.Expr[F[R0,E,A]]", "kind" : "def"}, {"label" : "constructLayer", "tail" : "(layers: Seq[LayerExpr], provideMethod: ProvideMethod)(arg0: scala.reflect.macros.Universe.WeakTypeTag[R0], arg1: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.Universe.Expr[ZLayer[R0, E, R]]", "member" : "zio.internal.macros.LayerMacroUtils.constructLayer", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#constructLayer[R0,R,E](layers:Seq[LayerMacroUtils.this.LayerExpr],provideMethod:zio.internal.macros.ProvideMethod)(implicitevidence$1:LayerMacroUtils.this.c.universe.WeakTypeTag[R0],implicitevidence$2:LayerMacroUtils.this.c.universe.WeakTypeTag[R]):LayerMacroUtils.this.c.universe.Expr[zio.ZLayer[R0,E,R]]", "kind" : "def"}, {"label" : "LayerExpr", "tail" : "", "member" : "zio.internal.macros.LayerMacroUtils.LayerExpr", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#LayerExpr=LayerMacroUtils.this.c.universe.Expr[zio.ZLayer[_,_,_]]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/internal\/macros\/ZLayerMakeMacros.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/internal\/macros\/ZLayerMakeMacros.html", "kind" : "class"}], "zio.test.magnolia" : [{"name" : "zio.test.magnolia.DeriveDiff", "object" : "zio\/test\/magnolia\/DeriveDiff$.html", "members_object" : [{"label" : "gen", "tail" : "(): Typeclass[A]", "member" : "zio.test.magnolia.DeriveDiff.gen", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#gen[A]:DeriveDiff.this.Typeclass[A]", "kind" : "implicit macro def"}, {"label" : "split", "tail" : "(ctx: SealedTrait[Diff, A]): Diff[A]", "member" : "zio.test.magnolia.DeriveDiff.split", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#split[A](ctx:magnolia1.SealedTrait[zio.test.diff.Diff,A]):zio.test.diff.Diff[A]", "kind" : "def"}, {"label" : "join", "tail" : "(caseClass: CaseClass[Diff, A]): Diff[A]", "member" : "zio.test.magnolia.DeriveDiff.join", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#join[A](caseClass:magnolia1.CaseClass[zio.test.diff.Diff,A]):zio.test.diff.Diff[A]", "kind" : "def"}, {"label" : "Typeclass", "tail" : "", "member" : "zio.test.magnolia.DeriveDiff.Typeclass", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#Typeclass[A]=zio.test.diff.Diff[A]", "kind" : "type"}, {"label" : "fallback", "tail" : "(): Diff[A]", "member" : "zio.test.magnolia.LowPri.fallback", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#fallback[A]:zio.test.diff.Diff[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/magnolia\/DeriveDiff$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/magnolia\/DeriveDiff$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/magnolia\/DeriveDiff.html", "kind" : "trait", "members_trait" : [{"label" : "gen", "tail" : "(): Typeclass[A]", "member" : "zio.test.magnolia.DeriveDiff.gen", "link" : "zio\/test\/magnolia\/DeriveDiff.html#gen[A]:DeriveDiff.this.Typeclass[A]", "kind" : "implicit macro def"}, {"label" : "split", "tail" : "(ctx: SealedTrait[Diff, A]): Diff[A]", "member" : "zio.test.magnolia.DeriveDiff.split", "link" : "zio\/test\/magnolia\/DeriveDiff.html#split[A](ctx:magnolia1.SealedTrait[zio.test.diff.Diff,A]):zio.test.diff.Diff[A]", "kind" : "def"}, {"label" : "join", "tail" : "(caseClass: CaseClass[Diff, A]): Diff[A]", "member" : "zio.test.magnolia.DeriveDiff.join", "link" : "zio\/test\/magnolia\/DeriveDiff.html#join[A](caseClass:magnolia1.CaseClass[zio.test.diff.Diff,A]):zio.test.diff.Diff[A]", "kind" : "def"}, {"label" : "Typeclass", "tail" : "", "member" : "zio.test.magnolia.DeriveDiff.Typeclass", "link" : "zio\/test\/magnolia\/DeriveDiff.html#Typeclass[A]=zio.test.diff.Diff[A]", "kind" : "type"}, {"label" : "fallback", "tail" : "(): Diff[A]", "member" : "zio.test.magnolia.LowPri.fallback", "link" : "zio\/test\/magnolia\/DeriveDiff.html#fallback[A]:zio.test.diff.Diff[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/magnolia\/DeriveDiff.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/magnolia\/DeriveDiff.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/magnolia\/DeriveDiff.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/magnolia\/DeriveDiff.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/magnolia\/DeriveDiff.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/magnolia\/DeriveDiff.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/magnolia\/DeriveDiff.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/magnolia\/DeriveDiff.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/magnolia\/DeriveDiff.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/magnolia\/DeriveDiff.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/magnolia\/DeriveDiff.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/magnolia\/DeriveDiff.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/magnolia\/DeriveDiff.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/magnolia\/DeriveDiff.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/magnolia\/DeriveDiff.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/magnolia\/DeriveDiff.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/magnolia\/DeriveDiff.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/magnolia\/DeriveDiff.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/magnolia\/DeriveDiff.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.magnolia.DeriveGen", "object" : "zio\/test\/magnolia\/DeriveGen$.html", "members_object" : [{"label" : "gen", "tail" : "(): Typeclass[T]", "member" : "zio.test.magnolia.DeriveGen.gen", "link" : "zio\/test\/magnolia\/DeriveGen$.html#gen[T]:zio.test.magnolia.DeriveGen.Typeclass[T]", "kind" : "implicit macro def"}, {"label" : "split", "tail" : "(sealedTrait: SealedTrait[Typeclass, T]): Typeclass[T]", "member" : "zio.test.magnolia.DeriveGen.split", "link" : "zio\/test\/magnolia\/DeriveGen$.html#split[T](sealedTrait:magnolia1.SealedTrait[zio.test.magnolia.DeriveGen.Typeclass,T]):zio.test.magnolia.DeriveGen.Typeclass[T]", "kind" : "def"}, {"label" : "join", "tail" : "(caseClass: CaseClass[Typeclass, T]): Typeclass[T]", "member" : "zio.test.magnolia.DeriveGen.join", "link" : "zio\/test\/magnolia\/DeriveGen$.html#join[T](caseClass:magnolia1.CaseClass[zio.test.magnolia.DeriveGen.Typeclass,T]):zio.test.magnolia.DeriveGen.Typeclass[T]", "kind" : "def"}, {"label" : "Typeclass", "tail" : "", "member" : "zio.test.magnolia.DeriveGen.Typeclass", "link" : "zio\/test\/magnolia\/DeriveGen$.html#Typeclass[T]=zio.test.magnolia.DeriveGen[T]", "kind" : "type"}, {"label" : "genVector", "tail" : "(ev: DeriveGen[A]): DeriveGen[Vector[A]]", "member" : "zio.test.magnolia.DeriveGen.genVector", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genVector[A](implicitev:zio.test.magnolia.DeriveGen[A]):zio.test.magnolia.DeriveGen[Vector[A]]", "kind" : "implicit def"}, {"label" : "genTuple10", "tail" : "(ev1: DeriveGen[A], ev2: DeriveGen[B], ev3: DeriveGen[C], ev4: DeriveGen[D], ev5: DeriveGen[F], ev6: DeriveGen[G], ev7: DeriveGen[H], ev8: DeriveGen[I], ev9: DeriveGen[J], ev10: DeriveGen[K]): DeriveGen[(A, B, C, D, F, G, H, I, J, K)]", "member" : "zio.test.magnolia.DeriveGen.genTuple10", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genTuple10[A,B,C,D,F,G,H,I,J,K](implicitev1:zio.test.magnolia.DeriveGen[A],implicitev2:zio.test.magnolia.DeriveGen[B],implicitev3:zio.test.magnolia.DeriveGen[C],implicitev4:zio.test.magnolia.DeriveGen[D],implicitev5:zio.test.magnolia.DeriveGen[F],implicitev6:zio.test.magnolia.DeriveGen[G],implicitev7:zio.test.magnolia.DeriveGen[H],implicitev8:zio.test.magnolia.DeriveGen[I],implicitev9:zio.test.magnolia.DeriveGen[J],implicitev10:zio.test.magnolia.DeriveGen[K]):zio.test.magnolia.DeriveGen[(A,B,C,D,F,G,H,I,J,K)]", "kind" : "implicit def"}, {"label" : "genTuple9", "tail" : "(ev1: DeriveGen[A], ev2: DeriveGen[B], ev3: DeriveGen[C], ev4: DeriveGen[D], ev5: DeriveGen[F], ev6: DeriveGen[G], ev7: DeriveGen[H], ev8: DeriveGen[I], ev9: DeriveGen[J]): DeriveGen[(A, B, C, D, F, G, H, I, J)]", "member" : "zio.test.magnolia.DeriveGen.genTuple9", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genTuple9[A,B,C,D,F,G,H,I,J](implicitev1:zio.test.magnolia.DeriveGen[A],implicitev2:zio.test.magnolia.DeriveGen[B],implicitev3:zio.test.magnolia.DeriveGen[C],implicitev4:zio.test.magnolia.DeriveGen[D],implicitev5:zio.test.magnolia.DeriveGen[F],implicitev6:zio.test.magnolia.DeriveGen[G],implicitev7:zio.test.magnolia.DeriveGen[H],implicitev8:zio.test.magnolia.DeriveGen[I],implicitev9:zio.test.magnolia.DeriveGen[J]):zio.test.magnolia.DeriveGen[(A,B,C,D,F,G,H,I,J)]", "kind" : "implicit def"}, {"label" : "genTuple8", "tail" : "(ev1: DeriveGen[A], ev2: DeriveGen[B], ev3: DeriveGen[C], ev4: DeriveGen[D], ev5: DeriveGen[F], ev6: DeriveGen[G], ev7: DeriveGen[H], ev8: DeriveGen[I]): DeriveGen[(A, B, C, D, F, G, H, I)]", "member" : "zio.test.magnolia.DeriveGen.genTuple8", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genTuple8[A,B,C,D,F,G,H,I](implicitev1:zio.test.magnolia.DeriveGen[A],implicitev2:zio.test.magnolia.DeriveGen[B],implicitev3:zio.test.magnolia.DeriveGen[C],implicitev4:zio.test.magnolia.DeriveGen[D],implicitev5:zio.test.magnolia.DeriveGen[F],implicitev6:zio.test.magnolia.DeriveGen[G],implicitev7:zio.test.magnolia.DeriveGen[H],implicitev8:zio.test.magnolia.DeriveGen[I]):zio.test.magnolia.DeriveGen[(A,B,C,D,F,G,H,I)]", "kind" : "implicit def"}, {"label" : "genTuple7", "tail" : "(ev1: DeriveGen[A], ev2: DeriveGen[B], ev3: DeriveGen[C], ev4: DeriveGen[D], ev5: DeriveGen[F], ev6: DeriveGen[G], ev7: DeriveGen[H]): DeriveGen[(A, B, C, D, F, G, H)]", "member" : "zio.test.magnolia.DeriveGen.genTuple7", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genTuple7[A,B,C,D,F,G,H](implicitev1:zio.test.magnolia.DeriveGen[A],implicitev2:zio.test.magnolia.DeriveGen[B],implicitev3:zio.test.magnolia.DeriveGen[C],implicitev4:zio.test.magnolia.DeriveGen[D],implicitev5:zio.test.magnolia.DeriveGen[F],implicitev6:zio.test.magnolia.DeriveGen[G],implicitev7:zio.test.magnolia.DeriveGen[H]):zio.test.magnolia.DeriveGen[(A,B,C,D,F,G,H)]", "kind" : "implicit def"}, {"label" : "genTuple6", "tail" : "(ev1: DeriveGen[A], ev2: DeriveGen[B], ev3: DeriveGen[C], ev4: DeriveGen[D], ev5: DeriveGen[F], ev6: DeriveGen[G]): DeriveGen[(A, B, C, D, F, G)]", "member" : "zio.test.magnolia.DeriveGen.genTuple6", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genTuple6[A,B,C,D,F,G](implicitev1:zio.test.magnolia.DeriveGen[A],implicitev2:zio.test.magnolia.DeriveGen[B],implicitev3:zio.test.magnolia.DeriveGen[C],implicitev4:zio.test.magnolia.DeriveGen[D],implicitev5:zio.test.magnolia.DeriveGen[F],implicitev6:zio.test.magnolia.DeriveGen[G]):zio.test.magnolia.DeriveGen[(A,B,C,D,F,G)]", "kind" : "implicit def"}, {"label" : "genTuple5", "tail" : "(ev1: DeriveGen[A], ev2: DeriveGen[B], ev3: DeriveGen[C], ev4: DeriveGen[D], ev5: DeriveGen[F]): DeriveGen[(A, B, C, D, F)]", "member" : "zio.test.magnolia.DeriveGen.genTuple5", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genTuple5[A,B,C,D,F](implicitev1:zio.test.magnolia.DeriveGen[A],implicitev2:zio.test.magnolia.DeriveGen[B],implicitev3:zio.test.magnolia.DeriveGen[C],implicitev4:zio.test.magnolia.DeriveGen[D],implicitev5:zio.test.magnolia.DeriveGen[F]):zio.test.magnolia.DeriveGen[(A,B,C,D,F)]", "kind" : "implicit def"}, {"label" : "genTuple4", "tail" : "(ev1: DeriveGen[A], ev2: DeriveGen[B], ev3: DeriveGen[C], ev4: DeriveGen[D]): DeriveGen[(A, B, C, D)]", "member" : "zio.test.magnolia.DeriveGen.genTuple4", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genTuple4[A,B,C,D](implicitev1:zio.test.magnolia.DeriveGen[A],implicitev2:zio.test.magnolia.DeriveGen[B],implicitev3:zio.test.magnolia.DeriveGen[C],implicitev4:zio.test.magnolia.DeriveGen[D]):zio.test.magnolia.DeriveGen[(A,B,C,D)]", "kind" : "implicit def"}, {"label" : "genTuple3", "tail" : "(ev1: DeriveGen[A], ev2: DeriveGen[B], ev3: DeriveGen[C]): DeriveGen[(A, B, C)]", "member" : "zio.test.magnolia.DeriveGen.genTuple3", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genTuple3[A,B,C](implicitev1:zio.test.magnolia.DeriveGen[A],implicitev2:zio.test.magnolia.DeriveGen[B],implicitev3:zio.test.magnolia.DeriveGen[C]):zio.test.magnolia.DeriveGen[(A,B,C)]", "kind" : "implicit def"}, {"label" : "genTuple2", "tail" : "(ev1: DeriveGen[A], ev2: DeriveGen[B]): DeriveGen[(A, B)]", "member" : "zio.test.magnolia.DeriveGen.genTuple2", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genTuple2[A,B](implicitev1:zio.test.magnolia.DeriveGen[A],implicitev2:zio.test.magnolia.DeriveGen[B]):zio.test.magnolia.DeriveGen[(A,B)]", "kind" : "implicit def"}, {"label" : "genSet", "tail" : "(ev: DeriveGen[A]): DeriveGen[Set[A]]", "member" : "zio.test.magnolia.DeriveGen.genSet", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genSet[A](implicitev:zio.test.magnolia.DeriveGen[A]):zio.test.magnolia.DeriveGen[Set[A]]", "kind" : "implicit def"}, {"label" : "genPartialFunction", "tail" : "(ev: DeriveGen[B]): DeriveGen[PartialFunction[A, B]]", "member" : "zio.test.magnolia.DeriveGen.genPartialFunction", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genPartialFunction[A,B](implicitev:zio.test.magnolia.DeriveGen[B]):zio.test.magnolia.DeriveGen[PartialFunction[A,B]]", "kind" : "implicit def"}, {"label" : "genSeq", "tail" : "(ev: DeriveGen[A]): DeriveGen[Seq[A]]", "member" : "zio.test.magnolia.DeriveGen.genSeq", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genSeq[A](implicitev:zio.test.magnolia.DeriveGen[A]):zio.test.magnolia.DeriveGen[Seq[A]]", "kind" : "implicit def"}, {"label" : "genOption", "tail" : "(ev: DeriveGen[A]): DeriveGen[Option[A]]", "member" : "zio.test.magnolia.DeriveGen.genOption", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genOption[A](implicitev:zio.test.magnolia.DeriveGen[A]):zio.test.magnolia.DeriveGen[Option[A]]", "kind" : "implicit def"}, {"label" : "genMap", "tail" : "(ev1: DeriveGen[A], ev2: DeriveGen[B]): DeriveGen[Map[A, B]]", "member" : "zio.test.magnolia.DeriveGen.genMap", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genMap[A,B](implicitev1:zio.test.magnolia.DeriveGen[A],implicitev2:zio.test.magnolia.DeriveGen[B]):zio.test.magnolia.DeriveGen[Map[A,B]]", "kind" : "implicit def"}, {"label" : "genChunk", "tail" : "(ev: DeriveGen[A]): DeriveGen[Chunk[A]]", "member" : "zio.test.magnolia.DeriveGen.genChunk", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genChunk[A](implicitev:zio.test.magnolia.DeriveGen[A]):zio.test.magnolia.DeriveGen[zio.Chunk[A]]", "kind" : "implicit def"}, {"label" : "genList", "tail" : "(ev: DeriveGen[A]): DeriveGen[List[A]]", "member" : "zio.test.magnolia.DeriveGen.genList", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genList[A](implicitev:zio.test.magnolia.DeriveGen[A]):zio.test.magnolia.DeriveGen[List[A]]", "kind" : "implicit def"}, {"label" : "genIterable", "tail" : "(ev: DeriveGen[A]): DeriveGen[Iterable[A]]", "member" : "zio.test.magnolia.DeriveGen.genIterable", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genIterable[A](implicitev:zio.test.magnolia.DeriveGen[A]):zio.test.magnolia.DeriveGen[Iterable[A]]", "kind" : "implicit def"}, {"label" : "genFunction", "tail" : "(ev: DeriveGen[B]): DeriveGen[(A) => B]", "member" : "zio.test.magnolia.DeriveGen.genFunction", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genFunction[A,B](implicitev:zio.test.magnolia.DeriveGen[B]):zio.test.magnolia.DeriveGen[A=>B]", "kind" : "implicit def"}, {"label" : "genEither", "tail" : "(ev1: DeriveGen[A], ev2: DeriveGen[B]): DeriveGen[Either[A, B]]", "member" : "zio.test.magnolia.DeriveGen.genEither", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genEither[A,B](implicitev1:zio.test.magnolia.DeriveGen[A],implicitev2:zio.test.magnolia.DeriveGen[B]):zio.test.magnolia.DeriveGen[Either[A,B]]", "kind" : "implicit def"}, {"label" : "genJavaBigDecimalGen", "tail" : ": DeriveGen[BigDecimal]", "member" : "zio.test.magnolia.DeriveGen.genJavaBigDecimalGen", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genJavaBigDecimalGen:zio.test.magnolia.DeriveGen[java.math.BigDecimal]", "kind" : "implicit val"}, {"label" : "genBigIntegerJava", "tail" : ": DeriveGen[BigInteger]", "member" : "zio.test.magnolia.DeriveGen.genBigIntegerJava", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genBigIntegerJava:zio.test.magnolia.DeriveGen[java.math.BigInteger]", "kind" : "implicit val"}, {"label" : "genBigInt", "tail" : ": DeriveGen[BigInt]", "member" : "zio.test.magnolia.DeriveGen.genBigInt", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genBigInt:zio.test.magnolia.DeriveGen[BigInt]", "kind" : "implicit val"}, {"label" : "genBigDecimal", "tail" : ": DeriveGen[BigDecimal]", "member" : "zio.test.magnolia.DeriveGen.genBigDecimal", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genBigDecimal:zio.test.magnolia.DeriveGen[BigDecimal]", "kind" : "implicit val"}, {"label" : "genLocalTime", "tail" : ": DeriveGen[LocalTime]", "member" : "zio.test.magnolia.DeriveGen.genLocalTime", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genLocalTime:zio.test.magnolia.DeriveGen[java.time.LocalTime]", "kind" : "implicit val"}, {"label" : "genLocalDate", "tail" : ": DeriveGen[LocalDate]", "member" : "zio.test.magnolia.DeriveGen.genLocalDate", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genLocalDate:zio.test.magnolia.DeriveGen[java.time.LocalDate]", "kind" : "implicit val"}, {"label" : "genLocalDateTime", "tail" : ": DeriveGen[LocalDateTime]", "member" : "zio.test.magnolia.DeriveGen.genLocalDateTime", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genLocalDateTime:zio.test.magnolia.DeriveGen[java.time.LocalDateTime]", "kind" : "implicit val"}, {"label" : "genInstant", "tail" : ": DeriveGen[Instant]", "member" : "zio.test.magnolia.DeriveGen.genInstant", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genInstant:zio.test.magnolia.DeriveGen[java.time.Instant]", "kind" : "implicit val"}, {"label" : "genUUID", "tail" : ": DeriveGen[UUID]", "member" : "zio.test.magnolia.DeriveGen.genUUID", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genUUID:zio.test.magnolia.DeriveGen[java.util.UUID]", "kind" : "implicit val"}, {"label" : "genUnit", "tail" : ": DeriveGen[Unit]", "member" : "zio.test.magnolia.DeriveGen.genUnit", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genUnit:zio.test.magnolia.DeriveGen[Unit]", "kind" : "implicit val"}, {"label" : "genString", "tail" : ": DeriveGen[String]", "member" : "zio.test.magnolia.DeriveGen.genString", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genString:zio.test.magnolia.DeriveGen[String]", "kind" : "implicit val"}, {"label" : "genShort", "tail" : ": DeriveGen[Short]", "member" : "zio.test.magnolia.DeriveGen.genShort", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genShort:zio.test.magnolia.DeriveGen[Short]", "kind" : "implicit val"}, {"label" : "genLong", "tail" : ": DeriveGen[Long]", "member" : "zio.test.magnolia.DeriveGen.genLong", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genLong:zio.test.magnolia.DeriveGen[Long]", "kind" : "implicit val"}, {"label" : "genInt", "tail" : ": DeriveGen[Int]", "member" : "zio.test.magnolia.DeriveGen.genInt", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genInt:zio.test.magnolia.DeriveGen[Int]", "kind" : "implicit val"}, {"label" : "genFloat", "tail" : ": DeriveGen[Float]", "member" : "zio.test.magnolia.DeriveGen.genFloat", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genFloat:zio.test.magnolia.DeriveGen[Float]", "kind" : "implicit val"}, {"label" : "genDouble", "tail" : ": DeriveGen[Double]", "member" : "zio.test.magnolia.DeriveGen.genDouble", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genDouble:zio.test.magnolia.DeriveGen[Double]", "kind" : "implicit val"}, {"label" : "genChar", "tail" : ": DeriveGen[Char]", "member" : "zio.test.magnolia.DeriveGen.genChar", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genChar:zio.test.magnolia.DeriveGen[Char]", "kind" : "implicit val"}, {"label" : "genByte", "tail" : ": DeriveGen[Byte]", "member" : "zio.test.magnolia.DeriveGen.genByte", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genByte:zio.test.magnolia.DeriveGen[Byte]", "kind" : "implicit val"}, {"label" : "genBoolean", "tail" : ": DeriveGen[Boolean]", "member" : "zio.test.magnolia.DeriveGen.genBoolean", "link" : "zio\/test\/magnolia\/DeriveGen$.html#genBoolean:zio.test.magnolia.DeriveGen[Boolean]", "kind" : "implicit val"}, {"label" : "instance", "tail" : "(gen: Gen[Any, A]): DeriveGen[A]", "member" : "zio.test.magnolia.DeriveGen.instance", "link" : "zio\/test\/magnolia\/DeriveGen$.html#instance[A](gen:zio.test.Gen[Any,A]):zio.test.magnolia.DeriveGen[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(ev: DeriveGen[A]): Gen[Any, A]", "member" : "zio.test.magnolia.DeriveGen.apply", "link" : "zio\/test\/magnolia\/DeriveGen$.html#apply[A](implicitev:zio.test.magnolia.DeriveGen[A]):zio.test.Gen[Any,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/magnolia\/DeriveGen$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/magnolia\/DeriveGen$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/magnolia\/DeriveGen$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/magnolia\/DeriveGen$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/magnolia\/DeriveGen$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/magnolia\/DeriveGen$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/magnolia\/DeriveGen$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/magnolia\/DeriveGen$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/magnolia\/DeriveGen$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/magnolia\/DeriveGen$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/magnolia\/DeriveGen$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/magnolia\/DeriveGen$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/magnolia\/DeriveGen$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/magnolia\/DeriveGen$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/magnolia\/DeriveGen$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/magnolia\/DeriveGen$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/magnolia\/DeriveGen$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/magnolia\/DeriveGen$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/magnolia\/DeriveGen$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/magnolia\/DeriveGen.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/magnolia\/DeriveGen.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/magnolia\/DeriveGen.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/magnolia\/DeriveGen.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/magnolia\/DeriveGen.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/magnolia\/DeriveGen.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/magnolia\/DeriveGen.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/magnolia\/DeriveGen.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/magnolia\/DeriveGen.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/magnolia\/DeriveGen.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/magnolia\/DeriveGen.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/magnolia\/DeriveGen.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/magnolia\/DeriveGen.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/magnolia\/DeriveGen.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/magnolia\/DeriveGen.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/magnolia\/DeriveGen.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/magnolia\/DeriveGen.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/magnolia\/DeriveGen.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/magnolia\/DeriveGen.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/magnolia\/DeriveGen.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "derive", "tail" : "(): Gen[Any, A]", "member" : "zio.test.magnolia.DeriveGen.derive", "link" : "zio\/test\/magnolia\/DeriveGen.html#derive:zio.test.Gen[Any,A]", "kind" : "abstract def"}], "shortDescription" : "A DeriveGen[A] can derive a generator of A values."}, {"name" : "zio.test.magnolia.LowPri", "trait" : "zio\/test\/magnolia\/LowPri.html", "kind" : "trait", "members_trait" : [{"label" : "fallback", "tail" : "(): Diff[A]", "member" : "zio.test.magnolia.LowPri.fallback", "link" : "zio\/test\/magnolia\/LowPri.html#fallback[A]:zio.test.diff.Diff[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/magnolia\/LowPri.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/magnolia\/LowPri.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/magnolia\/LowPri.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/magnolia\/LowPri.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/magnolia\/LowPri.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/magnolia\/LowPri.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/magnolia\/LowPri.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/magnolia\/LowPri.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/magnolia\/LowPri.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/magnolia\/LowPri.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/magnolia\/LowPri.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/magnolia\/LowPri.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/magnolia\/LowPri.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/magnolia\/LowPri.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/magnolia\/LowPri.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/magnolia\/LowPri.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/magnolia\/LowPri.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/magnolia\/LowPri.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/magnolia\/LowPri.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}], "zio.stm" : [{"name" : "zio.stm.STM", "shortDescription" : "", "object" : "zio\/stm\/STM$.html", "members_object" : [{"label" : "whenSTM", "tail" : "(b: STM[E, Boolean]): WhenSTM[Any, E]", "member" : "zio.stm.STM.whenSTM", "link" : "zio\/stm\/STM$.html#whenSTM[E](b:zio.stm.STM[E,Boolean]):zio.stm.ZSTM.WhenSTM[Any,E]", "kind" : "def"}, {"label" : "whenCaseSTM", "tail" : "(a: STM[E, A])(pf: PartialFunction[A, STM[E, B]]): STM[E, Option[B]]", "member" : "zio.stm.STM.whenCaseSTM", "link" : "zio\/stm\/STM$.html#whenCaseSTM[E,A,B](a:zio.stm.STM[E,A])(pf:PartialFunction[A,zio.stm.STM[E,B]]):zio.stm.STM[E,Option[B]]", "kind" : "def"}, {"label" : "whenCase", "tail" : "(a: => A)(pf: PartialFunction[A, STM[E, B]]): STM[E, Option[B]]", "member" : "zio.stm.STM.whenCase", "link" : "zio\/stm\/STM$.html#whenCase[E,A,B](a:=>A)(pf:PartialFunction[A,zio.stm.STM[E,B]]):zio.stm.STM[E,Option[B]]", "kind" : "def"}, {"label" : "when", "tail" : "(b: => Boolean)(stm: => STM[E, A]): STM[E, Option[A]]", "member" : "zio.stm.STM.when", "link" : "zio\/stm\/STM$.html#when[E,A](b:=>Boolean)(stm:=>zio.stm.STM[E,A]):zio.stm.STM[E,Option[A]]", "kind" : "def"}, {"label" : "validateFirst", "tail" : "(in: Collection[A])(f: (A) => STM[E, B])(bf: zio.BuildFrom[Collection[A], E, Collection[E]], ev: CanFail[E]): STM[Collection[E], B]", "member" : "zio.stm.STM.validateFirst", "link" : "zio\/stm\/STM$.html#validateFirst[E,A,B,Collection[+Element]<:Iterable[Element]](in:Collection[A])(f:A=>zio.stm.STM[E,B])(implicitbf:zio.BuildFrom[Collection[A],E,Collection[E]],implicitev:zio.CanFail[E]):zio.stm.STM[Collection[E],B]", "kind" : "def"}, {"label" : "validate", "tail" : "(in: NonEmptyChunk[A])(f: (A) => STM[E, B])(ev: CanFail[E]): STM[::[E], NonEmptyChunk[B]]", "member" : "zio.stm.STM.validate", "link" : "zio\/stm\/STM$.html#validate[E,A,B](in:zio.NonEmptyChunk[A])(f:A=>zio.stm.STM[E,B])(implicitev:zio.CanFail[E]):zio.stm.STM[::[E],zio.NonEmptyChunk[B]]", "kind" : "def"}, {"label" : "validate", "tail" : "(in: Collection[A])(f: (A) => STM[E, B])(bf: zio.BuildFrom[Collection[A], B, Collection[B]], ev: CanFail[E]): STM[::[E], Collection[B]]", "member" : "zio.stm.STM.validate", "link" : "zio\/stm\/STM$.html#validate[E,A,B,Collection[+Element]<:Iterable[Element]](in:Collection[A])(f:A=>zio.stm.STM[E,B])(implicitbf:zio.BuildFrom[Collection[A],B,Collection[B]],implicitev:zio.CanFail[E]):zio.stm.STM[::[E],Collection[B]]", "kind" : "def"}, {"label" : "unlessSTM", "tail" : "(b: STM[E, Boolean]): UnlessSTM[Any, E]", "member" : "zio.stm.STM.unlessSTM", "link" : "zio\/stm\/STM$.html#unlessSTM[E](b:zio.stm.STM[E,Boolean]):zio.stm.ZSTM.UnlessSTM[Any,E]", "kind" : "def"}, {"label" : "unless", "tail" : "(b: => Boolean)(stm: => STM[E, A]): STM[E, Option[A]]", "member" : "zio.stm.STM.unless", "link" : "zio\/stm\/STM$.html#unless[E,A](b:=>Boolean)(stm:=>zio.stm.STM[E,A]):zio.stm.STM[E,Option[A]]", "kind" : "def"}, {"label" : "unit", "tail" : ": USTM[Unit]", "member" : "zio.stm.STM.unit", "link" : "zio\/stm\/STM$.html#unit:zio.stm.USTM[Unit]", "kind" : "val"}, {"label" : "suspend", "tail" : "(stm: => STM[E, A]): STM[E, A]", "member" : "zio.stm.STM.suspend", "link" : "zio\/stm\/STM$.html#suspend[E,A](stm:=>zio.stm.STM[E,A]):zio.stm.STM[E,A]", "kind" : "def"}, {"label" : "succeed", "tail" : "(a: => A): USTM[A]", "member" : "zio.stm.STM.succeed", "link" : "zio\/stm\/STM$.html#succeed[A](a:=>A):zio.stm.USTM[A]", "kind" : "def"}, {"label" : "some", "tail" : "(a: => A): USTM[Option[A]]", "member" : "zio.stm.STM.some", "link" : "zio\/stm\/STM$.html#some[A](a:=>A):zio.stm.USTM[Option[A]]", "kind" : "def"}, {"label" : "right", "tail" : "(a: => A): USTM[Either[Nothing, A]]", "member" : "zio.stm.STM.right", "link" : "zio\/stm\/STM$.html#right[A](a:=>A):zio.stm.USTM[Either[Nothing,A]]", "kind" : "def"}, {"label" : "retry", "tail" : ": USTM[Nothing]", "member" : "zio.stm.STM.retry", "link" : "zio\/stm\/STM$.html#retry:zio.stm.USTM[Nothing]", "kind" : "val"}, {"label" : "replicateSTMDiscard", "tail" : "(n: Int)(transaction: STM[E, A]): STM[E, Unit]", "member" : "zio.stm.STM.replicateSTMDiscard", "link" : "zio\/stm\/STM$.html#replicateSTMDiscard[E,A](n:Int)(transaction:zio.stm.STM[E,A]):zio.stm.STM[E,Unit]", "kind" : "def"}, {"label" : "replicateSTM", "tail" : "(n: Int)(transaction: STM[E, A]): STM[E, Iterable[A]]", "member" : "zio.stm.STM.replicateSTM", "link" : "zio\/stm\/STM$.html#replicateSTM[E,A](n:Int)(transaction:zio.stm.STM[E,A]):zio.stm.STM[E,Iterable[A]]", "kind" : "def"}, {"label" : "replicate", "tail" : "(n: Int)(tx: STM[E, A]): Iterable[STM[E, A]]", "member" : "zio.stm.STM.replicate", "link" : "zio\/stm\/STM$.html#replicate[E,A](n:Int)(tx:zio.stm.STM[E,A]):Iterable[zio.stm.STM[E,A]]", "kind" : "def"}, {"label" : "reduceAll", "tail" : "(a: STM[E, A], as: Iterable[STM[E, A]])(f: (A, A) => A): STM[E, A]", "member" : "zio.stm.STM.reduceAll", "link" : "zio\/stm\/STM$.html#reduceAll[E,A](a:zio.stm.STM[E,A],as:Iterable[zio.stm.STM[E,A]])(f:(A,A)=>A):zio.stm.STM[E,A]", "kind" : "def"}, {"label" : "partition", "tail" : "(in: Iterable[A])(f: (A) => STM[E, B])(ev: CanFail[E]): STM[Nothing, (Iterable[E], Iterable[B])]", "member" : "zio.stm.STM.partition", "link" : "zio\/stm\/STM$.html#partition[E,A,B](in:Iterable[A])(f:A=>zio.stm.STM[E,B])(implicitev:zio.CanFail[E]):zio.stm.STM[Nothing,(Iterable[E],Iterable[B])]", "kind" : "def"}, {"label" : "onCommit", "tail" : "(io: IO[Nothing, Any])(trace: Trace): STM[Nothing, Unit]", "member" : "zio.stm.STM.onCommit", "link" : "zio\/stm\/STM$.html#onCommit(io:zio.IO[Nothing,Any])(implicittrace:zio.Trace):zio.stm.STM[Nothing,Unit]", "kind" : "def"}, {"label" : "none", "tail" : ": USTM[Option[Nothing]]", "member" : "zio.stm.STM.none", "link" : "zio\/stm\/STM$.html#none:zio.stm.USTM[Option[Nothing]]", "kind" : "val"}, {"label" : "mergeAll", "tail" : "(in: Iterable[STM[E, A]])(zero: B)(f: (B, A) => B): STM[E, B]", "member" : "zio.stm.STM.mergeAll", "link" : "zio\/stm\/STM$.html#mergeAll[E,A,B](in:Iterable[zio.stm.STM[E,A]])(zero:B)(f:(B,A)=>B):zio.stm.STM[E,B]", "kind" : "def"}, {"label" : "loopDiscard", "tail" : "(initial: S)(cont: (S) => Boolean, inc: (S) => S)(body: (S) => STM[E, Any]): STM[E, Unit]", "member" : "zio.stm.STM.loopDiscard", "link" : "zio\/stm\/STM$.html#loopDiscard[E,S](initial:S)(cont:S=>Boolean,inc:S=>S)(body:S=>zio.stm.STM[E,Any]):zio.stm.STM[E,Unit]", "kind" : "def"}, {"label" : "loop", "tail" : "(initial: S)(cont: (S) => Boolean, inc: (S) => S)(body: (S) => STM[E, A]): STM[E, List[A]]", "member" : "zio.stm.STM.loop", "link" : "zio\/stm\/STM$.html#loop[E,A,S](initial:S)(cont:S=>Boolean,inc:S=>S)(body:S=>zio.stm.STM[E,A]):zio.stm.STM[E,List[A]]", "kind" : "def"}, {"label" : "left", "tail" : "(a: => A): USTM[Either[A, Nothing]]", "member" : "zio.stm.STM.left", "link" : "zio\/stm\/STM$.html#left[A](a:=>A):zio.stm.USTM[Either[A,Nothing]]", "kind" : "def"}, {"label" : "iterate", "tail" : "(initial: S)(cont: (S) => Boolean)(body: (S) => STM[E, S]): STM[E, S]", "member" : "zio.stm.STM.iterate", "link" : "zio\/stm\/STM$.html#iterate[E,S](initial:S)(cont:S=>Boolean)(body:S=>zio.stm.STM[E,S]):zio.stm.STM[E,S]", "kind" : "def"}, {"label" : "ifSTM", "tail" : "(b: STM[E, Boolean]): IfSTM[Any, E]", "member" : "zio.stm.STM.ifSTM", "link" : "zio\/stm\/STM$.html#ifSTM[E](b:zio.stm.STM[E,Boolean]):zio.stm.ZSTM.IfSTM[Any,E]", "kind" : "def"}, {"label" : "fromTry", "tail" : "(a: => Try[A]): TaskSTM[A]", "member" : "zio.stm.STM.fromTry", "link" : "zio\/stm\/STM$.html#fromTry[A](a:=>scala.util.Try[A]):zio.stm.TaskSTM[A]", "kind" : "def"}, {"label" : "fromOption", "tail" : "(v: => Option[A]): STM[Option[Nothing], A]", "member" : "zio.stm.STM.fromOption", "link" : "zio\/stm\/STM$.html#fromOption[A](v:=>Option[A]):zio.stm.STM[Option[Nothing],A]", "kind" : "def"}, {"label" : "fromEither", "tail" : "(e: => Either[E, A]): STM[E, A]", "member" : "zio.stm.STM.fromEither", "link" : "zio\/stm\/STM$.html#fromEither[E,A](e:=>Either[E,A]):zio.stm.STM[E,A]", "kind" : "def"}, {"label" : "foreachDiscard", "tail" : "(in: Iterable[A])(f: (A) => STM[E, Any]): STM[E, Unit]", "member" : "zio.stm.STM.foreachDiscard", "link" : "zio\/stm\/STM$.html#foreachDiscard[E,A](in:Iterable[A])(f:A=>zio.stm.STM[E,Any]):zio.stm.STM[E,Unit]", "kind" : "def"}, {"label" : "foreach", "tail" : "(in: Set[A])(f: (A) => STM[E, B]): STM[E, Set[B]]", "member" : "zio.stm.STM.foreach", "link" : "zio\/stm\/STM$.html#foreach[E,A,B](in:Set[A])(f:A=>zio.stm.STM[E,B]):zio.stm.STM[E,Set[B]]", "kind" : "def"}, {"label" : "foreach", "tail" : "(in: Collection[A])(f: (A) => STM[E, B])(bf: zio.BuildFrom[Collection[A], B, Collection[B]]): STM[E, Collection[B]]", "member" : "zio.stm.STM.foreach", "link" : "zio\/stm\/STM$.html#foreach[E,A,B,Collection[+Element]<:Iterable[Element]](in:Collection[A])(f:A=>zio.stm.STM[E,B])(implicitbf:zio.BuildFrom[Collection[A],B,Collection[B]]):zio.stm.STM[E,Collection[B]]", "kind" : "def"}, {"label" : "forall", "tail" : "(as: Iterable[A])(f: (A) => ZSTM[R, E, Boolean]): ZSTM[R, E, Boolean]", "member" : "zio.stm.STM.forall", "link" : "zio\/stm\/STM$.html#forall[R,E,A](as:Iterable[A])(f:A=>zio.stm.ZSTM[R,E,Boolean]):zio.stm.ZSTM[R,E,Boolean]", "kind" : "def"}, {"label" : "foldRight", "tail" : "(in: Iterable[A])(zero: S)(f: (A, S) => STM[E, S]): STM[E, S]", "member" : "zio.stm.STM.foldRight", "link" : "zio\/stm\/STM$.html#foldRight[E,S,A](in:Iterable[A])(zero:S)(f:(A,S)=>zio.stm.STM[E,S]):zio.stm.STM[E,S]", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(in: Iterable[A])(zero: S)(f: (S, A) => STM[E, S]): STM[E, S]", "member" : "zio.stm.STM.foldLeft", "link" : "zio\/stm\/STM$.html#foldLeft[E,S,A](in:Iterable[A])(zero:S)(f:(S,A)=>zio.stm.STM[E,S]):zio.stm.STM[E,S]", "kind" : "def"}, {"label" : "flatten", "tail" : "(task: STM[E, STM[E, A]]): STM[E, A]", "member" : "zio.stm.STM.flatten", "link" : "zio\/stm\/STM$.html#flatten[E,A](task:zio.stm.STM[E,zio.stm.STM[E,A]]):zio.stm.STM[E,A]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(as: Set[A])(f: (A) => STM[E, Boolean]): STM[E, Set[A]]", "member" : "zio.stm.STM.filterNot", "link" : "zio\/stm\/STM$.html#filterNot[E,A](as:Set[A])(f:A=>zio.stm.STM[E,Boolean]):zio.stm.STM[E,Set[A]]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(as: Collection[A])(f: (A) => STM[E, Boolean])(bf: zio.BuildFrom[Collection[A], A, Collection[A]]): STM[E, Collection[A]]", "member" : "zio.stm.STM.filterNot", "link" : "zio\/stm\/STM$.html#filterNot[E,A,Collection[+Element]<:Iterable[Element]](as:Collection[A])(f:A=>zio.stm.STM[E,Boolean])(implicitbf:zio.BuildFrom[Collection[A],A,Collection[A]]):zio.stm.STM[E,Collection[A]]", "kind" : "def"}, {"label" : "filter", "tail" : "(as: Set[A])(f: (A) => STM[E, Boolean]): STM[E, Set[A]]", "member" : "zio.stm.STM.filter", "link" : "zio\/stm\/STM$.html#filter[E,A](as:Set[A])(f:A=>zio.stm.STM[E,Boolean]):zio.stm.STM[E,Set[A]]", "kind" : "def"}, {"label" : "filter", "tail" : "(as: Collection[A])(f: (A) => STM[E, Boolean])(bf: zio.BuildFrom[Collection[A], A, Collection[A]]): STM[E, Collection[A]]", "member" : "zio.stm.STM.filter", "link" : "zio\/stm\/STM$.html#filter[E,A,Collection[+Element]<:Iterable[Element]](as:Collection[A])(f:A=>zio.stm.STM[E,Boolean])(implicitbf:zio.BuildFrom[Collection[A],A,Collection[A]]):zio.stm.STM[E,Collection[A]]", "kind" : "def"}, {"label" : "fiberId", "tail" : ": USTM[FiberId]", "member" : "zio.stm.STM.fiberId", "link" : "zio\/stm\/STM$.html#fiberId:zio.stm.USTM[zio.FiberId]", "kind" : "val"}, {"label" : "fail", "tail" : "(e: => E): STM[E, Nothing]", "member" : "zio.stm.STM.fail", "link" : "zio\/stm\/STM$.html#fail[E](e:=>E):zio.stm.STM[E,Nothing]", "kind" : "def"}, {"label" : "exists", "tail" : "(as: Iterable[A])(f: (A) => STM[E, Boolean]): STM[E, Boolean]", "member" : "zio.stm.STM.exists", "link" : "zio\/stm\/STM$.html#exists[E,A](as:Iterable[A])(f:A=>zio.stm.STM[E,Boolean]):zio.stm.STM[E,Boolean]", "kind" : "def"}, {"label" : "done", "tail" : "(exit: => TExit[E, A]): STM[E, A]", "member" : "zio.stm.STM.done", "link" : "zio\/stm\/STM$.html#done[E,A](exit:=>zio.stm.ZSTM.internal.TExit[E,A]):zio.stm.STM[E,A]", "kind" : "def"}, {"label" : "dieMessage", "tail" : "(m: => String): USTM[Nothing]", "member" : "zio.stm.STM.dieMessage", "link" : "zio\/stm\/STM$.html#dieMessage(m:=>String):zio.stm.USTM[Nothing]", "kind" : "def"}, {"label" : "die", "tail" : "(t: => Throwable): USTM[Nothing]", "member" : "zio.stm.STM.die", "link" : "zio\/stm\/STM$.html#die(t:=>Throwable):zio.stm.USTM[Nothing]", "kind" : "def"}, {"label" : "cond", "tail" : "(predicate: Boolean, result: => A, error: => E): STM[E, A]", "member" : "zio.stm.STM.cond", "link" : "zio\/stm\/STM$.html#cond[E,A](predicate:Boolean,result:=>A,error:=>E):zio.stm.STM[E,A]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(as: Iterable[A])(f: (A) => STM[E, Option[B]]): STM[E, Option[B]]", "member" : "zio.stm.STM.collectFirst", "link" : "zio\/stm\/STM$.html#collectFirst[E,A,B](as:Iterable[A])(f:A=>zio.stm.STM[E,Option[B]]):zio.stm.STM[E,Option[B]]", "kind" : "def"}, {"label" : "collectAllDiscard", "tail" : "(in: Iterable[STM[E, A]]): STM[E, Unit]", "member" : "zio.stm.STM.collectAllDiscard", "link" : "zio\/stm\/STM$.html#collectAllDiscard[E,A](in:Iterable[zio.stm.STM[E,A]]):zio.stm.STM[E,Unit]", "kind" : "def"}, {"label" : "collectAll", "tail" : "(in: Set[STM[E, A]]): STM[E, Set[A]]", "member" : "zio.stm.STM.collectAll", "link" : "zio\/stm\/STM$.html#collectAll[E,A](in:Set[zio.stm.STM[E,A]]):zio.stm.STM[E,Set[A]]", "kind" : "def"}, {"label" : "collectAll", "tail" : "(in: Collection[STM[E, A]])(bf: zio.BuildFrom[Collection[STM[E, A]], A, Collection[A]]): STM[E, Collection[A]]", "member" : "zio.stm.STM.collectAll", "link" : "zio\/stm\/STM$.html#collectAll[E,A,Collection[+Element]<:Iterable[Element]](in:Collection[zio.stm.STM[E,A]])(implicitbf:zio.BuildFrom[Collection[zio.stm.STM[E,A]],A,Collection[A]]):zio.stm.STM[E,Collection[A]]", "kind" : "def"}, {"label" : "check", "tail" : "(p: => Boolean): USTM[Unit]", "member" : "zio.stm.STM.check", "link" : "zio\/stm\/STM$.html#check(p:=>Boolean):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "attempt", "tail" : "(a: => A): STM[Throwable, A]", "member" : "zio.stm.STM.attempt", "link" : "zio\/stm\/STM$.html#attempt[A](a:=>A):zio.stm.STM[Throwable,A]", "kind" : "def"}, {"label" : "atomically", "tail" : "(stm: STM[E, A])(trace: Trace): IO[E, A]", "member" : "zio.stm.STM.atomically", "link" : "zio\/stm\/STM$.html#atomically[E,A](stm:zio.stm.STM[E,A])(implicittrace:zio.Trace):zio.IO[E,A]", "kind" : "def"}, {"label" : "absolve", "tail" : "(e: STM[E, Either[E, A]]): STM[E, A]", "member" : "zio.stm.STM.absolve", "link" : "zio\/stm\/STM$.html#absolve[E,A](e:zio.stm.STM[E,Either[E,A]]):zio.stm.STM[E,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/STM$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/STM$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/STM$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/STM$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/STM$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/STM$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/STM$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/STM$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/STM$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/STM$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/STM$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/STM$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/STM$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/STM$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/STM$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/STM$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/STM$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/STM$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/STM$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.stm.TArray", "shortDescription" : "Wraps array of TRef and adds methods for convenience.", "object" : "zio\/stm\/TArray$.html", "members_class" : [{"label" : "updateSTM", "tail" : "(index: Int, fn: (A) => STM[E, A]): STM[E, Unit]", "member" : "zio.stm.TArray.updateSTM", "link" : "zio\/stm\/TArray.html#updateSTM[E](index:Int,fn:A=>zio.stm.STM[E,A]):zio.stm.STM[E,Unit]", "kind" : "def"}, {"label" : "update", "tail" : "(index: Int, fn: (A) => A): USTM[Unit]", "member" : "zio.stm.TArray.update", "link" : "zio\/stm\/TArray.html#update(index:Int,fn:A=>A):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "transformSTM", "tail" : "(f: (A) => STM[E, A]): STM[E, Unit]", "member" : "zio.stm.TArray.transformSTM", "link" : "zio\/stm\/TArray.html#transformSTM[E](f:A=>zio.stm.STM[E,A]):zio.stm.STM[E,Unit]", "kind" : "def"}, {"label" : "transform", "tail" : "(f: (A) => A): USTM[Unit]", "member" : "zio.stm.TArray.transform", "link" : "zio\/stm\/TArray.html#transform(f:A=>A):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "toChunk", "tail" : "(): USTM[Chunk[A]]", "member" : "zio.stm.TArray.toChunk", "link" : "zio\/stm\/TArray.html#toChunk:zio.stm.USTM[zio.Chunk[A]]", "kind" : "def"}, {"label" : "toList", "tail" : "(): USTM[List[A]]", "member" : "zio.stm.TArray.toList", "link" : "zio\/stm\/TArray.html#toList:zio.stm.USTM[List[A]]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "zio.stm.TArray.size", "link" : "zio\/stm\/TArray.html#size:Int", "kind" : "def"}, {"label" : "reduceOptionSTM", "tail" : "(op: (A, A) => STM[E, A]): STM[E, Option[A]]", "member" : "zio.stm.TArray.reduceOptionSTM", "link" : "zio\/stm\/TArray.html#reduceOptionSTM[E](op:(A,A)=>zio.stm.STM[E,A]):zio.stm.STM[E,Option[A]]", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A, A) => A): USTM[Option[A]]", "member" : "zio.stm.TArray.reduceOption", "link" : "zio\/stm\/TArray.html#reduceOption(op:(A,A)=>A):zio.stm.USTM[Option[A]]", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[A]): USTM[Option[A]]", "member" : "zio.stm.TArray.minOption", "link" : "zio\/stm\/TArray.html#minOption(implicitord:Ordering[A]):zio.stm.USTM[Option[A]]", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[A]): USTM[Option[A]]", "member" : "zio.stm.TArray.maxOption", "link" : "zio\/stm\/TArray.html#maxOption(implicitord:Ordering[A]):zio.stm.USTM[Option[A]]", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): USTM[Option[A]]", "member" : "zio.stm.TArray.lastOption", "link" : "zio\/stm\/TArray.html#lastOption:zio.stm.USTM[Option[A]]", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(a: A, end: Int): USTM[Int]", "member" : "zio.stm.TArray.lastIndexOf", "link" : "zio\/stm\/TArray.html#lastIndexOf(a:A,end:Int):zio.stm.USTM[Int]", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(a: A): USTM[Int]", "member" : "zio.stm.TArray.lastIndexOf", "link" : "zio\/stm\/TArray.html#lastIndexOf(a:A):zio.stm.USTM[Int]", "kind" : "def"}, {"label" : "indexWhereSTM", "tail" : "(p: (A) => STM[E, Boolean], from: Int): STM[E, Int]", "member" : "zio.stm.TArray.indexWhereSTM", "link" : "zio\/stm\/TArray.html#indexWhereSTM[E](p:A=>zio.stm.STM[E,Boolean],from:Int):zio.stm.STM[E,Int]", "kind" : "def"}, {"label" : "indexWhereSTM", "tail" : "(p: (A) => STM[E, Boolean]): STM[E, Int]", "member" : "zio.stm.TArray.indexWhereSTM", "link" : "zio\/stm\/TArray.html#indexWhereSTM[E](p:A=>zio.stm.STM[E,Boolean]):zio.stm.STM[E,Int]", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) => Boolean, from: Int): USTM[Int]", "member" : "zio.stm.TArray.indexWhere", "link" : "zio\/stm\/TArray.html#indexWhere(p:A=>Boolean,from:Int):zio.stm.USTM[Int]", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) => Boolean): USTM[Int]", "member" : "zio.stm.TArray.indexWhere", "link" : "zio\/stm\/TArray.html#indexWhere(p:A=>Boolean):zio.stm.USTM[Int]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(a: A, from: Int): USTM[Int]", "member" : "zio.stm.TArray.indexOf", "link" : "zio\/stm\/TArray.html#indexOf(a:A,from:Int):zio.stm.USTM[Int]", "kind" : "def"}, {"label" : "indexOf", "tail" : "(a: A): USTM[Int]", "member" : "zio.stm.TArray.indexOf", "link" : "zio\/stm\/TArray.html#indexOf(a:A):zio.stm.USTM[Int]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) => STM[E, Unit]): STM[E, Unit]", "member" : "zio.stm.TArray.foreach", "link" : "zio\/stm\/TArray.html#foreach[E](f:A=>zio.stm.STM[E,Unit]):zio.stm.STM[E,Unit]", "kind" : "def"}, {"label" : "forallSTM", "tail" : "(p: (A) => STM[E, Boolean]): STM[E, Boolean]", "member" : "zio.stm.TArray.forallSTM", "link" : "zio\/stm\/TArray.html#forallSTM[E](p:A=>zio.stm.STM[E,Boolean]):zio.stm.STM[E,Boolean]", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (A) => Boolean): USTM[Boolean]", "member" : "zio.stm.TArray.forall", "link" : "zio\/stm\/TArray.html#forall(p:A=>Boolean):zio.stm.USTM[Boolean]", "kind" : "def"}, {"label" : "foldSTM", "tail" : "(zero: Z)(op: (Z, A) => STM[E, Z]): STM[E, Z]", "member" : "zio.stm.TArray.foldSTM", "link" : "zio\/stm\/TArray.html#foldSTM[E,Z](zero:Z)(op:(Z,A)=>zio.stm.STM[E,Z]):zio.stm.STM[E,Z]", "kind" : "def"}, {"label" : "fold", "tail" : "(zero: Z)(op: (Z, A) => Z): USTM[Z]", "member" : "zio.stm.TArray.fold", "link" : "zio\/stm\/TArray.html#fold[Z](zero:Z)(op:(Z,A)=>Z):zio.stm.USTM[Z]", "kind" : "def"}, {"label" : "firstOption", "tail" : "(): USTM[Option[A]]", "member" : "zio.stm.TArray.firstOption", "link" : "zio\/stm\/TArray.html#firstOption:zio.stm.USTM[Option[A]]", "kind" : "def"}, {"label" : "findSTM", "tail" : "(p: (A) => STM[E, Boolean]): STM[E, Option[A]]", "member" : "zio.stm.TArray.findSTM", "link" : "zio\/stm\/TArray.html#findSTM[E](p:A=>zio.stm.STM[E,Boolean]):zio.stm.STM[E,Option[A]]", "kind" : "def"}, {"label" : "findLastSTM", "tail" : "(p: (A) => STM[E, Boolean]): STM[E, Option[A]]", "member" : "zio.stm.TArray.findLastSTM", "link" : "zio\/stm\/TArray.html#findLastSTM[E](p:A=>zio.stm.STM[E,Boolean]):zio.stm.STM[E,Option[A]]", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (A) => Boolean): USTM[Option[A]]", "member" : "zio.stm.TArray.findLast", "link" : "zio\/stm\/TArray.html#findLast(p:A=>Boolean):zio.stm.USTM[Option[A]]", "kind" : "def"}, {"label" : "find", "tail" : "(p: (A) => Boolean): USTM[Option[A]]", "member" : "zio.stm.TArray.find", "link" : "zio\/stm\/TArray.html#find(p:A=>Boolean):zio.stm.USTM[Option[A]]", "kind" : "def"}, {"label" : "existsSTM", "tail" : "(p: (A) => STM[E, Boolean]): STM[E, Boolean]", "member" : "zio.stm.TArray.existsSTM", "link" : "zio\/stm\/TArray.html#existsSTM[E](p:A=>zio.stm.STM[E,Boolean]):zio.stm.STM[E,Boolean]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (A) => Boolean): USTM[Boolean]", "member" : "zio.stm.TArray.exists", "link" : "zio\/stm\/TArray.html#exists(p:A=>Boolean):zio.stm.USTM[Boolean]", "kind" : "def"}, {"label" : "countSTM", "tail" : "(p: (A) => STM[E, Boolean]): STM[E, Int]", "member" : "zio.stm.TArray.countSTM", "link" : "zio\/stm\/TArray.html#countSTM[E](p:A=>zio.stm.STM[E,Boolean]):zio.stm.STM[E,Int]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (A) => Boolean): USTM[Int]", "member" : "zio.stm.TArray.count", "link" : "zio\/stm\/TArray.html#count(p:A=>Boolean):zio.stm.USTM[Int]", "kind" : "def"}, {"label" : "contains", "tail" : "(a: A): USTM[Boolean]", "member" : "zio.stm.TArray.contains", "link" : "zio\/stm\/TArray.html#contains(a:A):zio.stm.USTM[Boolean]", "kind" : "def"}, {"label" : "collectFirstSTM", "tail" : "(pf: PartialFunction[A, STM[E, B]]): STM[E, Option[B]]", "member" : "zio.stm.TArray.collectFirstSTM", "link" : "zio\/stm\/TArray.html#collectFirstSTM[E,B](pf:PartialFunction[A,zio.stm.STM[E,B]]):zio.stm.STM[E,Option[B]]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[A, B]): USTM[Option[B]]", "member" : "zio.stm.TArray.collectFirst", "link" : "zio\/stm\/TArray.html#collectFirst[B](pf:PartialFunction[A,B]):zio.stm.USTM[Option[B]]", "kind" : "def"}, {"label" : "apply", "tail" : "(index: Int): USTM[A]", "member" : "zio.stm.TArray.apply", "link" : "zio\/stm\/TArray.html#apply(index:Int):zio.stm.USTM[A]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/stm\/TArray.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/stm\/TArray.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TArray.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TArray.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/stm\/TArray.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/stm\/TArray.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/stm\/TArray.html#==(x$1:Any):Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fromIterable", "tail" : "(data: => Iterable[A]): USTM[TArray[A]]", "member" : "zio.stm.TArray.fromIterable", "link" : "zio\/stm\/TArray$.html#fromIterable[A](data:=>Iterable[A]):zio.stm.USTM[zio.stm.TArray[A]]", "kind" : "def"}, {"label" : "empty", "tail" : "(): USTM[TArray[A]]", "member" : "zio.stm.TArray.empty", "link" : "zio\/stm\/TArray$.html#empty[A]:zio.stm.USTM[zio.stm.TArray[A]]", "kind" : "def"}, {"label" : "unsafe", "tail" : "", "member" : "zio.stm.TArray.unsafe", "link" : "zio\/stm\/TArray$.html#unsafe", "kind" : "object"}, {"label" : "make", "tail" : "(data: A*): USTM[TArray[A]]", "member" : "zio.stm.TArray.make", "link" : "zio\/stm\/TArray$.html#make[A](data:A*):zio.stm.USTM[zio.stm.TArray[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/TArray$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/TArray$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/TArray$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/TArray$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/TArray$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/TArray$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/TArray$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/TArray$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/TArray$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/TArray$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/TArray$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/TArray$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TArray$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TArray$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TArray$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/TArray$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/TArray$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TArray$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TArray$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/stm\/TArray.html", "kind" : "class"}, {"name" : "zio.stm.TDequeue", "trait" : "zio\/stm\/TDequeue.html", "kind" : "trait", "members_trait" : [{"label" : "takeN", "tail" : "(n: Int): ZSTM[Any, Nothing, Chunk[A]]", "member" : "zio.stm.TDequeue.takeN", "link" : "zio\/stm\/TDequeue.html#takeN(n:Int):zio.stm.ZSTM[Any,Nothing,zio.Chunk[A]]", "kind" : "final def"}, {"label" : "takeBetween", "tail" : "(min: Int, max: Int): ZSTM[Any, Nothing, Chunk[A]]", "member" : "zio.stm.TDequeue.takeBetween", "link" : "zio\/stm\/TDequeue.html#takeBetween(min:Int,max:Int):zio.stm.ZSTM[Any,Nothing,zio.Chunk[A]]", "kind" : "final def"}, {"label" : "seek", "tail" : "(f: (A) => Boolean): ZSTM[Any, Nothing, A]", "member" : "zio.stm.TDequeue.seek", "link" : "zio\/stm\/TDequeue.html#seek(f:A=>Boolean):zio.stm.ZSTM[Any,Nothing,A]", "kind" : "final def"}, {"label" : "poll", "tail" : "(): ZSTM[Any, Nothing, Option[A]]", "member" : "zio.stm.TDequeue.poll", "link" : "zio\/stm\/TDequeue.html#poll:zio.stm.ZSTM[Any,Nothing,Option[A]]", "kind" : "final def"}, {"label" : "isFull", "tail" : "(): USTM[Boolean]", "member" : "zio.stm.TDequeue.isFull", "link" : "zio\/stm\/TDequeue.html#isFull:zio.stm.USTM[Boolean]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): USTM[Boolean]", "member" : "zio.stm.TDequeue.isEmpty", "link" : "zio\/stm\/TDequeue.html#isEmpty:zio.stm.USTM[Boolean]", "kind" : "def"}, {"label" : "awaitShutdown", "tail" : "(): USTM[Unit]", "member" : "zio.stm.TDequeue.awaitShutdown", "link" : "zio\/stm\/TDequeue.html#awaitShutdown:zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/TDequeue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/TDequeue.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/TDequeue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/TDequeue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/TDequeue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/TDequeue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/TDequeue.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/TDequeue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/TDequeue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/TDequeue.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/TDequeue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/TDequeue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TDequeue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TDequeue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TDequeue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/TDequeue.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/TDequeue.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TDequeue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TDequeue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "takeUpTo", "tail" : "(max: Int): ZSTM[Any, Nothing, Chunk[A]]", "member" : "zio.stm.TDequeue.takeUpTo", "link" : "zio\/stm\/TDequeue.html#takeUpTo(max:Int):zio.stm.ZSTM[Any,Nothing,zio.Chunk[A]]", "kind" : "abstract def"}, {"label" : "takeAll", "tail" : "(): ZSTM[Any, Nothing, Chunk[A]]", "member" : "zio.stm.TDequeue.takeAll", "link" : "zio\/stm\/TDequeue.html#takeAll:zio.stm.ZSTM[Any,Nothing,zio.Chunk[A]]", "kind" : "abstract def"}, {"label" : "take", "tail" : "(): ZSTM[Any, Nothing, A]", "member" : "zio.stm.TDequeue.take", "link" : "zio\/stm\/TDequeue.html#take:zio.stm.ZSTM[Any,Nothing,A]", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): USTM[Int]", "member" : "zio.stm.TDequeue.size", "link" : "zio\/stm\/TDequeue.html#size:zio.stm.USTM[Int]", "kind" : "abstract def"}, {"label" : "shutdown", "tail" : "(): USTM[Unit]", "member" : "zio.stm.TDequeue.shutdown", "link" : "zio\/stm\/TDequeue.html#shutdown:zio.stm.USTM[Unit]", "kind" : "abstract def"}, {"label" : "peekOption", "tail" : "(): ZSTM[Any, Nothing, Option[A]]", "member" : "zio.stm.TDequeue.peekOption", "link" : "zio\/stm\/TDequeue.html#peekOption:zio.stm.ZSTM[Any,Nothing,Option[A]]", "kind" : "abstract def"}, {"label" : "peek", "tail" : "(): ZSTM[Any, Nothing, A]", "member" : "zio.stm.TDequeue.peek", "link" : "zio\/stm\/TDequeue.html#peek:zio.stm.ZSTM[Any,Nothing,A]", "kind" : "abstract def"}, {"label" : "isShutdown", "tail" : "(): USTM[Boolean]", "member" : "zio.stm.TDequeue.isShutdown", "link" : "zio\/stm\/TDequeue.html#isShutdown:zio.stm.USTM[Boolean]", "kind" : "abstract def"}, {"label" : "capacity", "tail" : "(): Int", "member" : "zio.stm.TDequeue.capacity", "link" : "zio\/stm\/TDequeue.html#capacity:Int", "kind" : "abstract def"}], "shortDescription" : "A transactional queue that can only be dequeued."}, {"name" : "zio.stm.TEnqueue", "trait" : "zio\/stm\/TEnqueue.html", "kind" : "trait", "members_trait" : [{"label" : "isFull", "tail" : "(): USTM[Boolean]", "member" : "zio.stm.TEnqueue.isFull", "link" : "zio\/stm\/TEnqueue.html#isFull:zio.stm.USTM[Boolean]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): USTM[Boolean]", "member" : "zio.stm.TEnqueue.isEmpty", "link" : "zio\/stm\/TEnqueue.html#isEmpty:zio.stm.USTM[Boolean]", "kind" : "def"}, {"label" : "awaitShutdown", "tail" : "(): USTM[Unit]", "member" : "zio.stm.TEnqueue.awaitShutdown", "link" : "zio\/stm\/TEnqueue.html#awaitShutdown:zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/TEnqueue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/TEnqueue.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/TEnqueue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/TEnqueue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/TEnqueue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/TEnqueue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/TEnqueue.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/TEnqueue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/TEnqueue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/TEnqueue.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/TEnqueue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/TEnqueue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TEnqueue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TEnqueue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TEnqueue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/TEnqueue.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/TEnqueue.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TEnqueue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TEnqueue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "size", "tail" : "(): USTM[Int]", "member" : "zio.stm.TEnqueue.size", "link" : "zio\/stm\/TEnqueue.html#size:zio.stm.USTM[Int]", "kind" : "abstract def"}, {"label" : "shutdown", "tail" : "(): USTM[Unit]", "member" : "zio.stm.TEnqueue.shutdown", "link" : "zio\/stm\/TEnqueue.html#shutdown:zio.stm.USTM[Unit]", "kind" : "abstract def"}, {"label" : "offerAll", "tail" : "(as: Iterable[A]): ZSTM[Any, Nothing, Boolean]", "member" : "zio.stm.TEnqueue.offerAll", "link" : "zio\/stm\/TEnqueue.html#offerAll(as:Iterable[A]):zio.stm.ZSTM[Any,Nothing,Boolean]", "kind" : "abstract def"}, {"label" : "offer", "tail" : "(a: A): ZSTM[Any, Nothing, Boolean]", "member" : "zio.stm.TEnqueue.offer", "link" : "zio\/stm\/TEnqueue.html#offer(a:A):zio.stm.ZSTM[Any,Nothing,Boolean]", "kind" : "abstract def"}, {"label" : "isShutdown", "tail" : "(): USTM[Boolean]", "member" : "zio.stm.TEnqueue.isShutdown", "link" : "zio\/stm\/TEnqueue.html#isShutdown:zio.stm.USTM[Boolean]", "kind" : "abstract def"}, {"label" : "capacity", "tail" : "(): Int", "member" : "zio.stm.TEnqueue.capacity", "link" : "zio\/stm\/TEnqueue.html#capacity:Int", "kind" : "abstract def"}], "shortDescription" : "A transactional queue that can only be enqueued."}, {"name" : "zio.stm.THub", "shortDescription" : "A THub is a transactional message hub.", "object" : "zio\/stm\/THub$.html", "members_class" : [{"label" : "subscribeScoped", "tail" : "(trace: Trace): ZIO[Scope, Nothing, TDequeue[A]]", "member" : "zio.stm.THub.subscribeScoped", "link" : "zio\/stm\/THub.html#subscribeScoped(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,zio.stm.TDequeue[A]]", "kind" : "final def"}, {"label" : "offerAll", "tail" : "(as: Iterable[A]): USTM[Boolean]", "member" : "zio.stm.THub.offerAll", "link" : "zio\/stm\/THub.html#offerAll(as:Iterable[A]):zio.stm.USTM[Boolean]", "kind" : "final def"}, {"label" : "offer", "tail" : "(a: A): USTM[Boolean]", "member" : "zio.stm.THub.offer", "link" : "zio\/stm\/THub.html#offer(a:A):zio.stm.USTM[Boolean]", "kind" : "final def"}, {"label" : "isFull", "tail" : "(): USTM[Boolean]", "member" : "zio.stm.THub.isFull", "link" : "zio\/stm\/THub.html#isFull:zio.stm.USTM[Boolean]", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): USTM[Boolean]", "member" : "zio.stm.THub.isEmpty", "link" : "zio\/stm\/THub.html#isEmpty:zio.stm.USTM[Boolean]", "kind" : "final def"}, {"label" : "awaitShutdown", "tail" : "(): USTM[Unit]", "member" : "zio.stm.THub.awaitShutdown", "link" : "zio\/stm\/THub.html#awaitShutdown:zio.stm.USTM[Unit]", "kind" : "final def"}, {"member" : "zio.stm.THub#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/THub.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/THub.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/THub.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/THub.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/THub.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/THub.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/THub.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/THub.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/THub.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/THub.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/THub.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/THub.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/THub.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/THub.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/THub.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/THub.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/THub.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/THub.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/THub.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "subscribe", "tail" : "(): USTM[TDequeue[A]]", "member" : "zio.stm.THub.subscribe", "link" : "zio\/stm\/THub.html#subscribe:zio.stm.USTM[zio.stm.TDequeue[A]]", "kind" : "abstract def"}, {"label" : "publishAll", "tail" : "(as: Iterable[A]): USTM[Boolean]", "member" : "zio.stm.THub.publishAll", "link" : "zio\/stm\/THub.html#publishAll(as:Iterable[A]):zio.stm.USTM[Boolean]", "kind" : "abstract def"}, {"label" : "publish", "tail" : "(a: A): USTM[Boolean]", "member" : "zio.stm.THub.publish", "link" : "zio\/stm\/THub.html#publish(a:A):zio.stm.USTM[Boolean]", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): USTM[Int]", "member" : "zio.stm.TEnqueue.size", "link" : "zio\/stm\/THub.html#size:zio.stm.USTM[Int]", "kind" : "abstract def"}, {"label" : "shutdown", "tail" : "(): USTM[Unit]", "member" : "zio.stm.TEnqueue.shutdown", "link" : "zio\/stm\/THub.html#shutdown:zio.stm.USTM[Unit]", "kind" : "abstract def"}, {"label" : "isShutdown", "tail" : "(): USTM[Boolean]", "member" : "zio.stm.TEnqueue.isShutdown", "link" : "zio\/stm\/THub.html#isShutdown:zio.stm.USTM[Boolean]", "kind" : "abstract def"}, {"label" : "capacity", "tail" : "(): Int", "member" : "zio.stm.TEnqueue.capacity", "link" : "zio\/stm\/THub.html#capacity:Int", "kind" : "abstract def"}], "members_object" : [{"label" : "unbounded", "tail" : "(): USTM[THub[A]]", "member" : "zio.stm.THub.unbounded", "link" : "zio\/stm\/THub$.html#unbounded[A]:zio.stm.USTM[zio.stm.THub[A]]", "kind" : "def"}, {"label" : "sliding", "tail" : "(requestedCapacity: => Int): USTM[THub[A]]", "member" : "zio.stm.THub.sliding", "link" : "zio\/stm\/THub$.html#sliding[A](requestedCapacity:=>Int):zio.stm.USTM[zio.stm.THub[A]]", "kind" : "def"}, {"label" : "dropping", "tail" : "(requestedCapacity: => Int): USTM[THub[A]]", "member" : "zio.stm.THub.dropping", "link" : "zio\/stm\/THub$.html#dropping[A](requestedCapacity:=>Int):zio.stm.USTM[zio.stm.THub[A]]", "kind" : "def"}, {"label" : "bounded", "tail" : "(requestedCapacity: => Int): USTM[THub[A]]", "member" : "zio.stm.THub.bounded", "link" : "zio\/stm\/THub$.html#bounded[A](requestedCapacity:=>Int):zio.stm.USTM[zio.stm.THub[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/THub$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/THub$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/THub$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/THub$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/THub$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/THub$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/THub$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/THub$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/THub$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/THub$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/THub$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/THub$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/THub$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/THub$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/THub$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/THub$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/THub$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/THub$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/THub$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/stm\/THub.html", "kind" : "class"}, {"name" : "zio.stm.TMap", "shortDescription" : "Transactional map implemented on top of TRef and TArray.", "object" : "zio\/stm\/TMap$.html", "members_class" : [{"label" : "values", "tail" : "(): USTM[List[V]]", "member" : "zio.stm.TMap.values", "link" : "zio\/stm\/TMap.html#values:zio.stm.USTM[List[V]]", "kind" : "def"}, {"label" : "updateWithSTM", "tail" : "(k: K)(f: (Option[V]) => ZSTM[R, E, Option[V]]): ZSTM[R, E, Option[V]]", "member" : "zio.stm.TMap.updateWithSTM", "link" : "zio\/stm\/TMap.html#updateWithSTM[R,E](k:K)(f:Option[V]=>zio.stm.ZSTM[R,E,Option[V]]):zio.stm.ZSTM[R,E,Option[V]]", "kind" : "def"}, {"label" : "updateWith", "tail" : "(k: K)(f: (Option[V]) => Option[V]): USTM[Option[V]]", "member" : "zio.stm.TMap.updateWith", "link" : "zio\/stm\/TMap.html#updateWith(k:K)(f:Option[V]=>Option[V]):zio.stm.USTM[Option[V]]", "kind" : "def"}, {"label" : "transformValuesSTM", "tail" : "(f: (V) => ZSTM[R, E, V]): ZSTM[R, E, Unit]", "member" : "zio.stm.TMap.transformValuesSTM", "link" : "zio\/stm\/TMap.html#transformValuesSTM[R,E](f:V=>zio.stm.ZSTM[R,E,V]):zio.stm.ZSTM[R,E,Unit]", "kind" : "def"}, {"label" : "transformValues", "tail" : "(f: (V) => V): USTM[Unit]", "member" : "zio.stm.TMap.transformValues", "link" : "zio\/stm\/TMap.html#transformValues(f:V=>V):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "transformSTM", "tail" : "(f: (K, V) => ZSTM[R, E, (K, V)]): ZSTM[R, E, Unit]", "member" : "zio.stm.TMap.transformSTM", "link" : "zio\/stm\/TMap.html#transformSTM[R,E](f:(K,V)=>zio.stm.ZSTM[R,E,(K,V)]):zio.stm.ZSTM[R,E,Unit]", "kind" : "def"}, {"label" : "transform", "tail" : "(f: (K, V) => (K, V)): USTM[Unit]", "member" : "zio.stm.TMap.transform", "link" : "zio\/stm\/TMap.html#transform(f:(K,V)=>(K,V)):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "toMap", "tail" : "(): USTM[Map[K, V]]", "member" : "zio.stm.TMap.toMap", "link" : "zio\/stm\/TMap.html#toMap:zio.stm.USTM[Map[K,V]]", "kind" : "def"}, {"label" : "toChunk", "tail" : "(): USTM[Chunk[(K, V)]]", "member" : "zio.stm.TMap.toChunk", "link" : "zio\/stm\/TMap.html#toChunk:zio.stm.USTM[zio.Chunk[(K,V)]]", "kind" : "def"}, {"label" : "toList", "tail" : "(): USTM[List[(K, V)]]", "member" : "zio.stm.TMap.toList", "link" : "zio\/stm\/TMap.html#toList:zio.stm.USTM[List[(K,V)]]", "kind" : "def"}, {"label" : "takeSomeSTM", "tail" : "(pf: (K, V) => ZSTM[R, Option[E], A]): ZSTM[R, E, NonEmptyChunk[A]]", "member" : "zio.stm.TMap.takeSomeSTM", "link" : "zio\/stm\/TMap.html#takeSomeSTM[R,E,A](pf:(K,V)=>zio.stm.ZSTM[R,Option[E],A]):zio.stm.ZSTM[R,E,zio.NonEmptyChunk[A]]", "kind" : "def"}, {"label" : "takeSome", "tail" : "(pf: PartialFunction[(K, V), A]): USTM[NonEmptyChunk[A]]", "member" : "zio.stm.TMap.takeSome", "link" : "zio\/stm\/TMap.html#takeSome[A](pf:PartialFunction[(K,V),A]):zio.stm.USTM[zio.NonEmptyChunk[A]]", "kind" : "def"}, {"label" : "takeFirstSTM", "tail" : "(pf: (K, V) => ZSTM[R, Option[E], A]): ZSTM[R, E, A]", "member" : "zio.stm.TMap.takeFirstSTM", "link" : "zio\/stm\/TMap.html#takeFirstSTM[R,E,A](pf:(K,V)=>zio.stm.ZSTM[R,Option[E],A]):zio.stm.ZSTM[R,E,A]", "kind" : "def"}, {"label" : "takeFirst", "tail" : "(pf: PartialFunction[(K, V), A]): USTM[A]", "member" : "zio.stm.TMap.takeFirst", "link" : "zio\/stm\/TMap.html#takeFirst[A](pf:PartialFunction[(K,V),A]):zio.stm.USTM[A]", "kind" : "def"}, {"label" : "size", "tail" : ": USTM[Int]", "member" : "zio.stm.TMap.size", "link" : "zio\/stm\/TMap.html#size:zio.stm.USTM[Int]", "kind" : "val"}, {"label" : "retainIfDiscard", "tail" : "(p: (K, V) => Boolean): USTM[Unit]", "member" : "zio.stm.TMap.retainIfDiscard", "link" : "zio\/stm\/TMap.html#retainIfDiscard(p:(K,V)=>Boolean):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "retainIf", "tail" : "(p: (K, V) => Boolean): USTM[Chunk[(K, V)]]", "member" : "zio.stm.TMap.retainIf", "link" : "zio\/stm\/TMap.html#retainIf(p:(K,V)=>Boolean):zio.stm.USTM[zio.Chunk[(K,V)]]", "kind" : "def"}, {"label" : "removeIfDiscard", "tail" : "(p: (K, V) => Boolean): USTM[Unit]", "member" : "zio.stm.TMap.removeIfDiscard", "link" : "zio\/stm\/TMap.html#removeIfDiscard(p:(K,V)=>Boolean):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "removeIf", "tail" : "(p: (K, V) => Boolean): USTM[Chunk[(K, V)]]", "member" : "zio.stm.TMap.removeIf", "link" : "zio\/stm\/TMap.html#removeIf(p:(K,V)=>Boolean):zio.stm.USTM[zio.Chunk[(K,V)]]", "kind" : "def"}, {"label" : "putIfAbsent", "tail" : "(k: K, v: V): USTM[Unit]", "member" : "zio.stm.TMap.putIfAbsent", "link" : "zio\/stm\/TMap.html#putIfAbsent(k:K,v:V):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "put", "tail" : "(k: K, v: V): USTM[Unit]", "member" : "zio.stm.TMap.put", "link" : "zio\/stm\/TMap.html#put(k:K,v:V):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "mergeSTM", "tail" : "(k: K, v: V)(f: (V, V) => ZSTM[R, E, V]): ZSTM[R, E, V]", "member" : "zio.stm.TMap.mergeSTM", "link" : "zio\/stm\/TMap.html#mergeSTM[R,E](k:K,v:V)(f:(V,V)=>zio.stm.ZSTM[R,E,V]):zio.stm.ZSTM[R,E,V]", "kind" : "def"}, {"label" : "merge", "tail" : "(k: K, v: V)(f: (V, V) => V): USTM[V]", "member" : "zio.stm.TMap.merge", "link" : "zio\/stm\/TMap.html#merge(k:K,v:V)(f:(V,V)=>V):zio.stm.USTM[V]", "kind" : "def"}, {"label" : "keys", "tail" : "(): USTM[List[K]]", "member" : "zio.stm.TMap.keys", "link" : "zio\/stm\/TMap.html#keys:zio.stm.USTM[List[K]]", "kind" : "def"}, {"label" : "getOrElseSTM", "tail" : "(k: K, default: => ZSTM[R, E, V]): ZSTM[R, E, V]", "member" : "zio.stm.TMap.getOrElseSTM", "link" : "zio\/stm\/TMap.html#getOrElseSTM[R,E](k:K,default:=>zio.stm.ZSTM[R,E,V]):zio.stm.ZSTM[R,E,V]", "kind" : "def"}, {"label" : "getOrElse", "tail" : "(k: K, default: => V): USTM[V]", "member" : "zio.stm.TMap.getOrElse", "link" : "zio\/stm\/TMap.html#getOrElse(k:K,default:=>V):zio.stm.USTM[V]", "kind" : "def"}, {"label" : "get", "tail" : "(k: K): USTM[Option[V]]", "member" : "zio.stm.TMap.get", "link" : "zio\/stm\/TMap.html#get(k:K):zio.stm.USTM[Option[V]]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (K, V) => ZSTM[R, E, Unit]): ZSTM[R, E, Unit]", "member" : "zio.stm.TMap.foreach", "link" : "zio\/stm\/TMap.html#foreach[R,E](f:(K,V)=>zio.stm.ZSTM[R,E,Unit]):zio.stm.ZSTM[R,E,Unit]", "kind" : "def"}, {"label" : "foldSTM", "tail" : "(zero: A)(op: (A, (K, V)) => ZSTM[R, E, A]): ZSTM[R, E, A]", "member" : "zio.stm.TMap.foldSTM", "link" : "zio\/stm\/TMap.html#foldSTM[R,E,A](zero:A)(op:(A,(K,V))=>zio.stm.ZSTM[R,E,A]):zio.stm.ZSTM[R,E,A]", "kind" : "def"}, {"label" : "fold", "tail" : "(zero: A)(op: (A, (K, V)) => A): USTM[A]", "member" : "zio.stm.TMap.fold", "link" : "zio\/stm\/TMap.html#fold[A](zero:A)(op:(A,(K,V))=>A):zio.stm.USTM[A]", "kind" : "def"}, {"label" : "findAllSTM", "tail" : "(pf: (K, V) => ZSTM[R, Option[E], A]): ZSTM[R, E, Chunk[A]]", "member" : "zio.stm.TMap.findAllSTM", "link" : "zio\/stm\/TMap.html#findAllSTM[R,E,A](pf:(K,V)=>zio.stm.ZSTM[R,Option[E],A]):zio.stm.ZSTM[R,E,zio.Chunk[A]]", "kind" : "def"}, {"label" : "findAll", "tail" : "(pf: PartialFunction[(K, V), A]): USTM[Chunk[A]]", "member" : "zio.stm.TMap.findAll", "link" : "zio\/stm\/TMap.html#findAll[A](pf:PartialFunction[(K,V),A]):zio.stm.USTM[zio.Chunk[A]]", "kind" : "def"}, {"label" : "findSTM", "tail" : "(f: (K, V) => ZSTM[R, Option[E], A]): ZSTM[R, E, Option[A]]", "member" : "zio.stm.TMap.findSTM", "link" : "zio\/stm\/TMap.html#findSTM[R,E,A](f:(K,V)=>zio.stm.ZSTM[R,Option[E],A]):zio.stm.ZSTM[R,E,Option[A]]", "kind" : "def"}, {"label" : "find", "tail" : "(pf: PartialFunction[(K, V), A]): USTM[Option[A]]", "member" : "zio.stm.TMap.find", "link" : "zio\/stm\/TMap.html#find[A](pf:PartialFunction[(K,V),A]):zio.stm.USTM[Option[A]]", "kind" : "def"}, {"label" : "deleteAll", "tail" : "(ks: Iterable[K]): USTM[Unit]", "member" : "zio.stm.TMap.deleteAll", "link" : "zio\/stm\/TMap.html#deleteAll(ks:Iterable[K]):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "delete", "tail" : "(k: K): USTM[Unit]", "member" : "zio.stm.TMap.delete", "link" : "zio\/stm\/TMap.html#delete(k:K):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): USTM[Boolean]", "member" : "zio.stm.TMap.isEmpty", "link" : "zio\/stm\/TMap.html#isEmpty:zio.stm.USTM[Boolean]", "kind" : "def"}, {"label" : "contains", "tail" : "(k: K): USTM[Boolean]", "member" : "zio.stm.TMap.contains", "link" : "zio\/stm\/TMap.html#contains(k:K):zio.stm.USTM[Boolean]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/TMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/TMap.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/TMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/TMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/TMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/TMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/TMap.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/TMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/TMap.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/TMap.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/TMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/TMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/TMap.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/TMap.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unsafe", "tail" : "", "member" : "zio.stm.TMap.unsafe", "link" : "zio\/stm\/TMap$.html#unsafe", "kind" : "object"}, {"label" : "make", "tail" : "(data: (K, V)*): USTM[TMap[K, V]]", "member" : "zio.stm.TMap.make", "link" : "zio\/stm\/TMap$.html#make[K,V](data:(K,V)*):zio.stm.USTM[zio.stm.TMap[K,V]]", "kind" : "def"}, {"label" : "fromIterable", "tail" : "(data: => Iterable[(K, V)]): USTM[TMap[K, V]]", "member" : "zio.stm.TMap.fromIterable", "link" : "zio\/stm\/TMap$.html#fromIterable[K,V](data:=>Iterable[(K,V)]):zio.stm.USTM[zio.stm.TMap[K,V]]", "kind" : "def"}, {"label" : "empty", "tail" : "(): USTM[TMap[K, V]]", "member" : "zio.stm.TMap.empty", "link" : "zio\/stm\/TMap$.html#empty[K,V]:zio.stm.USTM[zio.stm.TMap[K,V]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/TMap$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/TMap$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/TMap$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/TMap$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/TMap$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/TMap$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/TMap$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/TMap$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/TMap$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/TMap$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/TMap$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/TMap$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TMap$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TMap$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TMap$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/TMap$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/TMap$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TMap$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TMap$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/stm\/TMap.html", "kind" : "class"}, {"name" : "zio.stm.TPriorityQueue", "shortDescription" : "A TPriorityQueue contains values of type A that an Ordering is definedon.", "object" : "zio\/stm\/TPriorityQueue$.html", "members_class" : [{"label" : "toVector", "tail" : "(): USTM[Vector[A]]", "member" : "zio.stm.TPriorityQueue.toVector", "link" : "zio\/stm\/TPriorityQueue.html#toVector:zio.stm.USTM[Vector[A]]", "kind" : "def"}, {"label" : "toList", "tail" : "(): USTM[List[A]]", "member" : "zio.stm.TPriorityQueue.toList", "link" : "zio\/stm\/TPriorityQueue.html#toList:zio.stm.USTM[List[A]]", "kind" : "def"}, {"label" : "toChunk", "tail" : "(): USTM[Chunk[A]]", "member" : "zio.stm.TPriorityQueue.toChunk", "link" : "zio\/stm\/TPriorityQueue.html#toChunk:zio.stm.USTM[zio.Chunk[A]]", "kind" : "def"}, {"label" : "takeOption", "tail" : "(): USTM[Option[A]]", "member" : "zio.stm.TPriorityQueue.takeOption", "link" : "zio\/stm\/TPriorityQueue.html#takeOption:zio.stm.USTM[Option[A]]", "kind" : "def"}, {"label" : "takeUpTo", "tail" : "(n: Int): USTM[Chunk[A]]", "member" : "zio.stm.TPriorityQueue.takeUpTo", "link" : "zio\/stm\/TPriorityQueue.html#takeUpTo(n:Int):zio.stm.USTM[zio.Chunk[A]]", "kind" : "def"}, {"label" : "takeAll", "tail" : "(): USTM[Chunk[A]]", "member" : "zio.stm.TPriorityQueue.takeAll", "link" : "zio\/stm\/TPriorityQueue.html#takeAll:zio.stm.USTM[zio.Chunk[A]]", "kind" : "def"}, {"label" : "take", "tail" : "(): USTM[A]", "member" : "zio.stm.TPriorityQueue.take", "link" : "zio\/stm\/TPriorityQueue.html#take:zio.stm.USTM[A]", "kind" : "def"}, {"label" : "size", "tail" : "(): USTM[Int]", "member" : "zio.stm.TPriorityQueue.size", "link" : "zio\/stm\/TPriorityQueue.html#size:zio.stm.USTM[Int]", "kind" : "def"}, {"label" : "retainIf", "tail" : "(f: (A) => Boolean): USTM[Unit]", "member" : "zio.stm.TPriorityQueue.retainIf", "link" : "zio\/stm\/TPriorityQueue.html#retainIf(f:A=>Boolean):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "removeIf", "tail" : "(f: (A) => Boolean): USTM[Unit]", "member" : "zio.stm.TPriorityQueue.removeIf", "link" : "zio\/stm\/TPriorityQueue.html#removeIf(f:A=>Boolean):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "peekOption", "tail" : "(): USTM[Option[A]]", "member" : "zio.stm.TPriorityQueue.peekOption", "link" : "zio\/stm\/TPriorityQueue.html#peekOption:zio.stm.USTM[Option[A]]", "kind" : "def"}, {"label" : "peek", "tail" : "(): USTM[A]", "member" : "zio.stm.TPriorityQueue.peek", "link" : "zio\/stm\/TPriorityQueue.html#peek:zio.stm.USTM[A]", "kind" : "def"}, {"label" : "offerAll", "tail" : "(values: Iterable[A]): USTM[Unit]", "member" : "zio.stm.TPriorityQueue.offerAll", "link" : "zio\/stm\/TPriorityQueue.html#offerAll(values:Iterable[A]):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "offer", "tail" : "(a: A): USTM[Unit]", "member" : "zio.stm.TPriorityQueue.offer", "link" : "zio\/stm\/TPriorityQueue.html#offer(a:A):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): USTM[Boolean]", "member" : "zio.stm.TPriorityQueue.nonEmpty", "link" : "zio\/stm\/TPriorityQueue.html#nonEmpty:zio.stm.USTM[Boolean]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): USTM[Boolean]", "member" : "zio.stm.TPriorityQueue.isEmpty", "link" : "zio\/stm\/TPriorityQueue.html#isEmpty:zio.stm.USTM[Boolean]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/stm\/TPriorityQueue.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/stm\/TPriorityQueue.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TPriorityQueue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TPriorityQueue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/stm\/TPriorityQueue.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/stm\/TPriorityQueue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/stm\/TPriorityQueue.html#==(x$1:Any):Boolean", "kind" : "final def"}], "members_object" : [{"label" : "make", "tail" : "(data: A*)(ord: Ordering[A]): USTM[TPriorityQueue[A]]", "member" : "zio.stm.TPriorityQueue.make", "link" : "zio\/stm\/TPriorityQueue$.html#make[A](data:A*)(implicitord:Ordering[A]):zio.stm.USTM[zio.stm.TPriorityQueue[A]]", "kind" : "def"}, {"label" : "fromIterable", "tail" : "(data: => Iterable[A])(ord: Ordering[A]): USTM[TPriorityQueue[A]]", "member" : "zio.stm.TPriorityQueue.fromIterable", "link" : "zio\/stm\/TPriorityQueue$.html#fromIterable[A](data:=>Iterable[A])(implicitord:Ordering[A]):zio.stm.USTM[zio.stm.TPriorityQueue[A]]", "kind" : "def"}, {"label" : "empty", "tail" : "(ord: Ordering[A]): USTM[TPriorityQueue[A]]", "member" : "zio.stm.TPriorityQueue.empty", "link" : "zio\/stm\/TPriorityQueue$.html#empty[A](implicitord:Ordering[A]):zio.stm.USTM[zio.stm.TPriorityQueue[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/TPriorityQueue$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/TPriorityQueue$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/TPriorityQueue$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/TPriorityQueue$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/TPriorityQueue$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/TPriorityQueue$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/TPriorityQueue$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/TPriorityQueue$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/TPriorityQueue$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/TPriorityQueue$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/TPriorityQueue$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/TPriorityQueue$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TPriorityQueue$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TPriorityQueue$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TPriorityQueue$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/TPriorityQueue$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/TPriorityQueue$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TPriorityQueue$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TPriorityQueue$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/stm\/TPriorityQueue.html", "kind" : "class"}, {"name" : "zio.stm.TPromise", "shortDescription" : "", "object" : "zio\/stm\/TPromise$.html", "members_class" : [{"label" : "succeed", "tail" : "(a: A): USTM[Boolean]", "member" : "zio.stm.TPromise.succeed", "link" : "zio\/stm\/TPromise.html#succeed(a:A):zio.stm.USTM[Boolean]", "kind" : "def"}, {"label" : "poll", "tail" : "(): USTM[Option[Either[E, A]]]", "member" : "zio.stm.TPromise.poll", "link" : "zio\/stm\/TPromise.html#poll:zio.stm.USTM[Option[Either[E,A]]]", "kind" : "def"}, {"label" : "fail", "tail" : "(e: E): USTM[Boolean]", "member" : "zio.stm.TPromise.fail", "link" : "zio\/stm\/TPromise.html#fail(e:E):zio.stm.USTM[Boolean]", "kind" : "def"}, {"label" : "done", "tail" : "(v: Either[E, A]): USTM[Boolean]", "member" : "zio.stm.TPromise.done", "link" : "zio\/stm\/TPromise.html#done(v:Either[E,A]):zio.stm.USTM[Boolean]", "kind" : "def"}, {"label" : "await", "tail" : "(): STM[E, A]", "member" : "zio.stm.TPromise.await", "link" : "zio\/stm\/TPromise.html#await:zio.stm.STM[E,A]", "kind" : "def"}, {"label" : "ref", "tail" : ": TRef[Option[Either[E, A]]]", "member" : "zio.stm.TPromise.ref", "link" : "zio\/stm\/TPromise.html#ref:zio.stm.TRef[Option[Either[E,A]]]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/stm\/TPromise.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/stm\/TPromise.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TPromise.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TPromise.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/stm\/TPromise.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/stm\/TPromise.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/stm\/TPromise.html#==(x$1:Any):Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unsafe", "tail" : "", "member" : "zio.stm.TPromise.unsafe", "link" : "zio\/stm\/TPromise$.html#unsafe", "kind" : "object"}, {"label" : "make", "tail" : "(): USTM[TPromise[E, A]]", "member" : "zio.stm.TPromise.make", "link" : "zio\/stm\/TPromise$.html#make[E,A]:zio.stm.USTM[zio.stm.TPromise[E,A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/TPromise$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/TPromise$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/TPromise$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/TPromise$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/TPromise$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/TPromise$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/TPromise$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/TPromise$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/TPromise$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/TPromise$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/TPromise$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/TPromise$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TPromise$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TPromise$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TPromise$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/TPromise$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/TPromise$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TPromise$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TPromise$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/stm\/TPromise.html", "kind" : "class"}, {"name" : "zio.stm.TQueue", "object" : "zio\/stm\/TQueue$.html", "members_object" : [{"label" : "unbounded", "tail" : "(): USTM[TQueue[A]]", "member" : "zio.stm.TQueue.unbounded", "link" : "zio\/stm\/TQueue$.html#unbounded[A]:zio.stm.USTM[zio.stm.TQueue[A]]", "kind" : "def"}, {"label" : "sliding", "tail" : "(requestedCapacity: => Int): USTM[TQueue[A]]", "member" : "zio.stm.TQueue.sliding", "link" : "zio\/stm\/TQueue$.html#sliding[A](requestedCapacity:=>Int):zio.stm.USTM[zio.stm.TQueue[A]]", "kind" : "def"}, {"label" : "dropping", "tail" : "(requestedCapacity: => Int): USTM[TQueue[A]]", "member" : "zio.stm.TQueue.dropping", "link" : "zio\/stm\/TQueue$.html#dropping[A](requestedCapacity:=>Int):zio.stm.USTM[zio.stm.TQueue[A]]", "kind" : "def"}, {"label" : "bounded", "tail" : "(requestedCapacity: => Int): USTM[TQueue[A]]", "member" : "zio.stm.TQueue.bounded", "link" : "zio\/stm\/TQueue$.html#bounded[A](requestedCapacity:=>Int):zio.stm.USTM[zio.stm.TQueue[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/TQueue$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/TQueue$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/TQueue$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/TQueue$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/TQueue$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/TQueue$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/TQueue$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/TQueue$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/TQueue$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/TQueue$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/TQueue$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/TQueue$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TQueue$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TQueue$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TQueue$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/TQueue$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/TQueue$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TQueue$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TQueue$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/stm\/TQueue.html", "kind" : "trait", "members_trait" : [{"label" : "peekAll", "tail" : "(): ZSTM[Any, Nothing, Chunk[A]]", "member" : "zio.stm.TQueue.peekAll", "link" : "zio\/stm\/TQueue.html#peekAll:zio.stm.ZSTM[Any,Nothing,zio.Chunk[A]]", "kind" : "def"}, {"label" : "isFull", "tail" : "(): USTM[Boolean]", "member" : "zio.stm.TQueue.isFull", "link" : "zio\/stm\/TQueue.html#isFull:zio.stm.USTM[Boolean]", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): USTM[Boolean]", "member" : "zio.stm.TQueue.isEmpty", "link" : "zio\/stm\/TQueue.html#isEmpty:zio.stm.USTM[Boolean]", "kind" : "final def"}, {"label" : "awaitShutdown", "tail" : "(): USTM[Unit]", "member" : "zio.stm.TQueue.awaitShutdown", "link" : "zio\/stm\/TQueue.html#awaitShutdown:zio.stm.USTM[Unit]", "kind" : "final def"}, {"label" : "takeN", "tail" : "(n: Int): ZSTM[Any, Nothing, Chunk[A]]", "member" : "zio.stm.TDequeue.takeN", "link" : "zio\/stm\/TQueue.html#takeN(n:Int):zio.stm.ZSTM[Any,Nothing,zio.Chunk[A]]", "kind" : "final def"}, {"label" : "takeBetween", "tail" : "(min: Int, max: Int): ZSTM[Any, Nothing, Chunk[A]]", "member" : "zio.stm.TDequeue.takeBetween", "link" : "zio\/stm\/TQueue.html#takeBetween(min:Int,max:Int):zio.stm.ZSTM[Any,Nothing,zio.Chunk[A]]", "kind" : "final def"}, {"label" : "seek", "tail" : "(f: (A) => Boolean): ZSTM[Any, Nothing, A]", "member" : "zio.stm.TDequeue.seek", "link" : "zio\/stm\/TQueue.html#seek(f:A=>Boolean):zio.stm.ZSTM[Any,Nothing,A]", "kind" : "final def"}, {"label" : "poll", "tail" : "(): ZSTM[Any, Nothing, Option[A]]", "member" : "zio.stm.TDequeue.poll", "link" : "zio\/stm\/TQueue.html#poll:zio.stm.ZSTM[Any,Nothing,Option[A]]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/TQueue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/TQueue.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/TQueue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/TQueue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/TQueue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/TQueue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/TQueue.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/TQueue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/TQueue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/TQueue.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/TQueue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/TQueue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TQueue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TQueue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TQueue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/TQueue.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/TQueue.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TQueue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TQueue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "size", "tail" : "(): USTM[Int]", "member" : "zio.stm.TEnqueue.size", "link" : "zio\/stm\/TQueue.html#size:zio.stm.USTM[Int]", "kind" : "abstract def"}, {"label" : "shutdown", "tail" : "(): USTM[Unit]", "member" : "zio.stm.TEnqueue.shutdown", "link" : "zio\/stm\/TQueue.html#shutdown:zio.stm.USTM[Unit]", "kind" : "abstract def"}, {"label" : "offerAll", "tail" : "(as: Iterable[A]): ZSTM[Any, Nothing, Boolean]", "member" : "zio.stm.TEnqueue.offerAll", "link" : "zio\/stm\/TQueue.html#offerAll(as:Iterable[A]):zio.stm.ZSTM[Any,Nothing,Boolean]", "kind" : "abstract def"}, {"label" : "offer", "tail" : "(a: A): ZSTM[Any, Nothing, Boolean]", "member" : "zio.stm.TEnqueue.offer", "link" : "zio\/stm\/TQueue.html#offer(a:A):zio.stm.ZSTM[Any,Nothing,Boolean]", "kind" : "abstract def"}, {"label" : "isShutdown", "tail" : "(): USTM[Boolean]", "member" : "zio.stm.TEnqueue.isShutdown", "link" : "zio\/stm\/TQueue.html#isShutdown:zio.stm.USTM[Boolean]", "kind" : "abstract def"}, {"label" : "capacity", "tail" : "(): Int", "member" : "zio.stm.TEnqueue.capacity", "link" : "zio\/stm\/TQueue.html#capacity:Int", "kind" : "abstract def"}, {"label" : "takeUpTo", "tail" : "(max: Int): ZSTM[Any, Nothing, Chunk[A]]", "member" : "zio.stm.TDequeue.takeUpTo", "link" : "zio\/stm\/TQueue.html#takeUpTo(max:Int):zio.stm.ZSTM[Any,Nothing,zio.Chunk[A]]", "kind" : "abstract def"}, {"label" : "takeAll", "tail" : "(): ZSTM[Any, Nothing, Chunk[A]]", "member" : "zio.stm.TDequeue.takeAll", "link" : "zio\/stm\/TQueue.html#takeAll:zio.stm.ZSTM[Any,Nothing,zio.Chunk[A]]", "kind" : "abstract def"}, {"label" : "take", "tail" : "(): ZSTM[Any, Nothing, A]", "member" : "zio.stm.TDequeue.take", "link" : "zio\/stm\/TQueue.html#take:zio.stm.ZSTM[Any,Nothing,A]", "kind" : "abstract def"}, {"label" : "peekOption", "tail" : "(): ZSTM[Any, Nothing, Option[A]]", "member" : "zio.stm.TDequeue.peekOption", "link" : "zio\/stm\/TQueue.html#peekOption:zio.stm.ZSTM[Any,Nothing,Option[A]]", "kind" : "abstract def"}, {"label" : "peek", "tail" : "(): ZSTM[Any, Nothing, A]", "member" : "zio.stm.TDequeue.peek", "link" : "zio\/stm\/TQueue.html#peek:zio.stm.ZSTM[Any,Nothing,A]", "kind" : "abstract def"}], "shortDescription" : "A TQueue is a transactional queue."}, {"name" : "zio.stm.TRandom", "object" : "zio\/stm\/TRandom$.html", "members_object" : [{"label" : "shuffle", "tail" : "(list: => List[A]): URSTM[TRandom, List[A]]", "member" : "zio.stm.TRandom.shuffle", "link" : "zio\/stm\/TRandom$.html#shuffle[A](list:=>List[A]):zio.stm.URSTM[zio.stm.TRandom,List[A]]", "kind" : "def"}, {"label" : "setSeed", "tail" : "(seed: Long): URSTM[TRandom, Unit]", "member" : "zio.stm.TRandom.setSeed", "link" : "zio\/stm\/TRandom$.html#setSeed(seed:Long):zio.stm.URSTM[zio.stm.TRandom,Unit]", "kind" : "def"}, {"label" : "nextString", "tail" : "(length: => Int): URSTM[TRandom, String]", "member" : "zio.stm.TRandom.nextString", "link" : "zio\/stm\/TRandom$.html#nextString(length:=>Int):zio.stm.URSTM[zio.stm.TRandom,String]", "kind" : "def"}, {"label" : "nextPrintableChar", "tail" : ": URSTM[TRandom, Char]", "member" : "zio.stm.TRandom.nextPrintableChar", "link" : "zio\/stm\/TRandom$.html#nextPrintableChar:zio.stm.URSTM[zio.stm.TRandom,Char]", "kind" : "val"}, {"label" : "nextLongBounded", "tail" : "(n: => Long): URSTM[TRandom, Long]", "member" : "zio.stm.TRandom.nextLongBounded", "link" : "zio\/stm\/TRandom$.html#nextLongBounded(n:=>Long):zio.stm.URSTM[zio.stm.TRandom,Long]", "kind" : "def"}, {"label" : "nextLongBetween", "tail" : "(minInclusive: Long, maxExclusive: Long): URSTM[TRandom, Long]", "member" : "zio.stm.TRandom.nextLongBetween", "link" : "zio\/stm\/TRandom$.html#nextLongBetween(minInclusive:Long,maxExclusive:Long):zio.stm.URSTM[zio.stm.TRandom,Long]", "kind" : "def"}, {"label" : "nextLong", "tail" : ": URSTM[TRandom, Long]", "member" : "zio.stm.TRandom.nextLong", "link" : "zio\/stm\/TRandom$.html#nextLong:zio.stm.URSTM[zio.stm.TRandom,Long]", "kind" : "val"}, {"label" : "nextIntBounded", "tail" : "(n: => Int): URSTM[TRandom, Int]", "member" : "zio.stm.TRandom.nextIntBounded", "link" : "zio\/stm\/TRandom$.html#nextIntBounded(n:=>Int):zio.stm.URSTM[zio.stm.TRandom,Int]", "kind" : "def"}, {"label" : "nextIntBetween", "tail" : "(minInclusive: Int, maxExclusive: Int): URSTM[TRandom, Int]", "member" : "zio.stm.TRandom.nextIntBetween", "link" : "zio\/stm\/TRandom$.html#nextIntBetween(minInclusive:Int,maxExclusive:Int):zio.stm.URSTM[zio.stm.TRandom,Int]", "kind" : "def"}, {"label" : "nextInt", "tail" : ": URSTM[TRandom, Int]", "member" : "zio.stm.TRandom.nextInt", "link" : "zio\/stm\/TRandom$.html#nextInt:zio.stm.URSTM[zio.stm.TRandom,Int]", "kind" : "val"}, {"label" : "nextGaussian", "tail" : ": URSTM[TRandom, Double]", "member" : "zio.stm.TRandom.nextGaussian", "link" : "zio\/stm\/TRandom$.html#nextGaussian:zio.stm.URSTM[zio.stm.TRandom,Double]", "kind" : "val"}, {"label" : "nextFloatBetween", "tail" : "(minInclusive: Float, maxExclusive: Float): URSTM[TRandom, Float]", "member" : "zio.stm.TRandom.nextFloatBetween", "link" : "zio\/stm\/TRandom$.html#nextFloatBetween(minInclusive:Float,maxExclusive:Float):zio.stm.URSTM[zio.stm.TRandom,Float]", "kind" : "def"}, {"label" : "nextFloat", "tail" : ": URSTM[TRandom, Float]", "member" : "zio.stm.TRandom.nextFloat", "link" : "zio\/stm\/TRandom$.html#nextFloat:zio.stm.URSTM[zio.stm.TRandom,Float]", "kind" : "val"}, {"label" : "nextDoubleBetween", "tail" : "(minInclusive: Double, maxExclusive: Double): URSTM[TRandom, Double]", "member" : "zio.stm.TRandom.nextDoubleBetween", "link" : "zio\/stm\/TRandom$.html#nextDoubleBetween(minInclusive:Double,maxExclusive:Double):zio.stm.URSTM[zio.stm.TRandom,Double]", "kind" : "def"}, {"label" : "nextDouble", "tail" : ": URSTM[TRandom, Double]", "member" : "zio.stm.TRandom.nextDouble", "link" : "zio\/stm\/TRandom$.html#nextDouble:zio.stm.URSTM[zio.stm.TRandom,Double]", "kind" : "val"}, {"label" : "nextBytes", "tail" : "(length: => Int): URSTM[TRandom, Chunk[Byte]]", "member" : "zio.stm.TRandom.nextBytes", "link" : "zio\/stm\/TRandom$.html#nextBytes(length:=>Int):zio.stm.URSTM[zio.stm.TRandom,zio.Chunk[Byte]]", "kind" : "def"}, {"label" : "nextBoolean", "tail" : ": URSTM[TRandom, Boolean]", "member" : "zio.stm.TRandom.nextBoolean", "link" : "zio\/stm\/TRandom$.html#nextBoolean:zio.stm.URSTM[zio.stm.TRandom,Boolean]", "kind" : "val"}, {"label" : "live", "tail" : ": ZLayer[Any, Nothing, TRandom]", "member" : "zio.stm.TRandom.live", "link" : "zio\/stm\/TRandom$.html#live:zio.ZLayer[Any,Nothing,zio.stm.TRandom]", "kind" : "val"}, {"label" : "any", "tail" : ": ZLayer[TRandom, Nothing, TRandom]", "member" : "zio.stm.TRandom.any", "link" : "zio\/stm\/TRandom$.html#any:zio.ZLayer[zio.stm.TRandom,Nothing,zio.stm.TRandom]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/TRandom$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/TRandom$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/TRandom$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/TRandom$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/TRandom$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/TRandom$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/TRandom$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/TRandom$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/TRandom$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/TRandom$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/TRandom$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/TRandom$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TRandom$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TRandom$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TRandom$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/TRandom$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/TRandom$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TRandom$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TRandom$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/stm\/TRandom.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/TRandom.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/TRandom.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/TRandom.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/TRandom.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/TRandom.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/TRandom.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/TRandom.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/TRandom.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/TRandom.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/TRandom.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/TRandom.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/TRandom.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TRandom.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TRandom.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TRandom.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/TRandom.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/TRandom.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TRandom.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TRandom.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "shuffle", "tail" : "(collection: Collection[A])(bf: zio.BuildFrom[Collection[A], A, Collection[A]]): STM[Nothing, Collection[A]]", "member" : "zio.stm.TRandom.shuffle", "link" : "zio\/stm\/TRandom.html#shuffle[A,Collection[+Element]<:Iterable[Element]](collection:Collection[A])(implicitbf:zio.BuildFrom[Collection[A],A,Collection[A]]):zio.stm.STM[Nothing,Collection[A]]", "kind" : "abstract def"}, {"label" : "setSeed", "tail" : "(seed: Long): STM[Nothing, Unit]", "member" : "zio.stm.TRandom.setSeed", "link" : "zio\/stm\/TRandom.html#setSeed(seed:Long):zio.stm.STM[Nothing,Unit]", "kind" : "abstract def"}, {"label" : "nextString", "tail" : "(length: Int): STM[Nothing, String]", "member" : "zio.stm.TRandom.nextString", "link" : "zio\/stm\/TRandom.html#nextString(length:Int):zio.stm.STM[Nothing,String]", "kind" : "abstract def"}, {"label" : "nextPrintableChar", "tail" : "(): STM[Nothing, Char]", "member" : "zio.stm.TRandom.nextPrintableChar", "link" : "zio\/stm\/TRandom.html#nextPrintableChar:zio.stm.STM[Nothing,Char]", "kind" : "abstract def"}, {"label" : "nextLongBounded", "tail" : "(n: Long): STM[Nothing, Long]", "member" : "zio.stm.TRandom.nextLongBounded", "link" : "zio\/stm\/TRandom.html#nextLongBounded(n:Long):zio.stm.STM[Nothing,Long]", "kind" : "abstract def"}, {"label" : "nextLongBetween", "tail" : "(minInclusive: Long, maxExclusive: Long): STM[Nothing, Long]", "member" : "zio.stm.TRandom.nextLongBetween", "link" : "zio\/stm\/TRandom.html#nextLongBetween(minInclusive:Long,maxExclusive:Long):zio.stm.STM[Nothing,Long]", "kind" : "abstract def"}, {"label" : "nextLong", "tail" : "(): STM[Nothing, Long]", "member" : "zio.stm.TRandom.nextLong", "link" : "zio\/stm\/TRandom.html#nextLong:zio.stm.STM[Nothing,Long]", "kind" : "abstract def"}, {"label" : "nextIntBounded", "tail" : "(n: Int): STM[Nothing, Int]", "member" : "zio.stm.TRandom.nextIntBounded", "link" : "zio\/stm\/TRandom.html#nextIntBounded(n:Int):zio.stm.STM[Nothing,Int]", "kind" : "abstract def"}, {"label" : "nextIntBetween", "tail" : "(minInclusive: Int, maxExclusive: Int): STM[Nothing, Int]", "member" : "zio.stm.TRandom.nextIntBetween", "link" : "zio\/stm\/TRandom.html#nextIntBetween(minInclusive:Int,maxExclusive:Int):zio.stm.STM[Nothing,Int]", "kind" : "abstract def"}, {"label" : "nextInt", "tail" : "(): STM[Nothing, Int]", "member" : "zio.stm.TRandom.nextInt", "link" : "zio\/stm\/TRandom.html#nextInt:zio.stm.STM[Nothing,Int]", "kind" : "abstract def"}, {"label" : "nextGaussian", "tail" : "(): STM[Nothing, Double]", "member" : "zio.stm.TRandom.nextGaussian", "link" : "zio\/stm\/TRandom.html#nextGaussian:zio.stm.STM[Nothing,Double]", "kind" : "abstract def"}, {"label" : "nextFloatBetween", "tail" : "(minInclusive: Float, maxExclusive: Float): STM[Nothing, Float]", "member" : "zio.stm.TRandom.nextFloatBetween", "link" : "zio\/stm\/TRandom.html#nextFloatBetween(minInclusive:Float,maxExclusive:Float):zio.stm.STM[Nothing,Float]", "kind" : "abstract def"}, {"label" : "nextFloat", "tail" : "(): STM[Nothing, Float]", "member" : "zio.stm.TRandom.nextFloat", "link" : "zio\/stm\/TRandom.html#nextFloat:zio.stm.STM[Nothing,Float]", "kind" : "abstract def"}, {"label" : "nextDoubleBetween", "tail" : "(minInclusive: Double, maxExclusive: Double): STM[Nothing, Double]", "member" : "zio.stm.TRandom.nextDoubleBetween", "link" : "zio\/stm\/TRandom.html#nextDoubleBetween(minInclusive:Double,maxExclusive:Double):zio.stm.STM[Nothing,Double]", "kind" : "abstract def"}, {"label" : "nextDouble", "tail" : "(): STM[Nothing, Double]", "member" : "zio.stm.TRandom.nextDouble", "link" : "zio\/stm\/TRandom.html#nextDouble:zio.stm.STM[Nothing,Double]", "kind" : "abstract def"}, {"label" : "nextBytes", "tail" : "(length: Int): STM[Nothing, Chunk[Byte]]", "member" : "zio.stm.TRandom.nextBytes", "link" : "zio\/stm\/TRandom.html#nextBytes(length:Int):zio.stm.STM[Nothing,zio.Chunk[Byte]]", "kind" : "abstract def"}, {"label" : "nextBoolean", "tail" : "(): STM[Nothing, Boolean]", "member" : "zio.stm.TRandom.nextBoolean", "link" : "zio\/stm\/TRandom.html#nextBoolean:zio.stm.STM[Nothing,Boolean]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.stm.TReentrantLock", "shortDescription" : "A TReentrantLock is a reentrant read\/write lock.", "object" : "zio\/stm\/TReentrantLock$.html", "members_class" : [{"label" : "writeLocks", "tail" : "(): USTM[Int]", "member" : "zio.stm.TReentrantLock.writeLocks", "link" : "zio\/stm\/TReentrantLock.html#writeLocks:zio.stm.USTM[Int]", "kind" : "def"}, {"label" : "writeLocked", "tail" : "(): USTM[Boolean]", "member" : "zio.stm.TReentrantLock.writeLocked", "link" : "zio\/stm\/TReentrantLock.html#writeLocked:zio.stm.USTM[Boolean]", "kind" : "def"}, {"label" : "writeLock", "tail" : "(trace: Trace): ZIO[Scope, Nothing, Int]", "member" : "zio.stm.TReentrantLock.writeLock", "link" : "zio\/stm\/TReentrantLock.html#writeLock(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Int]", "kind" : "def"}, {"label" : "withWriteLock", "tail" : "(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.stm.TReentrantLock.withWriteLock", "link" : "zio\/stm\/TReentrantLock.html#withWriteLock[R,E,A](zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "withReadLock", "tail" : "(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.stm.TReentrantLock.withReadLock", "link" : "zio\/stm\/TReentrantLock.html#withReadLock[R,E,A](zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "withLock", "tail" : "(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.stm.TReentrantLock.withLock", "link" : "zio\/stm\/TReentrantLock.html#withLock[R,E,A](zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "releaseWrite", "tail" : ": USTM[Int]", "member" : "zio.stm.TReentrantLock.releaseWrite", "link" : "zio\/stm\/TReentrantLock.html#releaseWrite:zio.stm.USTM[Int]", "kind" : "lazy val"}, {"label" : "releaseRead", "tail" : ": USTM[Int]", "member" : "zio.stm.TReentrantLock.releaseRead", "link" : "zio\/stm\/TReentrantLock.html#releaseRead:zio.stm.USTM[Int]", "kind" : "lazy val"}, {"label" : "readLocked", "tail" : "(): USTM[Boolean]", "member" : "zio.stm.TReentrantLock.readLocked", "link" : "zio\/stm\/TReentrantLock.html#readLocked:zio.stm.USTM[Boolean]", "kind" : "def"}, {"label" : "fiberWriteLocks", "tail" : "(): USTM[Int]", "member" : "zio.stm.TReentrantLock.fiberWriteLocks", "link" : "zio\/stm\/TReentrantLock.html#fiberWriteLocks:zio.stm.USTM[Int]", "kind" : "def"}, {"label" : "fiberReadLocks", "tail" : "(): USTM[Int]", "member" : "zio.stm.TReentrantLock.fiberReadLocks", "link" : "zio\/stm\/TReentrantLock.html#fiberReadLocks:zio.stm.USTM[Int]", "kind" : "def"}, {"label" : "readLocks", "tail" : "(): USTM[Int]", "member" : "zio.stm.TReentrantLock.readLocks", "link" : "zio\/stm\/TReentrantLock.html#readLocks:zio.stm.USTM[Int]", "kind" : "def"}, {"label" : "readLock", "tail" : "(trace: Trace): ZIO[Scope, Nothing, Int]", "member" : "zio.stm.TReentrantLock.readLock", "link" : "zio\/stm\/TReentrantLock.html#readLock(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Int]", "kind" : "def"}, {"label" : "locked", "tail" : "(): USTM[Boolean]", "member" : "zio.stm.TReentrantLock.locked", "link" : "zio\/stm\/TReentrantLock.html#locked:zio.stm.USTM[Boolean]", "kind" : "def"}, {"label" : "lock", "tail" : "(trace: Trace): ZIO[Scope, Nothing, Int]", "member" : "zio.stm.TReentrantLock.lock", "link" : "zio\/stm\/TReentrantLock.html#lock(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Int]", "kind" : "def"}, {"label" : "acquireWrite", "tail" : ": USTM[Int]", "member" : "zio.stm.TReentrantLock.acquireWrite", "link" : "zio\/stm\/TReentrantLock.html#acquireWrite:zio.stm.USTM[Int]", "kind" : "lazy val"}, {"label" : "acquireRead", "tail" : ": USTM[Int]", "member" : "zio.stm.TReentrantLock.acquireRead", "link" : "zio\/stm\/TReentrantLock.html#acquireRead:zio.stm.USTM[Int]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/TReentrantLock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/TReentrantLock.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/TReentrantLock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/TReentrantLock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/TReentrantLock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/TReentrantLock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/TReentrantLock.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/TReentrantLock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/TReentrantLock.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/TReentrantLock.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/TReentrantLock.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/TReentrantLock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TReentrantLock.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TReentrantLock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TReentrantLock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/TReentrantLock.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/TReentrantLock.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TReentrantLock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TReentrantLock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unsafe", "tail" : "", "member" : "zio.stm.TReentrantLock.unsafe", "link" : "zio\/stm\/TReentrantLock$.html#unsafe", "kind" : "object"}, {"label" : "make", "tail" : "(): USTM[TReentrantLock]", "member" : "zio.stm.TReentrantLock.make", "link" : "zio\/stm\/TReentrantLock$.html#make:zio.stm.USTM[zio.stm.TReentrantLock]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/TReentrantLock$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/TReentrantLock$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/TReentrantLock$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/TReentrantLock$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/TReentrantLock$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/TReentrantLock$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/TReentrantLock$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/TReentrantLock$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/TReentrantLock$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/TReentrantLock$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/TReentrantLock$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/TReentrantLock$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TReentrantLock$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TReentrantLock$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TReentrantLock$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/TReentrantLock$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/TReentrantLock$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TReentrantLock$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TReentrantLock$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/stm\/TReentrantLock.html", "kind" : "class"}, {"name" : "zio.stm.TRef", "shortDescription" : "A TRef is a purely functional description of a mutable reference that canbe modified as part of a transactional effect.", "object" : "zio\/stm\/TRef$.html", "members_class" : [{"label" : "updateSomeAndGet", "tail" : "(f: PartialFunction[A, A]): USTM[A]", "member" : "zio.stm.TRef.updateSomeAndGet", "link" : "zio\/stm\/TRef.html#updateSomeAndGet(f:PartialFunction[A,A]):zio.stm.USTM[A]", "kind" : "def"}, {"label" : "updateSome", "tail" : "(f: PartialFunction[A, A]): USTM[Unit]", "member" : "zio.stm.TRef.updateSome", "link" : "zio\/stm\/TRef.html#updateSome(f:PartialFunction[A,A]):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "updateAndGet", "tail" : "(f: (A) => A): USTM[A]", "member" : "zio.stm.TRef.updateAndGet", "link" : "zio\/stm\/TRef.html#updateAndGet(f:A=>A):zio.stm.USTM[A]", "kind" : "def"}, {"label" : "update", "tail" : "(f: (A) => A): USTM[Unit]", "member" : "zio.stm.TRef.update", "link" : "zio\/stm\/TRef.html#update(f:A=>A):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "zio.stm.TRef.toString", "link" : "zio\/stm\/TRef.html#toString():String", "kind" : "def"}, {"label" : "set", "tail" : "(a: A): USTM[Unit]", "member" : "zio.stm.TRef.set", "link" : "zio\/stm\/TRef.html#set(a:A):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "modifySome", "tail" : "(default: B)(f: PartialFunction[A, (B, A)]): USTM[B]", "member" : "zio.stm.TRef.modifySome", "link" : "zio\/stm\/TRef.html#modifySome[B](default:B)(f:PartialFunction[A,(B,A)]):zio.stm.USTM[B]", "kind" : "def"}, {"label" : "modify", "tail" : "(f: (A) => (B, A)): USTM[B]", "member" : "zio.stm.TRef.modify", "link" : "zio\/stm\/TRef.html#modify[B](f:A=>(B,A)):zio.stm.USTM[B]", "kind" : "def"}, {"label" : "getAndUpdateSome", "tail" : "(f: PartialFunction[A, A]): USTM[A]", "member" : "zio.stm.TRef.getAndUpdateSome", "link" : "zio\/stm\/TRef.html#getAndUpdateSome(f:PartialFunction[A,A]):zio.stm.USTM[A]", "kind" : "def"}, {"label" : "getAndUpdate", "tail" : "(f: (A) => A): USTM[A]", "member" : "zio.stm.TRef.getAndUpdate", "link" : "zio\/stm\/TRef.html#getAndUpdate(f:A=>A):zio.stm.USTM[A]", "kind" : "def"}, {"label" : "getAndSet", "tail" : "(a: A): USTM[A]", "member" : "zio.stm.TRef.getAndSet", "link" : "zio\/stm\/TRef.html#getAndSet(a:A):zio.stm.USTM[A]", "kind" : "def"}, {"label" : "get", "tail" : "(): USTM[A]", "member" : "zio.stm.TRef.get", "link" : "zio\/stm\/TRef.html#get:zio.stm.USTM[A]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "zio.stm.TRef.hashCode", "link" : "zio\/stm\/TRef.html#hashCode():Int", "kind" : "def"}, {"member" : "zio.stm.TRef#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/TRef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/TRef.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/TRef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/TRef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/TRef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/TRef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/TRef.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/TRef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/TRef.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/TRef.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/TRef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TRef.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TRef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TRef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/TRef.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TRef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TRef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unsafe", "tail" : "", "member" : "zio.stm.TRef.unsafe", "link" : "zio\/stm\/TRef$.html#unsafe", "kind" : "object"}, {"label" : "makeCommit", "tail" : "(a: => A)(trace: Trace): UIO[TRef[A]]", "member" : "zio.stm.TRef.makeCommit", "link" : "zio\/stm\/TRef$.html#makeCommit[A](a:=>A)(implicittrace:zio.Trace):zio.UIO[zio.stm.TRef[A]]", "kind" : "def"}, {"label" : "make", "tail" : "(a: => A): USTM[TRef[A]]", "member" : "zio.stm.TRef.make", "link" : "zio\/stm\/TRef$.html#make[A](a:=>A):zio.stm.USTM[zio.stm.TRef[A]]", "kind" : "def"}, {"label" : "ordering", "tail" : ": Ordering[TRef[_]]", "member" : "zio.stm.TRef.ordering", "link" : "zio\/stm\/TRef$.html#ordering:Ordering[zio.stm.TRef[_]]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/TRef$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/TRef$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/TRef$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/TRef$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/TRef$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/TRef$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/TRef$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/TRef$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/TRef$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/TRef$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/TRef$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/TRef$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TRef$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TRef$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TRef$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/TRef$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/TRef$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TRef$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TRef$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/stm\/TRef.html", "kind" : "class"}, {"name" : "zio.stm.TSemaphore", "shortDescription" : "A TSemaphore is a semaphore that can be composed transactionally.", "object" : "zio\/stm\/TSemaphore$.html", "members_class" : [{"label" : "withPermitsUpToScoped", "tail" : "(max: Long)(trace: Trace): ZIO[Scope, Nothing, Long]", "member" : "zio.stm.TSemaphore.withPermitsUpToScoped", "link" : "zio\/stm\/TSemaphore.html#withPermitsUpToScoped(max:Long)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Long]", "kind" : "def"}, {"label" : "withPermitsBetweenScoped", "tail" : "(min: Long, max: Long)(trace: Trace): ZIO[Scope, Nothing, Long]", "member" : "zio.stm.TSemaphore.withPermitsBetweenScoped", "link" : "zio\/stm\/TSemaphore.html#withPermitsBetweenScoped(min:Long,max:Long)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Long]", "kind" : "def"}, {"label" : "withPermitsScoped", "tail" : "(n: Long)(trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.stm.TSemaphore.withPermitsScoped", "link" : "zio\/stm\/TSemaphore.html#withPermitsScoped(n:Long)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "withPermitsUpTo", "tail" : "(max: Long)(zio: (Long) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.stm.TSemaphore.withPermitsUpTo", "link" : "zio\/stm\/TSemaphore.html#withPermitsUpTo[R,E,A](max:Long)(zio:Long=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "withPermitsBetween", "tail" : "(min: Long, max: Long)(zio: (Long) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.stm.TSemaphore.withPermitsBetween", "link" : "zio\/stm\/TSemaphore.html#withPermitsBetween[R,E,A](min:Long,max:Long)(zio:Long=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "withPermits", "tail" : "(n: Long)(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.stm.TSemaphore.withPermits", "link" : "zio\/stm\/TSemaphore.html#withPermits[R,E,A](n:Long)(zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "withPermitScoped", "tail" : "(trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.stm.TSemaphore.withPermitScoped", "link" : "zio\/stm\/TSemaphore.html#withPermitScoped(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "withPermit", "tail" : "(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.stm.TSemaphore.withPermit", "link" : "zio\/stm\/TSemaphore.html#withPermit[R,E,A](zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "releaseN", "tail" : "(n: Long): USTM[Unit]", "member" : "zio.stm.TSemaphore.releaseN", "link" : "zio\/stm\/TSemaphore.html#releaseN(n:Long):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "release", "tail" : "(): USTM[Unit]", "member" : "zio.stm.TSemaphore.release", "link" : "zio\/stm\/TSemaphore.html#release:zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "available", "tail" : "(): USTM[Long]", "member" : "zio.stm.TSemaphore.available", "link" : "zio\/stm\/TSemaphore.html#available:zio.stm.USTM[Long]", "kind" : "def"}, {"label" : "acquireUpTo", "tail" : "(max: Long): USTM[Long]", "member" : "zio.stm.TSemaphore.acquireUpTo", "link" : "zio\/stm\/TSemaphore.html#acquireUpTo(max:Long):zio.stm.USTM[Long]", "kind" : "def"}, {"label" : "acquireBetween", "tail" : "(min: Long, max: Long): USTM[Long]", "member" : "zio.stm.TSemaphore.acquireBetween", "link" : "zio\/stm\/TSemaphore.html#acquireBetween(min:Long,max:Long):zio.stm.USTM[Long]", "kind" : "def"}, {"label" : "acquireN", "tail" : "(n: Long): USTM[Unit]", "member" : "zio.stm.TSemaphore.acquireN", "link" : "zio\/stm\/TSemaphore.html#acquireN(n:Long):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "acquire", "tail" : "(): USTM[Unit]", "member" : "zio.stm.TSemaphore.acquire", "link" : "zio\/stm\/TSemaphore.html#acquire:zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "permits", "tail" : ": TRef[Long]", "member" : "zio.stm.TSemaphore.permits", "link" : "zio\/stm\/TSemaphore.html#permits:zio.stm.TRef[Long]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/TSemaphore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/TSemaphore.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/TSemaphore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/TSemaphore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/TSemaphore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/TSemaphore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/TSemaphore.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/TSemaphore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/TSemaphore.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/TSemaphore.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/TSemaphore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/TSemaphore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TSemaphore.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TSemaphore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TSemaphore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/TSemaphore.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/TSemaphore.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TSemaphore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TSemaphore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unsafe", "tail" : "", "member" : "zio.stm.TSemaphore.unsafe", "link" : "zio\/stm\/TSemaphore$.html#unsafe", "kind" : "object"}, {"label" : "makeCommit", "tail" : "(permits: => Long)(trace: Trace): UIO[TSemaphore]", "member" : "zio.stm.TSemaphore.makeCommit", "link" : "zio\/stm\/TSemaphore$.html#makeCommit(permits:=>Long)(implicittrace:zio.Trace):zio.UIO[zio.stm.TSemaphore]", "kind" : "def"}, {"label" : "make", "tail" : "(permits: => Long)(trace: Trace): USTM[TSemaphore]", "member" : "zio.stm.TSemaphore.make", "link" : "zio\/stm\/TSemaphore$.html#make(permits:=>Long)(implicittrace:zio.Trace):zio.stm.USTM[zio.stm.TSemaphore]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/TSemaphore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/TSemaphore$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/TSemaphore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/TSemaphore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/TSemaphore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/TSemaphore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/TSemaphore$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/TSemaphore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/TSemaphore$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/TSemaphore$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/TSemaphore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/TSemaphore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TSemaphore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TSemaphore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TSemaphore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/TSemaphore$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/TSemaphore$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TSemaphore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TSemaphore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/stm\/TSemaphore.html", "kind" : "class"}, {"name" : "zio.stm.TSet", "shortDescription" : "Transactional set implemented on top of TMap.", "object" : "zio\/stm\/TSet$.html", "members_class" : [{"label" : "union", "tail" : "(other: TSet[A]): USTM[Unit]", "member" : "zio.stm.TSet.union", "link" : "zio\/stm\/TSet.html#union(other:zio.stm.TSet[A]):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "transformSTM", "tail" : "(f: (A) => STM[E, A]): STM[E, Unit]", "member" : "zio.stm.TSet.transformSTM", "link" : "zio\/stm\/TSet.html#transformSTM[E](f:A=>zio.stm.STM[E,A]):zio.stm.STM[E,Unit]", "kind" : "def"}, {"label" : "transform", "tail" : "(f: (A) => A): USTM[Unit]", "member" : "zio.stm.TSet.transform", "link" : "zio\/stm\/TSet.html#transform(f:A=>A):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): USTM[Set[A]]", "member" : "zio.stm.TSet.toSet", "link" : "zio\/stm\/TSet.html#toSet:zio.stm.USTM[Set[A]]", "kind" : "def"}, {"label" : "toList", "tail" : "(): USTM[List[A]]", "member" : "zio.stm.TSet.toList", "link" : "zio\/stm\/TSet.html#toList:zio.stm.USTM[List[A]]", "kind" : "def"}, {"label" : "takeSomeSTM", "tail" : "(pf: (A) => ZSTM[R, Option[E], B]): ZSTM[R, E, NonEmptyChunk[B]]", "member" : "zio.stm.TSet.takeSomeSTM", "link" : "zio\/stm\/TSet.html#takeSomeSTM[R,E,B](pf:A=>zio.stm.ZSTM[R,Option[E],B]):zio.stm.ZSTM[R,E,zio.NonEmptyChunk[B]]", "kind" : "def"}, {"label" : "takeSome", "tail" : "(pf: PartialFunction[A, B]): USTM[NonEmptyChunk[B]]", "member" : "zio.stm.TSet.takeSome", "link" : "zio\/stm\/TSet.html#takeSome[B](pf:PartialFunction[A,B]):zio.stm.USTM[zio.NonEmptyChunk[B]]", "kind" : "def"}, {"label" : "takeFirstSTM", "tail" : "(pf: (A) => ZSTM[R, Option[E], B]): ZSTM[R, E, B]", "member" : "zio.stm.TSet.takeFirstSTM", "link" : "zio\/stm\/TSet.html#takeFirstSTM[R,E,B](pf:A=>zio.stm.ZSTM[R,Option[E],B]):zio.stm.ZSTM[R,E,B]", "kind" : "def"}, {"label" : "takeFirst", "tail" : "(pf: PartialFunction[A, B]): USTM[B]", "member" : "zio.stm.TSet.takeFirst", "link" : "zio\/stm\/TSet.html#takeFirst[B](pf:PartialFunction[A,B]):zio.stm.USTM[B]", "kind" : "def"}, {"label" : "size", "tail" : "(): USTM[Int]", "member" : "zio.stm.TSet.size", "link" : "zio\/stm\/TSet.html#size:zio.stm.USTM[Int]", "kind" : "def"}, {"label" : "retainIfDiscard", "tail" : "(p: (A) => Boolean): USTM[Unit]", "member" : "zio.stm.TSet.retainIfDiscard", "link" : "zio\/stm\/TSet.html#retainIfDiscard(p:A=>Boolean):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "retainIf", "tail" : "(p: (A) => Boolean): USTM[Chunk[A]]", "member" : "zio.stm.TSet.retainIf", "link" : "zio\/stm\/TSet.html#retainIf(p:A=>Boolean):zio.stm.USTM[zio.Chunk[A]]", "kind" : "def"}, {"label" : "removeIfDiscard", "tail" : "(p: (A) => Boolean): USTM[Unit]", "member" : "zio.stm.TSet.removeIfDiscard", "link" : "zio\/stm\/TSet.html#removeIfDiscard(p:A=>Boolean):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "removeIf", "tail" : "(p: (A) => Boolean): USTM[Chunk[A]]", "member" : "zio.stm.TSet.removeIf", "link" : "zio\/stm\/TSet.html#removeIf(p:A=>Boolean):zio.stm.USTM[zio.Chunk[A]]", "kind" : "def"}, {"label" : "put", "tail" : "(a: A): USTM[Unit]", "member" : "zio.stm.TSet.put", "link" : "zio\/stm\/TSet.html#put(a:A):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "intersect", "tail" : "(other: TSet[A]): USTM[Unit]", "member" : "zio.stm.TSet.intersect", "link" : "zio\/stm\/TSet.html#intersect(other:zio.stm.TSet[A]):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) => STM[E, Unit]): STM[E, Unit]", "member" : "zio.stm.TSet.foreach", "link" : "zio\/stm\/TSet.html#foreach[E](f:A=>zio.stm.STM[E,Unit]):zio.stm.STM[E,Unit]", "kind" : "def"}, {"label" : "foldSTM", "tail" : "(zero: B)(op: (B, A) => STM[E, B]): STM[E, B]", "member" : "zio.stm.TSet.foldSTM", "link" : "zio\/stm\/TSet.html#foldSTM[B,E](zero:B)(op:(B,A)=>zio.stm.STM[E,B]):zio.stm.STM[E,B]", "kind" : "def"}, {"label" : "fold", "tail" : "(zero: B)(op: (B, A) => B): USTM[B]", "member" : "zio.stm.TSet.fold", "link" : "zio\/stm\/TSet.html#fold[B](zero:B)(op:(B,A)=>B):zio.stm.USTM[B]", "kind" : "def"}, {"label" : "diff", "tail" : "(other: TSet[A]): USTM[Unit]", "member" : "zio.stm.TSet.diff", "link" : "zio\/stm\/TSet.html#diff(other:zio.stm.TSet[A]):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "deleteAll", "tail" : "(as: Iterable[A]): USTM[Unit]", "member" : "zio.stm.TSet.deleteAll", "link" : "zio\/stm\/TSet.html#deleteAll(as:Iterable[A]):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "delete", "tail" : "(a: A): USTM[Unit]", "member" : "zio.stm.TSet.delete", "link" : "zio\/stm\/TSet.html#delete(a:A):zio.stm.USTM[Unit]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): USTM[Boolean]", "member" : "zio.stm.TSet.isEmpty", "link" : "zio\/stm\/TSet.html#isEmpty:zio.stm.USTM[Boolean]", "kind" : "def"}, {"label" : "contains", "tail" : "(a: A): USTM[Boolean]", "member" : "zio.stm.TSet.contains", "link" : "zio\/stm\/TSet.html#contains(a:A):zio.stm.USTM[Boolean]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/stm\/TSet.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/stm\/TSet.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TSet.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TSet.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/stm\/TSet.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/stm\/TSet.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/stm\/TSet.html#==(x$1:Any):Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unsafe", "tail" : "", "member" : "zio.stm.TSet.unsafe", "link" : "zio\/stm\/TSet$.html#unsafe", "kind" : "object"}, {"label" : "make", "tail" : "(data: A*): USTM[TSet[A]]", "member" : "zio.stm.TSet.make", "link" : "zio\/stm\/TSet$.html#make[A](data:A*):zio.stm.USTM[zio.stm.TSet[A]]", "kind" : "def"}, {"label" : "fromIterable", "tail" : "(data: => Iterable[A]): USTM[TSet[A]]", "member" : "zio.stm.TSet.fromIterable", "link" : "zio\/stm\/TSet$.html#fromIterable[A](data:=>Iterable[A]):zio.stm.USTM[zio.stm.TSet[A]]", "kind" : "def"}, {"label" : "empty", "tail" : "(): USTM[TSet[A]]", "member" : "zio.stm.TSet.empty", "link" : "zio\/stm\/TSet$.html#empty[A]:zio.stm.USTM[zio.stm.TSet[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/TSet$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/TSet$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/TSet$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/TSet$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/TSet$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/TSet$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/TSet$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/TSet$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/TSet$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/TSet$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/TSet$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/TSet$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TSet$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TSet$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/TSet$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/TSet$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/TSet$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/TSet$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/TSet$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/stm\/TSet.html", "kind" : "class"}, {"name" : "zio.stm.ZSTM", "object" : "zio\/stm\/ZSTM$.html", "members_object" : [{"label" : "WhenSTM", "tail" : "", "member" : "zio.stm.ZSTM.WhenSTM", "link" : "zio\/stm\/ZSTM$.html#WhenSTM[R,E]extendsAnyRef", "kind" : "final class"}, {"label" : "UpdateServiceAt", "tail" : "", "member" : "zio.stm.ZSTM.UpdateServiceAt", "link" : "zio\/stm\/ZSTM$.html#UpdateServiceAt[-R,+E,+A,Service]extendsAnyVal", "kind" : "final class"}, {"label" : "UpdateService", "tail" : "", "member" : "zio.stm.ZSTM.UpdateService", "link" : "zio\/stm\/ZSTM$.html#UpdateService[-R,+E,+A,M]extendsAnyRef", "kind" : "final class"}, {"label" : "UnlessSTM", "tail" : "", "member" : "zio.stm.ZSTM.UnlessSTM", "link" : "zio\/stm\/ZSTM$.html#UnlessSTM[R,E]extendsAnyRef", "kind" : "final class"}, {"label" : "IfSTM", "tail" : "", "member" : "zio.stm.ZSTM.IfSTM", "link" : "zio\/stm\/ZSTM$.html#IfSTM[R,E]extendsAnyRef", "kind" : "final class"}, {"label" : "ServiceWithSTMPartiallyApplied", "tail" : "", "member" : "zio.stm.ZSTM.ServiceWithSTMPartiallyApplied", "link" : "zio\/stm\/ZSTM$.html#ServiceWithSTMPartiallyApplied[Service]extendsAnyVal", "kind" : "final class"}, {"label" : "ServiceWithPartiallyApplied", "tail" : "", "member" : "zio.stm.ZSTM.ServiceWithPartiallyApplied", "link" : "zio\/stm\/ZSTM$.html#ServiceWithPartiallyApplied[Service]extendsAnyVal", "kind" : "final class"}, {"label" : "ServiceAtPartiallyApplied", "tail" : "", "member" : "zio.stm.ZSTM.ServiceAtPartiallyApplied", "link" : "zio\/stm\/ZSTM$.html#ServiceAtPartiallyApplied[Service]extendsAnyVal", "kind" : "final class"}, {"label" : "EnvironmentWithSTMPartiallyApplied", "tail" : "", "member" : "zio.stm.ZSTM.EnvironmentWithSTMPartiallyApplied", "link" : "zio\/stm\/ZSTM$.html#EnvironmentWithSTMPartiallyApplied[R]extendsAnyVal", "kind" : "final class"}, {"label" : "EnvironmentWithPartiallyApplied", "tail" : "", "member" : "zio.stm.ZSTM.EnvironmentWithPartiallyApplied", "link" : "zio\/stm\/ZSTM$.html#EnvironmentWithPartiallyApplied[R]extendsAnyVal", "kind" : "final class"}, {"label" : "Release", "tail" : "", "member" : "zio.stm.ZSTM.Release", "link" : "zio\/stm\/ZSTM$.html#Release[-R,+E,+A]extendsAnyRef", "kind" : "final class"}, {"label" : "Acquire", "tail" : "", "member" : "zio.stm.ZSTM.Acquire", "link" : "zio\/stm\/ZSTM$.html#Acquire[-R,+E,+A]extendsAnyVal", "kind" : "final class"}, {"label" : "whenSTM", "tail" : "(b: ZSTM[R, E, Boolean]): WhenSTM[R, E]", "member" : "zio.stm.ZSTM.whenSTM", "link" : "zio\/stm\/ZSTM$.html#whenSTM[R,E](b:zio.stm.ZSTM[R,E,Boolean]):zio.stm.ZSTM.WhenSTM[R,E]", "kind" : "def"}, {"label" : "whenCaseSTM", "tail" : "(a: ZSTM[R, E, A])(pf: PartialFunction[A, ZSTM[R, E, B]]): ZSTM[R, E, Option[B]]", "member" : "zio.stm.ZSTM.whenCaseSTM", "link" : "zio\/stm\/ZSTM$.html#whenCaseSTM[R,E,A,B](a:zio.stm.ZSTM[R,E,A])(pf:PartialFunction[A,zio.stm.ZSTM[R,E,B]]):zio.stm.ZSTM[R,E,Option[B]]", "kind" : "def"}, {"label" : "whenCase", "tail" : "(a: => A)(pf: PartialFunction[A, ZSTM[R, E, B]]): ZSTM[R, E, Option[B]]", "member" : "zio.stm.ZSTM.whenCase", "link" : "zio\/stm\/ZSTM$.html#whenCase[R,E,A,B](a:=>A)(pf:PartialFunction[A,zio.stm.ZSTM[R,E,B]]):zio.stm.ZSTM[R,E,Option[B]]", "kind" : "def"}, {"label" : "when", "tail" : "(b: => Boolean)(stm: => ZSTM[R, E, A]): ZSTM[R, E, Option[A]]", "member" : "zio.stm.ZSTM.when", "link" : "zio\/stm\/ZSTM$.html#when[R,E,A](b:=>Boolean)(stm:=>zio.stm.ZSTM[R,E,A]):zio.stm.ZSTM[R,E,Option[A]]", "kind" : "def"}, {"label" : "validateFirst", "tail" : "(in: Collection[A])(f: (A) => ZSTM[R, E, B])(bf: zio.BuildFrom[Collection[A], E, Collection[E]], ev: CanFail[E]): ZSTM[R, Collection[E], B]", "member" : "zio.stm.ZSTM.validateFirst", "link" : "zio\/stm\/ZSTM$.html#validateFirst[R,E,A,B,Collection[+Element]<:Iterable[Element]](in:Collection[A])(f:A=>zio.stm.ZSTM[R,E,B])(implicitbf:zio.BuildFrom[Collection[A],E,Collection[E]],implicitev:zio.CanFail[E]):zio.stm.ZSTM[R,Collection[E],B]", "kind" : "def"}, {"label" : "validate", "tail" : "(in: NonEmptyChunk[A])(f: (A) => ZSTM[R, E, B])(ev: CanFail[E]): ZSTM[R, ::[E], NonEmptyChunk[B]]", "member" : "zio.stm.ZSTM.validate", "link" : "zio\/stm\/ZSTM$.html#validate[R,E,A,B](in:zio.NonEmptyChunk[A])(f:A=>zio.stm.ZSTM[R,E,B])(implicitev:zio.CanFail[E]):zio.stm.ZSTM[R,::[E],zio.NonEmptyChunk[B]]", "kind" : "def"}, {"label" : "validate", "tail" : "(in: Collection[A])(f: (A) => ZSTM[R, E, B])(bf: zio.BuildFrom[Collection[A], B, Collection[B]], ev: CanFail[E]): ZSTM[R, ::[E], Collection[B]]", "member" : "zio.stm.ZSTM.validate", "link" : "zio\/stm\/ZSTM$.html#validate[R,E,A,B,Collection[+Element]<:Iterable[Element]](in:Collection[A])(f:A=>zio.stm.ZSTM[R,E,B])(implicitbf:zio.BuildFrom[Collection[A],B,Collection[B]],implicitev:zio.CanFail[E]):zio.stm.ZSTM[R,::[E],Collection[B]]", "kind" : "def"}, {"label" : "unlessSTM", "tail" : "(b: ZSTM[R, E, Boolean]): UnlessSTM[R, E]", "member" : "zio.stm.ZSTM.unlessSTM", "link" : "zio\/stm\/ZSTM$.html#unlessSTM[R,E](b:zio.stm.ZSTM[R,E,Boolean]):zio.stm.ZSTM.UnlessSTM[R,E]", "kind" : "def"}, {"label" : "unless", "tail" : "(b: => Boolean)(stm: => ZSTM[R, E, A]): ZSTM[R, E, Option[A]]", "member" : "zio.stm.ZSTM.unless", "link" : "zio\/stm\/ZSTM$.html#unless[R,E,A](b:=>Boolean)(stm:=>zio.stm.ZSTM[R,E,A]):zio.stm.ZSTM[R,E,Option[A]]", "kind" : "def"}, {"label" : "unit", "tail" : ": USTM[Unit]", "member" : "zio.stm.ZSTM.unit", "link" : "zio\/stm\/ZSTM$.html#unit:zio.stm.USTM[Unit]", "kind" : "val"}, {"label" : "suspend", "tail" : "(stm: => ZSTM[R, E, A]): ZSTM[R, E, A]", "member" : "zio.stm.ZSTM.suspend", "link" : "zio\/stm\/ZSTM$.html#suspend[R,E,A](stm:=>zio.stm.ZSTM[R,E,A]):zio.stm.ZSTM[R,E,A]", "kind" : "def"}, {"label" : "succeed", "tail" : "(a: => A): USTM[A]", "member" : "zio.stm.ZSTM.succeed", "link" : "zio\/stm\/ZSTM$.html#succeed[A](a:=>A):zio.stm.USTM[A]", "kind" : "def"}, {"label" : "some", "tail" : "(a: => A): USTM[Option[A]]", "member" : "zio.stm.ZSTM.some", "link" : "zio\/stm\/ZSTM$.html#some[A](a:=>A):zio.stm.USTM[Option[A]]", "kind" : "def"}, {"label" : "serviceWithSTM", "tail" : "(): ServiceWithSTMPartiallyApplied[Service]", "member" : "zio.stm.ZSTM.serviceWithSTM", "link" : "zio\/stm\/ZSTM$.html#serviceWithSTM[Service]:zio.stm.ZSTM.ServiceWithSTMPartiallyApplied[Service]", "kind" : "def"}, {"label" : "serviceWith", "tail" : "(): ServiceWithPartiallyApplied[Service]", "member" : "zio.stm.ZSTM.serviceWith", "link" : "zio\/stm\/ZSTM$.html#serviceWith[Service]:zio.stm.ZSTM.ServiceWithPartiallyApplied[Service]", "kind" : "def"}, {"label" : "serviceAt", "tail" : "(): ServiceAtPartiallyApplied[Service]", "member" : "zio.stm.ZSTM.serviceAt", "link" : "zio\/stm\/ZSTM$.html#serviceAt[Service]:zio.stm.ZSTM.ServiceAtPartiallyApplied[Service]", "kind" : "def"}, {"label" : "service", "tail" : "(arg0: Tag[A]): ZSTM[A, Nothing, A]", "member" : "zio.stm.ZSTM.service", "link" : "zio\/stm\/ZSTM$.html#service[A](implicitevidence$1:zio.Tag[A]):zio.stm.ZSTM[A,Nothing,A]", "kind" : "def"}, {"label" : "right", "tail" : "(a: => A): USTM[Either[Nothing, A]]", "member" : "zio.stm.ZSTM.right", "link" : "zio\/stm\/ZSTM$.html#right[A](a:=>A):zio.stm.USTM[Either[Nothing,A]]", "kind" : "def"}, {"label" : "retry", "tail" : ": USTM[Nothing]", "member" : "zio.stm.ZSTM.retry", "link" : "zio\/stm\/ZSTM$.html#retry:zio.stm.USTM[Nothing]", "kind" : "val"}, {"label" : "replicateSTMDiscard", "tail" : "(n: Int)(transaction: ZSTM[R, E, A]): ZSTM[R, E, Unit]", "member" : "zio.stm.ZSTM.replicateSTMDiscard", "link" : "zio\/stm\/ZSTM$.html#replicateSTMDiscard[R,E,A](n:Int)(transaction:zio.stm.ZSTM[R,E,A]):zio.stm.ZSTM[R,E,Unit]", "kind" : "def"}, {"label" : "replicateSTM", "tail" : "(n: Int)(transaction: ZSTM[R, E, A]): ZSTM[R, E, Iterable[A]]", "member" : "zio.stm.ZSTM.replicateSTM", "link" : "zio\/stm\/ZSTM$.html#replicateSTM[R,E,A](n:Int)(transaction:zio.stm.ZSTM[R,E,A]):zio.stm.ZSTM[R,E,Iterable[A]]", "kind" : "def"}, {"label" : "replicate", "tail" : "(n: Int)(tx: ZSTM[R, E, A]): Iterable[ZSTM[R, E, A]]", "member" : "zio.stm.ZSTM.replicate", "link" : "zio\/stm\/ZSTM$.html#replicate[R,E,A](n:Int)(tx:zio.stm.ZSTM[R,E,A]):Iterable[zio.stm.ZSTM[R,E,A]]", "kind" : "def"}, {"label" : "reduceAll", "tail" : "(a: ZSTM[R, E, A], as: Iterable[ZSTM[R1, E, A]])(f: (A, A) => A): ZSTM[R1, E, A]", "member" : "zio.stm.ZSTM.reduceAll", "link" : "zio\/stm\/ZSTM$.html#reduceAll[R,R1<:R,E,A](a:zio.stm.ZSTM[R,E,A],as:Iterable[zio.stm.ZSTM[R1,E,A]])(f:(A,A)=>A):zio.stm.ZSTM[R1,E,A]", "kind" : "def"}, {"label" : "partition", "tail" : "(in: Iterable[A])(f: (A) => ZSTM[R, E, B])(ev: CanFail[E]): ZSTM[R, Nothing, (Iterable[E], Iterable[B])]", "member" : "zio.stm.ZSTM.partition", "link" : "zio\/stm\/ZSTM$.html#partition[R,E,A,B](in:Iterable[A])(f:A=>zio.stm.ZSTM[R,E,B])(implicitev:zio.CanFail[E]):zio.stm.ZSTM[R,Nothing,(Iterable[E],Iterable[B])]", "kind" : "def"}, {"label" : "onCommit", "tail" : "(zio: ZIO[R, Nothing, Any])(trace: Trace): ZSTM[R, Nothing, Unit]", "member" : "zio.stm.ZSTM.onCommit", "link" : "zio\/stm\/ZSTM$.html#onCommit[R](zio:zio.ZIO[R,Nothing,Any])(implicittrace:zio.Trace):zio.stm.ZSTM[R,Nothing,Unit]", "kind" : "def"}, {"label" : "none", "tail" : ": USTM[Option[Nothing]]", "member" : "zio.stm.ZSTM.none", "link" : "zio\/stm\/ZSTM$.html#none:zio.stm.USTM[Option[Nothing]]", "kind" : "val"}, {"label" : "mergeAll", "tail" : "(in: Iterable[ZSTM[R, E, A]])(zero: B)(f: (B, A) => B): ZSTM[R, E, B]", "member" : "zio.stm.ZSTM.mergeAll", "link" : "zio\/stm\/ZSTM$.html#mergeAll[R,E,A,B](in:Iterable[zio.stm.ZSTM[R,E,A]])(zero:B)(f:(B,A)=>B):zio.stm.ZSTM[R,E,B]", "kind" : "def"}, {"label" : "loopDiscard", "tail" : "(initial: S)(cont: (S) => Boolean, inc: (S) => S)(body: (S) => ZSTM[R, E, Any]): ZSTM[R, E, Unit]", "member" : "zio.stm.ZSTM.loopDiscard", "link" : "zio\/stm\/ZSTM$.html#loopDiscard[R,E,S](initial:S)(cont:S=>Boolean,inc:S=>S)(body:S=>zio.stm.ZSTM[R,E,Any]):zio.stm.ZSTM[R,E,Unit]", "kind" : "def"}, {"label" : "loop", "tail" : "(initial: S)(cont: (S) => Boolean, inc: (S) => S)(body: (S) => ZSTM[R, E, A]): ZSTM[R, E, List[A]]", "member" : "zio.stm.ZSTM.loop", "link" : "zio\/stm\/ZSTM$.html#loop[R,E,A,S](initial:S)(cont:S=>Boolean,inc:S=>S)(body:S=>zio.stm.ZSTM[R,E,A]):zio.stm.ZSTM[R,E,List[A]]", "kind" : "def"}, {"label" : "left", "tail" : "(a: => A): USTM[Either[A, Nothing]]", "member" : "zio.stm.ZSTM.left", "link" : "zio\/stm\/ZSTM$.html#left[A](a:=>A):zio.stm.USTM[Either[A,Nothing]]", "kind" : "def"}, {"label" : "iterate", "tail" : "(initial: S)(cont: (S) => Boolean)(body: (S) => ZSTM[R, E, S]): ZSTM[R, E, S]", "member" : "zio.stm.ZSTM.iterate", "link" : "zio\/stm\/ZSTM$.html#iterate[R,E,S](initial:S)(cont:S=>Boolean)(body:S=>zio.stm.ZSTM[R,E,S]):zio.stm.ZSTM[R,E,S]", "kind" : "def"}, {"label" : "interruptAs", "tail" : "(fiberId: => FiberId): USTM[Nothing]", "member" : "zio.stm.ZSTM.interruptAs", "link" : "zio\/stm\/ZSTM$.html#interruptAs(fiberId:=>zio.FiberId):zio.stm.USTM[Nothing]", "kind" : "def"}, {"label" : "interrupt", "tail" : ": USTM[Nothing]", "member" : "zio.stm.ZSTM.interrupt", "link" : "zio\/stm\/ZSTM$.html#interrupt:zio.stm.USTM[Nothing]", "kind" : "val"}, {"label" : "ifSTM", "tail" : "(b: ZSTM[R, E, Boolean]): IfSTM[R, E]", "member" : "zio.stm.ZSTM.ifSTM", "link" : "zio\/stm\/ZSTM$.html#ifSTM[R,E](b:zio.stm.ZSTM[R,E,Boolean]):zio.stm.ZSTM.IfSTM[R,E]", "kind" : "def"}, {"label" : "fromTry", "tail" : "(a: => Try[A]): TaskSTM[A]", "member" : "zio.stm.ZSTM.fromTry", "link" : "zio\/stm\/ZSTM$.html#fromTry[A](a:=>scala.util.Try[A]):zio.stm.TaskSTM[A]", "kind" : "def"}, {"label" : "fromOption", "tail" : "(v: => Option[A]): STM[Option[Nothing], A]", "member" : "zio.stm.ZSTM.fromOption", "link" : "zio\/stm\/ZSTM$.html#fromOption[A](v:=>Option[A]):zio.stm.STM[Option[Nothing],A]", "kind" : "def"}, {"label" : "fromEither", "tail" : "(e: => Either[E, A]): STM[E, A]", "member" : "zio.stm.ZSTM.fromEither", "link" : "zio\/stm\/ZSTM$.html#fromEither[E,A](e:=>Either[E,A]):zio.stm.STM[E,A]", "kind" : "def"}, {"label" : "foreachDiscard", "tail" : "(in: Iterable[A])(f: (A) => ZSTM[R, E, Any]): ZSTM[R, E, Unit]", "member" : "zio.stm.ZSTM.foreachDiscard", "link" : "zio\/stm\/ZSTM$.html#foreachDiscard[R,E,A](in:Iterable[A])(f:A=>zio.stm.ZSTM[R,E,Any]):zio.stm.ZSTM[R,E,Unit]", "kind" : "def"}, {"label" : "foreach", "tail" : "(in: Set[A])(f: (A) => ZSTM[R, E, B]): ZSTM[R, E, Set[B]]", "member" : "zio.stm.ZSTM.foreach", "link" : "zio\/stm\/ZSTM$.html#foreach[R,E,A,B](in:Set[A])(f:A=>zio.stm.ZSTM[R,E,B]):zio.stm.ZSTM[R,E,Set[B]]", "kind" : "def"}, {"label" : "foreach", "tail" : "(in: Collection[A])(f: (A) => ZSTM[R, E, B])(bf: zio.BuildFrom[Collection[A], B, Collection[B]]): ZSTM[R, E, Collection[B]]", "member" : "zio.stm.ZSTM.foreach", "link" : "zio\/stm\/ZSTM$.html#foreach[R,E,A,B,Collection[+Element]<:Iterable[Element]](in:Collection[A])(f:A=>zio.stm.ZSTM[R,E,B])(implicitbf:zio.BuildFrom[Collection[A],B,Collection[B]]):zio.stm.ZSTM[R,E,Collection[B]]", "kind" : "def"}, {"label" : "forall", "tail" : "(as: Iterable[A])(f: (A) => ZSTM[R, E, Boolean]): ZSTM[R, E, Boolean]", "member" : "zio.stm.ZSTM.forall", "link" : "zio\/stm\/ZSTM$.html#forall[R,E,A](as:Iterable[A])(f:A=>zio.stm.ZSTM[R,E,Boolean]):zio.stm.ZSTM[R,E,Boolean]", "kind" : "def"}, {"label" : "foldRight", "tail" : "(in: Iterable[A])(zero: S)(f: (A, S) => ZSTM[R, E, S]): ZSTM[R, E, S]", "member" : "zio.stm.ZSTM.foldRight", "link" : "zio\/stm\/ZSTM$.html#foldRight[R,E,S,A](in:Iterable[A])(zero:S)(f:(A,S)=>zio.stm.ZSTM[R,E,S]):zio.stm.ZSTM[R,E,S]", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(in: Iterable[A])(zero: S)(f: (S, A) => ZSTM[R, E, S]): ZSTM[R, E, S]", "member" : "zio.stm.ZSTM.foldLeft", "link" : "zio\/stm\/ZSTM$.html#foldLeft[R,E,S,A](in:Iterable[A])(zero:S)(f:(S,A)=>zio.stm.ZSTM[R,E,S]):zio.stm.ZSTM[R,E,S]", "kind" : "def"}, {"label" : "flatten", "tail" : "(tx: ZSTM[R, E, ZSTM[R, E, A]]): ZSTM[R, E, A]", "member" : "zio.stm.ZSTM.flatten", "link" : "zio\/stm\/ZSTM$.html#flatten[R,E,A](tx:zio.stm.ZSTM[R,E,zio.stm.ZSTM[R,E,A]]):zio.stm.ZSTM[R,E,A]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(as: Set[A])(f: (A) => ZSTM[R, E, Boolean]): ZSTM[R, E, Set[A]]", "member" : "zio.stm.ZSTM.filterNot", "link" : "zio\/stm\/ZSTM$.html#filterNot[R,E,A](as:Set[A])(f:A=>zio.stm.ZSTM[R,E,Boolean]):zio.stm.ZSTM[R,E,Set[A]]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(as: Collection[A])(f: (A) => ZSTM[R, E, Boolean])(bf: zio.BuildFrom[Collection[A], A, Collection[A]]): ZSTM[R, E, Collection[A]]", "member" : "zio.stm.ZSTM.filterNot", "link" : "zio\/stm\/ZSTM$.html#filterNot[R,E,A,Collection[+Element]<:Iterable[Element]](as:Collection[A])(f:A=>zio.stm.ZSTM[R,E,Boolean])(implicitbf:zio.BuildFrom[Collection[A],A,Collection[A]]):zio.stm.ZSTM[R,E,Collection[A]]", "kind" : "def"}, {"label" : "filter", "tail" : "(as: Set[A])(f: (A) => ZSTM[R, E, Boolean]): ZSTM[R, E, Set[A]]", "member" : "zio.stm.ZSTM.filter", "link" : "zio\/stm\/ZSTM$.html#filter[R,E,A](as:Set[A])(f:A=>zio.stm.ZSTM[R,E,Boolean]):zio.stm.ZSTM[R,E,Set[A]]", "kind" : "def"}, {"label" : "filter", "tail" : "(as: Collection[A])(f: (A) => ZSTM[R, E, Boolean])(bf: zio.BuildFrom[Collection[A], A, Collection[A]]): ZSTM[R, E, Collection[A]]", "member" : "zio.stm.ZSTM.filter", "link" : "zio\/stm\/ZSTM$.html#filter[R,E,A,Collection[+Element]<:Iterable[Element]](as:Collection[A])(f:A=>zio.stm.ZSTM[R,E,Boolean])(implicitbf:zio.BuildFrom[Collection[A],A,Collection[A]]):zio.stm.ZSTM[R,E,Collection[A]]", "kind" : "def"}, {"label" : "fiberId", "tail" : ": USTM[FiberId]", "member" : "zio.stm.ZSTM.fiberId", "link" : "zio\/stm\/ZSTM$.html#fiberId:zio.stm.USTM[zio.FiberId]", "kind" : "val"}, {"label" : "fail", "tail" : "(e: => E): STM[E, Nothing]", "member" : "zio.stm.ZSTM.fail", "link" : "zio\/stm\/ZSTM$.html#fail[E](e:=>E):zio.stm.STM[E,Nothing]", "kind" : "def"}, {"label" : "exists", "tail" : "(as: Iterable[A])(f: (A) => ZSTM[R, E, Boolean]): ZSTM[R, E, Boolean]", "member" : "zio.stm.ZSTM.exists", "link" : "zio\/stm\/ZSTM$.html#exists[R,E,A](as:Iterable[A])(f:A=>zio.stm.ZSTM[R,E,Boolean]):zio.stm.ZSTM[R,E,Boolean]", "kind" : "def"}, {"label" : "environmentWithSTM", "tail" : "(): EnvironmentWithSTMPartiallyApplied[R]", "member" : "zio.stm.ZSTM.environmentWithSTM", "link" : "zio\/stm\/ZSTM$.html#environmentWithSTM[R]:zio.stm.ZSTM.EnvironmentWithSTMPartiallyApplied[R]", "kind" : "def"}, {"label" : "environmentWith", "tail" : "(): EnvironmentWithPartiallyApplied[R]", "member" : "zio.stm.ZSTM.environmentWith", "link" : "zio\/stm\/ZSTM$.html#environmentWith[R]:zio.stm.ZSTM.EnvironmentWithPartiallyApplied[R]", "kind" : "def"}, {"label" : "environment", "tail" : "(): URSTM[R, ZEnvironment[R]]", "member" : "zio.stm.ZSTM.environment", "link" : "zio\/stm\/ZSTM$.html#environment[R]:zio.stm.URSTM[R,zio.ZEnvironment[R]]", "kind" : "def"}, {"label" : "done", "tail" : "(exit: => TExit[E, A]): ZSTM[R, E, A]", "member" : "zio.stm.ZSTM.done", "link" : "zio\/stm\/ZSTM$.html#done[R,E,A](exit:=>zio.stm.ZSTM.internal.TExit[E,A]):zio.stm.ZSTM[R,E,A]", "kind" : "def"}, {"label" : "dieMessage", "tail" : "(m: => String): USTM[Nothing]", "member" : "zio.stm.ZSTM.dieMessage", "link" : "zio\/stm\/ZSTM$.html#dieMessage(m:=>String):zio.stm.USTM[Nothing]", "kind" : "def"}, {"label" : "die", "tail" : "(t: => Throwable): USTM[Nothing]", "member" : "zio.stm.ZSTM.die", "link" : "zio\/stm\/ZSTM$.html#die(t:=>Throwable):zio.stm.USTM[Nothing]", "kind" : "def"}, {"label" : "cond", "tail" : "(predicate: Boolean, result: => A, error: => E): STM[E, A]", "member" : "zio.stm.ZSTM.cond", "link" : "zio\/stm\/ZSTM$.html#cond[E,A](predicate:Boolean,result:=>A,error:=>E):zio.stm.STM[E,A]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(as: Iterable[A])(f: (A) => ZSTM[R, E, Option[B]]): ZSTM[R, E, Option[B]]", "member" : "zio.stm.ZSTM.collectFirst", "link" : "zio\/stm\/ZSTM$.html#collectFirst[R,E,A,B](as:Iterable[A])(f:A=>zio.stm.ZSTM[R,E,Option[B]]):zio.stm.ZSTM[R,E,Option[B]]", "kind" : "def"}, {"label" : "collectAllDiscard", "tail" : "(in: Iterable[ZSTM[R, E, A]]): ZSTM[R, E, Unit]", "member" : "zio.stm.ZSTM.collectAllDiscard", "link" : "zio\/stm\/ZSTM$.html#collectAllDiscard[R,E,A](in:Iterable[zio.stm.ZSTM[R,E,A]]):zio.stm.ZSTM[R,E,Unit]", "kind" : "def"}, {"label" : "collectAll", "tail" : "(in: Set[ZSTM[R, E, A]]): ZSTM[R, E, Set[A]]", "member" : "zio.stm.ZSTM.collectAll", "link" : "zio\/stm\/ZSTM$.html#collectAll[R,E,A](in:Set[zio.stm.ZSTM[R,E,A]]):zio.stm.ZSTM[R,E,Set[A]]", "kind" : "def"}, {"label" : "collectAll", "tail" : "(in: Collection[ZSTM[R, E, A]])(bf: zio.BuildFrom[Collection[ZSTM[R, E, A]], A, Collection[A]]): ZSTM[R, E, Collection[A]]", "member" : "zio.stm.ZSTM.collectAll", "link" : "zio\/stm\/ZSTM$.html#collectAll[R,E,A,Collection[+Element]<:Iterable[Element]](in:Collection[zio.stm.ZSTM[R,E,A]])(implicitbf:zio.BuildFrom[Collection[zio.stm.ZSTM[R,E,A]],A,Collection[A]]):zio.stm.ZSTM[R,E,Collection[A]]", "kind" : "def"}, {"label" : "collect", "tail" : "(in: Collection[A])(f: (A) => ZSTM[R, Option[E], B])(bf: zio.BuildFrom[Collection[A], B, Collection[B]]): ZSTM[R, E, Collection[B]]", "member" : "zio.stm.ZSTM.collect", "link" : "zio\/stm\/ZSTM$.html#collect[R,E,A,B,Collection[+Element]<:Iterable[Element]](in:Collection[A])(f:A=>zio.stm.ZSTM[R,Option[E],B])(implicitbf:zio.BuildFrom[Collection[A],B,Collection[B]]):zio.stm.ZSTM[R,E,Collection[B]]", "kind" : "def"}, {"label" : "check", "tail" : "(p: => Boolean): URSTM[R, Unit]", "member" : "zio.stm.ZSTM.check", "link" : "zio\/stm\/ZSTM$.html#check[R](p:=>Boolean):zio.stm.URSTM[R,Unit]", "kind" : "def"}, {"label" : "attempt", "tail" : "(a: => A): STM[Throwable, A]", "member" : "zio.stm.ZSTM.attempt", "link" : "zio\/stm\/ZSTM$.html#attempt[A](a:=>A):zio.stm.STM[Throwable,A]", "kind" : "def"}, {"label" : "atomically", "tail" : "(stm: ZSTM[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.stm.ZSTM.atomically", "link" : "zio\/stm\/ZSTM$.html#atomically[R,E,A](stm:zio.stm.ZSTM[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "acquireReleaseWith", "tail" : "(acquire: ZSTM[R, E, A]): Acquire[R, E, A]", "member" : "zio.stm.ZSTM.acquireReleaseWith", "link" : "zio\/stm\/ZSTM$.html#acquireReleaseWith[R,E,A](acquire:zio.stm.ZSTM[R,E,A]):zio.stm.ZSTM.Acquire[R,E,A]", "kind" : "def"}, {"label" : "absolve", "tail" : "(z: ZSTM[R, E, Either[E, A]]): ZSTM[R, E, A]", "member" : "zio.stm.ZSTM.absolve", "link" : "zio\/stm\/ZSTM$.html#absolve[R,E,A](z:zio.stm.ZSTM[R,E,Either[E,A]]):zio.stm.ZSTM[R,E,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/ZSTM$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/ZSTM$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/ZSTM$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/ZSTM$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/ZSTM$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/ZSTM$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/ZSTM$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/ZSTM$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/ZSTM$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/ZSTM$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/ZSTM$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/ZSTM$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/ZSTM$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/ZSTM$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/ZSTM$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/ZSTM$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/ZSTM$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/ZSTM$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/ZSTM$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/stm\/ZSTM.html", "kind" : "trait", "members_trait" : [{"label" : "zipWith", "tail" : "(that: => ZSTM[R1, E1, B])(f: (A, B) => C): ZSTM[R1, E1, C]", "member" : "zio.stm.ZSTM.zipWith", "link" : "zio\/stm\/ZSTM.html#zipWith[R1<:R,E1>:E,B,C](that:=>zio.stm.ZSTM[R1,E1,B])(f:(A,B)=>C):zio.stm.ZSTM[R1,E1,C]", "kind" : "def"}, {"label" : "zipRight", "tail" : "(that: => ZSTM[R1, E1, B]): ZSTM[R1, E1, B]", "member" : "zio.stm.ZSTM.zipRight", "link" : "zio\/stm\/ZSTM.html#zipRight[R1<:R,E1>:E,B](that:=>zio.stm.ZSTM[R1,E1,B]):zio.stm.ZSTM[R1,E1,B]", "kind" : "def"}, {"label" : "zipLeft", "tail" : "(that: => ZSTM[R1, E1, B]): ZSTM[R1, E1, A]", "member" : "zio.stm.ZSTM.zipLeft", "link" : "zio\/stm\/ZSTM.html#zipLeft[R1<:R,E1>:E,B](that:=>zio.stm.ZSTM[R1,E1,B]):zio.stm.ZSTM[R1,E1,A]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: => ZSTM[R1, E1, B])(zippable: Zippable[A, B]): ZSTM[R1, E1, Out]", "member" : "zio.stm.ZSTM.zip", "link" : "zio\/stm\/ZSTM.html#zip[R1<:R,E1>:E,B](that:=>zio.stm.ZSTM[R1,E1,B])(implicitzippable:zio.Zippable[A,B]):zio.stm.ZSTM[R1,E1,zippable.Out]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(f: (A) => Boolean): ZSTM[R, E, A]", "member" : "zio.stm.ZSTM.withFilter", "link" : "zio\/stm\/ZSTM.html#withFilter(f:A=>Boolean):zio.stm.ZSTM[R,E,A]", "kind" : "def"}, {"label" : "whenSTM", "tail" : "(b: ZSTM[R1, E1, Boolean]): ZSTM[R1, E1, Option[A]]", "member" : "zio.stm.ZSTM.whenSTM", "link" : "zio\/stm\/ZSTM.html#whenSTM[R1<:R,E1>:E](b:zio.stm.ZSTM[R1,E1,Boolean]):zio.stm.ZSTM[R1,E1,Option[A]]", "kind" : "def"}, {"label" : "when", "tail" : "(b: => Boolean): ZSTM[R, E, Option[A]]", "member" : "zio.stm.ZSTM.when", "link" : "zio\/stm\/ZSTM.html#when(b:=>Boolean):zio.stm.ZSTM[R,E,Option[A]]", "kind" : "def"}, {"label" : "updateServiceAt", "tail" : "(): UpdateServiceAt[R, E, A, Service]", "member" : "zio.stm.ZSTM.updateServiceAt", "link" : "zio\/stm\/ZSTM.html#updateServiceAt[Service]:zio.stm.ZSTM.UpdateServiceAt[R,E,A,Service]", "kind" : "final def"}, {"label" : "updateService", "tail" : "(): UpdateService[R, E, A, M]", "member" : "zio.stm.ZSTM.updateService", "link" : "zio\/stm\/ZSTM.html#updateService[M]:zio.stm.ZSTM.UpdateService[R,E,A,M]", "kind" : "def"}, {"label" : "unsome", "tail" : "(ev: <:<[E, Option[E1]]): ZSTM[R, E1, Option[A]]", "member" : "zio.stm.ZSTM.unsome", "link" : "zio\/stm\/ZSTM.html#unsome[E1](implicitev:E<:<Option[E1]):zio.stm.ZSTM[R,E1,Option[A]]", "kind" : "def"}, {"label" : "unright", "tail" : "(ev: IsSubtypeOfError[E, Either[B, E1]]): ZSTM[R, E1, Either[B, A]]", "member" : "zio.stm.ZSTM.unright", "link" : "zio\/stm\/ZSTM.html#unright[E1,B](implicitev:zio.IsSubtypeOfError[E,Either[B,E1]]):zio.stm.ZSTM[R,E1,Either[B,A]]", "kind" : "final def"}, {"label" : "unleft", "tail" : "(ev: IsSubtypeOfError[E, Either[E1, B]]): ZSTM[R, E1, Either[A, B]]", "member" : "zio.stm.ZSTM.unleft", "link" : "zio\/stm\/ZSTM.html#unleft[E1,B](implicitev:zio.IsSubtypeOfError[E,Either[E1,B]]):zio.stm.ZSTM[R,E1,Either[A,B]]", "kind" : "final def"}, {"label" : "unlessSTM", "tail" : "(b: ZSTM[R1, E1, Boolean]): ZSTM[R1, E1, Option[A]]", "member" : "zio.stm.ZSTM.unlessSTM", "link" : "zio\/stm\/ZSTM.html#unlessSTM[R1<:R,E1>:E](b:zio.stm.ZSTM[R1,E1,Boolean]):zio.stm.ZSTM[R1,E1,Option[A]]", "kind" : "def"}, {"label" : "unless", "tail" : "(b: => Boolean): ZSTM[R, E, Option[A]]", "member" : "zio.stm.ZSTM.unless", "link" : "zio\/stm\/ZSTM.html#unless(b:=>Boolean):zio.stm.ZSTM[R,E,Option[A]]", "kind" : "def"}, {"label" : "unit", "tail" : "(): ZSTM[R, E, Unit]", "member" : "zio.stm.ZSTM.unit", "link" : "zio\/stm\/ZSTM.html#unit:zio.stm.ZSTM[R,E,Unit]", "kind" : "def"}, {"label" : "tapError", "tail" : "(f: (E) => ZSTM[R1, E1, Any])(ev: CanFail[E]): ZSTM[R1, E1, A]", "member" : "zio.stm.ZSTM.tapError", "link" : "zio\/stm\/ZSTM.html#tapError[R1<:R,E1>:E](f:E=>zio.stm.ZSTM[R1,E1,Any])(implicitev:zio.CanFail[E]):zio.stm.ZSTM[R1,E1,A]", "kind" : "def"}, {"label" : "tapBoth", "tail" : "(f: (E) => ZSTM[R1, E1, Any], g: (A) => ZSTM[R1, E1, Any])(ev: CanFail[E]): ZSTM[R1, E1, A]", "member" : "zio.stm.ZSTM.tapBoth", "link" : "zio\/stm\/ZSTM.html#tapBoth[R1<:R,E1>:E](f:E=>zio.stm.ZSTM[R1,E1,Any],g:A=>zio.stm.ZSTM[R1,E1,Any])(implicitev:zio.CanFail[E]):zio.stm.ZSTM[R1,E1,A]", "kind" : "def"}, {"label" : "tap", "tail" : "(f: (A) => ZSTM[R1, E1, Any]): ZSTM[R1, E1, A]", "member" : "zio.stm.ZSTM.tap", "link" : "zio\/stm\/ZSTM.html#tap[R1<:R,E1>:E](f:A=>zio.stm.ZSTM[R1,E1,Any]):zio.stm.ZSTM[R1,E1,A]", "kind" : "def"}, {"label" : "summarized", "tail" : "(summary: ZSTM[R1, E1, B])(f: (B, B) => C): ZSTM[R1, E1, (C, A)]", "member" : "zio.stm.ZSTM.summarized", "link" : "zio\/stm\/ZSTM.html#summarized[R1<:R,E1>:E,B,C](summary:zio.stm.ZSTM[R1,E1,B])(f:(B,B)=>C):zio.stm.ZSTM[R1,E1,(C,A)]", "kind" : "def"}, {"label" : "someOrFailException", "tail" : "(ev: <:<[A, Option[B]], ev2: <:<[NoSuchElementException, E1]): ZSTM[R, E1, B]", "member" : "zio.stm.ZSTM.someOrFailException", "link" : "zio\/stm\/ZSTM.html#someOrFailException[B,E1>:E](implicitev:A<:<Option[B],implicitev2:NoSuchElementException<:<E1):zio.stm.ZSTM[R,E1,B]", "kind" : "def"}, {"label" : "someOrFail", "tail" : "(e: => E1)(ev: <:<[A, Option[B]]): ZSTM[R, E1, B]", "member" : "zio.stm.ZSTM.someOrFail", "link" : "zio\/stm\/ZSTM.html#someOrFail[B,E1>:E](e:=>E1)(implicitev:A<:<Option[B]):zio.stm.ZSTM[R,E1,B]", "kind" : "def"}, {"label" : "someOrElseSTM", "tail" : "(default: ZSTM[R1, E1, C])(ev0: <:<[A, Option[B]], ev1: <:<[C, B]): ZSTM[R1, E1, B]", "member" : "zio.stm.ZSTM.someOrElseSTM", "link" : "zio\/stm\/ZSTM.html#someOrElseSTM[B,R1<:R,E1>:E,C](default:zio.stm.ZSTM[R1,E1,C])(implicitev0:A<:<Option[B],implicitev1:C<:<B):zio.stm.ZSTM[R1,E1,B]", "kind" : "def"}, {"label" : "someOrElseSTM", "tail" : "(default: ZSTM[R1, E1, B])(ev: <:<[A, Option[B]]): ZSTM[R1, E1, B]", "member" : "zio.stm.ZSTM.someOrElseSTM", "link" : "zio\/stm\/ZSTM.html#someOrElseSTM[B,R1<:R,E1>:E](default:zio.stm.ZSTM[R1,E1,B])(implicitev:A<:<Option[B]):zio.stm.ZSTM[R1,E1,B]", "kind" : "def"}, {"label" : "someOrElse", "tail" : "(default: => C)(ev0: <:<[A, Option[B]], ev1: <:<[C, B]): ZSTM[R, E, B]", "member" : "zio.stm.ZSTM.someOrElse", "link" : "zio\/stm\/ZSTM.html#someOrElse[B,C](default:=>C)(implicitev0:A<:<Option[B],implicitev1:C<:<B):zio.stm.ZSTM[R,E,B]", "kind" : "def"}, {"label" : "someOrElse", "tail" : "(default: => B)(ev: <:<[A, Option[B]]): ZSTM[R, E, B]", "member" : "zio.stm.ZSTM.someOrElse", "link" : "zio\/stm\/ZSTM.html#someOrElse[B](default:=>B)(implicitev:A<:<Option[B]):zio.stm.ZSTM[R,E,B]", "kind" : "def"}, {"label" : "some", "tail" : "(ev: <:<[A, Option[B]]): ZSTM[R, Option[E], B]", "member" : "zio.stm.ZSTM.some", "link" : "zio\/stm\/ZSTM.html#some[B](implicitev:A<:<Option[B]):zio.stm.ZSTM[R,Option[E],B]", "kind" : "def"}, {"label" : "right", "tail" : "(ev: IsSubtypeOfOutput[A, Either[B, C]]): ZSTM[R, Either[B, E], C]", "member" : "zio.stm.ZSTM.right", "link" : "zio\/stm\/ZSTM.html#right[B,C](implicitev:zio.IsSubtypeOfOutput[A,Either[B,C]]):zio.stm.ZSTM[R,Either[B,E],C]", "kind" : "final def"}, {"label" : "retryWhile", "tail" : "(f: (A) => Boolean): ZSTM[R, E, A]", "member" : "zio.stm.ZSTM.retryWhile", "link" : "zio\/stm\/ZSTM.html#retryWhile(f:A=>Boolean):zio.stm.ZSTM[R,E,A]", "kind" : "def"}, {"label" : "retryUntil", "tail" : "(f: (A) => Boolean): ZSTM[R, E, A]", "member" : "zio.stm.ZSTM.retryUntil", "link" : "zio\/stm\/ZSTM.html#retryUntil(f:A=>Boolean):zio.stm.ZSTM[R,E,A]", "kind" : "def"}, {"label" : "rejectSTM", "tail" : "(pf: PartialFunction[A, ZSTM[R1, E1, E1]]): ZSTM[R1, E1, A]", "member" : "zio.stm.ZSTM.rejectSTM", "link" : "zio\/stm\/ZSTM.html#rejectSTM[R1<:R,E1>:E](pf:PartialFunction[A,zio.stm.ZSTM[R1,E1,E1]]):zio.stm.ZSTM[R1,E1,A]", "kind" : "def"}, {"label" : "reject", "tail" : "(pf: PartialFunction[A, E1]): ZSTM[R, E1, A]", "member" : "zio.stm.ZSTM.reject", "link" : "zio\/stm\/ZSTM.html#reject[E1>:E](pf:PartialFunction[A,E1]):zio.stm.ZSTM[R,E1,A]", "kind" : "def"}, {"label" : "refineOrDieWith", "tail" : "(pf: PartialFunction[E, E1])(f: (E) => Throwable)(ev: CanFail[E]): ZSTM[R, E1, A]", "member" : "zio.stm.ZSTM.refineOrDieWith", "link" : "zio\/stm\/ZSTM.html#refineOrDieWith[E1](pf:PartialFunction[E,E1])(f:E=>Throwable)(implicitev:zio.CanFail[E]):zio.stm.ZSTM[R,E1,A]", "kind" : "def"}, {"label" : "refineOrDie", "tail" : "(pf: PartialFunction[E, E1])(ev1: IsSubtypeOfError[E, Throwable], ev2: CanFail[E]): ZSTM[R, E1, A]", "member" : "zio.stm.ZSTM.refineOrDie", "link" : "zio\/stm\/ZSTM.html#refineOrDie[E1](pf:PartialFunction[E,E1])(implicitev1:zio.IsSubtypeOfError[E,Throwable],implicitev2:zio.CanFail[E]):zio.stm.ZSTM[R,E1,A]", "kind" : "def"}, {"label" : "provideSomeEnvironment", "tail" : "(f: (ZEnvironment[R0]) => ZEnvironment[R]): ZSTM[R0, E, A]", "member" : "zio.stm.ZSTM.provideSomeEnvironment", "link" : "zio\/stm\/ZSTM.html#provideSomeEnvironment[R0](f:zio.ZEnvironment[R0]=>zio.ZEnvironment[R]):zio.stm.ZSTM[R0,E,A]", "kind" : "def"}, {"label" : "provideEnvironment", "tail" : "(r: ZEnvironment[R]): STM[E, A]", "member" : "zio.stm.ZSTM.provideEnvironment", "link" : "zio\/stm\/ZSTM.html#provideEnvironment(r:zio.ZEnvironment[R]):zio.stm.STM[E,A]", "kind" : "def"}, {"label" : "orTry", "tail" : "(that: => ZSTM[R1, E1, A1]): ZSTM[R1, E1, A1]", "member" : "zio.stm.ZSTM.orTry", "link" : "zio\/stm\/ZSTM.html#orTry[R1<:R,E1>:E,A1>:A](that:=>zio.stm.ZSTM[R1,E1,A1]):zio.stm.ZSTM[R1,E1,A1]", "kind" : "def"}, {"label" : "orElseSucceed", "tail" : "(a1: => A1): URSTM[R, A1]", "member" : "zio.stm.ZSTM.orElseSucceed", "link" : "zio\/stm\/ZSTM.html#orElseSucceed[A1>:A](a1:=>A1):zio.stm.URSTM[R,A1]", "kind" : "def"}, {"label" : "orElseOptional", "tail" : "(that: => ZSTM[R1, Option[E1], A1])(ev: <:<[E, Option[E1]]): ZSTM[R1, Option[E1], A1]", "member" : "zio.stm.ZSTM.orElseOptional", "link" : "zio\/stm\/ZSTM.html#orElseOptional[R1<:R,E1,A1>:A](that:=>zio.stm.ZSTM[R1,Option[E1],A1])(implicitev:E<:<Option[E1]):zio.stm.ZSTM[R1,Option[E1],A1]", "kind" : "def"}, {"label" : "orElseFail", "tail" : "(e1: => E1): ZSTM[R, E1, A]", "member" : "zio.stm.ZSTM.orElseFail", "link" : "zio\/stm\/ZSTM.html#orElseFail[E1](e1:=>E1):zio.stm.ZSTM[R,E1,A]", "kind" : "def"}, {"label" : "orElseEither", "tail" : "(that: => ZSTM[R1, E1, B]): ZSTM[R1, E1, Either[A, B]]", "member" : "zio.stm.ZSTM.orElseEither", "link" : "zio\/stm\/ZSTM.html#orElseEither[R1<:R,E1,B](that:=>zio.stm.ZSTM[R1,E1,B]):zio.stm.ZSTM[R1,E1,Either[A,B]]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: => ZSTM[R1, E1, A1]): ZSTM[R1, E1, A1]", "member" : "zio.stm.ZSTM.orElse", "link" : "zio\/stm\/ZSTM.html#orElse[R1<:R,E1,A1>:A](that:=>zio.stm.ZSTM[R1,E1,A1]):zio.stm.ZSTM[R1,E1,A1]", "kind" : "def"}, {"label" : "orDieWith", "tail" : "(f: (E) => Throwable)(ev: CanFail[E]): URSTM[R, A]", "member" : "zio.stm.ZSTM.orDieWith", "link" : "zio\/stm\/ZSTM.html#orDieWith(f:E=>Throwable)(implicitev:zio.CanFail[E]):zio.stm.URSTM[R,A]", "kind" : "def"}, {"label" : "orDie", "tail" : "(ev1: IsSubtypeOfError[E, Throwable], ev2: CanFail[E]): URSTM[R, A]", "member" : "zio.stm.ZSTM.orDie", "link" : "zio\/stm\/ZSTM.html#orDie(implicitev1:zio.IsSubtypeOfError[E,Throwable],implicitev2:zio.CanFail[E]):zio.stm.URSTM[R,A]", "kind" : "def"}, {"label" : "option", "tail" : "(ev: CanFail[E]): URSTM[R, Option[A]]", "member" : "zio.stm.ZSTM.option", "link" : "zio\/stm\/ZSTM.html#option(implicitev:zio.CanFail[E]):zio.stm.URSTM[R,Option[A]]", "kind" : "def"}, {"label" : "none", "tail" : "(ev: <:<[A, Option[B]]): ZSTM[R, Option[E], Unit]", "member" : "zio.stm.ZSTM.none", "link" : "zio\/stm\/ZSTM.html#none[B](implicitev:A<:<Option[B]):zio.stm.ZSTM[R,Option[E],Unit]", "kind" : "def"}, {"label" : "merge", "tail" : "(ev1: <:<[E, A1], ev2: CanFail[E]): URSTM[R, A1]", "member" : "zio.stm.ZSTM.merge", "link" : "zio\/stm\/ZSTM.html#merge[A1>:A](implicitev1:E<:<A1,implicitev2:zio.CanFail[E]):zio.stm.URSTM[R,A1]", "kind" : "def"}, {"label" : "mapError", "tail" : "(f: (E) => E1)(ev: CanFail[E]): ZSTM[R, E1, A]", "member" : "zio.stm.ZSTM.mapError", "link" : "zio\/stm\/ZSTM.html#mapError[E1](f:E=>E1)(implicitev:zio.CanFail[E]):zio.stm.ZSTM[R,E1,A]", "kind" : "def"}, {"label" : "mapBoth", "tail" : "(f: (E) => E2, g: (A) => B)(ev: CanFail[E]): ZSTM[R, E2, B]", "member" : "zio.stm.ZSTM.mapBoth", "link" : "zio\/stm\/ZSTM.html#mapBoth[E2,B](f:E=>E2,g:A=>B)(implicitev:zio.CanFail[E]):zio.stm.ZSTM[R,E2,B]", "kind" : "def"}, {"label" : "mapAttempt", "tail" : "(f: (A) => B)(ev: IsSubtypeOfError[E, Throwable]): ZSTM[R, Throwable, B]", "member" : "zio.stm.ZSTM.mapAttempt", "link" : "zio\/stm\/ZSTM.html#mapAttempt[B](f:A=>B)(implicitev:zio.IsSubtypeOfError[E,Throwable]):zio.stm.ZSTM[R,Throwable,B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B): ZSTM[R, E, B]", "member" : "zio.stm.ZSTM.map", "link" : "zio\/stm\/ZSTM.html#map[B](f:A=>B):zio.stm.ZSTM[R,E,B]", "kind" : "def"}, {"label" : "left", "tail" : "(ev: IsSubtypeOfOutput[A, Either[B, C]]): ZSTM[R, Either[E, C], B]", "member" : "zio.stm.ZSTM.left", "link" : "zio\/stm\/ZSTM.html#left[B,C](implicitev:zio.IsSubtypeOfOutput[A,Either[B,C]]):zio.stm.ZSTM[R,Either[E,C],B]", "kind" : "def"}, {"label" : "isSuccess", "tail" : "(): ZSTM[R, Nothing, Boolean]", "member" : "zio.stm.ZSTM.isSuccess", "link" : "zio\/stm\/ZSTM.html#isSuccess:zio.stm.ZSTM[R,Nothing,Boolean]", "kind" : "def"}, {"label" : "isFailure", "tail" : "(): ZSTM[R, Nothing, Boolean]", "member" : "zio.stm.ZSTM.isFailure", "link" : "zio\/stm\/ZSTM.html#isFailure:zio.stm.ZSTM[R,Nothing,Boolean]", "kind" : "def"}, {"label" : "ignore", "tail" : "(): URSTM[R, Unit]", "member" : "zio.stm.ZSTM.ignore", "link" : "zio\/stm\/ZSTM.html#ignore:zio.stm.URSTM[R,Unit]", "kind" : "def"}, {"label" : "head", "tail" : "(ev: <:<[A, List[B]]): ZSTM[R, Option[E], B]", "member" : "zio.stm.ZSTM.head", "link" : "zio\/stm\/ZSTM.html#head[B](implicitev:A<:<List[B]):zio.stm.ZSTM[R,Option[E],B]", "kind" : "def"}, {"label" : "foldSTM", "tail" : "(f: (E) => ZSTM[R1, E1, B], g: (A) => ZSTM[R1, E1, B])(ev: CanFail[E]): ZSTM[R1, E1, B]", "member" : "zio.stm.ZSTM.foldSTM", "link" : "zio\/stm\/ZSTM.html#foldSTM[R1<:R,E1,B](f:E=>zio.stm.ZSTM[R1,E1,B],g:A=>zio.stm.ZSTM[R1,E1,B])(implicitev:zio.CanFail[E]):zio.stm.ZSTM[R1,E1,B]", "kind" : "def"}, {"label" : "fold", "tail" : "(f: (E) => B, g: (A) => B)(ev: CanFail[E]): URSTM[R, B]", "member" : "zio.stm.ZSTM.fold", "link" : "zio\/stm\/ZSTM.html#fold[B](f:E=>B,g:A=>B)(implicitev:zio.CanFail[E]):zio.stm.URSTM[R,B]", "kind" : "def"}, {"label" : "flipWith", "tail" : "(f: (ZSTM[R, A, E]) => ZSTM[R1, A1, E1]): ZSTM[R1, E1, A1]", "member" : "zio.stm.ZSTM.flipWith", "link" : "zio\/stm\/ZSTM.html#flipWith[R1,A1,E1](f:zio.stm.ZSTM[R,A,E]=>zio.stm.ZSTM[R1,A1,E1]):zio.stm.ZSTM[R1,E1,A1]", "kind" : "def"}, {"label" : "flip", "tail" : "(): ZSTM[R, A, E]", "member" : "zio.stm.ZSTM.flip", "link" : "zio\/stm\/ZSTM.html#flip:zio.stm.ZSTM[R,A,E]", "kind" : "def"}, {"label" : "flattenErrorOption", "tail" : "(default: => E2)(ev: <:<[E, Option[E1]]): ZSTM[R, E1, A]", "member" : "zio.stm.ZSTM.flattenErrorOption", "link" : "zio\/stm\/ZSTM.html#flattenErrorOption[E1,E2<:E1](default:=>E2)(implicitev:E<:<Option[E1]):zio.stm.ZSTM[R,E1,A]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[A, ZSTM[R1, E1, B]]): ZSTM[R1, E1, B]", "member" : "zio.stm.ZSTM.flatten", "link" : "zio\/stm\/ZSTM.html#flatten[R1<:R,E1>:E,B](implicitev:A<:<zio.stm.ZSTM[R1,E1,B]):zio.stm.ZSTM[R1,E1,B]", "kind" : "def"}, {"label" : "flatMapError", "tail" : "(f: (E) => ZSTM[R1, Nothing, E2])(ev: CanFail[E]): ZSTM[R1, E2, A]", "member" : "zio.stm.ZSTM.flatMapError", "link" : "zio\/stm\/ZSTM.html#flatMapError[R1<:R,E2](f:E=>zio.stm.ZSTM[R1,Nothing,E2])(implicitev:zio.CanFail[E]):zio.stm.ZSTM[R1,E2,A]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) => ZSTM[R1, E1, B]): ZSTM[R1, E1, B]", "member" : "zio.stm.ZSTM.flatMap", "link" : "zio\/stm\/ZSTM.html#flatMap[R1<:R,E1>:E,B](f:A=>zio.stm.ZSTM[R1,E1,B]):zio.stm.ZSTM[R1,E1,B]", "kind" : "def"}, {"label" : "filterOrFail", "tail" : "(p: (A) => Boolean)(e: => E1): ZSTM[R, E1, A]", "member" : "zio.stm.ZSTM.filterOrFail", "link" : "zio\/stm\/ZSTM.html#filterOrFail[E1>:E](p:A=>Boolean)(e:=>E1):zio.stm.ZSTM[R,E1,A]", "kind" : "def"}, {"label" : "filterOrElseWith", "tail" : "(p: (A) => Boolean)(f: (A) => ZSTM[R1, E1, A1]): ZSTM[R1, E1, A1]", "member" : "zio.stm.ZSTM.filterOrElseWith", "link" : "zio\/stm\/ZSTM.html#filterOrElseWith[R1<:R,E1>:E,A1>:A](p:A=>Boolean)(f:A=>zio.stm.ZSTM[R1,E1,A1]):zio.stm.ZSTM[R1,E1,A1]", "kind" : "def"}, {"label" : "filterOrElse", "tail" : "(p: (A) => Boolean)(zstm: => ZSTM[R1, E1, A1]): ZSTM[R1, E1, A1]", "member" : "zio.stm.ZSTM.filterOrElse", "link" : "zio\/stm\/ZSTM.html#filterOrElse[R1<:R,E1>:E,A1>:A](p:A=>Boolean)(zstm:=>zio.stm.ZSTM[R1,E1,A1]):zio.stm.ZSTM[R1,E1,A1]", "kind" : "def"}, {"label" : "filterOrDieMessage", "tail" : "(p: (A) => Boolean)(msg: => String): ZSTM[R, E, A]", "member" : "zio.stm.ZSTM.filterOrDieMessage", "link" : "zio\/stm\/ZSTM.html#filterOrDieMessage(p:A=>Boolean)(msg:=>String):zio.stm.ZSTM[R,E,A]", "kind" : "def"}, {"label" : "filterOrDie", "tail" : "(p: (A) => Boolean)(t: => Throwable): ZSTM[R, E, A]", "member" : "zio.stm.ZSTM.filterOrDie", "link" : "zio\/stm\/ZSTM.html#filterOrDie(p:A=>Boolean)(t:=>Throwable):zio.stm.ZSTM[R,E,A]", "kind" : "def"}, {"label" : "eventually", "tail" : "(ev: CanFail[E]): URSTM[R, A]", "member" : "zio.stm.ZSTM.eventually", "link" : "zio\/stm\/ZSTM.html#eventually(implicitev:zio.CanFail[E]):zio.stm.URSTM[R,A]", "kind" : "def"}, {"label" : "ensuring", "tail" : "(finalizer: ZSTM[R1, Nothing, Any]): ZSTM[R1, E, A]", "member" : "zio.stm.ZSTM.ensuring", "link" : "zio\/stm\/ZSTM.html#ensuring[R1<:R](finalizer:zio.stm.ZSTM[R1,Nothing,Any]):zio.stm.ZSTM[R1,E,A]", "kind" : "def"}, {"label" : "either", "tail" : "(ev: CanFail[E]): URSTM[R, Either[E, A]]", "member" : "zio.stm.ZSTM.either", "link" : "zio\/stm\/ZSTM.html#either(implicitev:zio.CanFail[E]):zio.stm.URSTM[R,Either[E,A]]", "kind" : "def"}, {"label" : "repeatWhile", "tail" : "(f: (A) => Boolean): ZSTM[R, E, A]", "member" : "zio.stm.ZSTM.repeatWhile", "link" : "zio\/stm\/ZSTM.html#repeatWhile(f:A=>Boolean):zio.stm.ZSTM[R,E,A]", "kind" : "def"}, {"label" : "repeatUntil", "tail" : "(f: (A) => Boolean): ZSTM[R, E, A]", "member" : "zio.stm.ZSTM.repeatUntil", "link" : "zio\/stm\/ZSTM.html#repeatUntil(f:A=>Boolean):zio.stm.ZSTM[R,E,A]", "kind" : "def"}, {"label" : "commitEither", "tail" : "(trace: Trace): ZIO[R, E, A]", "member" : "zio.stm.ZSTM.commitEither", "link" : "zio\/stm\/ZSTM.html#commitEither(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "commit", "tail" : "(trace: Trace): ZIO[R, E, A]", "member" : "zio.stm.ZSTM.commit", "link" : "zio\/stm\/ZSTM.html#commit(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "collectSTM", "tail" : "(pf: PartialFunction[A, ZSTM[R1, E1, B]]): ZSTM[R1, E1, B]", "member" : "zio.stm.ZSTM.collectSTM", "link" : "zio\/stm\/ZSTM.html#collectSTM[R1<:R,E1>:E,B](pf:PartialFunction[A,zio.stm.ZSTM[R1,E1,B]]):zio.stm.ZSTM[R1,E1,B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B]): ZSTM[R, E, B]", "member" : "zio.stm.ZSTM.collect", "link" : "zio\/stm\/ZSTM.html#collect[B](pf:PartialFunction[A,B]):zio.stm.ZSTM[R,E,B]", "kind" : "def"}, {"label" : "catchSome", "tail" : "(pf: PartialFunction[E, ZSTM[R1, E1, A1]])(ev: CanFail[E]): ZSTM[R1, E1, A1]", "member" : "zio.stm.ZSTM.catchSome", "link" : "zio\/stm\/ZSTM.html#catchSome[R1<:R,E1>:E,A1>:A](pf:PartialFunction[E,zio.stm.ZSTM[R1,E1,A1]])(implicitev:zio.CanFail[E]):zio.stm.ZSTM[R1,E1,A1]", "kind" : "def"}, {"label" : "catchAll", "tail" : "(h: (E) => ZSTM[R1, E2, A1])(ev: CanFail[E]): ZSTM[R1, E2, A1]", "member" : "zio.stm.ZSTM.catchAll", "link" : "zio\/stm\/ZSTM.html#catchAll[R1<:R,E2,A1>:A](h:E=>zio.stm.ZSTM[R1,E2,A1])(implicitev:zio.CanFail[E]):zio.stm.ZSTM[R1,E2,A1]", "kind" : "def"}, {"label" : "asSomeError", "tail" : "(): ZSTM[R, Option[E], A]", "member" : "zio.stm.ZSTM.asSomeError", "link" : "zio\/stm\/ZSTM.html#asSomeError:zio.stm.ZSTM[R,Option[E],A]", "kind" : "def"}, {"label" : "asSome", "tail" : "(): ZSTM[R, E, Option[A]]", "member" : "zio.stm.ZSTM.asSome", "link" : "zio\/stm\/ZSTM.html#asSome:zio.stm.ZSTM[R,E,Option[A]]", "kind" : "def"}, {"label" : "as", "tail" : "(b: => B): ZSTM[R, E, B]", "member" : "zio.stm.ZSTM.as", "link" : "zio\/stm\/ZSTM.html#as[B](b:=>B):zio.stm.ZSTM[R,E,B]", "kind" : "def"}, {"label" : "absolve", "tail" : "(ev: <:<[A, Either[E1, B]]): ZSTM[R, E1, B]", "member" : "zio.stm.ZSTM.absolve", "link" : "zio\/stm\/ZSTM.html#absolve[E1>:E,B](implicitev:A<:<Either[E1,B]):zio.stm.ZSTM[R,E1,B]", "kind" : "def"}, {"label" : "<|>", "tail" : "(that: => ZSTM[R1, E1, A1]): ZSTM[R1, E1, A1]", "member" : "zio.stm.ZSTM.<|>", "link" : "zio\/stm\/ZSTM.html#<|>[R1<:R,E1>:E,A1>:A](that:=>zio.stm.ZSTM[R1,E1,A1]):zio.stm.ZSTM[R1,E1,A1]", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => ZSTM[R1, E1, A1]): ZSTM[R1, E1, A1]", "member" : "zio.stm.ZSTM.<>", "link" : "zio\/stm\/ZSTM.html#<>[R1<:R,E1,A1>:A](that:=>zio.stm.ZSTM[R1,E1,A1]):zio.stm.ZSTM[R1,E1,A1]", "kind" : "def"}, {"label" : "<+>", "tail" : "(that: => ZSTM[R1, E1, B]): ZSTM[R1, E1, Either[A, B]]", "member" : "zio.stm.ZSTM.<+>", "link" : "zio\/stm\/ZSTM.html#<+>[R1<:R,E1,B](that:=>zio.stm.ZSTM[R1,E1,B]):zio.stm.ZSTM[R1,E1,Either[A,B]]", "kind" : "def"}, {"label" : "<*>", "tail" : "(that: => ZSTM[R1, E1, B])(zippable: Zippable[A, B]): ZSTM[R1, E1, Out]", "member" : "zio.stm.ZSTM.<*>", "link" : "zio\/stm\/ZSTM.html#<*>[R1<:R,E1>:E,B](that:=>zio.stm.ZSTM[R1,E1,B])(implicitzippable:zio.Zippable[A,B]):zio.stm.ZSTM[R1,E1,zippable.Out]", "kind" : "def"}, {"label" : "<*", "tail" : "(that: => ZSTM[R1, E1, B]): ZSTM[R1, E1, A]", "member" : "zio.stm.ZSTM.<*", "link" : "zio\/stm\/ZSTM.html#<*[R1<:R,E1>:E,B](that:=>zio.stm.ZSTM[R1,E1,B]):zio.stm.ZSTM[R1,E1,A]", "kind" : "def"}, {"label" : "*>", "tail" : "(that: => ZSTM[R1, E1, B]): ZSTM[R1, E1, B]", "member" : "zio.stm.ZSTM.*>", "link" : "zio\/stm\/ZSTM.html#*>[R1<:R,E1>:E,B](that:=>zio.stm.ZSTM[R1,E1,B]):zio.stm.ZSTM[R1,E1,B]", "kind" : "def"}, {"label" : "!", "tail" : "(ev: <:<[E, Throwable], ev2: CanFail[E]): ZSTM[R, Nothing, A]", "member" : "zio.stm.ZSTM.!", "link" : "zio\/stm\/ZSTM.html#!(implicitev:E<:<Throwable,implicitev2:zio.CanFail[E]):zio.stm.ZSTM[R,Nothing,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stm\/ZSTM.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stm\/ZSTM.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stm\/ZSTM.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stm\/ZSTM.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stm\/ZSTM.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stm\/ZSTM.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stm\/ZSTM.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stm\/ZSTM.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stm\/ZSTM.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stm\/ZSTM.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stm\/ZSTM.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stm\/ZSTM.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/ZSTM.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/ZSTM.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stm\/ZSTM.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stm\/ZSTM.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stm\/ZSTM.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stm\/ZSTM.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stm\/ZSTM.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "tag", "tail" : "(): Int", "member" : "zio.stm.ZSTM.tag", "link" : "zio\/stm\/ZSTM.html#tag:Int", "kind" : "abstract def"}], "shortDescription" : "STM[E, A] represents an effect that can be performed transactionally,resulting in a failure E or a value A."}], "zio" : [{"name" : "zio.=!=", "shortDescription" : "Evidence type A is not equal to type B.", "object" : "zio\/$eq$bang$eq$.html", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/$eq$bang$eq.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/$eq$bang$eq.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/$eq$bang$eq.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/$eq$bang$eq.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/$eq$bang$eq.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/$eq$bang$eq.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/$eq$bang$eq.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/$eq$bang$eq.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/$eq$bang$eq.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/$eq$bang$eq.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/$eq$bang$eq.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/$eq$bang$eq.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/$eq$bang$eq.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/$eq$bang$eq.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/$eq$bang$eq.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/$eq$bang$eq.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/$eq$bang$eq.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/$eq$bang$eq.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/$eq$bang$eq.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "neqAmbig2", "tail" : "(): =!=[A, A]", "member" : "zio.=!=.neqAmbig2", "link" : "zio\/$eq$bang$eq$.html#neqAmbig2[A]:A=!=A", "kind" : "implicit def"}, {"label" : "neqAmbig1", "tail" : "(): =!=[A, A]", "member" : "zio.=!=.neqAmbig1", "link" : "zio\/$eq$bang$eq$.html#neqAmbig1[A]:A=!=A", "kind" : "implicit def"}, {"label" : "neq", "tail" : "(): =!=[A, B]", "member" : "zio.=!=.neq", "link" : "zio\/$eq$bang$eq$.html#neq[A,B]:A=!=B", "kind" : "implicit def"}, {"label" : "unexpected", "tail" : "(): Nothing", "member" : "zio.=!=.unexpected", "link" : "zio\/$eq$bang$eq$.html#unexpected:Nothing", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/$eq$bang$eq$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/$eq$bang$eq$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/$eq$bang$eq$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/$eq$bang$eq$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/$eq$bang$eq$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/$eq$bang$eq$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/$eq$bang$eq$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/$eq$bang$eq$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/$eq$bang$eq$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/$eq$bang$eq$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/$eq$bang$eq$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/$eq$bang$eq$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/$eq$bang$eq$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/$eq$bang$eq$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/$eq$bang$eq$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/$eq$bang$eq$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/$eq$bang$eq$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/$eq$bang$eq$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/$eq$bang$eq$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/$eq$bang$eq.html", "kind" : "class"}, {"name" : "zio.BuildInfo", "case object" : "zio\/BuildInfo$.html", "shortDescription" : "This object was generated by sbt-buildinfo.", "members_case object" : [{"label" : "toString", "tail" : ": String", "member" : "zio.BuildInfo.toString", "link" : "zio\/BuildInfo$.html#toString:String", "kind" : "val"}, {"label" : "optimizationsEnabled", "tail" : ": Boolean(false)", "member" : "zio.BuildInfo.optimizationsEnabled", "link" : "zio\/BuildInfo$.html#optimizationsEnabled:Boolean(false)", "kind" : "final val"}, {"label" : "isSnapshot", "tail" : ": Boolean(true)", "member" : "zio.BuildInfo.isSnapshot", "link" : "zio\/BuildInfo$.html#isSnapshot:Boolean(true)", "kind" : "final val"}, {"label" : "sbtVersion", "tail" : ": String(\"1.10.7\")", "member" : "zio.BuildInfo.sbtVersion", "link" : "zio\/BuildInfo$.html#sbtVersion:String(\"1.10.7\")", "kind" : "final val"}, {"label" : "scalaVersion", "tail" : ": String(\"2.13.16\")", "member" : "zio.BuildInfo.scalaVersion", "link" : "zio\/BuildInfo$.html#scalaVersion:String(\"2.13.16\")", "kind" : "final val"}, {"label" : "version", "tail" : ": String(\"2.1.15+59-823f25cd-SNAPSHOT\")", "member" : "zio.BuildInfo.version", "link" : "zio\/BuildInfo$.html#version:String(\"2.1.15+59-823f25cd-SNAPSHOT\")", "kind" : "final val"}, {"label" : "name", "tail" : ": String(\"zio\")", "member" : "zio.BuildInfo.name", "link" : "zio\/BuildInfo$.html#name:String(\"zio\")", "kind" : "final val"}, {"label" : "moduleName", "tail" : ": String(\"zio\")", "member" : "zio.BuildInfo.moduleName", "link" : "zio\/BuildInfo$.html#moduleName:String(\"zio\")", "kind" : "final val"}, {"label" : "organization", "tail" : ": String(\"dev.zio\")", "member" : "zio.BuildInfo.organization", "link" : "zio\/BuildInfo$.html#organization:String(\"dev.zio\")", "kind" : "final val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/BuildInfo$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "zio\/BuildInfo$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/BuildInfo$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/BuildInfo$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/BuildInfo$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/BuildInfo$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/BuildInfo$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/BuildInfo$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/BuildInfo$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/BuildInfo$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/BuildInfo$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/BuildInfo$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/BuildInfo$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/BuildInfo$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/BuildInfo$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/BuildInfo$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/BuildInfo$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/BuildInfo$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/BuildInfo$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "zio.Cached", "object" : "zio\/Cached$.html", "members_object" : [{"label" : "manual", "tail" : "(acquire: ZIO[R, Error, Resource])(trace: Trace): ZIO[R with Scope, Nothing, Cached[Error, Resource]]", "member" : "zio.Cached.manual", "link" : "zio\/Cached$.html#manual[R,Error,Resource](acquire:zio.ZIO[R,Error,Resource])(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,zio.Cached[Error,Resource]]", "kind" : "def"}, {"label" : "auto", "tail" : "(acquire: ZIO[R, Error, Resource], policy: Schedule[Any, Any, Any])(trace: Trace): ZIO[R with Scope, Nothing, Cached[Error, Resource]]", "member" : "zio.Cached.auto", "link" : "zio\/Cached$.html#auto[R,Error,Resource](acquire:zio.ZIO[R,Error,Resource],policy:zio.Schedule[Any,Any,Any])(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,zio.Cached[Error,Resource]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Cached$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Cached$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Cached$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Cached$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Cached$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Cached$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Cached$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Cached$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Cached$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Cached$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Cached$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Cached$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Cached$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Cached$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Cached$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Cached$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Cached$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Cached$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Cached$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/Cached.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Cached.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Cached.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Cached.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Cached.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Cached.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Cached.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Cached.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Cached.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Cached.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Cached.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Cached.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Cached.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Cached.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Cached.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Cached.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Cached.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Cached.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Cached.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Cached.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "refresh", "tail" : "(trace: Trace): IO[Error, Unit]", "member" : "zio.Cached.refresh", "link" : "zio\/Cached.html#refresh(implicittrace:zio.Trace):zio.IO[Error,Unit]", "kind" : "abstract def"}, {"label" : "get", "tail" : "(trace: Trace): IO[Error, Resource]", "member" : "zio.Cached.get", "link" : "zio\/Cached.html#get(implicittrace:zio.Trace):zio.IO[Error,Resource]", "kind" : "abstract def"}], "shortDescription" : "A Cached is a possibly resourceful value that is loaded into memory, andwhich can be refreshed either manually or automatically."}, {"name" : "zio.CancelableFuture", "shortDescription" : "", "members_class" : [{"label" : "result", "tail" : "(atMost: scala.concurrent.duration.Duration)(permit: CanAwait): A", "member" : "zio.CancelableFuture.result", "link" : "zio\/CancelableFuture.html#result(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):A", "kind" : "final def"}, {"label" : "ready", "tail" : "(atMost: scala.concurrent.duration.Duration)(permit: CanAwait): CancelableFuture.this.type", "member" : "zio.CancelableFuture.ready", "link" : "zio\/CancelableFuture.html#ready(atMost:scala.concurrent.duration.Duration)(implicitpermit:scala.concurrent.CanAwait):CancelableFuture.this.type", "kind" : "final def"}, {"label" : "value", "tail" : "(): Option[Try[A]]", "member" : "zio.CancelableFuture.value", "link" : "zio\/CancelableFuture.html#value:Option[scala.util.Try[A]]", "kind" : "final def"}, {"label" : "isCompleted", "tail" : "(): Boolean", "member" : "zio.CancelableFuture.isCompleted", "link" : "zio\/CancelableFuture.html#isCompleted:Boolean", "kind" : "final def"}, {"label" : "onComplete", "tail" : "(f: (Try[A]) => U)(executor: ExecutionContext): Unit", "member" : "zio.CancelableFuture.onComplete", "link" : "zio\/CancelableFuture.html#onComplete[U](f:scala.util.Try[A]=>U)(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "final def"}, {"member" : "zio.CancelableFuture#<init>", "error" : "unsupported entity"}, {"label" : "future", "tail" : ": Future[A]", "member" : "zio.CancelableFuture.future", "link" : "zio\/CancelableFuture.html#future:scala.concurrent.Future[A]", "kind" : "val"}, {"label" : "transformWith", "tail" : "(f: (Try[A]) => Future[S])(executor: ExecutionContext): Future[S]", "member" : "zio.FutureTransformCompat.transformWith", "link" : "zio\/CancelableFuture.html#transformWith[S](f:scala.util.Try[A]=>scala.concurrent.Future[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "transform", "tail" : "(f: (Try[A]) => Try[S])(executor: ExecutionContext): Future[S]", "member" : "zio.FutureTransformCompat.transform", "link" : "zio\/CancelableFuture.html#transform[S](f:scala.util.Try[A]=>scala.util.Try[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "andThen", "tail" : "(pf: PartialFunction[Try[A], U])(executor: ExecutionContext): Future[A]", "member" : "scala.concurrent.Future.andThen", "link" : "zio\/CancelableFuture.html#andThen[U](pf:PartialFunction[scala.util.Try[T],U])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "mapTo", "tail" : "(tag: ClassTag[S]): Future[S]", "member" : "scala.concurrent.Future.mapTo", "link" : "zio\/CancelableFuture.html#mapTo[S](implicittag:scala.reflect.ClassTag[S]):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "fallbackTo", "tail" : "(that: Future[U]): Future[U]", "member" : "scala.concurrent.Future.fallbackTo", "link" : "zio\/CancelableFuture.html#fallbackTo[U>:T](that:scala.concurrent.Future[U]):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "zipWith", "tail" : "(that: Future[U])(f: (A, U) => R)(executor: ExecutionContext): Future[R]", "member" : "scala.concurrent.Future.zipWith", "link" : "zio\/CancelableFuture.html#zipWith[U,R](that:scala.concurrent.Future[U])(f:(T,U)=>R)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[R]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Future[U]): Future[(A, U)]", "member" : "scala.concurrent.Future.zip", "link" : "zio\/CancelableFuture.html#zip[U](that:scala.concurrent.Future[U]):scala.concurrent.Future[(T,U)]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(pf: PartialFunction[Throwable, Future[U]])(executor: ExecutionContext): Future[U]", "member" : "scala.concurrent.Future.recoverWith", "link" : "zio\/CancelableFuture.html#recoverWith[U>:T](pf:PartialFunction[Throwable,scala.concurrent.Future[U]])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "recover", "tail" : "(pf: PartialFunction[Throwable, U])(executor: ExecutionContext): Future[U]", "member" : "scala.concurrent.Future.recover", "link" : "zio\/CancelableFuture.html#recover[U>:T](pf:PartialFunction[Throwable,U])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[U]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.collect", "link" : "zio\/CancelableFuture.html#collect[S](pf:PartialFunction[T,S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) => Boolean)(executor: ExecutionContext): Future[A]", "member" : "scala.concurrent.Future.withFilter", "link" : "zio\/CancelableFuture.html#withFilter(p:T=>Boolean)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (A) => Boolean)(executor: ExecutionContext): Future[A]", "member" : "scala.concurrent.Future.filter", "link" : "zio\/CancelableFuture.html#filter(p:T=>Boolean)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[T]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[A, Future[S]]): Future[S]", "member" : "scala.concurrent.Future.flatten", "link" : "zio\/CancelableFuture.html#flatten[S](implicitev:T<:<scala.concurrent.Future[S]):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) => Future[S])(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.flatMap", "link" : "zio\/CancelableFuture.html#flatMap[S](f:T=>scala.concurrent.Future[S])(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => S)(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.map", "link" : "zio\/CancelableFuture.html#map[S](f:T=>S)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "transform", "tail" : "(s: (A) => S, f: (Throwable) => Throwable)(executor: ExecutionContext): Future[S]", "member" : "scala.concurrent.Future.transform", "link" : "zio\/CancelableFuture.html#transform[S](s:T=>S,f:Throwable=>Throwable)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future[S]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) => U)(executor: ExecutionContext): Unit", "member" : "scala.concurrent.Future.foreach", "link" : "zio\/CancelableFuture.html#foreach[U](f:T=>U)(implicitexecutor:scala.concurrent.ExecutionContext):Unit", "kind" : "def"}, {"label" : "failed", "tail" : "(): Future[Throwable]", "member" : "scala.concurrent.Future.failed", "link" : "zio\/CancelableFuture.html#failed:scala.concurrent.Future[Throwable]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/CancelableFuture.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/CancelableFuture.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/CancelableFuture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/CancelableFuture.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/CancelableFuture.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/CancelableFuture.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/CancelableFuture.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/CancelableFuture.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/CancelableFuture.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/CancelableFuture.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/CancelableFuture.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/CancelableFuture.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/CancelableFuture.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/CancelableFuture.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/CancelableFuture.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/CancelableFuture.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/CancelableFuture.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/CancelableFuture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/CancelableFuture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "cancel", "tail" : "(): Future[Exit[Throwable, A]]", "member" : "zio.CancelableFuture.cancel", "link" : "zio\/CancelableFuture.html#cancel():scala.concurrent.Future[zio.Exit[Throwable,A]]", "kind" : "abstract def"}], "class" : "zio\/CancelableFuture.html", "kind" : "class"}, {"name" : "zio.CanFail", "shortDescription" : "A value of type CanFail[E] provides implicit evidence that an effect witherror type E can fail, that is, that E is not equal to Nothing.", "object" : "zio\/CanFail$.html", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/CanFail.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/CanFail.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/CanFail.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/CanFail.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/CanFail.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/CanFail.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/CanFail.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/CanFail.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/CanFail.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/CanFail.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/CanFail.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/CanFail.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/CanFail.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/CanFail.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/CanFail.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/CanFail.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/CanFail.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/CanFail.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/CanFail.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "canFailAmbiguous2", "tail" : ": CanFail[Nothing]", "member" : "zio.CanFail.canFailAmbiguous2", "link" : "zio\/CanFail$.html#canFailAmbiguous2:zio.CanFail[Nothing]", "kind" : "implicit val"}, {"label" : "canFailAmbiguous1", "tail" : ": CanFail[Nothing]", "member" : "zio.CanFail.canFailAmbiguous1", "link" : "zio\/CanFail$.html#canFailAmbiguous1:zio.CanFail[Nothing]", "kind" : "implicit val"}, {"label" : "canFail", "tail" : "(): CanFail[E]", "member" : "zio.CanFail.canFail", "link" : "zio\/CanFail$.html#canFail[E]:zio.CanFail[E]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/CanFail$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/CanFail$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/CanFail$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/CanFail$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/CanFail$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/CanFail$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/CanFail$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/CanFail$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/CanFail$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/CanFail$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/CanFail$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/CanFail$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/CanFail$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/CanFail$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/CanFail$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/CanFail$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/CanFail$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/CanFail$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/CanFail$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/CanFail.html", "kind" : "class"}, {"name" : "zio.Cause", "shortDescription" : "", "object" : "zio\/Cause$.html", "members_class" : [{"label" : "untraced", "tail" : "(): Cause[E]", "member" : "zio.Cause.untraced", "link" : "zio\/Cause.html#untraced:zio.Cause[E]", "kind" : "final def"}, {"label" : "unified", "tail" : "(): List[Unified]", "member" : "zio.Cause.unified", "link" : "zio\/Cause.html#unified:List[zio.Cause.Unified]", "kind" : "final def"}, {"label" : "traced", "tail" : "(trace: StackTrace): Cause[E]", "member" : "zio.Cause.traced", "link" : "zio\/Cause.html#traced(trace:zio.StackTrace):zio.Cause[E]", "kind" : "final def"}, {"label" : "traces", "tail" : "(): List[StackTrace]", "member" : "zio.Cause.traces", "link" : "zio\/Cause.html#traces:List[zio.StackTrace]", "kind" : "final def"}, {"label" : "trace", "tail" : "(): StackTrace", "member" : "zio.Cause.trace", "link" : "zio\/Cause.html#trace:zio.StackTrace", "kind" : "def"}, {"label" : "stripSomeDefects", "tail" : "(pf: PartialFunction[Throwable, Any]): Option[Cause[E]]", "member" : "zio.Cause.stripSomeDefects", "link" : "zio\/Cause.html#stripSomeDefects(pf:PartialFunction[Throwable,Any]):Option[zio.Cause[E]]", "kind" : "final def"}, {"label" : "stripFailures", "tail" : "(): Cause[Nothing]", "member" : "zio.Cause.stripFailures", "link" : "zio\/Cause.html#stripFailures:zio.Cause[Nothing]", "kind" : "final def"}, {"label" : "squashTraceWith", "tail" : "(f: (E) => Throwable): Throwable", "member" : "zio.Cause.squashTraceWith", "link" : "zio\/Cause.html#squashTraceWith(f:E=>Throwable):Throwable", "kind" : "final def"}, {"label" : "squashTrace", "tail" : "(ev: IsSubtypeOfError[E, Throwable]): Throwable", "member" : "zio.Cause.squashTrace", "link" : "zio\/Cause.html#squashTrace(implicitev:zio.IsSubtypeOfError[E,Throwable]):Throwable", "kind" : "final def"}, {"label" : "squashWith", "tail" : "(f: (E) => Throwable): Throwable", "member" : "zio.Cause.squashWith", "link" : "zio\/Cause.html#squashWith(f:E=>Throwable):Throwable", "kind" : "final def"}, {"label" : "squash", "tail" : "(ev: IsSubtypeOfError[E, Throwable]): Throwable", "member" : "zio.Cause.squash", "link" : "zio\/Cause.html#squash(implicitev:zio.IsSubtypeOfError[E,Throwable]):Throwable", "kind" : "final def"}, {"label" : "spans", "tail" : "(): List[LogSpan]", "member" : "zio.Cause.spans", "link" : "zio\/Cause.html#spans:List[zio.LogSpan]", "kind" : "def"}, {"label" : "spanned", "tail" : "(spans: List[LogSpan]): Cause[E]", "member" : "zio.Cause.spanned", "link" : "zio\/Cause.html#spanned(spans:List[zio.LogSpan]):zio.Cause[E]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "zio.Cause.size", "link" : "zio\/Cause.html#size:Int", "kind" : "def"}, {"label" : "prettyPrint", "tail" : "(): String", "member" : "zio.Cause.prettyPrint", "link" : "zio\/Cause.html#prettyPrint:String", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "zio.Cause.nonEmpty", "link" : "zio\/Cause.html#nonEmpty:Boolean", "kind" : "final def"}, {"label" : "mapTrace", "tail" : "(f: (StackTrace) => StackTrace): Cause[E]", "member" : "zio.Cause.mapTrace", "link" : "zio\/Cause.html#mapTrace(f:zio.StackTrace=>zio.StackTrace):zio.Cause[E]", "kind" : "final def"}, {"label" : "mapSpans", "tail" : "(f: (List[LogSpan]) => List[LogSpan]): Cause[E]", "member" : "zio.Cause.mapSpans", "link" : "zio\/Cause.html#mapSpans(f:List[zio.LogSpan]=>List[zio.LogSpan]):zio.Cause[E]", "kind" : "final def"}, {"label" : "mapAnnotations", "tail" : "(f: (Map[String, String]) => Map[String, String]): Cause[E]", "member" : "zio.Cause.mapAnnotations", "link" : "zio\/Cause.html#mapAnnotations(f:Map[String,String]=>Map[String,String]):zio.Cause[E]", "kind" : "final def"}, {"label" : "mapAll", "tail" : "(ft: (StackTrace) => StackTrace, fs: (List[LogSpan]) => List[LogSpan], fa: (Map[String, String]) => Map[String, String]): Cause[E]", "member" : "zio.Cause.mapAll", "link" : "zio\/Cause.html#mapAll(ft:zio.StackTrace=>zio.StackTrace,fs:List[zio.LogSpan]=>List[zio.LogSpan],fa:Map[String,String]=>Map[String,String]):zio.Cause[E]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (E) => E1): Cause[E1]", "member" : "zio.Cause.map", "link" : "zio\/Cause.html#map[E1](f:E=>E1):zio.Cause[E1]", "kind" : "def"}, {"label" : "linearize", "tail" : "(): Set[Cause[E1]]", "member" : "zio.Cause.linearize", "link" : "zio\/Cause.html#linearize[E1>:E]:Set[zio.Cause[E1]]", "kind" : "def"}, {"label" : "keepDefects", "tail" : "(): Option[Cause[Nothing]]", "member" : "zio.Cause.keepDefects", "link" : "zio\/Cause.html#keepDefects:Option[zio.Cause[Nothing]]", "kind" : "final def"}, {"label" : "isTraced", "tail" : "(): Boolean", "member" : "zio.Cause.isTraced", "link" : "zio\/Cause.html#isTraced:Boolean", "kind" : "final def"}, {"label" : "isInterruptedOnly", "tail" : "(): Boolean", "member" : "zio.Cause.isInterruptedOnly", "link" : "zio\/Cause.html#isInterruptedOnly:Boolean", "kind" : "final def"}, {"label" : "isInterrupted", "tail" : "(): Boolean", "member" : "zio.Cause.isInterrupted", "link" : "zio\/Cause.html#isInterrupted:Boolean", "kind" : "final def"}, {"label" : "isFailure", "tail" : "(): Boolean", "member" : "zio.Cause.isFailure", "link" : "zio\/Cause.html#isFailure:Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "zio.Cause.isEmpty", "link" : "zio\/Cause.html#isEmpty:Boolean", "kind" : "final def"}, {"label" : "isDie", "tail" : "(): Boolean", "member" : "zio.Cause.isDie", "link" : "zio\/Cause.html#isDie:Boolean", "kind" : "final def"}, {"label" : "interruptOption", "tail" : "(): Option[FiberId]", "member" : "zio.Cause.interruptOption", "link" : "zio\/Cause.html#interruptOption:Option[zio.FiberId]", "kind" : "final def"}, {"label" : "interruptors", "tail" : "(): Set[FiberId]", "member" : "zio.Cause.interruptors", "link" : "zio\/Cause.html#interruptors:Set[zio.FiberId]", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "zio.Cause.hashCode", "link" : "zio\/Cause.html#hashCode():Int", "kind" : "def"}, {"label" : "foldLog", "tail" : "(empty0: => Z, failCase0: (E, StackTrace, List[LogSpan], Map[String, String]) => Z, dieCase0: (Throwable, StackTrace, List[LogSpan], Map[String, String]) => Z, interruptCase0: (FiberId, StackTrace, List[LogSpan], Map[String, String]) => Z)(thenCase0: (Z, Z) => Z, bothCase0: (Z, Z) => Z, stacklessCase0: (Z, Boolean) => Z): Z", "member" : "zio.Cause.foldLog", "link" : "zio\/Cause.html#foldLog[Z](empty0:=>Z,failCase0:(E,zio.StackTrace,List[zio.LogSpan],Map[String,String])=>Z,dieCase0:(Throwable,zio.StackTrace,List[zio.LogSpan],Map[String,String])=>Z,interruptCase0:(zio.FiberId,zio.StackTrace,List[zio.LogSpan],Map[String,String])=>Z)(thenCase0:(Z,Z)=>Z,bothCase0:(Z,Z)=>Z,stacklessCase0:(Z,Boolean)=>Z):Z", "kind" : "final def"}, {"label" : "foldLeft", "tail" : "(z: Z)(f: PartialFunction[(Z, Cause[E]), Z]): Z", "member" : "zio.Cause.foldLeft", "link" : "zio\/Cause.html#foldLeft[Z](z:Z)(f:PartialFunction[(Z,zio.Cause[E]),Z]):Z", "kind" : "final def"}, {"label" : "foldContext", "tail" : "(context: C)(folder: Folder[C, E1, Z]): Z", "member" : "zio.Cause.foldContext", "link" : "zio\/Cause.html#foldContext[C,E1>:E,Z](context:C)(folder:zio.Cause.Folder[C,E1,Z]):Z", "kind" : "final def"}, {"label" : "fold", "tail" : "(empty0: => Z, failCase0: (E, StackTrace) => Z, dieCase0: (Throwable, StackTrace) => Z, interruptCase0: (FiberId, StackTrace) => Z)(thenCase0: (Z, Z) => Z, bothCase0: (Z, Z) => Z, stacklessCase0: (Z, Boolean) => Z): Z", "member" : "zio.Cause.fold", "link" : "zio\/Cause.html#fold[Z](empty0:=>Z,failCase0:(E,zio.StackTrace)=>Z,dieCase0:(Throwable,zio.StackTrace)=>Z,interruptCase0:(zio.FiberId,zio.StackTrace)=>Z)(thenCase0:(Z,Z)=>Z,bothCase0:(Z,Z)=>Z,stacklessCase0:(Z,Boolean)=>Z):Z", "kind" : "final def"}, {"label" : "flatten", "tail" : "(ev: <:<[E, Cause[E1]]): Cause[E1]", "member" : "zio.Cause.flatten", "link" : "zio\/Cause.html#flatten[E1](implicitev:E<:<zio.Cause[E1]):zio.Cause[E1]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (E) => Cause[E2]): Cause[E2]", "member" : "zio.Cause.flatMap", "link" : "zio\/Cause.html#flatMap[E2](f:E=>zio.Cause[E2]):zio.Cause[E2]", "kind" : "final def"}, {"label" : "find", "tail" : "(f: PartialFunction[Cause[E], Z]): Option[Z]", "member" : "zio.Cause.find", "link" : "zio\/Cause.html#find[Z](f:PartialFunction[zio.Cause[E],Z]):Option[Z]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (Cause[E]) => Boolean): Cause[E]", "member" : "zio.Cause.filter", "link" : "zio\/Cause.html#filter(p:zio.Cause[E]=>Boolean):zio.Cause[E]", "kind" : "final def"}, {"label" : "failures", "tail" : "(): List[E]", "member" : "zio.Cause.failures", "link" : "zio\/Cause.html#failures:List[E]", "kind" : "final def"}, {"label" : "failureTraceOrCause", "tail" : "(): Either[(E, StackTrace), Cause[Nothing]]", "member" : "zio.Cause.failureTraceOrCause", "link" : "zio\/Cause.html#failureTraceOrCause:Either[(E,zio.StackTrace),zio.Cause[Nothing]]", "kind" : "final def"}, {"label" : "failureOrCause", "tail" : "(): Either[E, Cause[Nothing]]", "member" : "zio.Cause.failureOrCause", "link" : "zio\/Cause.html#failureOrCause:Either[E,zio.Cause[Nothing]]", "kind" : "final def"}, {"label" : "failureTraceOption", "tail" : "(): Option[(E, StackTrace)]", "member" : "zio.Cause.failureTraceOption", "link" : "zio\/Cause.html#failureTraceOption:Option[(E,zio.StackTrace)]", "kind" : "def"}, {"label" : "failureOption", "tail" : "(): Option[E]", "member" : "zio.Cause.failureOption", "link" : "zio\/Cause.html#failureOption:Option[E]", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "zio.Cause.equals", "link" : "zio\/Cause.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "dieOption", "tail" : "(): Option[Throwable]", "member" : "zio.Cause.dieOption", "link" : "zio\/Cause.html#dieOption:Option[Throwable]", "kind" : "final def"}, {"label" : "defects", "tail" : "(): List[Throwable]", "member" : "zio.Cause.defects", "link" : "zio\/Cause.html#defects:List[Throwable]", "kind" : "final def"}, {"label" : "contains", "tail" : "(that: Cause[E1]): Boolean", "member" : "zio.Cause.contains", "link" : "zio\/Cause.html#contains[E1>:E](that:zio.Cause[E1]):Boolean", "kind" : "final def"}, {"label" : "as", "tail" : "(e: => E1): Cause[E1]", "member" : "zio.Cause.as", "link" : "zio\/Cause.html#as[E1](e:=>E1):zio.Cause[E1]", "kind" : "final def"}, {"label" : "annotations", "tail" : "(): Map[String, String]", "member" : "zio.Cause.annotations", "link" : "zio\/Cause.html#annotations:Map[String,String]", "kind" : "def"}, {"label" : "annotated", "tail" : "(anns: Map[String, String]): Cause[E]", "member" : "zio.Cause.annotated", "link" : "zio\/Cause.html#annotated(anns:Map[String,String]):zio.Cause[E]", "kind" : "final def"}, {"label" : "++", "tail" : "(that: Cause[E1]): Cause[E1]", "member" : "zio.Cause.++", "link" : "zio\/Cause.html#++[E1>:E](that:zio.Cause[E1]):zio.Cause[E1]", "kind" : "final def"}, {"label" : "&&", "tail" : "(that: Cause[E1]): Cause[E1]", "member" : "zio.Cause.&&", "link" : "zio\/Cause.html#&&[E1>:E](that:zio.Cause[E1]):zio.Cause[E1]", "kind" : "final def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/Cause.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "zio\/Cause.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "zio\/Cause.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "zio\/Cause.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Cause.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Cause.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Cause.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Cause.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Cause.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Cause.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Cause.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Cause.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Cause.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Cause.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Cause.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Cause.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Cause.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Cause.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Cause.html#toString():String", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Cause.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Cause.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "zio\/Cause.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "zio\/Cause.html#productArity:Int", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "zio\/Cause.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "members_object" : [{"label" : "Both", "tail" : "", "member" : "zio.Cause.Both", "link" : "zio\/Cause$.html#Both[+E]extendsCause[E]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Then", "tail" : "", "member" : "zio.Cause.Then", "link" : "zio\/Cause$.html#Then[+E]extendsCause[E]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Stackless", "tail" : "", "member" : "zio.Cause.Stackless", "link" : "zio\/Cause$.html#Stackless[+E]extendsCause[E]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Interrupt", "tail" : "", "member" : "zio.Cause.Interrupt", "link" : "zio\/Cause$.html#Interrupt", "kind" : "object"}, {"label" : "Interrupt", "tail" : "", "member" : "zio.Cause.Interrupt", "link" : "zio\/Cause$.html#InterruptextendsCause[Nothing]withProductwithSerializable", "kind" : "sealed case class"}, {"label" : "Die", "tail" : "", "member" : "zio.Cause.Die", "link" : "zio\/Cause$.html#Die", "kind" : "object"}, {"label" : "Die", "tail" : "", "member" : "zio.Cause.Die", "link" : "zio\/Cause$.html#DieextendsCause[Nothing]withProductwithSerializable", "kind" : "sealed case class"}, {"label" : "Fail", "tail" : "", "member" : "zio.Cause.Fail", "link" : "zio\/Cause$.html#Fail", "kind" : "object"}, {"label" : "Fail", "tail" : "", "member" : "zio.Cause.Fail", "link" : "zio\/Cause$.html#Fail[+E]extendsCause[E]withProductwithSerializable", "kind" : "sealed case class"}, {"label" : "Empty", "tail" : "", "member" : "zio.Cause.Empty", "link" : "zio\/Cause$.html#Empty", "kind" : "case object"}, {"label" : "flipCauseOption", "tail" : "(cause: Cause[Option[E]]): Option[Cause[E]]", "member" : "zio.Cause.flipCauseOption", "link" : "zio\/Cause$.html#flipCauseOption[E](cause:zio.Cause[Option[E]]):Option[zio.Cause[E]]", "kind" : "def"}, {"label" : "Unified", "tail" : "", "member" : "zio.Cause.Unified", "link" : "zio\/Cause$.html#UnifiedextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "Folder", "tail" : "", "member" : "zio.Cause.Folder", "link" : "zio\/Cause$.html#Folder", "kind" : "object"}, {"label" : "Folder", "tail" : "", "member" : "zio.Cause.Folder", "link" : "zio\/Cause$.html#Folder[-Context,-E,Z]extendsAnyRef", "kind" : "trait"}, {"label" : "stackless", "tail" : "(cause: Cause[E]): Cause[E]", "member" : "zio.Cause.stackless", "link" : "zio\/Cause$.html#stackless[E](cause:zio.Cause[E]):zio.Cause[E]", "kind" : "def"}, {"label" : "stack", "tail" : "(cause: Cause[E]): Cause[E]", "member" : "zio.Cause.stack", "link" : "zio\/Cause$.html#stack[E](cause:zio.Cause[E]):zio.Cause[E]", "kind" : "def"}, {"label" : "interrupt", "tail" : "(fiberId: FiberId, trace: StackTrace): Cause[Nothing]", "member" : "zio.Cause.interrupt", "link" : "zio\/Cause$.html#interrupt(fiberId:zio.FiberId,trace:zio.StackTrace):zio.Cause[Nothing]", "kind" : "def"}, {"label" : "fail", "tail" : "(error: E, trace: StackTrace): Cause[E]", "member" : "zio.Cause.fail", "link" : "zio\/Cause$.html#fail[E](error:E,trace:zio.StackTrace):zio.Cause[E]", "kind" : "def"}, {"label" : "die", "tail" : "(defect: Throwable, trace: StackTrace): Cause[Nothing]", "member" : "zio.Cause.die", "link" : "zio\/Cause$.html#die(defect:Throwable,trace:zio.StackTrace):zio.Cause[Nothing]", "kind" : "def"}, {"label" : "empty", "tail" : ": Cause[Nothing]", "member" : "zio.Cause.empty", "link" : "zio\/Cause$.html#empty:zio.Cause[Nothing]", "kind" : "val"}, {"label" : "unit", "tail" : ": Cause[Unit]", "member" : "zio.Cause.unit", "link" : "zio\/Cause$.html#unit:zio.Cause[Unit]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Cause$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Cause$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Cause$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Cause$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Cause$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Cause$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Cause$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Cause$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Cause$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Cause$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Cause$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Cause$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Cause$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Cause$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Cause$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Cause$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Cause$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Cause$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Cause$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/Cause.html", "kind" : "class"}, {"name" : "zio.Chunk", "shortDescription" : "A Chunk[A] represents a chunk of values of type A.", "object" : "zio\/Chunk$.html", "members_class" : [{"label" : "update", "tail" : "(index: Int, a1: A1): Chunk[A1]", "member" : "zio.Chunk.update", "link" : "zio\/Chunk.html#update[A1>:A](index:Int,a1:A1):zio.Chunk[A1]", "kind" : "def"}, {"label" : "right", "tail" : "(): Chunk[A]", "member" : "zio.Chunk.right", "link" : "zio\/Chunk.html#right:zio.Chunk[A]", "kind" : "def"}, {"label" : "prepend", "tail" : "(a1: A1): Chunk[A1]", "member" : "zio.Chunk.prepend", "link" : "zio\/Chunk.html#prepend[A1>:A](a1:A1):zio.Chunk[A1]", "kind" : "def"}, {"label" : "mapChunk", "tail" : "(f: (A) => B): Chunk[B]", "member" : "zio.Chunk.mapChunk", "link" : "zio\/Chunk.html#mapChunk[B](f:A=>B):zio.Chunk[B]", "kind" : "def"}, {"label" : "left", "tail" : "(): Chunk[A]", "member" : "zio.Chunk.left", "link" : "zio\/Chunk.html#left:zio.Chunk[A]", "kind" : "def"}, {"label" : "depth", "tail" : "(): Int", "member" : "zio.Chunk.depth", "link" : "zio\/Chunk.html#depth:Int", "kind" : "def"}, {"label" : "concatDepth", "tail" : "(): Int", "member" : "zio.Chunk.concatDepth", "link" : "zio\/Chunk.html#concatDepth:Int", "kind" : "def"}, {"label" : "collectChunk", "tail" : "(pf: PartialFunction[A, B]): Chunk[B]", "member" : "zio.Chunk.collectChunk", "link" : "zio\/Chunk.html#collectChunk[B](pf:PartialFunction[A,B]):zio.Chunk[B]", "kind" : "def"}, {"label" : "append", "tail" : "(a1: A1): Chunk[A1]", "member" : "zio.Chunk.append", "link" : "zio\/Chunk.html#append[A1>:A](a1:A1):zio.Chunk[A1]", "kind" : "def"}, {"label" : "toArray", "tail" : "(srcPos: Int, dest: Array[A1], destPos: Int, length: Int): Unit", "member" : "zio.Chunk.toArray", "link" : "zio\/Chunk.html#toArray[A1>:A](srcPos:Int,dest:Array[A1],destPos:Int,length:Int):Unit", "kind" : "def"}, {"label" : "toArray", "tail" : "(n: Int, dest: Array[A1]): Unit", "member" : "zio.Chunk.toArray", "link" : "zio\/Chunk.html#toArray[A1>:A](n:Int,dest:Array[A1]):Unit", "kind" : "final def"}, {"label" : "zipWithIndexFrom", "tail" : "(indexOffset: Int): Chunk[(A, Int)]", "member" : "zio.Chunk.zipWithIndexFrom", "link" : "zio\/Chunk.html#zipWithIndexFrom(indexOffset:Int):zio.Chunk[(A,Int)]", "kind" : "final def"}, {"label" : "zipWith", "tail" : "(that: Chunk[B])(f: (A, B) => C): Chunk[C]", "member" : "zio.Chunk.zipWith", "link" : "zio\/Chunk.html#zipWith[B,C](that:zio.Chunk[B])(f:(A,B)=>C):zio.Chunk[C]", "kind" : "final def"}, {"label" : "zipAllWith", "tail" : "(that: Chunk[B])(left: (A) => C, right: (B) => C)(both: (A, B) => C): Chunk[C]", "member" : "zio.Chunk.zipAllWith", "link" : "zio\/Chunk.html#zipAllWith[B,C](that:zio.Chunk[B])(left:A=>C,right:B=>C)(both:(A,B)=>C):zio.Chunk[C]", "kind" : "final def"}, {"label" : "zipAll", "tail" : "(that: Chunk[B]): Chunk[(Option[A], Option[B])]", "member" : "zio.Chunk.zipAll", "link" : "zio\/Chunk.html#zipAll[B](that:zio.Chunk[B]):zio.Chunk[(Option[A],Option[B])]", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: Chunk[B])(zippable: Zippable[A, B]): Chunk[Out]", "member" : "zio.Chunk.zip", "link" : "zio\/Chunk.html#zip[B](that:zio.Chunk[B])(implicitzippable:zio.Zippable[A,B]):zio.Chunk[zippable.Out]", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "zio.Chunk.toString", "link" : "zio\/Chunk.html#toString():String", "kind" : "final def"}, {"label" : "toVector", "tail" : "(): Vector[A]", "member" : "zio.Chunk.toVector", "link" : "zio\/Chunk.html#toVector:Vector[A]", "kind" : "final def"}, {"label" : "toList", "tail" : "(): List[A]", "member" : "zio.Chunk.toList", "link" : "zio\/Chunk.html#toList:List[A]", "kind" : "final def"}, {"label" : "toBinaryString", "tail" : "(ev: <:<[A, Boolean]): String", "member" : "zio.Chunk.toBinaryString", "link" : "zio\/Chunk.html#toBinaryString(implicitev:A<:<Boolean):String", "kind" : "final def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[A1]): Array[A1]", "member" : "zio.Chunk.toArray", "link" : "zio\/Chunk.html#toArray[A1>:A](implicitevidence$1:scala.reflect.ClassTag[A1]):Array[A1]", "kind" : "def"}, {"label" : "takeWhileZIO", "tail" : "(p: (A) => ZIO[R, E, Boolean])(trace: Trace): ZIO[R, E, Chunk[A]]", "member" : "zio.Chunk.takeWhileZIO", "link" : "zio\/Chunk.html#takeWhileZIO[R,E](p:A=>zio.ZIO[R,E,Boolean])(implicittrace:zio.Trace):zio.ZIO[R,E,zio.Chunk[A]]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(f: (A) => Boolean): Chunk[A]", "member" : "zio.Chunk.takeWhile", "link" : "zio\/Chunk.html#takeWhile(f:A=>Boolean):zio.Chunk[A]", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Chunk[A]", "member" : "zio.Chunk.takeRight", "link" : "zio\/Chunk.html#takeRight(n:Int):zio.Chunk[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Chunk[A]", "member" : "zio.Chunk.take", "link" : "zio\/Chunk.html#take(n:Int):zio.Chunk[A]", "kind" : "def"}, {"label" : "splitWhere", "tail" : "(f: (A) => Boolean): (Chunk[A], Chunk[A])", "member" : "zio.Chunk.splitWhere", "link" : "zio\/Chunk.html#splitWhere(f:A=>Boolean):(zio.Chunk[A],zio.Chunk[A])", "kind" : "final def"}, {"label" : "splitAt", "tail" : "(n: Int): (Chunk[A], Chunk[A])", "member" : "zio.Chunk.splitAt", "link" : "zio\/Chunk.html#splitAt(n:Int):(zio.Chunk[A],zio.Chunk[A])", "kind" : "final def"}, {"label" : "split", "tail" : "(n: Int): Chunk[Chunk[A]]", "member" : "zio.Chunk.split", "link" : "zio\/Chunk.html#split(n:Int):zio.Chunk[zio.Chunk[A]]", "kind" : "final def"}, {"label" : "span", "tail" : "(f: (A) => Boolean): (Chunk[A], Chunk[A])", "member" : "zio.Chunk.span", "link" : "zio\/Chunk.html#span(f:A=>Boolean):(zio.Chunk[A],zio.Chunk[A])", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Chunk[A]", "member" : "zio.Chunk.slice", "link" : "zio\/Chunk.html#slice(from:Int,until:Int):zio.Chunk[A]", "kind" : "def"}, {"label" : "short", "tail" : "(index: Int)(ev: <:<[A, Short]): Short", "member" : "zio.Chunk.short", "link" : "zio\/Chunk.html#short(index:Int)(implicitev:A<:<Short):Short", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (A) => Either[B, C]): (Chunk[B], Chunk[C])", "member" : "zio.Chunk.partitionMap", "link" : "zio\/Chunk.html#partitionMap[B,C](f:A=>Either[B,C]):(zio.Chunk[B],zio.Chunk[C])", "kind" : "final def"}, {"label" : "nonEmptyOrElse", "tail" : "(ifEmpty: => B)(fn: (NonEmptyChunk[A]) => B): B", "member" : "zio.Chunk.nonEmptyOrElse", "link" : "zio\/Chunk.html#nonEmptyOrElse[B](ifEmpty:=>B)(fn:zio.NonEmptyChunk[A]=>B):B", "kind" : "def"}, {"label" : "materialize", "tail" : "(): Chunk[A1]", "member" : "zio.Chunk.materialize", "link" : "zio\/Chunk.html#materialize[A1>:A]:zio.Chunk[A1]", "kind" : "def"}, {"label" : "mapZIOParDiscard", "tail" : "(f: (A) => ZIO[R, E, Any])(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.Chunk.mapZIOParDiscard", "link" : "zio\/Chunk.html#mapZIOParDiscard[R,E](f:A=>zio.ZIO[R,E,Any])(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "final def"}, {"label" : "mapZIOPar", "tail" : "(f: (A) => ZIO[R, E, B])(trace: Trace): ZIO[R, E, Chunk[B]]", "member" : "zio.Chunk.mapZIOPar", "link" : "zio\/Chunk.html#mapZIOPar[R,E,B](f:A=>zio.ZIO[R,E,B])(implicittrace:zio.Trace):zio.ZIO[R,E,zio.Chunk[B]]", "kind" : "final def"}, {"label" : "mapZIODiscard", "tail" : "(f: (A) => ZIO[R, E, Any])(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.Chunk.mapZIODiscard", "link" : "zio\/Chunk.html#mapZIODiscard[R,E](f:A=>zio.ZIO[R,E,Any])(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "final def"}, {"label" : "mapZIO", "tail" : "(f: (A) => ZIO[R, E, B])(trace: Trace): ZIO[R, E, Chunk[B]]", "member" : "zio.Chunk.mapZIO", "link" : "zio\/Chunk.html#mapZIO[R,E,B](f:A=>zio.ZIO[R,E,B])(implicittrace:zio.Trace):zio.ZIO[R,E,zio.Chunk[B]]", "kind" : "final def"}, {"label" : "mapAccumZIO", "tail" : "(s1: S1)(f1: (S1, A) => ZIO[R, E, (S1, B)])(trace: Trace): ZIO[R, E, (S1, Chunk[B])]", "member" : "zio.Chunk.mapAccumZIO", "link" : "zio\/Chunk.html#mapAccumZIO[R,E,S1,B](s1:S1)(f1:(S1,A)=>zio.ZIO[R,E,(S1,B)])(implicittrace:zio.Trace):zio.ZIO[R,E,(S1,zio.Chunk[B])]", "kind" : "final def"}, {"label" : "mapAccum", "tail" : "(s1: S1)(f1: (S1, A) => (S1, B)): (S1, Chunk[B])", "member" : "zio.Chunk.mapAccum", "link" : "zio\/Chunk.html#mapAccum[S1,B](s1:S1)(f1:(S1,A)=>(S1,B)):(S1,zio.Chunk[B])", "kind" : "final def"}, {"label" : "long", "tail" : "(index: Int)(ev: <:<[A, Long]): Long", "member" : "zio.Chunk.long", "link" : "zio\/Chunk.html#long(index:Int)(implicitev:A<:<Long):Long", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[A]", "member" : "zio.Chunk.lastOption", "link" : "zio\/Chunk.html#lastOption:Option[A]", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "zio.Chunk.isEmpty", "link" : "zio\/Chunk.html#isEmpty:Boolean", "kind" : "final def"}, {"label" : "int", "tail" : "(index: Int)(ev: <:<[A, Int]): Int", "member" : "zio.Chunk.int", "link" : "zio\/Chunk.html#int(index:Int)(implicitev:A<:<Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(f: (A) => Boolean, from: Int): Int", "member" : "zio.Chunk.indexWhere", "link" : "zio\/Chunk.html#indexWhere(f:A=>Boolean,from:Int):Int", "kind" : "final def"}, {"label" : "headOption", "tail" : "(): Option[A]", "member" : "zio.Chunk.headOption", "link" : "zio\/Chunk.html#headOption:Option[A]", "kind" : "final def"}, {"label" : "head", "tail" : "(): A", "member" : "zio.Chunk.head", "link" : "zio\/Chunk.html#head:A", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "zio.Chunk.hashCode", "link" : "zio\/Chunk.html#hashCode():Int", "kind" : "final def"}, {"label" : "forall", "tail" : "(f: (A) => Boolean): Boolean", "member" : "zio.Chunk.forall", "link" : "zio\/Chunk.html#forall(f:A=>Boolean):Boolean", "kind" : "final def"}, {"label" : "foldWhileZIO", "tail" : "(z: S)(pred: (S) => Boolean)(f: (S, A) => ZIO[R, E, S])(trace: Trace): ZIO[R, E, S]", "member" : "zio.Chunk.foldWhileZIO", "link" : "zio\/Chunk.html#foldWhileZIO[R,E,S](z:S)(pred:S=>Boolean)(f:(S,A)=>zio.ZIO[R,E,S])(implicittrace:zio.Trace):zio.ZIO[R,E,S]", "kind" : "final def"}, {"label" : "foldWhile", "tail" : "(s0: S)(pred: (S) => Boolean)(f: (S, A) => S): S", "member" : "zio.Chunk.foldWhile", "link" : "zio\/Chunk.html#foldWhile[S](s0:S)(pred:S=>Boolean)(f:(S,A)=>S):S", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(s0: S)(f: (A, S) => S): S", "member" : "zio.Chunk.foldRight", "link" : "zio\/Chunk.html#foldRight[S](s0:S)(f:(A,S)=>S):S", "kind" : "def"}, {"label" : "foldZIO", "tail" : "(s: S)(f: (S, A) => ZIO[R, E, S])(trace: Trace): ZIO[R, E, S]", "member" : "zio.Chunk.foldZIO", "link" : "zio\/Chunk.html#foldZIO[R,E,S](s:S)(f:(S,A)=>zio.ZIO[R,E,S])(implicittrace:zio.Trace):zio.ZIO[R,E,S]", "kind" : "final def"}, {"label" : "foldLeft", "tail" : "(s0: S)(f: (S, A) => S): S", "member" : "zio.Chunk.foldLeft", "link" : "zio\/Chunk.html#foldLeft[S](s0:S)(f:(S,A)=>S):S", "kind" : "def"}, {"label" : "float", "tail" : "(index: Int)(ev: <:<[A, Float]): Float", "member" : "zio.Chunk.float", "link" : "zio\/Chunk.html#float(index:Int)(implicitev:A<:<Float):Float", "kind" : "def"}, {"label" : "findZIO", "tail" : "(f: (A) => ZIO[R, E, Boolean])(trace: Trace): ZIO[R, E, Option[A]]", "member" : "zio.Chunk.findZIO", "link" : "zio\/Chunk.html#findZIO[R,E](f:A=>zio.ZIO[R,E,Boolean])(implicittrace:zio.Trace):zio.ZIO[R,E,Option[A]]", "kind" : "final def"}, {"label" : "find", "tail" : "(f: (A) => Boolean): Option[A]", "member" : "zio.Chunk.find", "link" : "zio\/Chunk.html#find(f:A=>Boolean):Option[A]", "kind" : "final def"}, {"label" : "filterZIO", "tail" : "(f: (A) => ZIO[R, E, Boolean])(trace: Trace): ZIO[R, E, Chunk[A]]", "member" : "zio.Chunk.filterZIO", "link" : "zio\/Chunk.html#filterZIO[R,E](f:A=>zio.ZIO[R,E,Boolean])(implicittrace:zio.Trace):zio.ZIO[R,E,zio.Chunk[A]]", "kind" : "final def"}, {"label" : "filter", "tail" : "(f: (A) => Boolean): Chunk[A]", "member" : "zio.Chunk.filter", "link" : "zio\/Chunk.html#filter(f:A=>Boolean):zio.Chunk[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (A) => Boolean): Boolean", "member" : "zio.Chunk.exists", "link" : "zio\/Chunk.html#exists(f:A=>Boolean):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "zio.Chunk.equals", "link" : "zio\/Chunk.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "dropWhileZIO", "tail" : "(p: (A) => ZIO[R, E, Boolean])(trace: Trace): ZIO[R, E, Chunk[A]]", "member" : "zio.Chunk.dropWhileZIO", "link" : "zio\/Chunk.html#dropWhileZIO[R,E](p:A=>zio.ZIO[R,E,Boolean])(implicittrace:zio.Trace):zio.ZIO[R,E,zio.Chunk[A]]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(f: (A) => Boolean): Chunk[A]", "member" : "zio.Chunk.dropWhile", "link" : "zio\/Chunk.html#dropWhile(f:A=>Boolean):zio.Chunk[A]", "kind" : "def"}, {"label" : "dropUntilZIO", "tail" : "(p: (A) => ZIO[R, E, Boolean])(trace: Trace): ZIO[R, E, Chunk[A]]", "member" : "zio.Chunk.dropUntilZIO", "link" : "zio\/Chunk.html#dropUntilZIO[R,E](p:A=>zio.ZIO[R,E,Boolean])(implicittrace:zio.Trace):zio.ZIO[R,E,zio.Chunk[A]]", "kind" : "def"}, {"label" : "dropUntil", "tail" : "(f: (A) => Boolean): Chunk[A]", "member" : "zio.Chunk.dropUntil", "link" : "zio\/Chunk.html#dropUntil(f:A=>Boolean):zio.Chunk[A]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Chunk[A]", "member" : "zio.Chunk.dropRight", "link" : "zio\/Chunk.html#dropRight(n:Int):zio.Chunk[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Chunk[A]", "member" : "zio.Chunk.drop", "link" : "zio\/Chunk.html#drop(n:Int):zio.Chunk[A]", "kind" : "def"}, {"label" : "double", "tail" : "(index: Int)(ev: <:<[A, Double]): Double", "member" : "zio.Chunk.double", "link" : "zio\/Chunk.html#double(index:Int)(implicitev:A<:<Double):Double", "kind" : "def"}, {"label" : "dedupe", "tail" : "(): Chunk[A]", "member" : "zio.Chunk.dedupe", "link" : "zio\/Chunk.html#dedupe:zio.Chunk[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: Chunk[B])(f: (A, B) => Boolean): Boolean", "member" : "zio.Chunk.corresponds", "link" : "zio\/Chunk.html#corresponds[B](that:zio.Chunk[B])(f:(A,B)=>Boolean):Boolean", "kind" : "final def"}, {"label" : "collectZIO", "tail" : "(pf: PartialFunction[A, ZIO[R, E, B]])(trace: Trace): ZIO[R, E, Chunk[B]]", "member" : "zio.Chunk.collectZIO", "link" : "zio\/Chunk.html#collectZIO[R,E,B](pf:PartialFunction[A,zio.ZIO[R,E,B]])(implicittrace:zio.Trace):zio.ZIO[R,E,zio.Chunk[B]]", "kind" : "def"}, {"label" : "collectWhileZIO", "tail" : "(pf: PartialFunction[A, ZIO[R, E, B]])(trace: Trace): ZIO[R, E, Chunk[B]]", "member" : "zio.Chunk.collectWhileZIO", "link" : "zio\/Chunk.html#collectWhileZIO[R,E,B](pf:PartialFunction[A,zio.ZIO[R,E,B]])(implicittrace:zio.Trace):zio.ZIO[R,E,zio.Chunk[B]]", "kind" : "def"}, {"label" : "collectWhile", "tail" : "(pf: PartialFunction[A, B]): Chunk[B]", "member" : "zio.Chunk.collectWhile", "link" : "zio\/Chunk.html#collectWhile[B](pf:PartialFunction[A,B]):zio.Chunk[B]", "kind" : "def"}, {"label" : "char", "tail" : "(index: Int)(ev: <:<[A, Char]): Char", "member" : "zio.Chunk.char", "link" : "zio\/Chunk.html#char(index:Int)(implicitev:A<:<Char):Char", "kind" : "def"}, {"label" : "byte", "tail" : "(index: Int)(ev: <:<[A, Byte]): Byte", "member" : "zio.Chunk.byte", "link" : "zio\/Chunk.html#byte(index:Int)(implicitev:A<:<Byte):Byte", "kind" : "def"}, {"label" : "boolean", "tail" : "(index: Int)(ev: <:<[A, Boolean]): Boolean", "member" : "zio.Chunk.boolean", "link" : "zio\/Chunk.html#boolean(index:Int)(implicitev:A<:<Boolean):Boolean", "kind" : "def"}, {"label" : "asString", "tail" : "(charset: Charset)(ev: <:<[A, Byte]): String", "member" : "zio.Chunk.asString", "link" : "zio\/Chunk.html#asString(charset:java.nio.charset.Charset)(implicitev:A<:<Byte):String", "kind" : "final def"}, {"label" : "asString", "tail" : "(ev: IsText[A]): String", "member" : "zio.Chunk.asString", "link" : "zio\/Chunk.html#asString(implicitev:zio.Chunk.IsText[A]):String", "kind" : "final def"}, {"label" : "toPackedLong", "tail" : "(endianness: Endianness)(ev: <:<[A, Boolean]): Chunk[Long]", "member" : "zio.Chunk.toPackedLong", "link" : "zio\/Chunk.html#toPackedLong(endianness:zio.Chunk.BitChunk.Endianness)(implicitev:A<:<Boolean):zio.Chunk[Long]", "kind" : "def"}, {"label" : "toPackedInt", "tail" : "(endianness: Endianness)(ev: <:<[A, Boolean]): Chunk[Int]", "member" : "zio.Chunk.toPackedInt", "link" : "zio\/Chunk.html#toPackedInt(endianness:zio.Chunk.BitChunk.Endianness)(implicitev:A<:<Boolean):zio.Chunk[Int]", "kind" : "def"}, {"label" : "toPackedByte", "tail" : "(ev: <:<[A, Boolean]): Chunk[Byte]", "member" : "zio.Chunk.toPackedByte", "link" : "zio\/Chunk.html#toPackedByte(implicitev:A<:<Boolean):zio.Chunk[Byte]", "kind" : "def"}, {"label" : "asBitsByte", "tail" : "(ev: <:<[A, Byte]): Chunk[Boolean]", "member" : "zio.Chunk.asBitsByte", "link" : "zio\/Chunk.html#asBitsByte(implicitev:A<:<Byte):zio.Chunk[Boolean]", "kind" : "final def"}, {"label" : "asBitsLong", "tail" : "(endianness: Endianness)(ev: <:<[A, Long]): Chunk[Boolean]", "member" : "zio.Chunk.asBitsLong", "link" : "zio\/Chunk.html#asBitsLong(endianness:zio.Chunk.BitChunk.Endianness)(implicitev:A<:<Long):zio.Chunk[Boolean]", "kind" : "final def"}, {"label" : "asBitsInt", "tail" : "(endianness: Endianness)(ev: <:<[A, Int]): Chunk[Boolean]", "member" : "zio.Chunk.asBitsInt", "link" : "zio\/Chunk.html#asBitsInt(endianness:zio.Chunk.BitChunk.Endianness)(implicitev:A<:<Int):zio.Chunk[Boolean]", "kind" : "final def"}, {"label" : "asBase64String", "tail" : "(ev: IsText[A]): String", "member" : "zio.Chunk.asBase64String", "link" : "zio\/Chunk.html#asBase64String(implicitev:zio.Chunk.IsText[A]):String", "kind" : "def"}, {"label" : "negate", "tail" : "(ev: <:<[A, Boolean]): BitChunkByte", "member" : "zio.Chunk.negate", "link" : "zio\/Chunk.html#negate(implicitev:A<:<Boolean):zio.Chunk.BitChunkByte", "kind" : "def"}, {"label" : "^", "tail" : "(that: Chunk[Boolean])(ev: <:<[A, Boolean]): BitChunkByte", "member" : "zio.Chunk.^", "link" : "zio\/Chunk.html#^(that:zio.Chunk[Boolean])(implicitev:A<:<Boolean):zio.Chunk.BitChunkByte", "kind" : "def"}, {"label" : "|", "tail" : "(that: Chunk[Boolean])(ev: <:<[A, Boolean]): BitChunkByte", "member" : "zio.Chunk.|", "link" : "zio\/Chunk.html#|(that:zio.Chunk[Boolean])(implicitev:A<:<Boolean):zio.Chunk.BitChunkByte", "kind" : "def"}, {"label" : "&", "tail" : "(that: Chunk[Boolean])(ev: <:<[A, Boolean]): BitChunkByte", "member" : "zio.Chunk.&", "link" : "zio\/Chunk.html#&(that:zio.Chunk[Boolean])(implicitev:A<:<Boolean):zio.Chunk.BitChunkByte", "kind" : "def"}, {"label" : "++", "tail" : "(that: NonEmptyChunk[A1]): NonEmptyChunk[A1]", "member" : "zio.Chunk.++", "link" : "zio\/Chunk.html#++[A1>:A](that:zio.NonEmptyChunk[A1]):zio.NonEmptyChunk[A1]", "kind" : "final def"}, {"label" : "++", "tail" : "(that: Chunk[A1]): Chunk[A1]", "member" : "zio.Chunk.++", "link" : "zio\/Chunk.html#++[A1>:A](that:zio.Chunk[A1]):zio.Chunk[A1]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Chunk[(A, Int)]", "member" : "zio.ChunkLike.zipWithIndex", "link" : "zio\/Chunk.html#zipWithIndex:zio.Chunk[(A,Int)]", "kind" : "final def"}, {"label" : "updated", "tail" : "(index: Int, elem: A1): Chunk[A1]", "member" : "zio.ChunkLike.updated", "link" : "zio\/Chunk.html#updated[A1>:A](index:Int,elem:A1):zio.Chunk[A1]", "kind" : "final def"}, {"label" : "sorted", "tail" : "(ord: Ordering[A1]): Chunk[A]", "member" : "zio.ChunkLike.sorted", "link" : "zio\/Chunk.html#sorted[A1>:A](implicitord:Ordering[A1]):zio.Chunk[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B): Chunk[B]", "member" : "zio.ChunkLike.map", "link" : "zio\/Chunk.html#map[B](f:A=>B):zio.Chunk[B]", "kind" : "final def"}, {"label" : "iterableFactory", "tail" : ": SeqFactory[Chunk]", "member" : "zio.ChunkLike.iterableFactory", "link" : "zio\/Chunk.html#iterableFactory:scala.collection.SeqFactory[zio.Chunk]", "kind" : "val"}, {"label" : "flatten", "tail" : "(ev: (A) => IterableOnce[B]): Chunk[B]", "member" : "zio.ChunkLike.flatten", "link" : "zio\/Chunk.html#flatten[B](implicitev:A=>IterableOnce[B]):zio.Chunk[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) => IterableOnce[B]): Chunk[B]", "member" : "zio.ChunkLike.flatMap", "link" : "zio\/Chunk.html#flatMap[B](f:A=>IterableOnce[B]):zio.Chunk[B]", "kind" : "final def"}, {"label" : "copyToArray", "tail" : "(dest: Array[B], destPos: Int, length: Int): Int", "member" : "zio.ChunkLike.copyToArray", "link" : "zio\/Chunk.html#copyToArray[B>:A](dest:Array[B],destPos:Int,length:Int):Int", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B]): Chunk[B]", "member" : "zio.ChunkLike.collect", "link" : "zio\/Chunk.html#collect[B](pf:PartialFunction[A,B]):zio.Chunk[B]", "kind" : "def"}, {"label" : "prepended", "tail" : "(a1: A1): Chunk[A1]", "member" : "zio.ChunkLike.prepended", "link" : "zio\/Chunk.html#prepended[A1>:A](a1:A1):zio.Chunk[A1]", "kind" : "final def"}, {"label" : "appended", "tail" : "(a1: A1): Chunk[A1]", "member" : "zio.ChunkLike.appended", "link" : "zio\/Chunk.html#appended[A1>:A](a1:A1):zio.Chunk[A1]", "kind" : "final def"}, {"label" : "patch", "tail" : "(from: Int, other: IterableOnce[B], replaced: Int): Chunk[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.patch", "link" : "zio\/Chunk.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (A) => B): Chunk[A]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.distinctBy", "link" : "zio\/Chunk.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: Seq[B]): Chunk[A]", "member" : "scala.collection.StrictOptimizedSeqOps.intersect", "link" : "zio\/Chunk.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: Seq[B]): Chunk[A]", "member" : "scala.collection.StrictOptimizedSeqOps.diff", "link" : "zio\/Chunk.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): Chunk[B]", "member" : "scala.collection.StrictOptimizedSeqOps.padTo", "link" : "zio\/Chunk.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: IterableOnce[B]): Chunk[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prependedAll", "link" : "zio\/Chunk.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: IterableOnce[B]): Chunk[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appendedAll", "link" : "zio\/Chunk.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (A) => U): Chunk[A]", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "zio\/Chunk.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: (A) => Boolean, isFlipped: Boolean): Chunk[A]", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "zio\/Chunk.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (A) => Boolean): Chunk[A]", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "zio\/Chunk.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, A) => B): Chunk[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "zio\/Chunk.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: IterableOnce[B], b: Builder[(A, B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "zio\/Chunk.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Chunk[(A, B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "zio\/Chunk.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: (A) => IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "zio\/Chunk.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[A, B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "zio\/Chunk.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "zio\/Chunk.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: (A) => IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "zio\/Chunk.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: (A) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "zio\/Chunk.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "unzip3", "tail" : "(asTriple: (A) => (A1, A2, A3)): (Chunk[A1], Chunk[A2], Chunk[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "zio\/Chunk.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (A) => (A1, A2)): (Chunk[A1], Chunk[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "zio\/Chunk.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (A) => Boolean): (Chunk[A], Chunk[A])", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "zio\/Chunk.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "applyPreferredMaxLength", "tail" : "(): Int", "member" : "scala.collection.immutable.IndexedSeq.applyPreferredMaxLength", "link" : "zio\/Chunk.html#applyPreferredMaxLength:Int", "kind" : "def"}, {"label" : "sameElements", "tail" : "(o: IterableOnce[B]): Boolean", "member" : "scala.collection.immutable.IndexedSeq.sameElements", "link" : "zio\/Chunk.html#sameElements[B>:A](o:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.immutable.IndexedSeq.canEqual", "link" : "zio\/Chunk.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.immutable.IndexedSeq.toIndexedSeq", "link" : "zio\/Chunk.html#toIndexedSeq:IndexedSeq[A]", "kind" : "final def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.IndexedSeq.stringPrefix", "link" : "zio\/Chunk.html#stringPrefix:String", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.IndexedSeqOps.search", "link" : "zio\/Chunk.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:scala.math.Ordering[B]):collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.IndexedSeqOps.search", "link" : "zio\/Chunk.html#search[B>:A](elem:B)(implicitord:scala.math.Ordering[B]):collection.Searching.SearchResult", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.IndexedSeqOps.lengthCompare", "link" : "zio\/Chunk.html#lengthCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqOps.knownSize", "link" : "zio\/Chunk.html#knownSize:Int", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.IndexedSeqOps.lengthCompare", "link" : "zio\/Chunk.html#lengthCompare(len:Int):Int", "kind" : "final def"}, {"label" : "last", "tail" : "(): A", "member" : "scala.collection.IndexedSeqOps.last", "link" : "zio\/Chunk.html#last:A", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Chunk[A]", "member" : "scala.collection.IndexedSeqOps.reverse", "link" : "zio\/Chunk.html#reverse:C", "kind" : "def"}, {"label" : "reversed", "tail" : "(): Iterable[A]", "member" : "scala.collection.IndexedSeqOps.reversed", "link" : "zio\/Chunk.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IndexedSeqView[A]", "member" : "scala.collection.IndexedSeqOps.view", "link" : "zio\/Chunk.html#view(from:Int,until:Int):scala.collection.IndexedSeqView[A]", "kind" : "def"}, {"label" : "view", "tail" : "(): IndexedSeqView[A]", "member" : "scala.collection.IndexedSeqOps.view", "link" : "zio\/Chunk.html#view:scala.collection.IndexedSeqView[A]", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqOps.reverseIterator", "link" : "zio\/Chunk.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[A, S]): S with EfficientSplit", "member" : "scala.collection.IndexedSeqOps.stepper", "link" : "zio\/Chunk.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):Swithcollection.Stepper.EfficientSplit", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqOps.iterator", "link" : "zio\/Chunk.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Chunk.this.type", "member" : "scala.collection.immutable.Seq.toSeq", "link" : "zio\/Chunk.html#toSeq:Seq.this.type", "kind" : "final def"}, {"label" : "occCounts", "tail" : "(sq: Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "zio\/Chunk.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: Seq[B])(p: (A, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "zio\/Chunk.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "zio\/Chunk.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "zio\/Chunk.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "zio\/Chunk.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqOps.indices", "link" : "zio\/Chunk.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (A) => B)(ord: Ordering[B]): Chunk[A]", "member" : "scala.collection.SeqOps.sortBy", "link" : "zio\/Chunk.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (A, A) => Boolean): Chunk[A]", "member" : "scala.collection.SeqOps.sortWith", "link" : "zio\/Chunk.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[Chunk[A]]", "member" : "scala.collection.SeqOps.combinations", "link" : "zio\/Chunk.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[Chunk[A]]", "member" : "scala.collection.SeqOps.permutations", "link" : "zio\/Chunk.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (A) => B): Chunk[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "zio\/Chunk.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "zio\/Chunk.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "zio\/Chunk.html#containsSlice[B>:A](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (A) => Boolean): Option[A]", "member" : "scala.collection.SeqOps.findLast", "link" : "zio\/Chunk.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "zio\/Chunk.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "zio\/Chunk.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "zio\/Chunk.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "zio\/Chunk.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "zio\/Chunk.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "zio\/Chunk.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "zio\/Chunk.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "zio\/Chunk.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "zio\/Chunk.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "zio\/Chunk.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (A) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "zio\/Chunk.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (A) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "zio\/Chunk.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (A) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "zio\/Chunk.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "zio\/Chunk.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "zio\/Chunk.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "zio\/Chunk.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Chunk[A]", "member" : "scala.collection.SeqOps.distinct", "link" : "zio\/Chunk.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "zio\/Chunk.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: Seq[B]): Chunk[B]", "member" : "scala.collection.SeqOps.union", "link" : "zio\/Chunk.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: IterableOnce[B]): Chunk[B]", "member" : "scala.collection.SeqOps.concat", "link" : "zio\/Chunk.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: IterableOnce[B]): Chunk[B]", "member" : "scala.collection.SeqOps.:++", "link" : "zio\/Chunk.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "++:", "tail" : "(prefix: IterableOnce[B]): Chunk[B]", "member" : "scala.collection.SeqOps.++:", "link" : "zio\/Chunk.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":+", "tail" : "(elem: B): Chunk[B]", "member" : "scala.collection.SeqOps.:+", "link" : "zio\/Chunk.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "+:", "tail" : "(elem: B): Chunk[B]", "member" : "scala.collection.SeqOps.+:", "link" : "zio\/Chunk.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "runWith", "tail" : "(action: (A) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "zio\/Chunk.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "zio\/Chunk.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[A]", "member" : "scala.PartialFunction.lift", "link" : "zio\/Chunk.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, A]", "member" : "scala.PartialFunction.compose", "link" : "zio\/Chunk.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[A, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "zio\/Chunk.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (A) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "zio\/Chunk.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "zio\/Chunk.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, A]", "member" : "scala.PartialFunction.elementWise", "link" : "zio\/Chunk.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[A]", "member" : "scala.PartialFunction.unapply", "link" : "zio\/Chunk.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => A", "member" : "scala.Function1.compose", "link" : "zio\/Chunk.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: Iterable[B]): LazyZip2[A, B, Chunk.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "zio\/Chunk.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "zio\/Chunk.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): Chunk.this.type", "member" : "scala.collection.Iterable.seq", "link" : "zio\/Chunk.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): Chunk.this.type", "member" : "scala.collection.Iterable.coll", "link" : "zio\/Chunk.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): Chunk.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "zio\/Chunk.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Chunk[A]", "member" : "scala.collection.IterableFactoryDefaults.empty", "link" : "zio\/Chunk.html#empty:CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[A, Chunk[A]]", "member" : "scala.collection.IterableFactoryDefaults.newSpecificBuilder", "link" : "zio\/Chunk.html#newSpecificBuilder:scala.collection.mutable.Builder[A@scala.annotation.unchecked.uncheckedVariance,CC[A@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: IterableOnce[A]): Chunk[A]", "member" : "scala.collection.IterableFactoryDefaults.fromSpecific", "link" : "zio\/Chunk.html#fromSpecific(coll:scala.collection.IterableOnce[A@scala.annotation.unchecked.uncheckedVariance]):CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Chunk[A]]", "member" : "scala.collection.IterableOps.inits", "link" : "zio\/Chunk.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Chunk[A]]", "member" : "scala.collection.IterableOps.tails", "link" : "zio\/Chunk.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterable[B], thisElem: A1, thatElem: B): Chunk[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "zio\/Chunk.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: IterableOnce[B]): Chunk[B]", "member" : "scala.collection.IterableOps.++", "link" : "zio\/Chunk.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (A, B) => B): Chunk[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "zio\/Chunk.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): Chunk[B]", "member" : "scala.collection.IterableOps.scan", "link" : "zio\/Chunk.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (A) => K)(f: (A) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "zio\/Chunk.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (A) => K)(f: (A) => B): Map[K, Chunk[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "zio\/Chunk.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (A) => K): Map[K, Chunk[A]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "zio\/Chunk.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "init", "tail" : "(): Chunk[A]", "member" : "scala.collection.IterableOps.init", "link" : "zio\/Chunk.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): Chunk[A]", "member" : "scala.collection.IterableOps.tail", "link" : "zio\/Chunk.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Chunk[A]]", "member" : "scala.collection.IterableOps.sliding", "link" : "zio\/Chunk.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Chunk[A]]", "member" : "scala.collection.IterableOps.sliding", "link" : "zio\/Chunk.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Chunk[A]]", "member" : "scala.collection.IterableOps.grouped", "link" : "zio\/Chunk.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) => Boolean): WithFilter[A, [_]Chunk[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "zio\/Chunk.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (A) => Iterable[B]): Chunk[Chunk[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "zio\/Chunk.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "zio\/Chunk.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]Chunk[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "zio\/Chunk.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): Chunk[A]", "member" : "scala.collection.IterableOps.repr", "link" : "zio\/Chunk.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "zio\/Chunk.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[A]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "zio\/Chunk.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "zio\/Chunk.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[A]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "zio\/Chunk.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "zio\/Chunk.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[A, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "zio\/Chunk.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "zio\/Chunk.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[A, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "zio\/Chunk.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): b.type", "member" : "scala.collection.IterableOnceOps.addString", "link" : "zio\/Chunk.html#addString(b:StringBuilder):b.type", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): b.type", "member" : "scala.collection.IterableOnceOps.addString", "link" : "zio\/Chunk.html#addString(b:StringBuilder,sep:String):b.type", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): b.type", "member" : "scala.collection.IterableOnceOps.addString", "link" : "zio\/Chunk.html#addString(b:StringBuilder,start:String,sep:String,end:String):b.type", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "zio\/Chunk.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "zio\/Chunk.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "zio\/Chunk.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (A, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "zio\/Chunk.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, A) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "zio\/Chunk.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[A, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "zio\/Chunk.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (A) => B)(ord: Ordering[B]): Option[A]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "zio\/Chunk.html#minByOption[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (A) => B)(ord: Ordering[B]): A", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "zio\/Chunk.html#minBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (A) => B)(ord: Ordering[B]): Option[A]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "zio\/Chunk.html#maxByOption[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (A) => B)(ord: Ordering[B]): A", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "zio\/Chunk.html#maxBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[A]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "zio\/Chunk.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): A", "member" : "scala.collection.IterableOnceOps.max", "link" : "zio\/Chunk.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[A]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "zio\/Chunk.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): A", "member" : "scala.collection.IterableOnceOps.min", "link" : "zio\/Chunk.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "zio\/Chunk.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "zio\/Chunk.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "zio\/Chunk.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "zio\/Chunk.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "zio\/Chunk.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "zio\/Chunk.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (A, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "zio\/Chunk.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, A) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "zio\/Chunk.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (A, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "zio\/Chunk.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, A) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "zio\/Chunk.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "zio\/Chunk.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "zio\/Chunk.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "zio\/Chunk.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (A, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "zio\/Chunk.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, A) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "zio\/Chunk.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "count", "tail" : "(p: (A) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "zio\/Chunk.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "zio\/Chunk.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "zio\/Chunk.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Chunk.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Chunk.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Chunk.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Chunk.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Chunk.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Chunk.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Chunk.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Chunk.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Chunk.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Chunk.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Chunk.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Chunk.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Chunk.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Chunk.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Chunk.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Chunk.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "chunkIterator", "tail" : "(): ChunkIterator[A]", "member" : "zio.Chunk.chunkIterator", "link" : "zio\/Chunk.html#chunkIterator:zio.Chunk.ChunkIterator[A]", "kind" : "abstract def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.SeqOps.length", "link" : "zio\/Chunk.html#length:Int", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(i: Int): A", "member" : "scala.collection.SeqOps.apply", "link" : "zio\/Chunk.html#apply(i:Int):A", "kind" : "abstract def"}], "members_object" : [{"label" : "ChunkIterator", "tail" : "", "member" : "zio.Chunk.ChunkIterator", "link" : "zio\/Chunk$.html#ChunkIterator", "kind" : "object"}, {"label" : "ChunkIterator", "tail" : "", "member" : "zio.Chunk.ChunkIterator", "link" : "zio\/Chunk$.html#ChunkIterator[+A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "BooleanArray", "tail" : "", "member" : "zio.Chunk.BooleanArray", "link" : "zio\/Chunk$.html#BooleanArrayextendsChunk.Arr[Boolean]withChunk.ChunkIterator[Boolean]withProductwithSerializable", "kind" : "final case class"}, {"label" : "ShortArray", "tail" : "", "member" : "zio.Chunk.ShortArray", "link" : "zio\/Chunk$.html#ShortArrayextendsChunk.Arr[Short]withChunk.ChunkIterator[Short]withProductwithSerializable", "kind" : "final case class"}, {"label" : "FloatArray", "tail" : "", "member" : "zio.Chunk.FloatArray", "link" : "zio\/Chunk$.html#FloatArrayextendsChunk.Arr[Float]withChunk.ChunkIterator[Float]withProductwithSerializable", "kind" : "final case class"}, {"label" : "DoubleArray", "tail" : "", "member" : "zio.Chunk.DoubleArray", "link" : "zio\/Chunk$.html#DoubleArrayextendsChunk.Arr[Double]withChunk.ChunkIterator[Double]withProductwithSerializable", "kind" : "final case class"}, {"label" : "LongArray", "tail" : "", "member" : "zio.Chunk.LongArray", "link" : "zio\/Chunk$.html#LongArrayextendsChunk.Arr[Long]withChunk.ChunkIterator[Long]withProductwithSerializable", "kind" : "final case class"}, {"label" : "IntArray", "tail" : "", "member" : "zio.Chunk.IntArray", "link" : "zio\/Chunk$.html#IntArrayextendsChunk.Arr[Int]withChunk.ChunkIterator[Int]withProductwithSerializable", "kind" : "final case class"}, {"label" : "CharArray", "tail" : "", "member" : "zio.Chunk.CharArray", "link" : "zio\/Chunk$.html#CharArrayextendsChunk.Arr[Char]withChunk.ChunkIterator[Char]withProductwithSerializable", "kind" : "final case class"}, {"label" : "ByteArray", "tail" : "", "member" : "zio.Chunk.ByteArray", "link" : "zio\/Chunk$.html#ByteArrayextendsChunk.Arr[Byte]withChunk.ChunkIterator[Byte]withProductwithSerializable", "kind" : "final case class"}, {"label" : "AnyRefArray", "tail" : "", "member" : "zio.Chunk.AnyRefArray", "link" : "zio\/Chunk$.html#AnyRefArray[A<:AnyRef]extendsChunk.Arr[A]withChunk.ChunkIterator[A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "BitChunk", "tail" : "", "member" : "zio.Chunk.BitChunk", "link" : "zio\/Chunk$.html#BitChunk", "kind" : "object"}, {"label" : "IsText", "tail" : "", "member" : "zio.Chunk.IsText", "link" : "zio\/Chunk$.html#IsText", "kind" : "object"}, {"label" : "IsText", "tail" : "", "member" : "zio.Chunk.IsText", "link" : "zio\/Chunk$.html#IsText[-T]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "unit", "tail" : ": Chunk[Unit]", "member" : "zio.Chunk.unit", "link" : "zio\/Chunk$.html#unit:zio.Chunk[Unit]", "kind" : "val"}, {"label" : "unfoldZIO", "tail" : "(s: S)(f: (S) => ZIO[R, E, Option[(A, S)]])(trace: Trace): ZIO[R, E, Chunk[A]]", "member" : "zio.Chunk.unfoldZIO", "link" : "zio\/Chunk$.html#unfoldZIO[R,E,A,S](s:S)(f:S=>zio.ZIO[R,E,Option[(A,S)]])(implicittrace:zio.Trace):zio.ZIO[R,E,zio.Chunk[A]]", "kind" : "def"}, {"label" : "unfold", "tail" : "(s: S)(f: (S) => Option[(A, S)]): Chunk[A]", "member" : "zio.Chunk.unfold", "link" : "zio\/Chunk$.html#unfold[S,A](s:S)(f:S=>Option[(A,S)]):zio.Chunk[A]", "kind" : "def"}, {"label" : "succeed", "tail" : "(a: A): Chunk[A]", "member" : "zio.Chunk.succeed", "link" : "zio\/Chunk$.html#succeed[A](a:A):zio.Chunk[A]", "kind" : "def"}, {"label" : "single", "tail" : "(a: A): Chunk[A]", "member" : "zio.Chunk.single", "link" : "zio\/Chunk$.html#single[A](a:A):zio.Chunk[A]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): ChunkBuilder[A]", "member" : "zio.Chunk.newBuilder", "link" : "zio\/Chunk$.html#newBuilder[A]:zio.ChunkBuilder[A]", "kind" : "def"}, {"label" : "iterate", "tail" : "(start: A, len: Int)(f: (A) => A): Chunk[A]", "member" : "zio.Chunk.iterate", "link" : "zio\/Chunk$.html#iterate[A](start:A,len:Int)(f:A=>A):zio.Chunk[A]", "kind" : "def"}, {"label" : "fill", "tail" : "(n: Int)(elem: => A): Chunk[A]", "member" : "zio.Chunk.fill", "link" : "zio\/Chunk$.html#fill[A](n:Int)(elem:=>A):zio.Chunk[A]", "kind" : "def"}, {"label" : "fromJavaIterator", "tail" : "(iterator: Iterator[A]): Chunk[A]", "member" : "zio.Chunk.fromJavaIterator", "link" : "zio\/Chunk$.html#fromJavaIterator[A](iterator:java.util.Iterator[A]):zio.Chunk[A]", "kind" : "def"}, {"label" : "fromJavaIterable", "tail" : "(iterable: Iterable[A]): Chunk[A]", "member" : "zio.Chunk.fromJavaIterable", "link" : "zio\/Chunk$.html#fromJavaIterable[A](iterable:Iterable[A]):zio.Chunk[A]", "kind" : "def"}, {"label" : "fromIterator", "tail" : "(iterator: Iterator[A]): Chunk[A]", "member" : "zio.Chunk.fromIterator", "link" : "zio\/Chunk$.html#fromIterator[A](iterator:Iterator[A]):zio.Chunk[A]", "kind" : "def"}, {"label" : "fromIterable", "tail" : "(it: Iterable[A]): Chunk[A]", "member" : "zio.Chunk.fromIterable", "link" : "zio\/Chunk$.html#fromIterable[A](it:Iterable[A]):zio.Chunk[A]", "kind" : "def"}, {"label" : "fromShortBuffer", "tail" : "(buffer: ShortBuffer): Chunk[Short]", "member" : "zio.Chunk.fromShortBuffer", "link" : "zio\/Chunk$.html#fromShortBuffer(buffer:java.nio.ShortBuffer):zio.Chunk[Short]", "kind" : "def"}, {"label" : "fromLongBuffer", "tail" : "(buffer: LongBuffer): Chunk[Long]", "member" : "zio.Chunk.fromLongBuffer", "link" : "zio\/Chunk$.html#fromLongBuffer(buffer:java.nio.LongBuffer):zio.Chunk[Long]", "kind" : "def"}, {"label" : "fromIntBuffer", "tail" : "(buffer: IntBuffer): Chunk[Int]", "member" : "zio.Chunk.fromIntBuffer", "link" : "zio\/Chunk$.html#fromIntBuffer(buffer:java.nio.IntBuffer):zio.Chunk[Int]", "kind" : "def"}, {"label" : "fromFloatBuffer", "tail" : "(buffer: FloatBuffer): Chunk[Float]", "member" : "zio.Chunk.fromFloatBuffer", "link" : "zio\/Chunk$.html#fromFloatBuffer(buffer:java.nio.FloatBuffer):zio.Chunk[Float]", "kind" : "def"}, {"label" : "fromDoubleBuffer", "tail" : "(buffer: DoubleBuffer): Chunk[Double]", "member" : "zio.Chunk.fromDoubleBuffer", "link" : "zio\/Chunk$.html#fromDoubleBuffer(buffer:java.nio.DoubleBuffer):zio.Chunk[Double]", "kind" : "def"}, {"label" : "fromCharBuffer", "tail" : "(buffer: CharBuffer): Chunk[Char]", "member" : "zio.Chunk.fromCharBuffer", "link" : "zio\/Chunk$.html#fromCharBuffer(buffer:java.nio.CharBuffer):zio.Chunk[Char]", "kind" : "def"}, {"label" : "fromByteBuffer", "tail" : "(buffer: ByteBuffer): Chunk[Byte]", "member" : "zio.Chunk.fromByteBuffer", "link" : "zio\/Chunk$.html#fromByteBuffer(buffer:java.nio.ByteBuffer):zio.Chunk[Byte]", "kind" : "def"}, {"label" : "fromArray", "tail" : "(array: Array[A]): Chunk[A]", "member" : "zio.Chunk.fromArray", "link" : "zio\/Chunk$.html#fromArray[A](array:Array[A]):zio.Chunk[A]", "kind" : "def"}, {"label" : "empty", "tail" : "(): Chunk[A]", "member" : "zio.Chunk.empty", "link" : "zio\/Chunk$.html#empty[A]:zio.Chunk[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(as: A*): Chunk[A]", "member" : "zio.Chunk.apply", "link" : "zio\/Chunk$.html#apply[A](as:A*):zio.Chunk[A]", "kind" : "def"}, {"label" : "fromArraySeq", "tail" : "(seq: ArraySeq[A]): Chunk[A]", "member" : "zio.ChunkFactory.fromArraySeq", "link" : "zio\/Chunk$.html#fromArraySeq[A](seq:scala.collection.mutable.ArraySeq[A]):zio.Chunk[A]", "kind" : "final def"}, {"label" : "from", "tail" : "(source: IterableOnce[A]): Chunk[A]", "member" : "zio.ChunkFactory.from", "link" : "zio\/Chunk$.html#from[A](source:scala.collection.IterableOnce[A]):zio.Chunk[A]", "kind" : "final def"}, {"label" : "concat", "tail" : "(xss: Iterable[A]*): Chunk[A]", "member" : "scala.collection.StrictOptimizedSeqFactory.concat", "link" : "zio\/Chunk$.html#concat[A](xss:Iterable[A]*):CC[A]", "kind" : "def"}, {"label" : "tabulate", "tail" : "(n: Int)(f: (Int) => A): Chunk[A]", "member" : "scala.collection.StrictOptimizedSeqFactory.tabulate", "link" : "zio\/Chunk$.html#tabulate[A](n:Int)(f:Int=>A):CC[A]", "kind" : "def"}, {"label" : "unapplySeq", "tail" : "(x: Chunk[A]): UnapplySeqWrapper[A]", "member" : "scala.collection.SeqFactory.unapplySeq", "link" : "zio\/Chunk$.html#unapplySeq[A](x:CC[A]@scala.annotation.unchecked.uncheckedVariance):scala.collection.SeqFactory.UnapplySeqWrapper[A]", "kind" : "final def"}, {"label" : "iterableFactory", "tail" : "(): Factory[A, Chunk[A]]", "member" : "scala.collection.IterableFactory.iterableFactory", "link" : "zio\/Chunk$.html#iterableFactory[A]:scala.collection.Factory[A,CC[A]]", "kind" : "implicit def"}, {"label" : "tabulate", "tail" : "(n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(f: (Int, Int, Int, Int, Int) => A): Chunk[Chunk[Chunk[Chunk[Chunk[A]]]]]", "member" : "scala.collection.IterableFactory.tabulate", "link" : "zio\/Chunk$.html#tabulate[A](n1:Int,n2:Int,n3:Int,n4:Int,n5:Int)(f:(Int,Int,Int,Int,Int)=>A):CC[CC[CC[CC[CC[A]]]]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "tabulate", "tail" : "(n1: Int, n2: Int, n3: Int, n4: Int)(f: (Int, Int, Int, Int) => A): Chunk[Chunk[Chunk[Chunk[A]]]]", "member" : "scala.collection.IterableFactory.tabulate", "link" : "zio\/Chunk$.html#tabulate[A](n1:Int,n2:Int,n3:Int,n4:Int)(f:(Int,Int,Int,Int)=>A):CC[CC[CC[CC[A]]]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "tabulate", "tail" : "(n1: Int, n2: Int, n3: Int)(f: (Int, Int, Int) => A): Chunk[Chunk[Chunk[A]]]", "member" : "scala.collection.IterableFactory.tabulate", "link" : "zio\/Chunk$.html#tabulate[A](n1:Int,n2:Int,n3:Int)(f:(Int,Int,Int)=>A):CC[CC[CC[A]]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "tabulate", "tail" : "(n1: Int, n2: Int)(f: (Int, Int) => A): Chunk[Chunk[A]]", "member" : "scala.collection.IterableFactory.tabulate", "link" : "zio\/Chunk$.html#tabulate[A](n1:Int,n2:Int)(f:(Int,Int)=>A):CC[CC[A]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "fill", "tail" : "(n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(elem: => A): Chunk[Chunk[Chunk[Chunk[Chunk[A]]]]]", "member" : "scala.collection.IterableFactory.fill", "link" : "zio\/Chunk$.html#fill[A](n1:Int,n2:Int,n3:Int,n4:Int,n5:Int)(elem:=>A):CC[CC[CC[CC[CC[A]]]]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "fill", "tail" : "(n1: Int, n2: Int, n3: Int, n4: Int)(elem: => A): Chunk[Chunk[Chunk[Chunk[A]]]]", "member" : "scala.collection.IterableFactory.fill", "link" : "zio\/Chunk$.html#fill[A](n1:Int,n2:Int,n3:Int,n4:Int)(elem:=>A):CC[CC[CC[CC[A]]]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "fill", "tail" : "(n1: Int, n2: Int, n3: Int)(elem: => A): Chunk[Chunk[Chunk[A]]]", "member" : "scala.collection.IterableFactory.fill", "link" : "zio\/Chunk$.html#fill[A](n1:Int,n2:Int,n3:Int)(elem:=>A):CC[CC[CC[A]]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "fill", "tail" : "(n1: Int, n2: Int)(elem: => A): Chunk[Chunk[A]]", "member" : "scala.collection.IterableFactory.fill", "link" : "zio\/Chunk$.html#fill[A](n1:Int,n2:Int)(elem:=>A):CC[CC[A]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "range", "tail" : "(start: A, end: A, step: A)(arg0: Integral[A]): Chunk[A]", "member" : "scala.collection.IterableFactory.range", "link" : "zio\/Chunk$.html#range[A](start:A,end:A,step:A)(implicitevidence$4:Integral[A]):CC[A]", "kind" : "def"}, {"label" : "range", "tail" : "(start: A, end: A)(arg0: Integral[A]): Chunk[A]", "member" : "scala.collection.IterableFactory.range", "link" : "zio\/Chunk$.html#range[A](start:A,end:A)(implicitevidence$3:Integral[A]):CC[A]", "kind" : "def"}, {"label" : "unfold", "tail" : "(init: S)(f: (S) => Option[(A, S)]): Chunk[A]", "member" : "scala.collection.IterableFactory.unfold", "link" : "zio\/Chunk$.html#unfold[A,S](init:S)(f:S=>Option[(A,S)]):CC[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Chunk$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Chunk$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Chunk$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Chunk$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Chunk$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Chunk$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Chunk$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Chunk$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Chunk$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Chunk$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Chunk$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Chunk$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Chunk$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Chunk$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Chunk$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Chunk$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Chunk$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Chunk$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Chunk$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/Chunk.html", "kind" : "class"}, {"name" : "zio.ChunkBuilder", "shortDescription" : "A ChunkBuilder[A] can build a Chunk[A] given elements of type A.", "object" : "zio\/ChunkBuilder$.html", "members_class" : [{"label" : "mapResult", "tail" : "(f: (Chunk[A]) => NewTo): Builder[A, NewTo]", "member" : "scala.collection.mutable.Builder.mapResult", "link" : "zio\/ChunkBuilder.html#mapResult[NewTo](f:To=>NewTo):scala.collection.mutable.Builder[A,NewTo]", "kind" : "def"}, {"label" : "sizeHintBounded", "tail" : "(size: Int, boundingColl: Iterable[_]): Unit", "member" : "scala.collection.mutable.Builder.sizeHintBounded", "link" : "zio\/ChunkBuilder.html#sizeHintBounded(size:Int,boundingColl:Iterable[_]):Unit", "kind" : "final def"}, {"label" : "sizeHint", "tail" : "(coll: IterableOnce[_], delta: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "zio\/ChunkBuilder.html#sizeHint(coll:scala.collection.IterableOnce[_],delta:Int):Unit", "kind" : "final def"}, {"label" : "sizeHint", "tail" : "(size: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "zio\/ChunkBuilder.html#sizeHint(size:Int):Unit", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.mutable.Growable.knownSize", "link" : "zio\/ChunkBuilder.html#knownSize:Int", "kind" : "def"}, {"label" : "++=", "tail" : "(elems: IterableOnce[A]): ChunkBuilder.this.type", "member" : "scala.collection.mutable.Growable.++=", "link" : "zio\/ChunkBuilder.html#++=(elems:scala.collection.IterableOnce[A]):Growable.this.type", "kind" : "final def"}, {"label" : "addAll", "tail" : "(elems: IterableOnce[A]): ChunkBuilder.this.type", "member" : "scala.collection.mutable.Growable.addAll", "link" : "zio\/ChunkBuilder.html#addAll(elems:scala.collection.IterableOnce[A]):Growable.this.type", "kind" : "def"}, {"label" : "+=", "tail" : "(elem1: A, elem2: A, elems: A*): ChunkBuilder.this.type", "member" : "scala.collection.mutable.Growable.+=", "link" : "zio\/ChunkBuilder.html#+=(elem1:A,elem2:A,elems:A*):Growable.this.type", "kind" : "final def"}, {"label" : "+=", "tail" : "(elem: A): ChunkBuilder.this.type", "member" : "scala.collection.mutable.Growable.+=", "link" : "zio\/ChunkBuilder.html#+=(elem:A):Growable.this.type", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ChunkBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ChunkBuilder.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ChunkBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ChunkBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ChunkBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ChunkBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ChunkBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ChunkBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ChunkBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ChunkBuilder.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ChunkBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ChunkBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ChunkBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ChunkBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ChunkBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ChunkBuilder.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ChunkBuilder.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ChunkBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ChunkBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "result", "tail" : "(): Chunk[A]", "member" : "scala.collection.mutable.Builder.result", "link" : "zio\/ChunkBuilder.html#result():To", "kind" : "abstract def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "scala.collection.mutable.Builder.clear", "link" : "zio\/ChunkBuilder.html#clear():Unit", "kind" : "abstract def"}, {"label" : "addOne", "tail" : "(elem: A): ChunkBuilder.this.type", "member" : "scala.collection.mutable.Growable.addOne", "link" : "zio\/ChunkBuilder.html#addOne(elem:A):Growable.this.type", "kind" : "abstract def"}], "members_object" : [{"label" : "Short", "tail" : "", "member" : "zio.ChunkBuilder.Short", "link" : "zio\/ChunkBuilder$.html#ShortextendsChunkBuilder[Short]", "kind" : "final class"}, {"label" : "Long", "tail" : "", "member" : "zio.ChunkBuilder.Long", "link" : "zio\/ChunkBuilder$.html#LongextendsChunkBuilder[Long]", "kind" : "final class"}, {"label" : "Int", "tail" : "", "member" : "zio.ChunkBuilder.Int", "link" : "zio\/ChunkBuilder$.html#IntextendsChunkBuilder[Int]", "kind" : "final class"}, {"label" : "Float", "tail" : "", "member" : "zio.ChunkBuilder.Float", "link" : "zio\/ChunkBuilder$.html#FloatextendsChunkBuilder[Float]", "kind" : "final class"}, {"label" : "Double", "tail" : "", "member" : "zio.ChunkBuilder.Double", "link" : "zio\/ChunkBuilder$.html#DoubleextendsChunkBuilder[Double]", "kind" : "final class"}, {"label" : "Char", "tail" : "", "member" : "zio.ChunkBuilder.Char", "link" : "zio\/ChunkBuilder$.html#CharextendsChunkBuilder[Char]", "kind" : "final class"}, {"label" : "Byte", "tail" : "", "member" : "zio.ChunkBuilder.Byte", "link" : "zio\/ChunkBuilder$.html#ByteextendsChunkBuilder[Byte]", "kind" : "final class"}, {"label" : "Boolean", "tail" : "", "member" : "zio.ChunkBuilder.Boolean", "link" : "zio\/ChunkBuilder$.html#BooleanextendsChunkBuilder[Boolean]", "kind" : "final class"}, {"label" : "make", "tail" : "(sizeHint: scala.Int): ChunkBuilder[A]", "member" : "zio.ChunkBuilder.make", "link" : "zio\/ChunkBuilder$.html#make[A](sizeHint:Int):zio.ChunkBuilder[A]", "kind" : "def"}, {"label" : "make", "tail" : "(): ChunkBuilder[A]", "member" : "zio.ChunkBuilder.make", "link" : "zio\/ChunkBuilder$.html#make[A]():zio.ChunkBuilder[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ChunkBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): scala.Int", "member" : "scala.AnyRef.##", "link" : "zio\/ChunkBuilder$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): scala.Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ChunkBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): scala.Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ChunkBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): scala.Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ChunkBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): scala.Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ChunkBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ChunkBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ChunkBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ChunkBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ChunkBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): scala.Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ChunkBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ChunkBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ChunkBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: scala.Long, arg1: scala.Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ChunkBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: scala.Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ChunkBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ChunkBuilder$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): scala.Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ChunkBuilder$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ChunkBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): scala.Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ChunkBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/ChunkBuilder.html", "kind" : "class"}, {"name" : "zio.ChunkLike", "trait" : "zio\/ChunkLike.html", "kind" : "trait", "members_trait" : [{"label" : "zipWithIndex", "tail" : "(): Chunk[(A, Int)]", "member" : "zio.ChunkLike.zipWithIndex", "link" : "zio\/ChunkLike.html#zipWithIndex:zio.Chunk[(A,Int)]", "kind" : "final def"}, {"label" : "updated", "tail" : "(index: Int, elem: A1): Chunk[A1]", "member" : "zio.ChunkLike.updated", "link" : "zio\/ChunkLike.html#updated[A1>:A](index:Int,elem:A1):zio.Chunk[A1]", "kind" : "final def"}, {"label" : "sorted", "tail" : "(ord: Ordering[A1]): Chunk[A]", "member" : "zio.ChunkLike.sorted", "link" : "zio\/ChunkLike.html#sorted[A1>:A](implicitord:Ordering[A1]):zio.Chunk[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B): Chunk[B]", "member" : "zio.ChunkLike.map", "link" : "zio\/ChunkLike.html#map[B](f:A=>B):zio.Chunk[B]", "kind" : "final def"}, {"label" : "iterableFactory", "tail" : ": SeqFactory[Chunk]", "member" : "zio.ChunkLike.iterableFactory", "link" : "zio\/ChunkLike.html#iterableFactory:scala.collection.SeqFactory[zio.Chunk]", "kind" : "val"}, {"label" : "flatten", "tail" : "(ev: (A) => IterableOnce[B]): Chunk[B]", "member" : "zio.ChunkLike.flatten", "link" : "zio\/ChunkLike.html#flatten[B](implicitev:A=>IterableOnce[B]):zio.Chunk[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) => IterableOnce[B]): Chunk[B]", "member" : "zio.ChunkLike.flatMap", "link" : "zio\/ChunkLike.html#flatMap[B](f:A=>IterableOnce[B]):zio.Chunk[B]", "kind" : "final def"}, {"label" : "copyToArray", "tail" : "(dest: Array[B], destPos: Int, length: Int): Int", "member" : "zio.ChunkLike.copyToArray", "link" : "zio\/ChunkLike.html#copyToArray[B>:A](dest:Array[B],destPos:Int,length:Int):Int", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B]): Chunk[B]", "member" : "zio.ChunkLike.collect", "link" : "zio\/ChunkLike.html#collect[B](pf:PartialFunction[A,B]):zio.Chunk[B]", "kind" : "def"}, {"label" : "prepended", "tail" : "(a1: A1): Chunk[A1]", "member" : "zio.ChunkLike.prepended", "link" : "zio\/ChunkLike.html#prepended[A1>:A](a1:A1):zio.Chunk[A1]", "kind" : "final def"}, {"label" : "appended", "tail" : "(a1: A1): Chunk[A1]", "member" : "zio.ChunkLike.appended", "link" : "zio\/ChunkLike.html#appended[A1>:A](a1:A1):zio.Chunk[A1]", "kind" : "final def"}, {"label" : "patch", "tail" : "(from: Int, other: IterableOnce[B], replaced: Int): Chunk[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.patch", "link" : "zio\/ChunkLike.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (A) => B): Chunk[A]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.distinctBy", "link" : "zio\/ChunkLike.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: Seq[B]): Chunk[A]", "member" : "scala.collection.StrictOptimizedSeqOps.intersect", "link" : "zio\/ChunkLike.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: Seq[B]): Chunk[A]", "member" : "scala.collection.StrictOptimizedSeqOps.diff", "link" : "zio\/ChunkLike.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): Chunk[B]", "member" : "scala.collection.StrictOptimizedSeqOps.padTo", "link" : "zio\/ChunkLike.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: IterableOnce[B]): Chunk[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prependedAll", "link" : "zio\/ChunkLike.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: IterableOnce[B]): Chunk[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appendedAll", "link" : "zio\/ChunkLike.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Chunk[A]", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "zio\/ChunkLike.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Chunk[A]", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "zio\/ChunkLike.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (A) => U): Chunk[A]", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "zio\/ChunkLike.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (A) => Either[A1, A2]): (Chunk[A1], Chunk[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "zio\/ChunkLike.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: (A) => Boolean, isFlipped: Boolean): Chunk[A]", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "zio\/ChunkLike.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (A) => Boolean): Chunk[A]", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "zio\/ChunkLike.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (A) => Boolean): Chunk[A]", "member" : "scala.collection.StrictOptimizedIterableOps.filter", "link" : "zio\/ChunkLike.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, A) => B): Chunk[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "zio\/ChunkLike.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: IterableOnce[B], b: Builder[(A, B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "zio\/ChunkLike.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Chunk[(A, B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "zio\/ChunkLike.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: (A) => IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "zio\/ChunkLike.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[A, B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "zio\/ChunkLike.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "zio\/ChunkLike.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: (A) => IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "zio\/ChunkLike.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: (A) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "zio\/ChunkLike.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "unzip3", "tail" : "(asTriple: (A) => (A1, A2, A3)): (Chunk[A1], Chunk[A2], Chunk[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "zio\/ChunkLike.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (A) => (A1, A2)): (Chunk[A1], Chunk[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "zio\/ChunkLike.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: (A) => Boolean): (Chunk[A], Chunk[A])", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "zio\/ChunkLike.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (A) => Boolean): (Chunk[A], Chunk[A])", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "zio\/ChunkLike.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "applyPreferredMaxLength", "tail" : "(): Int", "member" : "scala.collection.immutable.IndexedSeq.applyPreferredMaxLength", "link" : "zio\/ChunkLike.html#applyPreferredMaxLength:Int", "kind" : "def"}, {"label" : "sameElements", "tail" : "(o: IterableOnce[B]): Boolean", "member" : "scala.collection.immutable.IndexedSeq.sameElements", "link" : "zio\/ChunkLike.html#sameElements[B>:A](o:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.immutable.IndexedSeq.canEqual", "link" : "zio\/ChunkLike.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[A]", "member" : "scala.collection.immutable.IndexedSeq.toIndexedSeq", "link" : "zio\/ChunkLike.html#toIndexedSeq:IndexedSeq[A]", "kind" : "final def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Chunk[A]", "member" : "scala.collection.immutable.IndexedSeqOps.slice", "link" : "zio\/ChunkLike.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.IndexedSeq.stringPrefix", "link" : "zio\/ChunkLike.html#stringPrefix:String", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.IndexedSeqOps.search", "link" : "zio\/ChunkLike.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:scala.math.Ordering[B]):collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.IndexedSeqOps.search", "link" : "zio\/ChunkLike.html#search[B>:A](elem:B)(implicitord:scala.math.Ordering[B]):collection.Searching.SearchResult", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.IndexedSeqOps.lengthCompare", "link" : "zio\/ChunkLike.html#lengthCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqOps.knownSize", "link" : "zio\/ChunkLike.html#knownSize:Int", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.IndexedSeqOps.lengthCompare", "link" : "zio\/ChunkLike.html#lengthCompare(len:Int):Int", "kind" : "final def"}, {"label" : "last", "tail" : "(): A", "member" : "scala.collection.IndexedSeqOps.last", "link" : "zio\/ChunkLike.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[A]", "member" : "scala.collection.IndexedSeqOps.headOption", "link" : "zio\/ChunkLike.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): A", "member" : "scala.collection.IndexedSeqOps.head", "link" : "zio\/ChunkLike.html#head:A", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Chunk[A]", "member" : "scala.collection.IndexedSeqOps.reverse", "link" : "zio\/ChunkLike.html#reverse:C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Chunk[A]", "member" : "scala.collection.IndexedSeqOps.drop", "link" : "zio\/ChunkLike.html#drop(n:Int):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Chunk[A]", "member" : "scala.collection.IndexedSeqOps.take", "link" : "zio\/ChunkLike.html#take(n:Int):C", "kind" : "def"}, {"label" : "reversed", "tail" : "(): Iterable[A]", "member" : "scala.collection.IndexedSeqOps.reversed", "link" : "zio\/ChunkLike.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IndexedSeqView[A]", "member" : "scala.collection.IndexedSeqOps.view", "link" : "zio\/ChunkLike.html#view(from:Int,until:Int):scala.collection.IndexedSeqView[A]", "kind" : "def"}, {"label" : "view", "tail" : "(): IndexedSeqView[A]", "member" : "scala.collection.IndexedSeqOps.view", "link" : "zio\/ChunkLike.html#view:scala.collection.IndexedSeqView[A]", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (A, B) => B): B", "member" : "scala.collection.IndexedSeqOps.foldRight", "link" : "zio\/ChunkLike.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqOps.reverseIterator", "link" : "zio\/ChunkLike.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[A, S]): S with EfficientSplit", "member" : "scala.collection.IndexedSeqOps.stepper", "link" : "zio\/ChunkLike.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):Swithcollection.Stepper.EfficientSplit", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IndexedSeqOps.iterator", "link" : "zio\/ChunkLike.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): ChunkLike.this.type", "member" : "scala.collection.immutable.Seq.toSeq", "link" : "zio\/ChunkLike.html#toSeq:Seq.this.type", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Seq.toString", "link" : "zio\/ChunkLike.html#toString():String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.Seq.hashCode", "link" : "zio\/ChunkLike.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "scala.collection.Seq.equals", "link" : "zio\/ChunkLike.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "occCounts", "tail" : "(sq: Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "zio\/ChunkLike.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: Seq[B])(p: (A, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "zio\/ChunkLike.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqOps.isEmpty", "link" : "zio\/ChunkLike.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "zio\/ChunkLike.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "zio\/ChunkLike.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "zio\/ChunkLike.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqOps.indices", "link" : "zio\/ChunkLike.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (A) => B)(ord: Ordering[B]): Chunk[A]", "member" : "scala.collection.SeqOps.sortBy", "link" : "zio\/ChunkLike.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (A, A) => Boolean): Chunk[A]", "member" : "scala.collection.SeqOps.sortWith", "link" : "zio\/ChunkLike.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[Chunk[A]]", "member" : "scala.collection.SeqOps.combinations", "link" : "zio\/ChunkLike.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[Chunk[A]]", "member" : "scala.collection.SeqOps.permutations", "link" : "zio\/ChunkLike.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (A) => B): Chunk[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "zio\/ChunkLike.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "zio\/ChunkLike.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "zio\/ChunkLike.html#containsSlice[B>:A](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (A) => Boolean): Option[A]", "member" : "scala.collection.SeqOps.findLast", "link" : "zio\/ChunkLike.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "zio\/ChunkLike.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "zio\/ChunkLike.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "zio\/ChunkLike.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "zio\/ChunkLike.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "zio\/ChunkLike.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (A) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "zio\/ChunkLike.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "zio\/ChunkLike.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "zio\/ChunkLike.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "zio\/ChunkLike.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "zio\/ChunkLike.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (A) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "zio\/ChunkLike.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (A) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "zio\/ChunkLike.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (A) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "zio\/ChunkLike.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (A) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "zio\/ChunkLike.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "zio\/ChunkLike.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "zio\/ChunkLike.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "zio\/ChunkLike.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Chunk[A]", "member" : "scala.collection.SeqOps.distinct", "link" : "zio\/ChunkLike.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "zio\/ChunkLike.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: Seq[B]): Chunk[B]", "member" : "scala.collection.SeqOps.union", "link" : "zio\/ChunkLike.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: IterableOnce[B]): Chunk[B]", "member" : "scala.collection.SeqOps.concat", "link" : "zio\/ChunkLike.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: IterableOnce[B]): Chunk[B]", "member" : "scala.collection.SeqOps.:++", "link" : "zio\/ChunkLike.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "++:", "tail" : "(prefix: IterableOnce[B]): Chunk[B]", "member" : "scala.collection.SeqOps.++:", "link" : "zio\/ChunkLike.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":+", "tail" : "(elem: B): Chunk[B]", "member" : "scala.collection.SeqOps.:+", "link" : "zio\/ChunkLike.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "+:", "tail" : "(elem: B): Chunk[B]", "member" : "scala.collection.SeqOps.+:", "link" : "zio\/ChunkLike.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "runWith", "tail" : "(action: (A) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "zio\/ChunkLike.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "zio\/ChunkLike.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[A]", "member" : "scala.PartialFunction.lift", "link" : "zio\/ChunkLike.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, A]", "member" : "scala.PartialFunction.compose", "link" : "zio\/ChunkLike.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[A, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "zio\/ChunkLike.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (A) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "zio\/ChunkLike.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "zio\/ChunkLike.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, A]", "member" : "scala.PartialFunction.elementWise", "link" : "zio\/ChunkLike.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[A]", "member" : "scala.PartialFunction.unapply", "link" : "zio\/ChunkLike.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => A", "member" : "scala.Function1.compose", "link" : "zio\/ChunkLike.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: Iterable[B]): LazyZip2[A, B, ChunkLike.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "zio\/ChunkLike.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "zio\/ChunkLike.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): ChunkLike.this.type", "member" : "scala.collection.Iterable.seq", "link" : "zio\/ChunkLike.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): ChunkLike.this.type", "member" : "scala.collection.Iterable.coll", "link" : "zio\/ChunkLike.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): ChunkLike.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "zio\/ChunkLike.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Chunk[A]", "member" : "scala.collection.IterableFactoryDefaults.empty", "link" : "zio\/ChunkLike.html#empty:CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[A, Chunk[A]]", "member" : "scala.collection.IterableFactoryDefaults.newSpecificBuilder", "link" : "zio\/ChunkLike.html#newSpecificBuilder:scala.collection.mutable.Builder[A@scala.annotation.unchecked.uncheckedVariance,CC[A@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: IterableOnce[A]): Chunk[A]", "member" : "scala.collection.IterableFactoryDefaults.fromSpecific", "link" : "zio\/ChunkLike.html#fromSpecific(coll:scala.collection.IterableOnce[A@scala.annotation.unchecked.uncheckedVariance]):CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Chunk[A]]", "member" : "scala.collection.IterableOps.inits", "link" : "zio\/ChunkLike.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Chunk[A]]", "member" : "scala.collection.IterableOps.tails", "link" : "zio\/ChunkLike.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterable[B], thisElem: A1, thatElem: B): Chunk[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "zio\/ChunkLike.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: IterableOnce[B]): Chunk[B]", "member" : "scala.collection.IterableOps.++", "link" : "zio\/ChunkLike.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (A, B) => B): Chunk[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "zio\/ChunkLike.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): Chunk[B]", "member" : "scala.collection.IterableOps.scan", "link" : "zio\/ChunkLike.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (A) => K)(f: (A) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "zio\/ChunkLike.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (A) => K)(f: (A) => B): Map[K, Chunk[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "zio\/ChunkLike.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (A) => K): Map[K, Chunk[A]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "zio\/ChunkLike.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "init", "tail" : "(): Chunk[A]", "member" : "scala.collection.IterableOps.init", "link" : "zio\/ChunkLike.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): Chunk[A]", "member" : "scala.collection.IterableOps.tail", "link" : "zio\/ChunkLike.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Chunk[A]]", "member" : "scala.collection.IterableOps.sliding", "link" : "zio\/ChunkLike.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Chunk[A]]", "member" : "scala.collection.IterableOps.sliding", "link" : "zio\/ChunkLike.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Chunk[A]]", "member" : "scala.collection.IterableOps.grouped", "link" : "zio\/ChunkLike.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (A) => Boolean): Chunk[A]", "member" : "scala.collection.IterableOps.dropWhile", "link" : "zio\/ChunkLike.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (A) => Boolean): Chunk[A]", "member" : "scala.collection.IterableOps.takeWhile", "link" : "zio\/ChunkLike.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Chunk[A], Chunk[A])", "member" : "scala.collection.IterableOps.splitAt", "link" : "zio\/ChunkLike.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (A) => Boolean): WithFilter[A, [_]Chunk[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "zio\/ChunkLike.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (A) => Iterable[B]): Chunk[Chunk[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "zio\/ChunkLike.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "zio\/ChunkLike.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[A]", "member" : "scala.collection.IterableOps.lastOption", "link" : "zio\/ChunkLike.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]Chunk[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "zio\/ChunkLike.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): Chunk[A]", "member" : "scala.collection.IterableOps.repr", "link" : "zio\/ChunkLike.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "zio\/ChunkLike.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[A]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "zio\/ChunkLike.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "zio\/ChunkLike.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "zio\/ChunkLike.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[A]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "zio\/ChunkLike.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "zio\/ChunkLike.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[A, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "zio\/ChunkLike.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[A]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "zio\/ChunkLike.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[A]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "zio\/ChunkLike.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[A]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "zio\/ChunkLike.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[A, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "zio\/ChunkLike.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): b.type", "member" : "scala.collection.IterableOnceOps.addString", "link" : "zio\/ChunkLike.html#addString(b:StringBuilder):b.type", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): b.type", "member" : "scala.collection.IterableOnceOps.addString", "link" : "zio\/ChunkLike.html#addString(b:StringBuilder,sep:String):b.type", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): b.type", "member" : "scala.collection.IterableOnceOps.addString", "link" : "zio\/ChunkLike.html#addString(b:StringBuilder,start:String,sep:String,end:String):b.type", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "zio\/ChunkLike.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "zio\/ChunkLike.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "zio\/ChunkLike.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (A, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "zio\/ChunkLike.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, A) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "zio\/ChunkLike.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[A, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "zio\/ChunkLike.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (A) => B)(ord: Ordering[B]): Option[A]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "zio\/ChunkLike.html#minByOption[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (A) => B)(ord: Ordering[B]): A", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "zio\/ChunkLike.html#minBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (A) => B)(ord: Ordering[B]): Option[A]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "zio\/ChunkLike.html#maxByOption[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (A) => B)(ord: Ordering[B]): A", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "zio\/ChunkLike.html#maxBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[A]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "zio\/ChunkLike.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): A", "member" : "scala.collection.IterableOnceOps.max", "link" : "zio\/ChunkLike.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[A]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "zio\/ChunkLike.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): A", "member" : "scala.collection.IterableOnceOps.min", "link" : "zio\/ChunkLike.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "zio\/ChunkLike.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "zio\/ChunkLike.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "zio\/ChunkLike.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "zio\/ChunkLike.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "zio\/ChunkLike.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "zio\/ChunkLike.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (A, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "zio\/ChunkLike.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, A) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "zio\/ChunkLike.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (A, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "zio\/ChunkLike.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, A) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "zio\/ChunkLike.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "zio\/ChunkLike.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "zio\/ChunkLike.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "zio\/ChunkLike.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (A, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "zio\/ChunkLike.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, A) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "zio\/ChunkLike.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, A) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "zio\/ChunkLike.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (A) => Boolean): Option[A]", "member" : "scala.collection.IterableOnceOps.find", "link" : "zio\/ChunkLike.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (A) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "zio\/ChunkLike.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (A) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "zio\/ChunkLike.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (A) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "zio\/ChunkLike.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "zio\/ChunkLike.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "zio\/ChunkLike.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ChunkLike.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ChunkLike.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ChunkLike.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ChunkLike.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ChunkLike.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ChunkLike.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ChunkLike.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ChunkLike.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ChunkLike.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ChunkLike.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ChunkLike.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ChunkLike.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ChunkLike.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ChunkLike.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ChunkLike.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ChunkLike.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.SeqOps.length", "link" : "zio\/ChunkLike.html#length:Int", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(i: Int): A", "member" : "scala.collection.SeqOps.apply", "link" : "zio\/ChunkLike.html#apply(i:Int):A", "kind" : "abstract def"}], "shortDescription" : "ChunkLike represents the capability for a Chunk to extend Scala'scollection library."}, {"name" : "zio.Clock", "object" : "zio\/Clock$.html", "members_object" : [{"label" : "sleep", "tail" : "(duration: => zio.Duration)(trace: Trace): UIO[Unit]", "member" : "zio.Clock.sleep", "link" : "zio\/Clock$.html#sleep(duration:=>zio.Duration)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "scheduler", "tail" : "(trace: Trace): UIO[Scheduler]", "member" : "zio.Clock.scheduler", "link" : "zio\/Clock$.html#scheduler(implicittrace:zio.Trace):zio.UIO[zio.Scheduler]", "kind" : "def"}, {"label" : "nanoTime", "tail" : "(trace: Trace): UIO[Long]", "member" : "zio.Clock.nanoTime", "link" : "zio\/Clock$.html#nanoTime(implicittrace:zio.Trace):zio.UIO[Long]", "kind" : "def"}, {"label" : "localDateTime", "tail" : "(trace: Trace): UIO[LocalDateTime]", "member" : "zio.Clock.localDateTime", "link" : "zio\/Clock$.html#localDateTime(implicittrace:zio.Trace):zio.UIO[java.time.LocalDateTime]", "kind" : "def"}, {"label" : "javaClock", "tail" : "(trace: Trace): UIO[java.time.Clock]", "member" : "zio.Clock.javaClock", "link" : "zio\/Clock$.html#javaClock(implicittrace:zio.Trace):zio.UIO[java.time.Clock]", "kind" : "def"}, {"label" : "instant", "tail" : "(trace: Trace): UIO[Instant]", "member" : "zio.Clock.instant", "link" : "zio\/Clock$.html#instant(implicittrace:zio.Trace):zio.UIO[java.time.Instant]", "kind" : "def"}, {"label" : "currentDateTime", "tail" : "(trace: Trace): UIO[OffsetDateTime]", "member" : "zio.Clock.currentDateTime", "link" : "zio\/Clock$.html#currentDateTime(implicittrace:zio.Trace):zio.UIO[java.time.OffsetDateTime]", "kind" : "def"}, {"label" : "currentTime", "tail" : "(unit: => ChronoUnit)(trace: Trace, d: DummyImplicit): UIO[Long]", "member" : "zio.Clock.currentTime", "link" : "zio\/Clock$.html#currentTime(unit:=>java.time.temporal.ChronoUnit)(implicittrace:zio.Trace,implicitd:DummyImplicit):zio.UIO[Long]", "kind" : "def"}, {"label" : "currentTime", "tail" : "(unit: => TimeUnit)(trace: Trace): UIO[Long]", "member" : "zio.Clock.currentTime", "link" : "zio\/Clock$.html#currentTime(unit:=>java.util.concurrent.TimeUnit)(implicittrace:zio.Trace):zio.UIO[Long]", "kind" : "def"}, {"label" : "ClockLive", "tail" : "", "member" : "zio.Clock.ClockLive", "link" : "zio\/Clock$.html#ClockLive", "kind" : "object"}, {"label" : "ClockJava", "tail" : "", "member" : "zio.Clock.ClockJava", "link" : "zio\/Clock$.html#ClockJavaextendsClockwithProductwithSerializable", "kind" : "final case class"}, {"label" : "tag", "tail" : ": Tag[Clock]", "member" : "zio.Clock.tag", "link" : "zio\/Clock$.html#tag:zio.Tag[zio.Clock]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Clock$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Clock$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Clock$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Clock$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Clock$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Clock$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Clock$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Clock$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Clock$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Clock$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Clock$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Clock$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Clock$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Clock$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Clock$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Clock$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Clock$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Clock$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Clock$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/Clock.html", "kind" : "trait", "members_trait" : [{"label" : "unsafe", "tail" : "(): UnsafeAPI", "member" : "zio.Clock.unsafe", "link" : "zio\/Clock.html#unsafe:Clock.this.UnsafeAPI", "kind" : "def"}, {"label" : "UnsafeAPI", "tail" : "", "member" : "zio.Clock.UnsafeAPI", "link" : "zio\/Clock.html#UnsafeAPIextendsSerializable", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Clock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Clock.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Clock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Clock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Clock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Clock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Clock.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Clock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Clock.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Clock.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Clock.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Clock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Clock.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Clock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Clock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Clock.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Clock.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Clock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Clock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sleep", "tail" : "(duration: => zio.Duration)(trace: Trace): UIO[Unit]", "member" : "zio.Clock.sleep", "link" : "zio\/Clock.html#sleep(duration:=>zio.Duration)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "scheduler", "tail" : "(trace: Trace): UIO[Scheduler]", "member" : "zio.Clock.scheduler", "link" : "zio\/Clock.html#scheduler(implicittrace:zio.Trace):zio.UIO[zio.Scheduler]", "kind" : "abstract def"}, {"label" : "nanoTime", "tail" : "(trace: Trace): UIO[Long]", "member" : "zio.Clock.nanoTime", "link" : "zio\/Clock.html#nanoTime(implicittrace:zio.Trace):zio.UIO[Long]", "kind" : "abstract def"}, {"label" : "localDateTime", "tail" : "(trace: Trace): UIO[LocalDateTime]", "member" : "zio.Clock.localDateTime", "link" : "zio\/Clock.html#localDateTime(implicittrace:zio.Trace):zio.UIO[java.time.LocalDateTime]", "kind" : "abstract def"}, {"label" : "javaClock", "tail" : "(trace: Trace): UIO[java.time.Clock]", "member" : "zio.Clock.javaClock", "link" : "zio\/Clock.html#javaClock(implicittrace:zio.Trace):zio.UIO[java.time.Clock]", "kind" : "abstract def"}, {"label" : "instant", "tail" : "(trace: Trace): UIO[Instant]", "member" : "zio.Clock.instant", "link" : "zio\/Clock.html#instant(implicittrace:zio.Trace):zio.UIO[java.time.Instant]", "kind" : "abstract def"}, {"label" : "currentDateTime", "tail" : "(trace: Trace): UIO[OffsetDateTime]", "member" : "zio.Clock.currentDateTime", "link" : "zio\/Clock.html#currentDateTime(implicittrace:zio.Trace):zio.UIO[java.time.OffsetDateTime]", "kind" : "abstract def"}, {"label" : "currentTime", "tail" : "(unit: => ChronoUnit)(trace: Trace, d: DummyImplicit): UIO[Long]", "member" : "zio.Clock.currentTime", "link" : "zio\/Clock.html#currentTime(unit:=>java.time.temporal.ChronoUnit)(implicittrace:zio.Trace,implicitd:DummyImplicit):zio.UIO[Long]", "kind" : "abstract def"}, {"label" : "currentTime", "tail" : "(unit: => TimeUnit)(trace: Trace): UIO[Long]", "member" : "zio.Clock.currentTime", "link" : "zio\/Clock.html#currentTime(unit:=>java.util.concurrent.TimeUnit)(implicittrace:zio.Trace):zio.UIO[Long]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.Config", "object" : "zio\/Config$.html", "members_object" : [{"label" : "OrElse", "tail" : "", "member" : "zio.Config.OrElse", "link" : "zio\/Config$.html#OrElse[+A]extendsAnyRef", "kind" : "final class"}, {"label" : "vectorOf", "tail" : "(name: String, config: Config[A]): Config[Vector[A]]", "member" : "zio.Config.vectorOf", "link" : "zio\/Config$.html#vectorOf[A](name:String,config:zio.Config[A]):zio.Config[Vector[A]]", "kind" : "def"}, {"label" : "vectorOf", "tail" : "(config: Config[A]): Config[Vector[A]]", "member" : "zio.Config.vectorOf", "link" : "zio\/Config$.html#vectorOf[A](config:zio.Config[A]):zio.Config[Vector[A]]", "kind" : "def"}, {"label" : "uri", "tail" : "(name: String): Config[URI]", "member" : "zio.Config.uri", "link" : "zio\/Config$.html#uri(name:String):zio.Config[java.net.URI]", "kind" : "def"}, {"label" : "uri", "tail" : "(): Config[URI]", "member" : "zio.Config.uri", "link" : "zio\/Config$.html#uri:zio.Config[java.net.URI]", "kind" : "def"}, {"label" : "table", "tail" : "(name: String, value: Config[V]): Config[Map[String, V]]", "member" : "zio.Config.table", "link" : "zio\/Config$.html#table[V](name:String,value:zio.Config[V]):zio.Config[Map[String,V]]", "kind" : "def"}, {"label" : "table", "tail" : "(value: Config[V]): Config[Map[String, V]]", "member" : "zio.Config.table", "link" : "zio\/Config$.html#table[V](value:zio.Config[V]):zio.Config[Map[String,V]]", "kind" : "def"}, {"label" : "succeed", "tail" : "(value: => A): Config[A]", "member" : "zio.Config.succeed", "link" : "zio\/Config$.html#succeed[A](value:=>A):zio.Config[A]", "kind" : "def"}, {"label" : "string", "tail" : "(name: String): Config[String]", "member" : "zio.Config.string", "link" : "zio\/Config$.html#string(name:String):zio.Config[String]", "kind" : "def"}, {"label" : "string", "tail" : "(): Config[String]", "member" : "zio.Config.string", "link" : "zio\/Config$.html#string:zio.Config[String]", "kind" : "def"}, {"label" : "setOf", "tail" : "(name: String, config: Config[A]): Config[Set[A]]", "member" : "zio.Config.setOf", "link" : "zio\/Config$.html#setOf[A](name:String,config:zio.Config[A]):zio.Config[Set[A]]", "kind" : "def"}, {"label" : "setOf", "tail" : "(config: Config[A]): Config[Set[A]]", "member" : "zio.Config.setOf", "link" : "zio\/Config$.html#setOf[A](config:zio.Config[A]):zio.Config[Set[A]]", "kind" : "def"}, {"label" : "secret", "tail" : "(name: String): Config[Secret]", "member" : "zio.Config.secret", "link" : "zio\/Config$.html#secret(name:String):zio.Config[zio.Config.Secret]", "kind" : "def"}, {"label" : "secret", "tail" : "(): Config[Secret]", "member" : "zio.Config.secret", "link" : "zio\/Config$.html#secret:zio.Config[zio.Config.Secret]", "kind" : "def"}, {"label" : "offsetDateTime", "tail" : "(name: String): Config[OffsetDateTime]", "member" : "zio.Config.offsetDateTime", "link" : "zio\/Config$.html#offsetDateTime(name:String):zio.Config[java.time.OffsetDateTime]", "kind" : "def"}, {"label" : "offsetDateTime", "tail" : "(): Config[OffsetDateTime]", "member" : "zio.Config.offsetDateTime", "link" : "zio\/Config$.html#offsetDateTime:zio.Config[java.time.OffsetDateTime]", "kind" : "def"}, {"label" : "nonEmptyChunkOf", "tail" : "(name: String, config: Config[A]): Config[NonEmptyChunk[A]]", "member" : "zio.Config.nonEmptyChunkOf", "link" : "zio\/Config$.html#nonEmptyChunkOf[A](name:String,config:zio.Config[A]):zio.Config[zio.NonEmptyChunk[A]]", "kind" : "def"}, {"label" : "nonEmptyChunkOf", "tail" : "(config: Config[A]): Config[NonEmptyChunk[A]]", "member" : "zio.Config.nonEmptyChunkOf", "link" : "zio\/Config$.html#nonEmptyChunkOf[A](config:zio.Config[A]):zio.Config[zio.NonEmptyChunk[A]]", "kind" : "def"}, {"label" : "long", "tail" : "(name: String): Config[Long]", "member" : "zio.Config.long", "link" : "zio\/Config$.html#long(name:String):zio.Config[Long]", "kind" : "def"}, {"label" : "long", "tail" : "(): Config[Long]", "member" : "zio.Config.long", "link" : "zio\/Config$.html#long:zio.Config[Long]", "kind" : "def"}, {"label" : "logLevel", "tail" : "(name: String): Config[LogLevel]", "member" : "zio.Config.logLevel", "link" : "zio\/Config$.html#logLevel(name:String):zio.Config[zio.LogLevel]", "kind" : "def"}, {"label" : "logLevel", "tail" : "(): Config[LogLevel]", "member" : "zio.Config.logLevel", "link" : "zio\/Config$.html#logLevel:zio.Config[zio.LogLevel]", "kind" : "def"}, {"label" : "localTime", "tail" : "(name: String): Config[LocalTime]", "member" : "zio.Config.localTime", "link" : "zio\/Config$.html#localTime(name:String):zio.Config[java.time.LocalTime]", "kind" : "def"}, {"label" : "localTime", "tail" : "(): Config[LocalTime]", "member" : "zio.Config.localTime", "link" : "zio\/Config$.html#localTime:zio.Config[java.time.LocalTime]", "kind" : "def"}, {"label" : "localDateTime", "tail" : "(name: String): Config[LocalDateTime]", "member" : "zio.Config.localDateTime", "link" : "zio\/Config$.html#localDateTime(name:String):zio.Config[java.time.LocalDateTime]", "kind" : "def"}, {"label" : "localDateTime", "tail" : "(): Config[LocalDateTime]", "member" : "zio.Config.localDateTime", "link" : "zio\/Config$.html#localDateTime:zio.Config[java.time.LocalDateTime]", "kind" : "def"}, {"label" : "localDate", "tail" : "(name: String): Config[LocalDate]", "member" : "zio.Config.localDate", "link" : "zio\/Config$.html#localDate(name:String):zio.Config[java.time.LocalDate]", "kind" : "def"}, {"label" : "localDate", "tail" : "(): Config[LocalDate]", "member" : "zio.Config.localDate", "link" : "zio\/Config$.html#localDate:zio.Config[java.time.LocalDate]", "kind" : "def"}, {"label" : "listOf", "tail" : "(name: String, config: Config[A]): Config[List[A]]", "member" : "zio.Config.listOf", "link" : "zio\/Config$.html#listOf[A](name:String,config:zio.Config[A]):zio.Config[List[A]]", "kind" : "def"}, {"label" : "listOf", "tail" : "(config: Config[A]): Config[List[A]]", "member" : "zio.Config.listOf", "link" : "zio\/Config$.html#listOf[A](config:zio.Config[A]):zio.Config[List[A]]", "kind" : "def"}, {"label" : "int", "tail" : "(name: String): Config[Int]", "member" : "zio.Config.int", "link" : "zio\/Config$.html#int(name:String):zio.Config[Int]", "kind" : "def"}, {"label" : "int", "tail" : "(): Config[Int]", "member" : "zio.Config.int", "link" : "zio\/Config$.html#int:zio.Config[Int]", "kind" : "def"}, {"label" : "float", "tail" : "(name: String): Config[Float]", "member" : "zio.Config.float", "link" : "zio\/Config$.html#float(name:String):zio.Config[Float]", "kind" : "def"}, {"label" : "float", "tail" : "(): Config[Float]", "member" : "zio.Config.float", "link" : "zio\/Config$.html#float:zio.Config[Float]", "kind" : "def"}, {"label" : "fail", "tail" : "(error: => String): Config[Nothing]", "member" : "zio.Config.fail", "link" : "zio\/Config$.html#fail(error:=>String):zio.Config[Nothing]", "kind" : "def"}, {"label" : "duration", "tail" : "(name: String): Config[zio.Duration]", "member" : "zio.Config.duration", "link" : "zio\/Config$.html#duration(name:String):zio.Config[zio.Duration]", "kind" : "def"}, {"label" : "duration", "tail" : "(): Config[zio.Duration]", "member" : "zio.Config.duration", "link" : "zio\/Config$.html#duration:zio.Config[zio.Duration]", "kind" : "def"}, {"label" : "double", "tail" : "(name: String): Config[Double]", "member" : "zio.Config.double", "link" : "zio\/Config$.html#double(name:String):zio.Config[Double]", "kind" : "def"}, {"label" : "double", "tail" : "(): Config[Double]", "member" : "zio.Config.double", "link" : "zio\/Config$.html#double:zio.Config[Double]", "kind" : "def"}, {"label" : "defer", "tail" : "(config: => Config[A]): Config[A]", "member" : "zio.Config.defer", "link" : "zio\/Config$.html#defer[A](config:=>zio.Config[A]):zio.Config[A]", "kind" : "def"}, {"label" : "chunkOf", "tail" : "(name: String, config: Config[A]): Config[Chunk[A]]", "member" : "zio.Config.chunkOf", "link" : "zio\/Config$.html#chunkOf[A](name:String,config:zio.Config[A]):zio.Config[zio.Chunk[A]]", "kind" : "def"}, {"label" : "chunkOf", "tail" : "(config: Config[A]): Config[Chunk[A]]", "member" : "zio.Config.chunkOf", "link" : "zio\/Config$.html#chunkOf[A](config:zio.Config[A]):zio.Config[zio.Chunk[A]]", "kind" : "def"}, {"label" : "boolean", "tail" : "(name: String): Config[Boolean]", "member" : "zio.Config.boolean", "link" : "zio\/Config$.html#boolean(name:String):zio.Config[Boolean]", "kind" : "def"}, {"label" : "boolean", "tail" : "(): Config[Boolean]", "member" : "zio.Config.boolean", "link" : "zio\/Config$.html#boolean:zio.Config[Boolean]", "kind" : "def"}, {"label" : "bigInt", "tail" : "(name: String): Config[BigInt]", "member" : "zio.Config.bigInt", "link" : "zio\/Config$.html#bigInt(name:String):zio.Config[BigInt]", "kind" : "def"}, {"label" : "bigInt", "tail" : "(): Config[BigInt]", "member" : "zio.Config.bigInt", "link" : "zio\/Config$.html#bigInt:zio.Config[BigInt]", "kind" : "def"}, {"label" : "bigDecimal", "tail" : "(name: String): Config[BigDecimal]", "member" : "zio.Config.bigDecimal", "link" : "zio\/Config$.html#bigDecimal(name:String):zio.Config[BigDecimal]", "kind" : "def"}, {"label" : "bigDecimal", "tail" : "(): Config[BigDecimal]", "member" : "zio.Config.bigDecimal", "link" : "zio\/Config$.html#bigDecimal:zio.Config[BigDecimal]", "kind" : "def"}, {"label" : "Error", "tail" : "", "member" : "zio.Config.Error", "link" : "zio\/Config$.html#Error", "kind" : "object"}, {"label" : "Error", "tail" : "", "member" : "zio.Config.Error", "link" : "zio\/Config$.html#ErrorextendsExceptionwithNoStackTrace", "kind" : "sealed trait"}, {"label" : "Zipped", "tail" : "", "member" : "zio.Config.Zipped", "link" : "zio\/Config$.html#Zipped[A,B,C]extendsConfig.Composite[C]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Text", "tail" : "", "member" : "zio.Config.Text", "link" : "zio\/Config$.html#Text", "kind" : "case object"}, {"label" : "Table", "tail" : "", "member" : "zio.Config.Table", "link" : "zio\/Config$.html#Table[V]extendsConfig.Composite[Map[String,V]]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Switch", "tail" : "", "member" : "zio.Config.Switch", "link" : "zio\/Config$.html#Switch[A,B]extendsConfig.Composite[B]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Sequence", "tail" : "", "member" : "zio.Config.Sequence", "link" : "zio\/Config$.html#Sequence[A]extendsConfig.Composite[zio.Chunk[A]]withProductwithSerializable", "kind" : "final case class"}, {"label" : "SecretType", "tail" : "", "member" : "zio.Config.SecretType", "link" : "zio\/Config$.html#SecretType", "kind" : "case object"}, {"label" : "OffsetDateTime", "tail" : "", "member" : "zio.Config.OffsetDateTime", "link" : "zio\/Config$.html#OffsetDateTime", "kind" : "case object"}, {"label" : "Nested", "tail" : "", "member" : "zio.Config.Nested", "link" : "zio\/Config$.html#Nested[A]extendsConfig.Composite[A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "MapOrFail", "tail" : "", "member" : "zio.Config.MapOrFail", "link" : "zio\/Config$.html#MapOrFail[A,B]extendsConfig.Composite[B]withProductwithSerializable", "kind" : "final case class"}, {"label" : "LocalTime", "tail" : "", "member" : "zio.Config.LocalTime", "link" : "zio\/Config$.html#LocalTime", "kind" : "case object"}, {"label" : "LocalDate", "tail" : "", "member" : "zio.Config.LocalDate", "link" : "zio\/Config$.html#LocalDate", "kind" : "case object"}, {"label" : "LocalDateTime", "tail" : "", "member" : "zio.Config.LocalDateTime", "link" : "zio\/Config$.html#LocalDateTime", "kind" : "case object"}, {"label" : "Lazy", "tail" : "", "member" : "zio.Config.Lazy", "link" : "zio\/Config$.html#Lazy[A]extendsConfig.Composite[A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Described", "tail" : "", "member" : "zio.Config.Described", "link" : "zio\/Config$.html#Described[A]extendsConfig.Composite[A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Integer", "tail" : "", "member" : "zio.Config.Integer", "link" : "zio\/Config$.html#Integer", "kind" : "case object"}, {"label" : "FallbackWith", "tail" : "", "member" : "zio.Config.FallbackWith", "link" : "zio\/Config$.html#FallbackWith[A]extendsConfig.Fallback[A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Optional", "tail" : "", "member" : "zio.Config.Optional", "link" : "zio\/Config$.html#Optional[A]extendsConfig.Fallback[Option[A]]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Fallback", "tail" : "", "member" : "zio.Config.Fallback", "link" : "zio\/Config$.html#Fallback", "kind" : "object"}, {"label" : "Fallback", "tail" : "", "member" : "zio.Config.Fallback", "link" : "zio\/Config$.html#Fallback[A]extendsConfig.Composite[A]withProductwithSerializable", "kind" : "sealed class"}, {"label" : "Fail", "tail" : "", "member" : "zio.Config.Fail", "link" : "zio\/Config$.html#FailextendsConfig.Primitive[Nothing]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Duration", "tail" : "", "member" : "zio.Config.Duration", "link" : "zio\/Config$.html#Duration", "kind" : "case object"}, {"label" : "Decimal", "tail" : "", "member" : "zio.Config.Decimal", "link" : "zio\/Config$.html#Decimal", "kind" : "case object"}, {"label" : "Constant", "tail" : "", "member" : "zio.Config.Constant", "link" : "zio\/Config$.html#Constant[A]extendsConfig.Primitive[A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Bool", "tail" : "", "member" : "zio.Config.Bool", "link" : "zio\/Config$.html#Bool", "kind" : "case object"}, {"label" : "Composite", "tail" : "", "member" : "zio.Config.Composite", "link" : "zio\/Config$.html#Composite[+A]extendsConfig[A]", "kind" : "sealed trait"}, {"label" : "Primitive", "tail" : "", "member" : "zio.Config.Primitive", "link" : "zio\/Config$.html#Primitive[+A]extendsConfig[A]", "kind" : "sealed trait"}, {"label" : "Secret", "tail" : "", "member" : "zio.Config.Secret", "link" : "zio\/Config$.html#Secret", "kind" : "object"}, {"label" : "Secret", "tail" : "", "member" : "zio.Config.Secret", "link" : "zio\/Config$.html#SecretextendsAnyRef", "kind" : "final class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Config$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Config$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Config$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Config$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Config$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Config$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Config$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Config$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Config$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Config$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Config$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Config$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Config$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Config$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Config$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Config$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Config$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Config$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Config$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/Config.html", "kind" : "trait", "members_trait" : [{"label" : "zipWith", "tail" : "(that: => Config[B])(f: (A, B) => C): Config[C]", "member" : "zio.Config.zipWith", "link" : "zio\/Config.html#zipWith[B,C](that:=>zio.Config[B])(f:(A,B)=>C):zio.Config[C]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: => Config[B])(z: Zippable[A, B]): Config[Out]", "member" : "zio.Config.zip", "link" : "zio\/Config.html#zip[B](that:=>zio.Config[B])(implicitz:zio.Zippable[A,B]):zio.Config[z.Out]", "kind" : "def"}, {"label" : "withDefault", "tail" : "(default: => A1): Config[A1]", "member" : "zio.Config.withDefault", "link" : "zio\/Config.html#withDefault[A1>:A](default:=>A1):zio.Config[A1]", "kind" : "def"}, {"label" : "validateWith", "tail" : "(message: => String)(pf: PartialFunction[A, B]): Config[B]", "member" : "zio.Config.validateWith", "link" : "zio\/Config.html#validateWith[B](message:=>String)(pf:PartialFunction[A,B]):zio.Config[B]", "kind" : "def"}, {"label" : "validate", "tail" : "(message: => String)(f: (A) => Boolean): Config[A]", "member" : "zio.Config.validate", "link" : "zio\/Config.html#validate(message:=>String)(f:A=>Boolean):zio.Config[A]", "kind" : "def"}, {"label" : "switch", "tail" : "(f: (A1, Config[B])*): Config[B]", "member" : "zio.Config.switch", "link" : "zio\/Config.html#switch[A1>:A,B](f:(A1,zio.Config[B])*):zio.Config[B]", "kind" : "def"}, {"label" : "repeat", "tail" : "(): Config[Chunk[A]]", "member" : "zio.Config.repeat", "link" : "zio\/Config.html#repeat:zio.Config[zio.Chunk[A]]", "kind" : "def"}, {"label" : "orElseIf", "tail" : "(condition: (Error) => Boolean): OrElse[A]", "member" : "zio.Config.orElseIf", "link" : "zio\/Config.html#orElseIf(condition:zio.Config.Error=>Boolean):zio.Config.OrElse[A]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: => Config[A1]): Config[A1]", "member" : "zio.Config.orElse", "link" : "zio\/Config.html#orElse[A1>:A](that:=>zio.Config[A1]):zio.Config[A1]", "kind" : "def"}, {"label" : "optional", "tail" : "(): Config[Option[A]]", "member" : "zio.Config.optional", "link" : "zio\/Config.html#optional:zio.Config[Option[A]]", "kind" : "def"}, {"label" : "nested", "tail" : "(name: => String, names: String*): Config[A]", "member" : "zio.Config.nested", "link" : "zio\/Config.html#nested(name:=>String,names:String*):zio.Config[A]", "kind" : "def"}, {"label" : "nested", "tail" : "(name: => String): Config[A]", "member" : "zio.Config.nested", "link" : "zio\/Config.html#nested(name:=>String):zio.Config[A]", "kind" : "def"}, {"label" : "mapAttempt", "tail" : "(f: (A) => B): Config[B]", "member" : "zio.Config.mapAttempt", "link" : "zio\/Config.html#mapAttempt[B](f:A=>B):zio.Config[B]", "kind" : "def"}, {"label" : "mapOrFail", "tail" : "(f: (A) => Either[Error, B]): Config[B]", "member" : "zio.Config.mapOrFail", "link" : "zio\/Config.html#mapOrFail[B](f:A=>Either[zio.Config.Error,B]):zio.Config[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B): Config[B]", "member" : "zio.Config.map", "link" : "zio\/Config.html#map[B](f:A=>B):zio.Config[B]", "kind" : "def"}, {"label" : "??", "tail" : "(label: => String): Config[A]", "member" : "zio.Config.??", "link" : "zio\/Config.html#??(label:=>String):zio.Config[A]", "kind" : "def"}, {"label" : "||", "tail" : "(that: => Config[A1]): Config[A1]", "member" : "zio.Config.||", "link" : "zio\/Config.html#||[A1>:A](that:=>zio.Config[A1]):zio.Config[A1]", "kind" : "def"}, {"label" : "++", "tail" : "(that: => Config[B])(zippable: Zippable[A, B]): Config[Out]", "member" : "zio.Config.++", "link" : "zio\/Config.html#++[B](that:=>zio.Config[B])(implicitzippable:zio.Zippable[A,B]):zio.Config[zippable.Out]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Config.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Config.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Config.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Config.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Config.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Config.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Config.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Config.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Config.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Config.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Config.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Config.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Config.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Config.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Config.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Config.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Config.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Config.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Config.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A zio.Config describes the structure of some configuration data."}, {"name" : "zio.ConfigProvider", "object" : "zio\/ConfigProvider$.html", "members_object" : [{"label" : "tag", "tail" : ": Tag[ConfigProvider]", "member" : "zio.ConfigProvider.tag", "link" : "zio\/ConfigProvider$.html#tag:zio.Tag[zio.ConfigProvider]", "kind" : "lazy val"}, {"label" : "propsProvider", "tail" : ": ConfigProvider", "member" : "zio.ConfigProvider.propsProvider", "link" : "zio\/ConfigProvider$.html#propsProvider:zio.ConfigProvider", "kind" : "lazy val"}, {"label" : "props", "tail" : ": ZLayer[Any, Nothing, ConfigProvider]", "member" : "zio.ConfigProvider.props", "link" : "zio\/ConfigProvider$.html#props:zio.ZLayer[Any,Nothing,zio.ConfigProvider]", "kind" : "lazy val"}, {"label" : "fromProps", "tail" : "(pathDelim: String, seqDelim: String): ConfigProvider", "member" : "zio.ConfigProvider.fromProps", "link" : "zio\/ConfigProvider$.html#fromProps(pathDelim:String,seqDelim:String):zio.ConfigProvider", "kind" : "def"}, {"label" : "fromMap", "tail" : "(map: Map[String, String], pathDelim: String, seqDelim: String): ConfigProvider", "member" : "zio.ConfigProvider.fromMap", "link" : "zio\/ConfigProvider$.html#fromMap(map:Map[String,String],pathDelim:String,seqDelim:String):zio.ConfigProvider", "kind" : "def"}, {"label" : "fromFlat", "tail" : "(flat: Flat): ConfigProvider", "member" : "zio.ConfigProvider.fromFlat", "link" : "zio\/ConfigProvider$.html#fromFlat(flat:zio.ConfigProvider.Flat):zio.ConfigProvider", "kind" : "def"}, {"label" : "fromEnv", "tail" : "(pathDelim: String, seqDelim: String): ConfigProvider", "member" : "zio.ConfigProvider.fromEnv", "link" : "zio\/ConfigProvider$.html#fromEnv(pathDelim:String,seqDelim:String):zio.ConfigProvider", "kind" : "def"}, {"label" : "fromAppArgs", "tail" : "(args: ZIOAppArgs, pathDelim: String, seqDelim: Option[String]): ConfigProvider", "member" : "zio.ConfigProvider.fromAppArgs", "link" : "zio\/ConfigProvider$.html#fromAppArgs(args:zio.ZIOAppArgs,pathDelim:String,seqDelim:Option[String]):zio.ConfigProvider", "kind" : "def"}, {"label" : "envProvider", "tail" : ": ConfigProvider", "member" : "zio.ConfigProvider.envProvider", "link" : "zio\/ConfigProvider$.html#envProvider:zio.ConfigProvider", "kind" : "lazy val"}, {"label" : "env", "tail" : ": ZLayer[Any, Nothing, ConfigProvider]", "member" : "zio.ConfigProvider.env", "link" : "zio\/ConfigProvider$.html#env:zio.ZLayer[Any,Nothing,zio.ConfigProvider]", "kind" : "lazy val"}, {"label" : "defaultProvider", "tail" : ": ConfigProvider", "member" : "zio.ConfigProvider.defaultProvider", "link" : "zio\/ConfigProvider$.html#defaultProvider:zio.ConfigProvider", "kind" : "lazy val"}, {"label" : "consoleProvider", "tail" : "(seqDelim: String): ConfigProvider", "member" : "zio.ConfigProvider.consoleProvider", "link" : "zio\/ConfigProvider$.html#consoleProvider(seqDelim:String):zio.ConfigProvider", "kind" : "def"}, {"label" : "consoleProvider", "tail" : ": ConfigProvider", "member" : "zio.ConfigProvider.consoleProvider", "link" : "zio\/ConfigProvider$.html#consoleProvider:zio.ConfigProvider", "kind" : "lazy val"}, {"label" : "console", "tail" : ": ZLayer[Any, Nothing, ConfigProvider]", "member" : "zio.ConfigProvider.console", "link" : "zio\/ConfigProvider$.html#console:zio.ZLayer[Any,Nothing,zio.ConfigProvider]", "kind" : "lazy val"}, {"label" : "Flat", "tail" : "", "member" : "zio.ConfigProvider.Flat", "link" : "zio\/ConfigProvider$.html#Flat", "kind" : "object"}, {"label" : "Flat", "tail" : "", "member" : "zio.ConfigProvider.Flat", "link" : "zio\/ConfigProvider$.html#FlatextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ConfigProvider$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ConfigProvider$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ConfigProvider$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ConfigProvider$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ConfigProvider$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ConfigProvider$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ConfigProvider$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ConfigProvider$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ConfigProvider$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ConfigProvider$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ConfigProvider$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ConfigProvider$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ConfigProvider$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ConfigProvider$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ConfigProvider$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ConfigProvider$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ConfigProvider$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ConfigProvider$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ConfigProvider$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/ConfigProvider.html", "kind" : "trait", "members_trait" : [{"label" : "within", "tail" : "(path: Chunk[String])(f: (ConfigProvider) => ConfigProvider): ConfigProvider", "member" : "zio.ConfigProvider.within", "link" : "zio\/ConfigProvider.html#within(path:zio.Chunk[String])(f:zio.ConfigProvider=>zio.ConfigProvider):zio.ConfigProvider", "kind" : "final def"}, {"label" : "upperCase", "tail" : "(): ConfigProvider", "member" : "zio.ConfigProvider.upperCase", "link" : "zio\/ConfigProvider.html#upperCase:zio.ConfigProvider", "kind" : "final def"}, {"label" : "unnested", "tail" : "(name: String): ConfigProvider", "member" : "zio.ConfigProvider.unnested", "link" : "zio\/ConfigProvider.html#unnested(name:String):zio.ConfigProvider", "kind" : "final def"}, {"label" : "snakeCase", "tail" : "(): ConfigProvider", "member" : "zio.ConfigProvider.snakeCase", "link" : "zio\/ConfigProvider.html#snakeCase:zio.ConfigProvider", "kind" : "final def"}, {"label" : "orElse", "tail" : "(that: ConfigProvider): ConfigProvider", "member" : "zio.ConfigProvider.orElse", "link" : "zio\/ConfigProvider.html#orElse(that:zio.ConfigProvider):zio.ConfigProvider", "kind" : "final def"}, {"label" : "nested", "tail" : "(name: String): ConfigProvider", "member" : "zio.ConfigProvider.nested", "link" : "zio\/ConfigProvider.html#nested(name:String):zio.ConfigProvider", "kind" : "final def"}, {"label" : "lowerCase", "tail" : "(): ConfigProvider", "member" : "zio.ConfigProvider.lowerCase", "link" : "zio\/ConfigProvider.html#lowerCase:zio.ConfigProvider", "kind" : "final def"}, {"label" : "kebabCase", "tail" : "(): ConfigProvider", "member" : "zio.ConfigProvider.kebabCase", "link" : "zio\/ConfigProvider.html#kebabCase:zio.ConfigProvider", "kind" : "final def"}, {"label" : "flatten", "tail" : "(): Flat", "member" : "zio.ConfigProvider.flatten", "link" : "zio\/ConfigProvider.html#flatten:zio.ConfigProvider.Flat", "kind" : "def"}, {"label" : "contramapPath", "tail" : "(f: (String) => String): ConfigProvider", "member" : "zio.ConfigProvider.contramapPath", "link" : "zio\/ConfigProvider.html#contramapPath(f:String=>String):zio.ConfigProvider", "kind" : "final def"}, {"label" : "load", "tail" : "(trace: Trace, config: Config[A]): IO[Error, A]", "member" : "zio.ConfigProvider.load", "link" : "zio\/ConfigProvider.html#load[A](implicittrace:zio.Trace,implicitconfig:zio.Config[A]):zio.IO[zio.Config.Error,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ConfigProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ConfigProvider.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ConfigProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ConfigProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ConfigProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ConfigProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ConfigProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ConfigProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ConfigProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ConfigProvider.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ConfigProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ConfigProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ConfigProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ConfigProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ConfigProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ConfigProvider.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ConfigProvider.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ConfigProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ConfigProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "load", "tail" : "(config: Config[A])(trace: Trace): IO[Error, A]", "member" : "zio.ConfigProvider.load", "link" : "zio\/ConfigProvider.html#load[A](config:zio.Config[A])(implicittrace:zio.Trace):zio.IO[zio.Config.Error,A]", "kind" : "abstract def"}], "shortDescription" : "A ConfigProvider is a service that provides configuration given a descriptionof the structure of that configuration."}, {"name" : "zio.Console", "object" : "zio\/Console$.html", "members_object" : [{"label" : "readLine", "tail" : "(prompt: String)(trace: Trace): IO[IOException, String]", "member" : "zio.Console.readLine", "link" : "zio\/Console$.html#readLine(prompt:String)(implicittrace:zio.Trace):zio.IO[java.io.IOException,String]", "kind" : "def"}, {"label" : "readLine", "tail" : "(trace: Trace): IO[IOException, String]", "member" : "zio.Console.readLine", "link" : "zio\/Console$.html#readLine(implicittrace:zio.Trace):zio.IO[java.io.IOException,String]", "kind" : "def"}, {"label" : "printLineError", "tail" : "(line: => Any)(trace: Trace): IO[IOException, Unit]", "member" : "zio.Console.printLineError", "link" : "zio\/Console$.html#printLineError(line:=>Any)(implicittrace:zio.Trace):zio.IO[java.io.IOException,Unit]", "kind" : "def"}, {"label" : "printLine", "tail" : "(line: => Any)(trace: Trace): IO[IOException, Unit]", "member" : "zio.Console.printLine", "link" : "zio\/Console$.html#printLine(line:=>Any)(implicittrace:zio.Trace):zio.IO[java.io.IOException,Unit]", "kind" : "def"}, {"label" : "printError", "tail" : "(line: => Any)(trace: Trace): IO[IOException, Unit]", "member" : "zio.Console.printError", "link" : "zio\/Console$.html#printError(line:=>Any)(implicittrace:zio.Trace):zio.IO[java.io.IOException,Unit]", "kind" : "def"}, {"label" : "print", "tail" : "(line: => Any)(trace: Trace): IO[IOException, Unit]", "member" : "zio.Console.print", "link" : "zio\/Console$.html#print(line:=>Any)(implicittrace:zio.Trace):zio.IO[java.io.IOException,Unit]", "kind" : "def"}, {"label" : "ConsoleLive", "tail" : "", "member" : "zio.Console.ConsoleLive", "link" : "zio\/Console$.html#ConsoleLive", "kind" : "object"}, {"label" : "tag", "tail" : ": Tag[Console]", "member" : "zio.Console.tag", "link" : "zio\/Console$.html#tag:zio.Tag[zio.Console]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Console$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Console$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Console$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Console$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Console$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Console$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Console$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Console$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Console$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Console$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Console$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Console$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Console$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Console$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Console$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Console$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Console$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Console$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Console$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/Console.html", "kind" : "trait", "members_trait" : [{"label" : "unsafe", "tail" : "(): UnsafeAPI", "member" : "zio.Console.unsafe", "link" : "zio\/Console.html#unsafe:Console.this.UnsafeAPI", "kind" : "def"}, {"label" : "UnsafeAPI", "tail" : "", "member" : "zio.Console.UnsafeAPI", "link" : "zio\/Console.html#UnsafeAPIextendsSerializable", "kind" : "trait"}, {"label" : "readLine", "tail" : "(prompt: String)(trace: Trace): IO[IOException, String]", "member" : "zio.Console.readLine", "link" : "zio\/Console.html#readLine(prompt:String)(implicittrace:zio.Trace):zio.IO[java.io.IOException,String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Console.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Console.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Console.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Console.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Console.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Console.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Console.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Console.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Console.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Console.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Console.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Console.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Console.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Console.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Console.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Console.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Console.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Console.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Console.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "readLine", "tail" : "(trace: Trace): IO[IOException, String]", "member" : "zio.Console.readLine", "link" : "zio\/Console.html#readLine(implicittrace:zio.Trace):zio.IO[java.io.IOException,String]", "kind" : "abstract def"}, {"label" : "printLineError", "tail" : "(line: => Any)(trace: Trace): IO[IOException, Unit]", "member" : "zio.Console.printLineError", "link" : "zio\/Console.html#printLineError(line:=>Any)(implicittrace:zio.Trace):zio.IO[java.io.IOException,Unit]", "kind" : "abstract def"}, {"label" : "printLine", "tail" : "(line: => Any)(trace: Trace): IO[IOException, Unit]", "member" : "zio.Console.printLine", "link" : "zio\/Console.html#printLine(line:=>Any)(implicittrace:zio.Trace):zio.IO[java.io.IOException,Unit]", "kind" : "abstract def"}, {"label" : "printError", "tail" : "(line: => Any)(trace: Trace): IO[IOException, Unit]", "member" : "zio.Console.printError", "link" : "zio\/Console.html#printError(line:=>Any)(implicittrace:zio.Trace):zio.IO[java.io.IOException,Unit]", "kind" : "abstract def"}, {"label" : "print", "tail" : "(line: => Any)(trace: Trace): IO[IOException, Unit]", "member" : "zio.Console.print", "link" : "zio\/Console.html#print(line:=>Any)(implicittrace:zio.Trace):zio.IO[java.io.IOException,Unit]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.DefaultServices", "shortDescription" : "", "object" : "zio\/DefaultServices$.html", "members_object" : [{"label" : "live", "tail" : ": ZEnvironment[Clock with Console with System with Random with ConfigProvider]", "member" : "zio.DefaultServices.live", "link" : "zio\/DefaultServices$.html#live:zio.ZEnvironment[zio.Clockwithzio.Consolewithzio.Systemwithzio.Randomwithzio.ConfigProvider]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/DefaultServices$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/DefaultServices$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/DefaultServices$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/DefaultServices$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/DefaultServices$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/DefaultServices$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/DefaultServices$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/DefaultServices$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/DefaultServices$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/DefaultServices$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/DefaultServices$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/DefaultServices$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/DefaultServices$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/DefaultServices$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/DefaultServices$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/DefaultServices$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/DefaultServices$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/DefaultServices$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/DefaultServices$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.Dequeue", "trait" : "zio\/Dequeue.html", "kind" : "trait", "members_trait" : [{"label" : "poll", "tail" : "(trace: Trace): UIO[Option[A]]", "member" : "zio.Dequeue.poll", "link" : "zio\/Dequeue.html#poll(implicittrace:zio.Trace):zio.UIO[Option[A]]", "kind" : "def"}, {"label" : "takeN", "tail" : "(n: Int)(trace: Trace): UIO[Chunk[A]]", "member" : "zio.Dequeue.takeN", "link" : "zio\/Dequeue.html#takeN(n:Int)(implicittrace:zio.Trace):zio.UIO[zio.Chunk[A]]", "kind" : "final def"}, {"label" : "takeBetween", "tail" : "(min: Int, max: Int)(trace: Trace): UIO[Chunk[A]]", "member" : "zio.Dequeue.takeBetween", "link" : "zio\/Dequeue.html#takeBetween(min:Int,max:Int)(implicittrace:zio.Trace):zio.UIO[zio.Chunk[A]]", "kind" : "final def"}, {"label" : "isFull", "tail" : "(trace: Trace): UIO[Boolean]", "member" : "zio.Dequeue.isFull", "link" : "zio\/Dequeue.html#isFull(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(trace: Trace): UIO[Boolean]", "member" : "zio.Dequeue.isEmpty", "link" : "zio\/Dequeue.html#isEmpty(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Dequeue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Dequeue.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Dequeue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Dequeue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Dequeue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Dequeue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Dequeue.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Dequeue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Dequeue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Dequeue.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Dequeue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Dequeue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Dequeue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Dequeue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Dequeue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Dequeue.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Dequeue.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Dequeue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Dequeue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "takeUpTo", "tail" : "(max: Int)(trace: Trace): UIO[Chunk[A]]", "member" : "zio.Dequeue.takeUpTo", "link" : "zio\/Dequeue.html#takeUpTo(max:Int)(implicittrace:zio.Trace):zio.UIO[zio.Chunk[A]]", "kind" : "abstract def"}, {"label" : "takeAll", "tail" : "(trace: Trace): UIO[Chunk[A]]", "member" : "zio.Dequeue.takeAll", "link" : "zio\/Dequeue.html#takeAll(implicittrace:zio.Trace):zio.UIO[zio.Chunk[A]]", "kind" : "abstract def"}, {"label" : "take", "tail" : "(trace: Trace): UIO[A]", "member" : "zio.Dequeue.take", "link" : "zio\/Dequeue.html#take(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "abstract def"}, {"label" : "size", "tail" : "(trace: Trace): UIO[Int]", "member" : "zio.Dequeue.size", "link" : "zio\/Dequeue.html#size(implicittrace:zio.Trace):zio.UIO[Int]", "kind" : "abstract def"}, {"label" : "shutdown", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.Dequeue.shutdown", "link" : "zio\/Dequeue.html#shutdown(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "isShutdown", "tail" : "(trace: Trace): UIO[Boolean]", "member" : "zio.Dequeue.isShutdown", "link" : "zio\/Dequeue.html#isShutdown(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "abstract def"}, {"label" : "capacity", "tail" : "(): Int", "member" : "zio.Dequeue.capacity", "link" : "zio\/Dequeue.html#capacity:Int", "kind" : "abstract def"}, {"label" : "awaitShutdown", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.Dequeue.awaitShutdown", "link" : "zio\/Dequeue.html#awaitShutdown(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}], "shortDescription" : "A queue that can only be dequeued."}, {"name" : "zio.Differ", "object" : "zio\/Differ$.html", "members_object" : [{"label" : "SetPatch", "tail" : "", "member" : "zio.Differ.SetPatch", "link" : "zio\/Differ$.html#SetPatch", "kind" : "object"}, {"label" : "SetPatch", "tail" : "", "member" : "zio.Differ.SetPatch", "link" : "zio\/Differ$.html#SetPatch[A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "OrPatch", "tail" : "", "member" : "zio.Differ.OrPatch", "link" : "zio\/Differ$.html#OrPatch", "kind" : "object"}, {"label" : "OrPatch", "tail" : "", "member" : "zio.Differ.OrPatch", "link" : "zio\/Differ$.html#OrPatch[Value,Value2,Patch,Patch2]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "MapPatch", "tail" : "", "member" : "zio.Differ.MapPatch", "link" : "zio\/Differ$.html#MapPatch", "kind" : "object"}, {"label" : "MapPatch", "tail" : "", "member" : "zio.Differ.MapPatch", "link" : "zio\/Differ$.html#MapPatch[Key,Value,Patch]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "ChunkPatch", "tail" : "", "member" : "zio.Differ.ChunkPatch", "link" : "zio\/Differ$.html#ChunkPatch", "kind" : "object"}, {"label" : "ChunkPatch", "tail" : "", "member" : "zio.Differ.ChunkPatch", "link" : "zio\/Differ$.html#ChunkPatch[Value,Patch]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "update", "tail" : "(): Differ[A, (A) => A]", "member" : "zio.Differ.update", "link" : "zio\/Differ$.html#update[A]:zio.Differ[A,A=>A]", "kind" : "def"}, {"label" : "supervisor", "tail" : "(): Differ[Supervisor[Any], Patch]", "member" : "zio.Differ.supervisor", "link" : "zio\/Differ$.html#supervisor:zio.Differ[zio.Supervisor[Any],zio.Supervisor.Patch]", "kind" : "def"}, {"label" : "set", "tail" : "(): Differ[Set[A], SetPatch[A]]", "member" : "zio.Differ.set", "link" : "zio\/Differ$.html#set[A]:zio.Differ[Set[A],zio.Differ.SetPatch[A]]", "kind" : "def"}, {"label" : "runtimeFlags", "tail" : ": Differ[RuntimeFlags, Patch]", "member" : "zio.Differ.runtimeFlags", "link" : "zio\/Differ$.html#runtimeFlags:zio.Differ[zio.RuntimeFlags,zio.RuntimeFlags.Patch]", "kind" : "val"}, {"label" : "map", "tail" : "(differ: Differ[Value, Patch]): Differ[Map[Key, Value], MapPatch[Key, Value, Patch]]", "member" : "zio.Differ.map", "link" : "zio\/Differ$.html#map[Key,Value,Patch](differ:zio.Differ[Value,Patch]):zio.Differ[Map[Key,Value],zio.Differ.MapPatch[Key,Value,Patch]]", "kind" : "def"}, {"label" : "isFatal", "tail" : "(): Differ[IsFatal, Patch]", "member" : "zio.Differ.isFatal", "link" : "zio\/Differ$.html#isFatal:zio.Differ[zio.internal.IsFatal,zio.internal.IsFatal.Patch]", "kind" : "def"}, {"label" : "environment", "tail" : "(): Differ[ZEnvironment[A], Patch[A, A]]", "member" : "zio.Differ.environment", "link" : "zio\/Differ$.html#environment[A]:zio.Differ[zio.ZEnvironment[A],zio.ZEnvironment.Patch[A,A]]", "kind" : "def"}, {"label" : "chunk", "tail" : "(differ: Differ[Value, Patch]): Differ[Chunk[Value], ChunkPatch[Value, Patch]]", "member" : "zio.Differ.chunk", "link" : "zio\/Differ$.html#chunk[Value,Patch](differ:zio.Differ[Value,Patch]):zio.Differ[zio.Chunk[Value],zio.Differ.ChunkPatch[Value,Patch]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Differ$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Differ$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Differ$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Differ$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Differ$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Differ$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Differ$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Differ$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Differ$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Differ$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Differ$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Differ$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Differ$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Differ$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Differ$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Differ$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Differ$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Differ$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Differ$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/Differ.html", "kind" : "trait", "members_trait" : [{"label" : "zip", "tail" : "(that: Differ[Value2, Patch2]): Differ[(Value, Value2), (Patch, Patch2)]", "member" : "zio.Differ.zip", "link" : "zio\/Differ.html#zip[Value2,Patch2](that:zio.Differ[Value2,Patch2]):zio.Differ[(Value,Value2),(Patch,Patch2)]", "kind" : "final def"}, {"label" : "transform", "tail" : "(f: (Value) => Value2, g: (Value2) => Value): Differ[Value2, Patch]", "member" : "zio.Differ.transform", "link" : "zio\/Differ.html#transform[Value2](f:Value=>Value2,g:Value2=>Value):zio.Differ[Value2,Patch]", "kind" : "final def"}, {"label" : "orElseEither", "tail" : "(that: Differ[Value2, Patch2]): Differ[Either[Value, Value2], OrPatch[Value, Value2, Patch, Patch2]]", "member" : "zio.Differ.orElseEither", "link" : "zio\/Differ.html#orElseEither[Value2,Patch2](that:zio.Differ[Value2,Patch2]):zio.Differ[Either[Value,Value2],zio.Differ.OrPatch[Value,Value2,Patch,Patch2]]", "kind" : "final def"}, {"label" : "<+>", "tail" : "(that: Differ[Value2, Patch2]): Differ[Either[Value, Value2], OrPatch[Value, Value2, Patch, Patch2]]", "member" : "zio.Differ.<+>", "link" : "zio\/Differ.html#<+>[Value2,Patch2](that:zio.Differ[Value2,Patch2]):zio.Differ[Either[Value,Value2],zio.Differ.OrPatch[Value,Value2,Patch,Patch2]]", "kind" : "final def"}, {"label" : "<*>", "tail" : "(that: Differ[Value2, Patch2]): Differ[(Value, Value2), (Patch, Patch2)]", "member" : "zio.Differ.<*>", "link" : "zio\/Differ.html#<*>[Value2,Patch2](that:zio.Differ[Value2,Patch2]):zio.Differ[(Value,Value2),(Patch,Patch2)]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Differ.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Differ.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Differ.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Differ.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Differ.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Differ.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Differ.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Differ.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Differ.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Differ.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Differ.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Differ.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Differ.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Differ.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Differ.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Differ.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Differ.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Differ.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Differ.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "patch", "tail" : "(patch: Patch)(oldValue: Value): Value", "member" : "zio.Differ.patch", "link" : "zio\/Differ.html#patch(patch:Patch)(oldValue:Value):Value", "kind" : "abstract def"}, {"label" : "empty", "tail" : "(): Patch", "member" : "zio.Differ.empty", "link" : "zio\/Differ.html#empty:Patch", "kind" : "abstract def"}, {"label" : "diff", "tail" : "(oldValue: Value, newValue: Value): Patch", "member" : "zio.Differ.diff", "link" : "zio\/Differ.html#diff(oldValue:Value,newValue:Value):Patch", "kind" : "abstract def"}, {"label" : "combine", "tail" : "(first: Patch, second: Patch): Patch", "member" : "zio.Differ.combine", "link" : "zio\/Differ.html#combine(first:Patch,second:Patch):Patch", "kind" : "abstract def"}], "shortDescription" : "A Differ[Value, Patch] knows how to compare an old value and new value oftype Value to produce a patch of type Patch that describes thedifferences between those values."}, {"name" : "zio.Duration", "shortDescription" : "", "object" : "zio\/Duration$.html", "members_object" : [{"label" : "fromJava", "tail" : "(duration: java.time.Duration): zio.Duration", "member" : "zio.Duration.fromJava", "link" : "zio\/Duration$.html#fromJava(duration:java.time.Duration):zio.Duration", "kind" : "def"}, {"label" : "fromScala", "tail" : "(duration: scala.concurrent.duration.Duration): zio.Duration", "member" : "zio.Duration.fromScala", "link" : "zio\/Duration$.html#fromScala(duration:scala.concurrent.duration.Duration):zio.Duration", "kind" : "def"}, {"label" : "fromSeconds", "tail" : "(seconds: Long): zio.Duration", "member" : "zio.Duration.fromSeconds", "link" : "zio\/Duration$.html#fromSeconds(seconds:Long):zio.Duration", "kind" : "def"}, {"label" : "fromInstant", "tail" : "(instant: Instant): zio.Duration", "member" : "zio.Duration.fromInstant", "link" : "zio\/Duration$.html#fromInstant(instant:java.time.Instant):zio.Duration", "kind" : "def"}, {"label" : "fromInterval", "tail" : "(start: OffsetDateTime, end: OffsetDateTime): zio.Duration", "member" : "zio.Duration.fromInterval", "link" : "zio\/Duration$.html#fromInterval(start:java.time.OffsetDateTime,end:java.time.OffsetDateTime):zio.Duration", "kind" : "def"}, {"label" : "fromInterval", "tail" : "(start: Instant, end: Instant): zio.Duration", "member" : "zio.Duration.fromInterval", "link" : "zio\/Duration$.html#fromInterval(start:java.time.Instant,end:java.time.Instant):zio.Duration", "kind" : "def"}, {"label" : "fromNanos", "tail" : "(nanos: Long): zio.Duration", "member" : "zio.Duration.fromNanos", "link" : "zio\/Duration$.html#fromNanos(nanos:Long):zio.Duration", "kind" : "def"}, {"label" : "fromMillis", "tail" : "(millis: Long): zio.Duration", "member" : "zio.Duration.fromMillis", "link" : "zio\/Duration$.html#fromMillis(millis:Long):zio.Duration", "kind" : "def"}, {"label" : "apply", "tail" : "(amount: Long, unit: ChronoUnit): zio.Duration", "member" : "zio.Duration.apply", "link" : "zio\/Duration$.html#apply(amount:Long,unit:java.time.temporal.ChronoUnit):zio.Duration", "kind" : "def"}, {"label" : "apply", "tail" : "(amount: Long, unit: TimeUnit): zio.Duration", "member" : "zio.Duration.apply", "link" : "zio\/Duration$.html#apply(amount:Long,unit:java.util.concurrent.TimeUnit):zio.Duration", "kind" : "def"}, {"label" : "Finite", "tail" : "", "member" : "zio.Duration.Finite", "link" : "zio\/Duration$.html#Finite", "kind" : "object"}, {"label" : "Zero", "tail" : ": zio.Duration", "member" : "zio.Duration.Zero", "link" : "zio\/Duration$.html#Zero:zio.Duration", "kind" : "val"}, {"label" : "Infinity", "tail" : ": zio.Duration", "member" : "zio.Duration.Infinity", "link" : "zio\/Duration$.html#Infinity:zio.Duration", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Duration$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Duration$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Duration$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Duration$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Duration$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Duration$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Duration$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Duration$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Duration$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Duration$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Duration$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Duration$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Duration$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Duration$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Duration$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Duration$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Duration$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Duration$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Duration$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.DurationModule", "trait" : "zio\/DurationModule.html", "kind" : "trait", "members_trait" : [{"label" : "durationOrdering", "tail" : ": Ordering[Duration]", "member" : "zio.DurationModule.durationOrdering", "link" : "zio\/DurationModule.html#durationOrdering:Ordering[DurationModule.this.Duration]", "kind" : "implicit val"}, {"label" : "duration2DurationOps", "tail" : "(duration: Duration): DurationOps", "member" : "zio.DurationModule.duration2DurationOps", "link" : "zio\/DurationModule.html#duration2DurationOps(duration:DurationModule.this.Duration):zio.DurationOps", "kind" : "implicit def"}, {"label" : "durationLong", "tail" : "(n: Long): DurationSyntax", "member" : "zio.DurationModule.durationLong", "link" : "zio\/DurationModule.html#durationLong(n:Long):zio.DurationSyntax", "kind" : "implicit def"}, {"label" : "durationInt", "tail" : "(n: Int): DurationSyntax", "member" : "zio.DurationModule.durationInt", "link" : "zio\/DurationModule.html#durationInt(n:Int):zio.DurationSyntax", "kind" : "implicit def"}, {"label" : "Duration", "tail" : "", "member" : "zio.DurationModule.Duration", "link" : "zio\/DurationModule.html#Duration=java.time.Duration", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/DurationModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/DurationModule.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/DurationModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/DurationModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/DurationModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/DurationModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/DurationModule.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/DurationModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/DurationModule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/DurationModule.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/DurationModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/DurationModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/DurationModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/DurationModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/DurationModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/DurationModule.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/DurationModule.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/DurationModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/DurationModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.DurationOps", "shortDescription" : "", "members_class" : [{"label" : "fold", "tail" : "(infinity: => Z, finite: (zio.Duration) => Z): Z", "member" : "zio.DurationOps.fold", "link" : "zio\/DurationOps.html#fold[Z](infinity:=>Z,finite:zio.Duration=>Z):Z", "kind" : "def"}, {"label" : "compare", "tail" : "(other: zio.Duration): Int", "member" : "zio.DurationOps.compare", "link" : "zio\/DurationOps.html#compare(other:zio.Duration):Int", "kind" : "def"}, {"label" : "min", "tail" : "(other: zio.Duration): zio.Duration", "member" : "zio.DurationOps.min", "link" : "zio\/DurationOps.html#min(other:zio.Duration):zio.Duration", "kind" : "def"}, {"label" : "max", "tail" : "(other: zio.Duration): zio.Duration", "member" : "zio.DurationOps.max", "link" : "zio\/DurationOps.html#max(other:zio.Duration):zio.Duration", "kind" : "def"}, {"label" : "asJava", "tail" : "(): java.time.Duration", "member" : "zio.DurationOps.asJava", "link" : "zio\/DurationOps.html#asJava:java.time.Duration", "kind" : "def"}, {"label" : "asFiniteDuration", "tail" : "(): FiniteDuration", "member" : "zio.DurationOps.asFiniteDuration", "link" : "zio\/DurationOps.html#asFiniteDuration:scala.concurrent.duration.FiniteDuration", "kind" : "def"}, {"label" : "asScala", "tail" : "(): scala.concurrent.duration.Duration", "member" : "zio.DurationOps.asScala", "link" : "zio\/DurationOps.html#asScala:scala.concurrent.duration.Duration", "kind" : "def"}, {"label" : "render", "tail" : "(): String", "member" : "zio.DurationOps.render", "link" : "zio\/DurationOps.html#render:String", "kind" : "def"}, {"label" : "==", "tail" : "(other: zio.Duration): Boolean", "member" : "zio.DurationOps.==", "link" : "zio\/DurationOps.html#==(other:zio.Duration):Boolean", "kind" : "def"}, {"label" : "<", "tail" : "(other: zio.Duration): Boolean", "member" : "zio.DurationOps.<", "link" : "zio\/DurationOps.html#<(other:zio.Duration):Boolean", "kind" : "def"}, {"label" : ">", "tail" : "(other: zio.Duration): Boolean", "member" : "zio.DurationOps.>", "link" : "zio\/DurationOps.html#>(other:zio.Duration):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(other: zio.Duration): Boolean", "member" : "zio.DurationOps.<=", "link" : "zio\/DurationOps.html#<=(other:zio.Duration):Boolean", "kind" : "def"}, {"label" : ">=", "tail" : "(other: zio.Duration): Boolean", "member" : "zio.DurationOps.>=", "link" : "zio\/DurationOps.html#>=(other:zio.Duration):Boolean", "kind" : "def"}, {"label" : "*", "tail" : "(factor: Double): zio.Duration", "member" : "zio.DurationOps.*", "link" : "zio\/DurationOps.html#*(factor:Double):zio.Duration", "kind" : "def"}, {"label" : "+", "tail" : "(other: zio.Duration): zio.Duration", "member" : "zio.DurationOps.+", "link" : "zio\/DurationOps.html#+(other:zio.Duration):zio.Duration", "kind" : "def"}, {"member" : "zio.DurationOps#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/DurationOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/DurationOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/DurationOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/DurationOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/DurationOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/DurationOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/DurationOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "zio\/DurationOps.html", "kind" : "class"}, {"name" : "zio.DurationSyntax", "shortDescription" : "", "members_class" : [{"label" : "day", "tail" : "(): zio.Duration", "member" : "zio.DurationSyntax.day", "link" : "zio\/DurationSyntax.html#day:zio.Duration", "kind" : "def"}, {"label" : "days", "tail" : "(): zio.Duration", "member" : "zio.DurationSyntax.days", "link" : "zio\/DurationSyntax.html#days:zio.Duration", "kind" : "def"}, {"label" : "hour", "tail" : "(): zio.Duration", "member" : "zio.DurationSyntax.hour", "link" : "zio\/DurationSyntax.html#hour:zio.Duration", "kind" : "def"}, {"label" : "hours", "tail" : "(): zio.Duration", "member" : "zio.DurationSyntax.hours", "link" : "zio\/DurationSyntax.html#hours:zio.Duration", "kind" : "def"}, {"label" : "minute", "tail" : "(): zio.Duration", "member" : "zio.DurationSyntax.minute", "link" : "zio\/DurationSyntax.html#minute:zio.Duration", "kind" : "def"}, {"label" : "minutes", "tail" : "(): zio.Duration", "member" : "zio.DurationSyntax.minutes", "link" : "zio\/DurationSyntax.html#minutes:zio.Duration", "kind" : "def"}, {"label" : "second", "tail" : "(): zio.Duration", "member" : "zio.DurationSyntax.second", "link" : "zio\/DurationSyntax.html#second:zio.Duration", "kind" : "def"}, {"label" : "seconds", "tail" : "(): zio.Duration", "member" : "zio.DurationSyntax.seconds", "link" : "zio\/DurationSyntax.html#seconds:zio.Duration", "kind" : "def"}, {"label" : "milli", "tail" : "(): zio.Duration", "member" : "zio.DurationSyntax.milli", "link" : "zio\/DurationSyntax.html#milli:zio.Duration", "kind" : "def"}, {"label" : "millisecond", "tail" : "(): zio.Duration", "member" : "zio.DurationSyntax.millisecond", "link" : "zio\/DurationSyntax.html#millisecond:zio.Duration", "kind" : "def"}, {"label" : "millis", "tail" : "(): zio.Duration", "member" : "zio.DurationSyntax.millis", "link" : "zio\/DurationSyntax.html#millis:zio.Duration", "kind" : "def"}, {"label" : "milliseconds", "tail" : "(): zio.Duration", "member" : "zio.DurationSyntax.milliseconds", "link" : "zio\/DurationSyntax.html#milliseconds:zio.Duration", "kind" : "def"}, {"label" : "micro", "tail" : "(): zio.Duration", "member" : "zio.DurationSyntax.micro", "link" : "zio\/DurationSyntax.html#micro:zio.Duration", "kind" : "def"}, {"label" : "microsecond", "tail" : "(): zio.Duration", "member" : "zio.DurationSyntax.microsecond", "link" : "zio\/DurationSyntax.html#microsecond:zio.Duration", "kind" : "def"}, {"label" : "micros", "tail" : "(): zio.Duration", "member" : "zio.DurationSyntax.micros", "link" : "zio\/DurationSyntax.html#micros:zio.Duration", "kind" : "def"}, {"label" : "microseconds", "tail" : "(): zio.Duration", "member" : "zio.DurationSyntax.microseconds", "link" : "zio\/DurationSyntax.html#microseconds:zio.Duration", "kind" : "def"}, {"label" : "nano", "tail" : "(): zio.Duration", "member" : "zio.DurationSyntax.nano", "link" : "zio\/DurationSyntax.html#nano:zio.Duration", "kind" : "def"}, {"label" : "nanosecond", "tail" : "(): zio.Duration", "member" : "zio.DurationSyntax.nanosecond", "link" : "zio\/DurationSyntax.html#nanosecond:zio.Duration", "kind" : "def"}, {"label" : "nanos", "tail" : "(): zio.Duration", "member" : "zio.DurationSyntax.nanos", "link" : "zio\/DurationSyntax.html#nanos:zio.Duration", "kind" : "def"}, {"label" : "nanoseconds", "tail" : "(): zio.Duration", "member" : "zio.DurationSyntax.nanoseconds", "link" : "zio\/DurationSyntax.html#nanoseconds:zio.Duration", "kind" : "def"}, {"member" : "zio.DurationSyntax#<init>", "error" : "unsupported entity"}, {"label" : "n", "tail" : ": Long", "member" : "zio.DurationSyntax.n", "link" : "zio\/DurationSyntax.html#n:Long", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/DurationSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/DurationSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/DurationSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/DurationSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/DurationSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/DurationSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/DurationSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "zio\/DurationSyntax.html", "kind" : "class"}, {"name" : "zio.Enqueue", "trait" : "zio\/Enqueue.html", "kind" : "trait", "members_trait" : [{"label" : "isFull", "tail" : "(trace: Trace): UIO[Boolean]", "member" : "zio.Enqueue.isFull", "link" : "zio\/Enqueue.html#isFull(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(trace: Trace): UIO[Boolean]", "member" : "zio.Enqueue.isEmpty", "link" : "zio\/Enqueue.html#isEmpty(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Enqueue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Enqueue.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Enqueue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Enqueue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Enqueue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Enqueue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Enqueue.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Enqueue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Enqueue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Enqueue.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Enqueue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Enqueue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Enqueue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Enqueue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Enqueue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Enqueue.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Enqueue.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Enqueue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Enqueue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "size", "tail" : "(trace: Trace): UIO[Int]", "member" : "zio.Enqueue.size", "link" : "zio\/Enqueue.html#size(implicittrace:zio.Trace):zio.UIO[Int]", "kind" : "abstract def"}, {"label" : "shutdown", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.Enqueue.shutdown", "link" : "zio\/Enqueue.html#shutdown(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "offerAll", "tail" : "(as: Iterable[A1])(trace: Trace): UIO[Chunk[A1]]", "member" : "zio.Enqueue.offerAll", "link" : "zio\/Enqueue.html#offerAll[A1<:A](as:Iterable[A1])(implicittrace:zio.Trace):zio.UIO[zio.Chunk[A1]]", "kind" : "abstract def"}, {"label" : "offer", "tail" : "(a: A)(trace: Trace): UIO[Boolean]", "member" : "zio.Enqueue.offer", "link" : "zio\/Enqueue.html#offer(a:A)(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "abstract def"}, {"label" : "isShutdown", "tail" : "(trace: Trace): UIO[Boolean]", "member" : "zio.Enqueue.isShutdown", "link" : "zio\/Enqueue.html#isShutdown(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "abstract def"}, {"label" : "capacity", "tail" : "(): Int", "member" : "zio.Enqueue.capacity", "link" : "zio\/Enqueue.html#capacity:Int", "kind" : "abstract def"}, {"label" : "awaitShutdown", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.Enqueue.awaitShutdown", "link" : "zio\/Enqueue.html#awaitShutdown(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}], "shortDescription" : "A queue that can only be enqueued."}, {"name" : "zio.ExecutionStrategy", "shortDescription" : "Describes a strategy for evaluating multiple effects, potentially inparallel.", "object" : "zio\/ExecutionStrategy$.html", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ExecutionStrategy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ExecutionStrategy.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ExecutionStrategy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ExecutionStrategy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ExecutionStrategy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ExecutionStrategy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ExecutionStrategy.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ExecutionStrategy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ExecutionStrategy.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ExecutionStrategy.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ExecutionStrategy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ExecutionStrategy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ExecutionStrategy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ExecutionStrategy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ExecutionStrategy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ExecutionStrategy.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ExecutionStrategy.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ExecutionStrategy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ExecutionStrategy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "ParallelN", "tail" : "", "member" : "zio.ExecutionStrategy.ParallelN", "link" : "zio\/ExecutionStrategy$.html#ParallelNextendsExecutionStrategywithProductwithSerializable", "kind" : "final case class"}, {"label" : "Parallel", "tail" : "", "member" : "zio.ExecutionStrategy.Parallel", "link" : "zio\/ExecutionStrategy$.html#Parallel", "kind" : "case object"}, {"label" : "Sequential", "tail" : "", "member" : "zio.ExecutionStrategy.Sequential", "link" : "zio\/ExecutionStrategy$.html#Sequential", "kind" : "case object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ExecutionStrategy$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ExecutionStrategy$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ExecutionStrategy$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ExecutionStrategy$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ExecutionStrategy$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ExecutionStrategy$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ExecutionStrategy$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ExecutionStrategy$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ExecutionStrategy$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ExecutionStrategy$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ExecutionStrategy$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ExecutionStrategy$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ExecutionStrategy$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ExecutionStrategy$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ExecutionStrategy$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ExecutionStrategy$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ExecutionStrategy$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ExecutionStrategy$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ExecutionStrategy$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/ExecutionStrategy.html", "kind" : "class"}, {"name" : "zio.Executor", "shortDescription" : "An executor is responsible for executing actions.", "object" : "zio\/Executor$.html", "members_class" : [{"label" : "submitOrThrow", "tail" : "(runnable: Runnable)(unsafe: Unsafe): Unit", "member" : "zio.Executor.submitOrThrow", "link" : "zio\/Executor.html#submitOrThrow(runnable:Runnable)(implicitunsafe:zio.Unsafe):Unit", "kind" : "final def"}, {"label" : "submitAndYieldOrThrow", "tail" : "(runnable: Runnable)(unsafe: Unsafe): Unit", "member" : "zio.Executor.submitAndYieldOrThrow", "link" : "zio\/Executor.html#submitAndYieldOrThrow(runnable:Runnable)(implicitunsafe:zio.Unsafe):Unit", "kind" : "final def"}, {"label" : "submitAndYield", "tail" : "(runnable: Runnable)(unsafe: Unsafe): Boolean", "member" : "zio.Executor.submitAndYield", "link" : "zio\/Executor.html#submitAndYield(runnable:Runnable)(implicitunsafe:zio.Unsafe):Boolean", "kind" : "def"}, {"label" : "asJava", "tail" : ": java.util.concurrent.Executor", "member" : "zio.Executor.asJava", "link" : "zio\/Executor.html#asJava:java.util.concurrent.Executor", "kind" : "lazy val"}, {"label" : "asExecutionContext", "tail" : ": ExecutionContext", "member" : "zio.Executor.asExecutionContext", "link" : "zio\/Executor.html#asExecutionContext:scala.concurrent.ExecutionContext", "kind" : "lazy val"}, {"member" : "zio.Executor#<init>", "error" : "unsupported entity"}, {"label" : "asExecutionContextExecutorService", "tail" : ": ExecutionContextExecutorService", "member" : "zio.ExecutorPlatformSpecific.asExecutionContextExecutorService", "link" : "zio\/Executor.html#asExecutionContextExecutorService:scala.concurrent.ExecutionContextExecutorService", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Executor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Executor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Executor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Executor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Executor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Executor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Executor.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Executor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Executor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Executor.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Executor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Executor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Executor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Executor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Executor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Executor.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Executor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Executor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Executor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "submit", "tail" : "(runnable: Runnable)(unsafe: Unsafe): Boolean", "member" : "zio.Executor.submit", "link" : "zio\/Executor.html#submit(runnable:Runnable)(implicitunsafe:zio.Unsafe):Boolean", "kind" : "abstract def"}, {"label" : "metrics", "tail" : "(unsafe: Unsafe): Option[ExecutionMetrics]", "member" : "zio.Executor.metrics", "link" : "zio\/Executor.html#metrics(implicitunsafe:zio.Unsafe):Option[zio.internal.ExecutionMetrics]", "kind" : "abstract def"}], "members_object" : [{"label" : "fromExecutionContext", "tail" : "(ec: ExecutionContext): Executor", "member" : "zio.Executor.fromExecutionContext", "link" : "zio\/Executor$.html#fromExecutionContext(ec:scala.concurrent.ExecutionContext):zio.Executor", "kind" : "def"}, {"label" : "fromJavaExecutor", "tail" : "(executor: java.util.concurrent.Executor): Executor", "member" : "zio.Executor.fromJavaExecutor", "link" : "zio\/Executor$.html#fromJavaExecutor(executor:java.util.concurrent.Executor):zio.Executor", "kind" : "def"}, {"label" : "fromThreadPoolExecutor", "tail" : "(es: ThreadPoolExecutor): Executor", "member" : "zio.internal.DefaultExecutors.fromThreadPoolExecutor", "link" : "zio\/Executor$.html#fromThreadPoolExecutor(es:java.util.concurrent.ThreadPoolExecutor):zio.Executor", "kind" : "final def"}, {"label" : "makeDefault", "tail" : "(autoBlocking: Boolean): Executor", "member" : "zio.internal.DefaultExecutors.makeDefault", "link" : "zio\/Executor$.html#makeDefault(autoBlocking:Boolean):zio.Executor", "kind" : "final def"}, {"label" : "makeDefault", "tail" : "(): Executor", "member" : "zio.internal.DefaultExecutors.makeDefault", "link" : "zio\/Executor$.html#makeDefault():zio.Executor", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Executor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Executor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Executor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Executor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Executor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Executor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Executor$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Executor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Executor$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Executor$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Executor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Executor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Executor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Executor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Executor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Executor$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Executor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Executor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Executor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/Executor.html", "kind" : "class"}, {"name" : "zio.Exit", "object" : "zio\/Exit$.html", "members_object" : [{"label" : "unit", "tail" : ": Exit[Nothing, Unit]", "member" : "zio.Exit.unit", "link" : "zio\/Exit$.html#unit:zio.Exit[Nothing,Unit]", "kind" : "val"}, {"label" : "succeed", "tail" : "(a: A): Exit[Nothing, A]", "member" : "zio.Exit.succeed", "link" : "zio\/Exit$.html#succeed[A](a:A):zio.Exit[Nothing,A]", "kind" : "def"}, {"label" : "fromTry", "tail" : "(t: Try[A]): Exit[Throwable, A]", "member" : "zio.Exit.fromTry", "link" : "zio\/Exit$.html#fromTry[A](t:scala.util.Try[A]):zio.Exit[Throwable,A]", "kind" : "def"}, {"label" : "fromOption", "tail" : "(o: Option[A]): Exit[Unit, A]", "member" : "zio.Exit.fromOption", "link" : "zio\/Exit$.html#fromOption[A](o:Option[A]):zio.Exit[Unit,A]", "kind" : "def"}, {"label" : "fromEither", "tail" : "(e: Either[E, A]): Exit[E, A]", "member" : "zio.Exit.fromEither", "link" : "zio\/Exit$.html#fromEither[E,A](e:Either[E,A]):zio.Exit[E,A]", "kind" : "def"}, {"label" : "flatten", "tail" : "(exit: Exit[E, Exit[E, A]]): Exit[E, A]", "member" : "zio.Exit.flatten", "link" : "zio\/Exit$.html#flatten[E,A](exit:zio.Exit[E,zio.Exit[E,A]]):zio.Exit[E,A]", "kind" : "def"}, {"label" : "failCause", "tail" : "(cause: Cause[E]): Exit[E, Nothing]", "member" : "zio.Exit.failCause", "link" : "zio\/Exit$.html#failCause[E](cause:zio.Cause[E]):zio.Exit[E,Nothing]", "kind" : "def"}, {"label" : "fail", "tail" : "(error: E): Exit[E, Nothing]", "member" : "zio.Exit.fail", "link" : "zio\/Exit$.html#fail[E](error:E):zio.Exit[E,Nothing]", "kind" : "def"}, {"label" : "die", "tail" : "(t: Throwable): Exit[Nothing, Nothing]", "member" : "zio.Exit.die", "link" : "zio\/Exit$.html#die(t:Throwable):zio.Exit[Nothing,Nothing]", "kind" : "def"}, {"label" : "collectAllParDiscard", "tail" : "(exits: Iterable[Exit[E, A]]): Exit[E, Unit]", "member" : "zio.Exit.collectAllParDiscard", "link" : "zio\/Exit$.html#collectAllParDiscard[E,A](exits:Iterable[zio.Exit[E,A]]):zio.Exit[E,Unit]", "kind" : "def"}, {"label" : "collectAllPar", "tail" : "(exits: Iterable[Exit[E, A]]): Option[Exit[E, List[A]]]", "member" : "zio.Exit.collectAllPar", "link" : "zio\/Exit$.html#collectAllPar[E,A](exits:Iterable[zio.Exit[E,A]]):Option[zio.Exit[E,List[A]]]", "kind" : "def"}, {"label" : "collectAllDiscard", "tail" : "(exits: Iterable[Exit[E, A]]): Exit[E, Unit]", "member" : "zio.Exit.collectAllDiscard", "link" : "zio\/Exit$.html#collectAllDiscard[E,A](exits:Iterable[zio.Exit[E,A]]):zio.Exit[E,Unit]", "kind" : "def"}, {"label" : "collectAll", "tail" : "(exits: Iterable[Exit[E, A]]): Option[Exit[E, List[A]]]", "member" : "zio.Exit.collectAll", "link" : "zio\/Exit$.html#collectAll[E,A](exits:Iterable[zio.Exit[E,A]]):Option[zio.Exit[E,List[A]]]", "kind" : "def"}, {"label" : "interrupt", "tail" : "(id: FiberId): Exit[Nothing, Nothing]", "member" : "zio.Exit.interrupt", "link" : "zio\/Exit$.html#interrupt(id:zio.FiberId):zio.Exit[Nothing,Nothing]", "kind" : "def"}, {"label" : "Failure", "tail" : "", "member" : "zio.Exit.Failure", "link" : "zio\/Exit$.html#Failure[+E]extendsExit[E,Nothing]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Success", "tail" : "", "member" : "zio.Exit.Success", "link" : "zio\/Exit$.html#Success[+A]extendsExit[Nothing,A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Exit$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Exit$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Exit$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Exit$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Exit$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Exit$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Exit$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Exit$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Exit$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Exit$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Exit$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Exit$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Exit$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Exit$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Exit$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Exit$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Exit$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Exit$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Exit$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/Exit.html", "kind" : "trait", "members_trait" : [{"label" : "zipWith", "tail" : "(that: Exit[E1, B])(f: (A, B) => C, g: (Cause[E], Cause[E1]) => Cause[E1]): Exit[E1, C]", "member" : "zio.Exit.zipWith", "link" : "zio\/Exit.html#zipWith[E1>:E,B,C](that:zio.Exit[E1,B])(f:(A,B)=>C,g:(zio.Cause[E],zio.Cause[E1])=>zio.Cause[E1]):zio.Exit[E1,C]", "kind" : "final def"}, {"label" : "zipRight", "tail" : "(that: Exit[E1, B]): Exit[E1, B]", "member" : "zio.Exit.zipRight", "link" : "zio\/Exit.html#zipRight[E1>:E,B](that:zio.Exit[E1,B]):zio.Exit[E1,B]", "kind" : "final def"}, {"label" : "zipParRight", "tail" : "(that: Exit[E1, B]): Exit[E1, B]", "member" : "zio.Exit.zipParRight", "link" : "zio\/Exit.html#zipParRight[E1>:E,B](that:zio.Exit[E1,B]):zio.Exit[E1,B]", "kind" : "final def"}, {"label" : "zipParLeft", "tail" : "(that: Exit[E1, B]): Exit[E1, A]", "member" : "zio.Exit.zipParLeft", "link" : "zio\/Exit.html#zipParLeft[E1>:E,B](that:zio.Exit[E1,B]):zio.Exit[E1,A]", "kind" : "final def"}, {"label" : "zipPar", "tail" : "(that: Exit[E1, B])(zippable: Zippable[A, B]): Exit[E1, Out]", "member" : "zio.Exit.zipPar", "link" : "zio\/Exit.html#zipPar[E1>:E,B](that:zio.Exit[E1,B])(implicitzippable:zio.Zippable[A,B]):zio.Exit[E1,zippable.Out]", "kind" : "final def"}, {"label" : "zipLeft", "tail" : "(that: Exit[E1, B]): Exit[E1, A]", "member" : "zio.Exit.zipLeft", "link" : "zio\/Exit.html#zipLeft[E1>:E,B](that:zio.Exit[E1,B]):zio.Exit[E1,A]", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: Exit[E1, B])(zippable: Zippable[A, B]): Exit[E1, Out]", "member" : "zio.Exit.zip", "link" : "zio\/Exit.html#zip[E1>:E,B](that:zio.Exit[E1,B])(implicitzippable:zio.Zippable[A,B]):zio.Exit[E1,zippable.Out]", "kind" : "final def"}, {"label" : "untraced", "tail" : "(): Exit[E, A]", "member" : "zio.Exit.untraced", "link" : "zio\/Exit.html#untraced:zio.Exit[E,A]", "kind" : "final def"}, {"label" : "unitExit", "tail" : "(): Exit[E, Unit]", "member" : "zio.Exit.unitExit", "link" : "zio\/Exit.html#unitExit:zio.Exit[E,Unit]", "kind" : "final def"}, {"label" : "trace", "tail" : "(): Trace", "member" : "zio.Exit.trace", "link" : "zio\/Exit.html#trace:zio.Trace", "kind" : "final def"}, {"label" : "toTry", "tail" : "(ev: <:<[E, Throwable]): Try[A]", "member" : "zio.Exit.toTry", "link" : "zio\/Exit.html#toTry(implicitev:E<:<Throwable):scala.util.Try[A]", "kind" : "final def"}, {"label" : "toEither", "tail" : "(): Either[Throwable, A]", "member" : "zio.Exit.toEither", "link" : "zio\/Exit.html#toEither:Either[Throwable,A]", "kind" : "final def"}, {"label" : "orElseFailExit", "tail" : "(e1: => E1): Exit[E1, A]", "member" : "zio.Exit.orElseFailExit", "link" : "zio\/Exit.html#orElseFailExit[E1](e1:=>E1):zio.Exit[E1,A]", "kind" : "final def"}, {"label" : "orElseFail", "tail" : "(e1: => E1)(ev: CanFail[E], trace: Trace): ZIO[Any, E1, A]", "member" : "zio.Exit.orElseFail", "link" : "zio\/Exit.html#orElseFail[E1](e1:=>E1)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[Any,E1,A]", "kind" : "final def"}, {"label" : "mapErrorCauseExit", "tail" : "(f: (Cause[E]) => Cause[E1]): Exit[E1, A]", "member" : "zio.Exit.mapErrorCauseExit", "link" : "zio\/Exit.html#mapErrorCauseExit[E1](f:zio.Cause[E]=>zio.Cause[E1]):zio.Exit[E1,A]", "kind" : "final def"}, {"label" : "mapErrorExit", "tail" : "(f: (E) => E1): Exit[E1, A]", "member" : "zio.Exit.mapErrorExit", "link" : "zio\/Exit.html#mapErrorExit[E1](f:E=>E1):zio.Exit[E1,A]", "kind" : "final def"}, {"label" : "mapBothExit", "tail" : "(f: (E) => E1, g: (A) => A1): Exit[E1, A1]", "member" : "zio.Exit.mapBothExit", "link" : "zio\/Exit.html#mapBothExit[E1,A1](f:E=>E1,g:A=>A1):zio.Exit[E1,A1]", "kind" : "final def"}, {"label" : "mapExit", "tail" : "(f: (A) => A1): Exit[E, A1]", "member" : "zio.Exit.mapExit", "link" : "zio\/Exit.html#mapExit[A1](f:A=>A1):zio.Exit[E,A1]", "kind" : "final def"}, {"label" : "isSuccess", "tail" : "(): Boolean", "member" : "zio.Exit.isSuccess", "link" : "zio\/Exit.html#isSuccess:Boolean", "kind" : "final def"}, {"label" : "isInterruptedOnly", "tail" : "(): Boolean", "member" : "zio.Exit.isInterruptedOnly", "link" : "zio\/Exit.html#isInterruptedOnly:Boolean", "kind" : "final def"}, {"label" : "isInterrupted", "tail" : "(): Boolean", "member" : "zio.Exit.isInterrupted", "link" : "zio\/Exit.html#isInterrupted:Boolean", "kind" : "final def"}, {"label" : "isFailure", "tail" : "(): Boolean", "member" : "zio.Exit.isFailure", "link" : "zio\/Exit.html#isFailure:Boolean", "kind" : "final def"}, {"label" : "getOrThrowFiberFailure", "tail" : "()(unsafe: Unsafe): A", "member" : "zio.Exit.getOrThrowFiberFailure", "link" : "zio\/Exit.html#getOrThrowFiberFailure()(implicitunsafe:zio.Unsafe):A", "kind" : "final def"}, {"label" : "getOrThrow", "tail" : "()(ev: <:<[E, Throwable], unsafe: Unsafe): A", "member" : "zio.Exit.getOrThrow", "link" : "zio\/Exit.html#getOrThrow()(implicitev:E<:<Throwable,implicitunsafe:zio.Unsafe):A", "kind" : "final def"}, {"label" : "getOrElse", "tail" : "(orElse: (Cause[E]) => A1): A1", "member" : "zio.Exit.getOrElse", "link" : "zio\/Exit.html#getOrElse[A1>:A](orElse:zio.Cause[E]=>A1):A1", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (A) => ZIO[R, E1, B])(trace: Trace): ZIO[R, Nothing, Exit[E1, B]]", "member" : "zio.Exit.foreach", "link" : "zio\/Exit.html#foreach[R,E1>:E,B](f:A=>zio.ZIO[R,E1,B])(implicittrace:zio.Trace):zio.ZIO[R,Nothing,zio.Exit[E1,B]]", "kind" : "final def"}, {"label" : "foldExitZIO", "tail" : "(failed: (Cause[E]) => ZIO[R, E1, B], completed: (A) => ZIO[R, E1, B])(trace: Trace): ZIO[R, E1, B]", "member" : "zio.Exit.foldExitZIO", "link" : "zio\/Exit.html#foldExitZIO[R,E1,B](failed:zio.Cause[E]=>zio.ZIO[R,E1,B],completed:A=>zio.ZIO[R,E1,B])(implicittrace:zio.Trace):zio.ZIO[R,E1,B]", "kind" : "final def"}, {"label" : "foldExit", "tail" : "(failed: (Cause[E]) => Z, completed: (A) => Z): Z", "member" : "zio.Exit.foldExit", "link" : "zio\/Exit.html#foldExit[Z](failed:zio.Cause[E]=>Z,completed:A=>Z):Z", "kind" : "final def"}, {"label" : "foldCauseZIO", "tail" : "(failure: (Cause[E]) => ZIO[R, E2, B], success: (A) => ZIO[R, E2, B])(trace: Trace): ZIO[R, E2, B]", "member" : "zio.Exit.foldCauseZIO", "link" : "zio\/Exit.html#foldCauseZIO[R,E2,B](failure:zio.Cause[E]=>zio.ZIO[R,E2,B],success:A=>zio.ZIO[R,E2,B])(implicittrace:zio.Trace):zio.ZIO[R,E2,B]", "kind" : "final def"}, {"label" : "flattenExit", "tail" : "(ev: <:<[A, Exit[E1, B]]): Exit[E1, B]", "member" : "zio.Exit.flattenExit", "link" : "zio\/Exit.html#flattenExit[E1>:E,B](implicitev:A<:<zio.Exit[E1,B]):zio.Exit[E1,B]", "kind" : "final def"}, {"label" : "flatMapExitZIO", "tail" : "(f: (A) => ZIO[R, E2, Exit[E1, A1]]): ZIO[R, E2, Exit[E1, A1]]", "member" : "zio.Exit.flatMapExitZIO", "link" : "zio\/Exit.html#flatMapExitZIO[E1>:E,R,E2,A1](f:A=>zio.ZIO[R,E2,zio.Exit[E1,A1]]):zio.ZIO[R,E2,zio.Exit[E1,A1]]", "kind" : "final def"}, {"label" : "flatMapExit", "tail" : "(f: (A) => Exit[E1, A1]): Exit[E1, A1]", "member" : "zio.Exit.flatMapExit", "link" : "zio\/Exit.html#flatMapExit[E1>:E,A1](f:A=>zio.Exit[E1,A1]):zio.Exit[E1,A1]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(k: (A) => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, B]", "member" : "zio.Exit.flatMap", "link" : "zio\/Exit.html#flatMap[R1,E1>:E,B](k:A=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,B]", "kind" : "final def"}, {"label" : "exists", "tail" : "(p: (A) => Boolean): Boolean", "member" : "zio.Exit.exists", "link" : "zio\/Exit.html#exists(p:A=>Boolean):Boolean", "kind" : "final def"}, {"label" : "causeOption", "tail" : "(): Option[Cause[E]]", "member" : "zio.Exit.causeOption", "link" : "zio\/Exit.html#causeOption:Option[zio.Cause[E]]", "kind" : "final def"}, {"label" : "asExit", "tail" : "(b: B): Exit[E, B]", "member" : "zio.Exit.asExit", "link" : "zio\/Exit.html#asExit[B](b:B):zio.Exit[E,B]", "kind" : "final def"}, {"label" : "<*>", "tail" : "(that: Exit[E1, B])(zippable: Zippable[A, B]): Exit[E1, Out]", "member" : "zio.Exit.<*>", "link" : "zio\/Exit.html#<*>[E1>:E,B](that:zio.Exit[E1,B])(implicitzippable:zio.Zippable[A,B]):zio.Exit[E1,zippable.Out]", "kind" : "final def"}, {"label" : "<*", "tail" : "(that: Exit[E1, B]): Exit[E1, A]", "member" : "zio.Exit.<*", "link" : "zio\/Exit.html#<*[E1>:E,B](that:zio.Exit[E1,B]):zio.Exit[E1,A]", "kind" : "final def"}, {"label" : "<&>", "tail" : "(that: Exit[E1, B])(zippable: Zippable[A, B]): Exit[E1, Out]", "member" : "zio.Exit.<&>", "link" : "zio\/Exit.html#<&>[E1>:E,B](that:zio.Exit[E1,B])(implicitzippable:zio.Zippable[A,B]):zio.Exit[E1,zippable.Out]", "kind" : "final def"}, {"label" : "<&", "tail" : "(that: Exit[E1, B]): Exit[E1, A]", "member" : "zio.Exit.<&", "link" : "zio\/Exit.html#<&[E1>:E,B](that:zio.Exit[E1,B]):zio.Exit[E1,A]", "kind" : "final def"}, {"label" : "*>", "tail" : "(that: Exit[E1, B]): Exit[E1, B]", "member" : "zio.Exit.*>", "link" : "zio\/Exit.html#*>[E1>:E,B](that:zio.Exit[E1,B]):zio.Exit[E1,B]", "kind" : "final def"}, {"label" : "&>", "tail" : "(that: Exit[E1, B]): Exit[E1, B]", "member" : "zio.Exit.&>", "link" : "zio\/Exit.html#&>[E1>:E,B](that:zio.Exit[E1,B]):zio.Exit[E1,B]", "kind" : "final def"}, {"label" : "zipWithPar", "tail" : "(that: => ZIO[R1, E1, B])(f: (A, B) => C)(trace: Trace): ZIO[R1, E1, C]", "member" : "zio.ZIO.zipWithPar", "link" : "zio\/Exit.html#zipWithPar[R1<:R,E1>:E,B,C](that:=>zio.ZIO[R1,E1,B])(f:(A,B)=>C)(implicittrace:zio.Trace):zio.ZIO[R1,E1,C]", "kind" : "final def"}, {"label" : "zipWith", "tail" : "(that: => ZIO[R1, E1, B])(f: (A, B) => C)(trace: Trace): ZIO[R1, E1, C]", "member" : "zio.ZIO.zipWith", "link" : "zio\/Exit.html#zipWith[R1<:R,E1>:E,B,C](that:=>zio.ZIO[R1,E1,B])(f:(A,B)=>C)(implicittrace:zio.Trace):zio.ZIO[R1,E1,C]", "kind" : "final def"}, {"label" : "zipRight", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, B]", "member" : "zio.ZIO.zipRight", "link" : "zio\/Exit.html#zipRight[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,B]", "kind" : "final def"}, {"label" : "zipParRight", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, B]", "member" : "zio.ZIO.zipParRight", "link" : "zio\/Exit.html#zipParRight[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,B]", "kind" : "final def"}, {"label" : "zipParLeft", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.zipParLeft", "link" : "zio\/Exit.html#zipParLeft[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "zipPar", "tail" : "(that: => ZIO[R1, E1, B])(zippable: Zippable[A, B], trace: Trace): ZIO[R1, E1, Out]", "member" : "zio.ZIO.zipPar", "link" : "zio\/Exit.html#zipPar[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicitzippable:zio.Zippable[A,B],implicittrace:zio.Trace):zio.ZIO[R1,E1,zippable.Out]", "kind" : "final def"}, {"label" : "zipLeft", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.zipLeft", "link" : "zio\/Exit.html#zipLeft[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: => ZIO[R1, E1, B])(zippable: Zippable[A, B], trace: Trace): ZIO[R1, E1, Out]", "member" : "zio.ZIO.zip", "link" : "zio\/Exit.html#zip[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicitzippable:zio.Zippable[A,B],implicittrace:zio.Trace):zio.ZIO[R1,E1,zippable.Out]", "kind" : "final def"}, {"label" : "withSystem", "tail" : "(system: => B)(tag: Tag[B], trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.withSystem", "link" : "zio\/Exit.html#withSystem[B<:zio.System](system:=>B)(implicittag:zio.Tag[B],implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "withRuntimeFlags", "tail" : "(patch: Patch)(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.withRuntimeFlags", "link" : "zio\/Exit.html#withRuntimeFlags(patch:zio.RuntimeFlags.Patch)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "withRandom", "tail" : "(random: => B)(tag: Tag[B], trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.withRandom", "link" : "zio\/Exit.html#withRandom[B<:zio.Random](random:=>B)(implicittag:zio.Tag[B],implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "withParallelismUnbounded", "tail" : "(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.withParallelismUnbounded", "link" : "zio\/Exit.html#withParallelismUnbounded(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "withParallelism", "tail" : "(n: => Int)(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.withParallelism", "link" : "zio\/Exit.html#withParallelism(n:=>Int)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "withLogger", "tail" : "(logger: => B)(tag: Tag[B], trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.withLogger", "link" : "zio\/Exit.html#withLogger[B<:zio.ZLogger[String,Any]](logger:=>B)(implicittag:zio.Tag[B],implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "withFinalizerExit", "tail" : "(finalizer: (A, Exit[Any, Any]) => URIO[R1, Any])(trace: Trace): ZIO[R1 with Scope, E, A]", "member" : "zio.ZIO.withFinalizerExit", "link" : "zio\/Exit.html#withFinalizerExit[R1<:R](finalizer:(A,zio.Exit[Any,Any])=>zio.URIO[R1,Any])(implicittrace:zio.Trace):zio.ZIO[R1withzio.Scope,E,A]", "kind" : "final def"}, {"label" : "withFinalizer", "tail" : "(finalizer: (A) => URIO[R1, Any])(trace: Trace): ZIO[R1 with Scope, E, A]", "member" : "zio.ZIO.withFinalizer", "link" : "zio\/Exit.html#withFinalizer[R1<:R](finalizer:A=>zio.URIO[R1,Any])(implicittrace:zio.Trace):zio.ZIO[R1withzio.Scope,E,A]", "kind" : "final def"}, {"label" : "withEarlyRelease", "tail" : "(trace: Trace): ZIO[Scope, E, (UIO[Unit], A)]", "member" : "zio.ZIO.withEarlyRelease", "link" : "zio\/Exit.html#withEarlyRelease(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,E,(zio.UIO[Unit],A)]", "kind" : "final def"}, {"label" : "withConsole", "tail" : "(console: => B)(tag: Tag[B], trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.withConsole", "link" : "zio\/Exit.html#withConsole[B<:zio.Console](console:=>B)(implicittag:zio.Tag[B],implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "withConfigProvider", "tail" : "(configProvider: => B)(tag: Tag[B], trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.withConfigProvider", "link" : "zio\/Exit.html#withConfigProvider[B<:zio.ConfigProvider](configProvider:=>B)(implicittag:zio.Tag[B],implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "withClock", "tail" : "(clock: => B)(tag: Tag[B], trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.withClock", "link" : "zio\/Exit.html#withClock[B<:zio.Clock](clock:=>B)(implicittag:zio.Tag[B],implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "whenZIODiscard", "tail" : "(p: => ZIO[R1, E1, Boolean])(trace: Trace): ZIO[R1, E1, Unit]", "member" : "zio.ZIO.whenZIODiscard", "link" : "zio\/Exit.html#whenZIODiscard[R1<:R,E1>:E](p:=>zio.ZIO[R1,E1,Boolean])(implicittrace:zio.Trace):zio.ZIO[R1,E1,Unit]", "kind" : "final def"}, {"label" : "whenZIO", "tail" : "(p: => ZIO[R1, E1, Boolean])(trace: Trace): ZIO[R1, E1, Option[A]]", "member" : "zio.ZIO.whenZIO", "link" : "zio\/Exit.html#whenZIO[R1<:R,E1>:E](p:=>zio.ZIO[R1,E1,Boolean])(implicittrace:zio.Trace):zio.ZIO[R1,E1,Option[A]]", "kind" : "final def"}, {"label" : "whenRef", "tail" : "(ref: => Ref[S])(f: (S) => Boolean)(trace: Trace): ZIO[Any, E, (S, Option[A])]", "member" : "zio.ZIO.whenRef", "link" : "zio\/Exit.html#whenRef[S](ref:=>zio.Ref[S])(f:S=>Boolean)(implicittrace:zio.Trace):zio.ZIO[R,E,(S,Option[A])]", "kind" : "final def"}, {"label" : "whenFiberRef", "tail" : "(ref: => FiberRef[S])(f: (S) => Boolean)(trace: Trace): ZIO[Any, E, (S, Option[A])]", "member" : "zio.ZIO.whenFiberRef", "link" : "zio\/Exit.html#whenFiberRef[S](ref:=>zio.FiberRef[S])(f:S=>Boolean)(implicittrace:zio.Trace):zio.ZIO[R,E,(S,Option[A])]", "kind" : "final def"}, {"label" : "whenDiscard", "tail" : "(p: => Boolean)(trace: Trace): ZIO[Any, E, Unit]", "member" : "zio.ZIO.whenDiscard", "link" : "zio\/Exit.html#whenDiscard(p:=>Boolean)(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "final def"}, {"label" : "when", "tail" : "(p: => Boolean)(trace: Trace): ZIO[Any, E, Option[A]]", "member" : "zio.ZIO.when", "link" : "zio\/Exit.html#when(p:=>Boolean)(implicittrace:zio.Trace):zio.ZIO[R,E,Option[A]]", "kind" : "final def"}, {"label" : "validateWithPar", "tail" : "(that: => ZIO[R1, E1, B])(f: (A, B) => C)(trace: Trace): ZIO[R1, E1, C]", "member" : "zio.ZIO.validateWithPar", "link" : "zio\/Exit.html#validateWithPar[R1<:R,E1>:E,B,C](that:=>zio.ZIO[R1,E1,B])(f:(A,B)=>C)(implicittrace:zio.Trace):zio.ZIO[R1,E1,C]", "kind" : "final def"}, {"label" : "validateWith", "tail" : "(that: => ZIO[R1, E1, B])(f: (A, B) => C)(trace: Trace): ZIO[R1, E1, C]", "member" : "zio.ZIO.validateWith", "link" : "zio\/Exit.html#validateWith[R1<:R,E1>:E,B,C](that:=>zio.ZIO[R1,E1,B])(f:(A,B)=>C)(implicittrace:zio.Trace):zio.ZIO[R1,E1,C]", "kind" : "final def"}, {"label" : "validatePar", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, (A, B)]", "member" : "zio.ZIO.validatePar", "link" : "zio\/Exit.html#validatePar[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,(A,B)]", "kind" : "final def"}, {"label" : "validate", "tail" : "(that: => ZIO[R1, E1, B])(zippable: Zippable[A, B], trace: Trace): ZIO[R1, E1, Out]", "member" : "zio.ZIO.validate", "link" : "zio\/Exit.html#validate[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicitzippable:zio.Zippable[A,B],implicittrace:zio.Trace):zio.ZIO[R1,E1,zippable.Out]", "kind" : "final def"}, {"label" : "unsandbox", "tail" : "(ev: IsSubtypeOfError[E, Cause[E1]], trace: Trace): ZIO[Any, E1, A]", "member" : "zio.ZIO.unsandbox", "link" : "zio\/Exit.html#unsandbox[E1](implicitev:zio.IsSubtypeOfError[E,zio.Cause[E1]],implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "unexit", "tail" : "(ev: <:<[A, Exit[E1, A2]], trace: Trace): ZIO[Any, E1, A2]", "member" : "zio.ZIO.unexit", "link" : "zio\/Exit.html#unexit[E1>:E,A2](implicitev:A<:<zio.Exit[E1,A2],implicittrace:zio.Trace):zio.ZIO[R,E1,A2]", "kind" : "final def"}, {"label" : "updateServiceAt", "tail" : "(): UpdateServiceAt[Any, E, A, Service]", "member" : "zio.ZIO.updateServiceAt", "link" : "zio\/Exit.html#updateServiceAt[Service]:zio.ZIO.UpdateServiceAt[R,E,A,Service]", "kind" : "final def"}, {"label" : "updateService", "tail" : "(): UpdateService[Any, E, A, M]", "member" : "zio.ZIO.updateService", "link" : "zio\/Exit.html#updateService[M]:zio.ZIO.UpdateService[R,E,A,M]", "kind" : "final def"}, {"label" : "unsome", "tail" : "(ev: IsSubtypeOfError[E, Option[E1]], trace: Trace): ZIO[Any, E1, Option[A]]", "member" : "zio.ZIO.unsome", "link" : "zio\/Exit.html#unsome[E1](implicitev:zio.IsSubtypeOfError[E,Option[E1]],implicittrace:zio.Trace):zio.ZIO[R,E1,Option[A]]", "kind" : "final def"}, {"label" : "unright", "tail" : "(ev: IsSubtypeOfError[E, Either[B, E1]], trace: Trace): ZIO[Any, E1, Either[B, A]]", "member" : "zio.ZIO.unright", "link" : "zio\/Exit.html#unright[E1,B](implicitev:zio.IsSubtypeOfError[E,Either[B,E1]],implicittrace:zio.Trace):zio.ZIO[R,E1,Either[B,A]]", "kind" : "final def"}, {"label" : "unrefineWith", "tail" : "(pf: PartialFunction[Throwable, E1])(f: (E) => E1)(trace: Trace): ZIO[Any, E1, A]", "member" : "zio.ZIO.unrefineWith", "link" : "zio\/Exit.html#unrefineWith[E1](pf:PartialFunction[Throwable,E1])(f:E=>E1)(implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "unrefineTo", "tail" : "(arg0: ClassTag[E1], trace: Trace): ZIO[Any, E1, A]", "member" : "zio.ZIO.unrefineTo", "link" : "zio\/Exit.html#unrefineTo[E1>:E](implicitevidence$1:scala.reflect.ClassTag[E1],implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "unrefine", "tail" : "(pf: PartialFunction[Throwable, E1])(trace: Trace): ZIO[Any, E1, A]", "member" : "zio.ZIO.unrefine", "link" : "zio\/Exit.html#unrefine[E1>:E](pf:PartialFunction[Throwable,E1])(implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "unlessZIODiscard", "tail" : "(p: => ZIO[R1, E1, Boolean])(trace: Trace): ZIO[R1, E1, Unit]", "member" : "zio.ZIO.unlessZIODiscard", "link" : "zio\/Exit.html#unlessZIODiscard[R1<:R,E1>:E](p:=>zio.ZIO[R1,E1,Boolean])(implicittrace:zio.Trace):zio.ZIO[R1,E1,Unit]", "kind" : "final def"}, {"label" : "unlessZIO", "tail" : "(p: => ZIO[R1, E1, Boolean])(trace: Trace): ZIO[R1, E1, Option[A]]", "member" : "zio.ZIO.unlessZIO", "link" : "zio\/Exit.html#unlessZIO[R1<:R,E1>:E](p:=>zio.ZIO[R1,E1,Boolean])(implicittrace:zio.Trace):zio.ZIO[R1,E1,Option[A]]", "kind" : "final def"}, {"label" : "unlessDiscard", "tail" : "(p: => Boolean)(trace: Trace): ZIO[Any, E, Unit]", "member" : "zio.ZIO.unlessDiscard", "link" : "zio\/Exit.html#unlessDiscard(p:=>Boolean)(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "final def"}, {"label" : "unless", "tail" : "(p: => Boolean)(trace: Trace): ZIO[Any, E, Option[A]]", "member" : "zio.ZIO.unless", "link" : "zio\/Exit.html#unless(p:=>Boolean)(implicittrace:zio.Trace):zio.ZIO[R,E,Option[A]]", "kind" : "final def"}, {"label" : "unleft", "tail" : "(ev: IsSubtypeOfError[E, Either[E1, B]], trace: Trace): ZIO[Any, E1, Either[A, B]]", "member" : "zio.ZIO.unleft", "link" : "zio\/Exit.html#unleft[E1,B](implicitev:zio.IsSubtypeOfError[E,Either[E1,B]],implicittrace:zio.Trace):zio.ZIO[R,E1,Either[A,B]]", "kind" : "final def"}, {"label" : "unit", "tail" : "(trace: Trace): ZIO[Any, E, Unit]", "member" : "zio.ZIO.unit", "link" : "zio\/Exit.html#unit(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "final def"}, {"label" : "uninterruptible", "tail" : "(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.uninterruptible", "link" : "zio\/Exit.html#uninterruptible(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "uncause", "tail" : "(ev: IsSubtypeOfOutput[A, Cause[E1]], trace: Trace): ZIO[Any, E1, Unit]", "member" : "zio.ZIO.uncause", "link" : "zio\/Exit.html#uncause[E1>:E](implicitev:zio.IsSubtypeOfOutput[A,zio.Cause[E1]],implicittrace:zio.Trace):zio.ZIO[R,E1,Unit]", "kind" : "final def"}, {"label" : "toFutureWith", "tail" : "(f: (E) => Throwable)(trace: Trace): URIO[Any, CancelableFuture[A]]", "member" : "zio.ZIO.toFutureWith", "link" : "zio\/Exit.html#toFutureWith(f:E=>Throwable)(implicittrace:zio.Trace):zio.URIO[R,zio.CancelableFuture[A]]", "kind" : "final def"}, {"label" : "toFuture", "tail" : "(ev2: IsSubtypeOfError[E, Throwable], trace: Trace): URIO[Any, CancelableFuture[A]]", "member" : "zio.ZIO.toFuture", "link" : "zio\/Exit.html#toFuture(implicitev2:zio.IsSubtypeOfError[E,Throwable],implicittrace:zio.Trace):zio.URIO[R,zio.CancelableFuture[A]]", "kind" : "final def"}, {"label" : "timeoutTo", "tail" : "(b: => B): TimeoutTo[Any, E, A, B]", "member" : "zio.ZIO.timeoutTo", "link" : "zio\/Exit.html#timeoutTo[B](b:=>B):zio.ZIO.TimeoutTo[R,E,A,B]", "kind" : "final def"}, {"label" : "timeoutFailCause", "tail" : "(cause: => Cause[E1])(d: => zio.Duration)(trace: Trace): ZIO[Any, E1, A]", "member" : "zio.ZIO.timeoutFailCause", "link" : "zio\/Exit.html#timeoutFailCause[E1>:E](cause:=>zio.Cause[E1])(d:=>zio.Duration)(implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "timeoutFail", "tail" : "(e: => E1)(d: => zio.Duration)(trace: Trace): ZIO[Any, E1, A]", "member" : "zio.ZIO.timeoutFail", "link" : "zio\/Exit.html#timeoutFail[E1>:E](e:=>E1)(d:=>zio.Duration)(implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "timeout", "tail" : "(d: => zio.Duration)(trace: Trace): ZIO[Any, E, Option[A]]", "member" : "zio.ZIO.timeout", "link" : "zio\/Exit.html#timeout(d:=>zio.Duration)(implicittrace:zio.Trace):zio.ZIO[R,E,Option[A]]", "kind" : "final def"}, {"label" : "timedWith", "tail" : "(nanoTime: => ZIO[R1, E1, Long])(trace: Trace): ZIO[R1, E1, (zio.Duration, A)]", "member" : "zio.ZIO.timedWith", "link" : "zio\/Exit.html#timedWith[R1<:R,E1>:E](nanoTime:=>zio.ZIO[R1,E1,Long])(implicittrace:zio.Trace):zio.ZIO[R1,E1,(zio.Duration,A)]", "kind" : "final def"}, {"label" : "timed", "tail" : "(trace: Trace): ZIO[Any, E, (zio.Duration, A)]", "member" : "zio.ZIO.timed", "link" : "zio\/Exit.html#timed(implicittrace:zio.Trace):zio.ZIO[R,E,(zio.Duration,A)]", "kind" : "final def"}, {"label" : "tapSomeError", "tail" : "(f: PartialFunction[E, ZIO[R1, E1, Any]])(ev: CanFail[E], trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.tapSomeError", "link" : "zio\/Exit.html#tapSomeError[R1<:R,E1>:E](f:PartialFunction[E,zio.ZIO[R1,E1,Any]])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "tapSome", "tail" : "(f: PartialFunction[A, ZIO[R1, E1, Any]])(trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.tapSome", "link" : "zio\/Exit.html#tapSome[R1<:R,E1>:E](f:PartialFunction[A,zio.ZIO[R1,E1,Any]])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "tapErrorTrace", "tail" : "(f: ((E, StackTrace)) => ZIO[R1, E1, Any])(ev: CanFail[E], trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.tapErrorTrace", "link" : "zio\/Exit.html#tapErrorTrace[R1<:R,E1>:E](f:((E,zio.StackTrace))=>zio.ZIO[R1,E1,Any])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "tapErrorCause", "tail" : "(f: (Cause[E]) => ZIO[R1, E1, Any])(trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.tapErrorCause", "link" : "zio\/Exit.html#tapErrorCause[R1<:R,E1>:E](f:zio.Cause[E]=>zio.ZIO[R1,E1,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "tapError", "tail" : "(f: (E) => ZIO[R1, E1, Any])(ev: CanFail[E], trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.tapError", "link" : "zio\/Exit.html#tapError[R1<:R,E1>:E](f:E=>zio.ZIO[R1,E1,Any])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "tapEither", "tail" : "(f: (Either[E, A]) => ZIO[R1, E1, Any])(ev: CanFail[E], trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.tapEither", "link" : "zio\/Exit.html#tapEither[R1<:R,E1>:E](f:Either[E,A]=>zio.ZIO[R1,E1,Any])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "tapDefect", "tail" : "(f: (Cause[Nothing]) => ZIO[R1, E1, Any])(trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.tapDefect", "link" : "zio\/Exit.html#tapDefect[R1<:R,E1>:E](f:zio.Cause[Nothing]=>zio.ZIO[R1,E1,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "tapBoth", "tail" : "(f: (E) => ZIO[R1, E1, Any], g: (A) => ZIO[R1, E1, Any])(ev: CanFail[E], trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.tapBoth", "link" : "zio\/Exit.html#tapBoth[R1<:R,E1>:E](f:E=>zio.ZIO[R1,E1,Any],g:A=>zio.ZIO[R1,E1,Any])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "tap", "tail" : "(f: (A) => ZIO[R1, E1, Any])(trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.tap", "link" : "zio\/Exit.html#tap[R1<:R,E1>:E](f:A=>zio.ZIO[R1,E1,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "supervised", "tail" : "(supervisor: => Supervisor[Any])(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.supervised", "link" : "zio\/Exit.html#supervised(supervisor:=>zio.Supervisor[Any])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "summarized", "tail" : "(summary0: => ZIO[R1, E1, B])(f: (B, B) => C)(trace: Trace): ZIO[R1, E1, (C, A)]", "member" : "zio.ZIO.summarized", "link" : "zio\/Exit.html#summarized[R1<:R,E1>:E,B,C](summary0:=>zio.ZIO[R1,E1,B])(f:(B,B)=>C)(implicittrace:zio.Trace):zio.ZIO[R1,E1,(C,A)]", "kind" : "final def"}, {"label" : "sandboxWith", "tail" : "(f: (ZIO[R1, Cause[E], A]) => ZIO[R1, Cause[E2], B])(trace: Trace): ZIO[R1, E2, B]", "member" : "zio.ZIO.sandboxWith", "link" : "zio\/Exit.html#sandboxWith[R1<:R,E2,B](f:zio.ZIO[R1,zio.Cause[E],A]=>zio.ZIO[R1,zio.Cause[E2],B])(implicittrace:zio.Trace):zio.ZIO[R1,E2,B]", "kind" : "final def"}, {"label" : "someOrFailException", "tail" : "(ev: IsSubtypeOfOutput[A, Option[B]], ev2: <:<[NoSuchElementException, E1], trace: Trace): ZIO[Any, E1, B]", "member" : "zio.ZIO.someOrFailException", "link" : "zio\/Exit.html#someOrFailException[B,E1>:E](implicitev:zio.IsSubtypeOfOutput[A,Option[B]],implicitev2:NoSuchElementException<:<E1,implicittrace:zio.Trace):zio.ZIO[R,E1,B]", "kind" : "final def"}, {"label" : "someOrFail", "tail" : "(e: => E1)(ev: IsSubtypeOfOutput[A, Option[B]], trace: Trace): ZIO[Any, E1, B]", "member" : "zio.ZIO.someOrFail", "link" : "zio\/Exit.html#someOrFail[B,E1>:E](e:=>E1)(implicitev:zio.IsSubtypeOfOutput[A,Option[B]],implicittrace:zio.Trace):zio.ZIO[R,E1,B]", "kind" : "final def"}, {"label" : "someOrElseZIO", "tail" : "(default: => ZIO[R1, E1, C])(ev0: IsSubtypeOfOutput[A, Option[B]], ev1: <:<[C, B], trace: Trace): ZIO[R1, E1, B]", "member" : "zio.ZIO.someOrElseZIO", "link" : "zio\/Exit.html#someOrElseZIO[B,R1<:R,E1>:E,C](default:=>zio.ZIO[R1,E1,C])(implicitev0:zio.IsSubtypeOfOutput[A,Option[B]],implicitev1:C<:<B,implicittrace:zio.Trace):zio.ZIO[R1,E1,B]", "kind" : "final def"}, {"label" : "someOrElseZIO", "tail" : "(default: => ZIO[R1, E1, B])(ev: IsSubtypeOfOutput[A, Option[B]], trace: Trace): ZIO[R1, E1, B]", "member" : "zio.ZIO.someOrElseZIO", "link" : "zio\/Exit.html#someOrElseZIO[B,R1<:R,E1>:E](default:=>zio.ZIO[R1,E1,B])(implicitev:zio.IsSubtypeOfOutput[A,Option[B]],implicittrace:zio.Trace):zio.ZIO[R1,E1,B]", "kind" : "final def"}, {"label" : "someOrElse", "tail" : "(default: => C)(ev0: IsSubtypeOfOutput[A, Option[B]], ev1: <:<[C, B], trace: Trace): ZIO[Any, E, B]", "member" : "zio.ZIO.someOrElse", "link" : "zio\/Exit.html#someOrElse[B,C](default:=>C)(implicitev0:zio.IsSubtypeOfOutput[A,Option[B]],implicitev1:C<:<B,implicittrace:zio.Trace):zio.ZIO[R,E,B]", "kind" : "final def"}, {"label" : "someOrElse", "tail" : "(default: => B)(ev: IsSubtypeOfOutput[A, Option[B]], trace: Trace): ZIO[Any, E, B]", "member" : "zio.ZIO.someOrElse", "link" : "zio\/Exit.html#someOrElse[B](default:=>B)(implicitev:zio.IsSubtypeOfOutput[A,Option[B]],implicittrace:zio.Trace):zio.ZIO[R,E,B]", "kind" : "final def"}, {"label" : "someWith", "tail" : "(f: (ZIO[Any, Option[E], B]) => ZIO[R1, Option[E1], B1])(ev: IsSubtypeOfOutput[A, Option[B]], trace: Trace): ZIO[R1, E1, Option[B1]]", "member" : "zio.ZIO.someWith", "link" : "zio\/Exit.html#someWith[R1,E1,A1,B,B1](f:zio.ZIO[R,Option[E],B]=>zio.ZIO[R1,Option[E1],B1])(implicitev:zio.IsSubtypeOfOutput[A,Option[B]],implicittrace:zio.Trace):zio.ZIO[R1,E1,Option[B1]]", "kind" : "final def"}, {"label" : "some", "tail" : "(ev: IsSubtypeOfOutput[A, Option[B]], trace: Trace): ZIO[Any, Option[E], B]", "member" : "zio.ZIO.some", "link" : "zio\/Exit.html#some[B](implicitev:zio.IsSubtypeOfOutput[A,Option[B]],implicittrace:zio.Trace):zio.ZIO[R,Option[E],B]", "kind" : "final def"}, {"label" : "sequentialFinalizers", "tail" : "(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.sequentialFinalizers", "link" : "zio\/Exit.html#sequentialFinalizers(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "scheduleFork", "tail" : "(schedule: => Schedule[R1, Any, B])(trace: Trace): ZIO[R1 with Scope, Nothing, Fiber.Runtime[E, B]]", "member" : "zio.ZIO.scheduleFork", "link" : "zio\/Exit.html#scheduleFork[R1<:R,B](schedule:=>zio.Schedule[R1,Any,B])(implicittrace:zio.Trace):zio.ZIO[R1withzio.Scope,Nothing,zio.Fiber.Runtime[E,B]]", "kind" : "final def"}, {"label" : "scheduleFrom", "tail" : "(a: => A1)(schedule0: => Schedule[R1, A1, B])(trace: Trace): ZIO[R1, E, B]", "member" : "zio.ZIO.scheduleFrom", "link" : "zio\/Exit.html#scheduleFrom[R1<:R,A1>:A,B](a:=>A1)(schedule0:=>zio.Schedule[R1,A1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E,B]", "kind" : "final def"}, {"label" : "schedule", "tail" : "(schedule: => Schedule[R1, Any, B])(trace: Trace): ZIO[R1, E, B]", "member" : "zio.ZIO.schedule", "link" : "zio\/Exit.html#schedule[R1<:R,B](schedule:=>zio.Schedule[R1,Any,B])(implicittrace:zio.Trace):zio.ZIO[R1,E,B]", "kind" : "final def"}, {"label" : "sandbox", "tail" : "(trace: Trace): ZIO[Any, Cause[E], A]", "member" : "zio.ZIO.sandbox", "link" : "zio\/Exit.html#sandbox(implicittrace:zio.Trace):zio.ZIO[R,zio.Cause[E],A]", "kind" : "final def"}, {"label" : "rightWith", "tail" : "(f: (ZIO[Any, Either[B, E], C]) => ZIO[R1, Either[B1, E1], C1])(ev: IsSubtypeOfOutput[A, Either[B, C]], trace: Trace): ZIO[R1, E1, Either[B1, C1]]", "member" : "zio.ZIO.rightWith", "link" : "zio\/Exit.html#rightWith[R1,E1,A1,B,B1,C,C1](f:zio.ZIO[R,Either[B,E],C]=>zio.ZIO[R1,Either[B1,E1],C1])(implicitev:zio.IsSubtypeOfOutput[A,Either[B,C]],implicittrace:zio.Trace):zio.ZIO[R1,E1,Either[B1,C1]]", "kind" : "final def"}, {"label" : "right", "tail" : "(ev: IsSubtypeOfOutput[A, Either[B, C]], trace: Trace): ZIO[Any, Either[B, E], C]", "member" : "zio.ZIO.right", "link" : "zio\/Exit.html#right[B,C](implicitev:zio.IsSubtypeOfOutput[A,Either[B,C]],implicittrace:zio.Trace):zio.ZIO[R,Either[B,E],C]", "kind" : "final def"}, {"label" : "retryWhileZIO", "tail" : "(f: (E) => URIO[R1, Boolean])(ev: CanFail[E], trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.retryWhileZIO", "link" : "zio\/Exit.html#retryWhileZIO[R1<:R](f:E=>zio.URIO[R1,Boolean])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "retryWhileEquals", "tail" : "(e: => E1)(ev: CanFail[E1], trace: Trace): ZIO[Any, E1, A]", "member" : "zio.ZIO.retryWhileEquals", "link" : "zio\/Exit.html#retryWhileEquals[E1>:E](e:=>E1)(implicitev:zio.CanFail[E1],implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "retryWhile", "tail" : "(f: (E) => Boolean)(ev: CanFail[E], trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.retryWhile", "link" : "zio\/Exit.html#retryWhile(f:E=>Boolean)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "retryUntilZIO", "tail" : "(f: (E) => URIO[R1, Boolean])(ev: CanFail[E], trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.retryUntilZIO", "link" : "zio\/Exit.html#retryUntilZIO[R1<:R](f:E=>zio.URIO[R1,Boolean])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "retryUntilEquals", "tail" : "(e: => E1)(ev: CanFail[E1], trace: Trace): ZIO[Any, E1, A]", "member" : "zio.ZIO.retryUntilEquals", "link" : "zio\/Exit.html#retryUntilEquals[E1>:E](e:=>E1)(implicitev:zio.CanFail[E1],implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "retryUntil", "tail" : "(f: (E) => Boolean)(ev: CanFail[E], trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.retryUntil", "link" : "zio\/Exit.html#retryUntil(f:E=>Boolean)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "retryOrElseEither", "tail" : "(schedule0: => Schedule[R1, E, Out], orElse: (E, Out) => ZIO[R1, E1, B])(ev: CanFail[E], trace: Trace): ZIO[R1, E1, Either[B, A]]", "member" : "zio.ZIO.retryOrElseEither", "link" : "zio\/Exit.html#retryOrElseEither[R1<:R,Out,E1,B](schedule0:=>zio.Schedule[R1,E,Out],orElse:(E,Out)=>zio.ZIO[R1,E1,B])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E1,Either[B,A]]", "kind" : "final def"}, {"label" : "retryOrElse", "tail" : "(policy: => Schedule[R1, E, S], orElse: (E, S) => ZIO[R1, E1, A1])(ev: CanFail[E], trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.retryOrElse", "link" : "zio\/Exit.html#retryOrElse[R1<:R,A1>:A,S,E1](policy:=>zio.Schedule[R1,E,S],orElse:(E,S)=>zio.ZIO[R1,E1,A1])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "retryN", "tail" : "(n: => Int)(ev: CanFail[E], trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.retryN", "link" : "zio\/Exit.html#retryN(n:=>Int)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "retry", "tail" : "(policy: => Schedule[R1, E, S])(ev: CanFail[E], trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.retry", "link" : "zio\/Exit.html#retry[R1<:R,S](policy:=>zio.Schedule[R1,E,S])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "replicateZIODiscard", "tail" : "(n: => Int)(trace: Trace): ZIO[Any, E, Unit]", "member" : "zio.ZIO.replicateZIODiscard", "link" : "zio\/Exit.html#replicateZIODiscard(n:=>Int)(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "final def"}, {"label" : "replicateZIO", "tail" : "(n: => Int)(trace: Trace): ZIO[Any, E, Iterable[A]]", "member" : "zio.ZIO.replicateZIO", "link" : "zio\/Exit.html#replicateZIO(n:=>Int)(implicittrace:zio.Trace):zio.ZIO[R,E,Iterable[A]]", "kind" : "final def"}, {"label" : "repeatWhileZIO", "tail" : "(f: (A) => URIO[R1, Boolean])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.repeatWhileZIO", "link" : "zio\/Exit.html#repeatWhileZIO[R1<:R](f:A=>zio.URIO[R1,Boolean])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "repeatWhileEquals", "tail" : "(a: => A1)(trace: Trace): ZIO[Any, E, A1]", "member" : "zio.ZIO.repeatWhileEquals", "link" : "zio\/Exit.html#repeatWhileEquals[A1>:A](a:=>A1)(implicittrace:zio.Trace):zio.ZIO[R,E,A1]", "kind" : "final def"}, {"label" : "repeatWhile", "tail" : "(p: (A) => Boolean)(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.repeatWhile", "link" : "zio\/Exit.html#repeatWhile(p:A=>Boolean)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "repeatUntilZIO", "tail" : "(f: (A) => URIO[R1, Boolean])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.repeatUntilZIO", "link" : "zio\/Exit.html#repeatUntilZIO[R1<:R](f:A=>zio.URIO[R1,Boolean])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "repeatUntilEquals", "tail" : "(a: => A1)(trace: Trace): ZIO[Any, E, A1]", "member" : "zio.ZIO.repeatUntilEquals", "link" : "zio\/Exit.html#repeatUntilEquals[A1>:A](a:=>A1)(implicittrace:zio.Trace):zio.ZIO[R,E,A1]", "kind" : "final def"}, {"label" : "repeatUntil", "tail" : "(p: (A) => Boolean)(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.repeatUntil", "link" : "zio\/Exit.html#repeatUntil(p:A=>Boolean)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "repeatOrElseEither", "tail" : "(schedule0: => Schedule[R1, A, B], orElse: (E, Option[B]) => ZIO[R1, E2, C])(trace: Trace): ZIO[R1, E2, Either[C, B]]", "member" : "zio.ZIO.repeatOrElseEither", "link" : "zio\/Exit.html#repeatOrElseEither[R1<:R,B,E2,C](schedule0:=>zio.Schedule[R1,A,B],orElse:(E,Option[B])=>zio.ZIO[R1,E2,C])(implicittrace:zio.Trace):zio.ZIO[R1,E2,Either[C,B]]", "kind" : "final def"}, {"label" : "repeatOrElse", "tail" : "(schedule: => Schedule[R1, A, B], orElse: (E, Option[B]) => ZIO[R1, E2, B])(trace: Trace): ZIO[R1, E2, B]", "member" : "zio.ZIO.repeatOrElse", "link" : "zio\/Exit.html#repeatOrElse[R1<:R,E2,B](schedule:=>zio.Schedule[R1,A,B],orElse:(E,Option[B])=>zio.ZIO[R1,E2,B])(implicittrace:zio.Trace):zio.ZIO[R1,E2,B]", "kind" : "final def"}, {"label" : "repeatN", "tail" : "(n: => Int)(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.repeatN", "link" : "zio\/Exit.html#repeatN(n:=>Int)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(schedule: => Schedule[R1, A, B])(trace: Trace): ZIO[R1, E, B]", "member" : "zio.ZIO.repeat", "link" : "zio\/Exit.html#repeat[R1<:R,B](schedule:=>zio.Schedule[R1,A,B])(implicittrace:zio.Trace):zio.ZIO[R1,E,B]", "kind" : "final def"}, {"label" : "rejectZIO", "tail" : "(pf: PartialFunction[A, ZIO[R1, E1, E1]])(trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.rejectZIO", "link" : "zio\/Exit.html#rejectZIO[R1<:R,E1>:E](pf:PartialFunction[A,zio.ZIO[R1,E1,E1]])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "reject", "tail" : "(pf: PartialFunction[A, E1])(trace: Trace): ZIO[Any, E1, A]", "member" : "zio.ZIO.reject", "link" : "zio\/Exit.html#reject[E1>:E](pf:PartialFunction[A,E1])(implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "refineOrDieWith", "tail" : "(pf: PartialFunction[E, E1])(f: (E) => Throwable)(ev: CanFail[E], trace: Trace): ZIO[Any, E1, A]", "member" : "zio.ZIO.refineOrDieWith", "link" : "zio\/Exit.html#refineOrDieWith[E1](pf:PartialFunction[E,E1])(f:E=>Throwable)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "refineOrDie", "tail" : "(pf: PartialFunction[E, E1])(ev1: IsSubtypeOfError[E, Throwable], ev2: CanFail[E], trace: Trace): ZIO[Any, E1, A]", "member" : "zio.ZIO.refineOrDie", "link" : "zio\/Exit.html#refineOrDie[E1](pf:PartialFunction[E,E1])(implicitev1:zio.IsSubtypeOfError[E,Throwable],implicitev2:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "raceWith", "tail" : "(that: => ZIO[R1, E1, B])(leftDone: (Exit[E, A], Fiber[E1, B]) => ZIO[R1, E2, C], rightDone: (Exit[E1, B], Fiber[E, A]) => ZIO[R1, E2, C])(trace: Trace): ZIO[R1, E2, C]", "member" : "zio.ZIO.raceWith", "link" : "zio\/Exit.html#raceWith[R1<:R,E1,E2,B,C](that:=>zio.ZIO[R1,E1,B])(leftDone:(zio.Exit[E,A],zio.Fiber[E1,B])=>zio.ZIO[R1,E2,C],rightDone:(zio.Exit[E1,B],zio.Fiber[E,A])=>zio.ZIO[R1,E2,C])(implicittrace:zio.Trace):zio.ZIO[R1,E2,C]", "kind" : "final def"}, {"label" : "raceEither", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, Either[A, B]]", "member" : "zio.ZIO.raceEither", "link" : "zio\/Exit.html#raceEither[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,Either[A,B]]", "kind" : "final def"}, {"label" : "raceFirstAwait", "tail" : "(that: => ZIO[R1, E1, A1])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.raceFirstAwait", "link" : "zio\/Exit.html#raceFirstAwait[R1<:R,E1>:E,A1>:A](that:=>zio.ZIO[R1,E1,A1])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "raceFirst", "tail" : "(that: => ZIO[R1, E1, A1])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.raceFirst", "link" : "zio\/Exit.html#raceFirst[R1<:R,E1>:E,A1>:A](that:=>zio.ZIO[R1,E1,A1])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "raceAll", "tail" : "(ios0: => Iterable[ZIO[R1, E1, A1]])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.raceAll", "link" : "zio\/Exit.html#raceAll[R1<:R,E1>:E,A1>:A](ios0:=>Iterable[zio.ZIO[R1,E1,A1]])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "raceAwait", "tail" : "(that: => ZIO[R1, E1, A1])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.raceAwait", "link" : "zio\/Exit.html#raceAwait[R1<:R,E1>:E,A1>:A](that:=>zio.ZIO[R1,E1,A1])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "race", "tail" : "(that: => ZIO[R1, E1, A1])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.race", "link" : "zio\/Exit.html#race[R1<:R,E1>:E,A1>:A](that:=>zio.ZIO[R1,E1,A1])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "provideSomeLayer", "tail" : "(): ProvideSomeLayer[R0, Any, E, A]", "member" : "zio.ZIO.provideSomeLayer", "link" : "zio\/Exit.html#provideSomeLayer[R0]:zio.ZIO.ProvideSomeLayer[R0,R,E,A]", "kind" : "final def"}, {"label" : "provideSomeEnvironment", "tail" : "(f: (ZEnvironment[R0]) => ZEnvironment[Any])(trace: Trace): ZIO[R0, E, A]", "member" : "zio.ZIO.provideSomeEnvironment", "link" : "zio\/Exit.html#provideSomeEnvironment[R0](f:zio.ZEnvironment[R0]=>zio.ZEnvironment[R])(implicittrace:zio.Trace):zio.ZIO[R0,E,A]", "kind" : "final def"}, {"label" : "provideLayer", "tail" : "(layer: => ZLayer[R0, E1, Any])(trace: Trace): ZIO[R0, E1, A]", "member" : "zio.ZIO.provideLayer", "link" : "zio\/Exit.html#provideLayer[E1>:E,R0](layer:=>zio.ZLayer[R0,E1,R])(implicittrace:zio.Trace):zio.ZIO[R0,E1,A]", "kind" : "final def"}, {"label" : "provideEnvironment", "tail" : "(r: => ZEnvironment[Any])(trace: Trace): IO[E, A]", "member" : "zio.ZIO.provideEnvironment", "link" : "zio\/Exit.html#provideEnvironment(r:=>zio.ZEnvironment[R])(implicittrace:zio.Trace):zio.IO[E,A]", "kind" : "final def"}, {"label" : "parallelFinalizers", "tail" : "(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.parallelFinalizers", "link" : "zio\/Exit.html#parallelFinalizers(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "parallelErrors", "tail" : "(trace: Trace): ZIO[Any, ::[E1], A]", "member" : "zio.ZIO.parallelErrors", "link" : "zio\/Exit.html#parallelErrors[E1>:E](implicittrace:zio.Trace):zio.ZIO[R,::[E1],A]", "kind" : "final def"}, {"label" : "orElseSucceed", "tail" : "(a1: => A1)(ev: CanFail[E], trace: Trace): URIO[Any, A1]", "member" : "zio.ZIO.orElseSucceed", "link" : "zio\/Exit.html#orElseSucceed[A1>:A](a1:=>A1)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.URIO[R,A1]", "kind" : "final def"}, {"label" : "orElseOptional", "tail" : "(that: => ZIO[R1, Option[E1], A1])(ev: IsSubtypeOfError[E, Option[E1]], trace: Trace): ZIO[R1, Option[E1], A1]", "member" : "zio.ZIO.orElseOptional", "link" : "zio\/Exit.html#orElseOptional[R1<:R,E1,A1>:A](that:=>zio.ZIO[R1,Option[E1],A1])(implicitev:zio.IsSubtypeOfError[E,Option[E1]],implicittrace:zio.Trace):zio.ZIO[R1,Option[E1],A1]", "kind" : "final def"}, {"label" : "orElseEither", "tail" : "(that: => ZIO[R1, E2, B])(ev: CanFail[E], trace: Trace): ZIO[R1, E2, Either[A, B]]", "member" : "zio.ZIO.orElseEither", "link" : "zio\/Exit.html#orElseEither[R1<:R,E2,B](that:=>zio.ZIO[R1,E2,B])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E2,Either[A,B]]", "kind" : "final def"}, {"label" : "orElse", "tail" : "(that: => ZIO[R1, E2, A1])(ev: CanFail[E], trace: Trace): ZIO[R1, E2, A1]", "member" : "zio.ZIO.orElse", "link" : "zio\/Exit.html#orElse[R1<:R,E2,A1>:A](that:=>zio.ZIO[R1,E2,A1])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E2,A1]", "kind" : "final def"}, {"label" : "resurrect", "tail" : "(ev1: IsSubtypeOfError[E, Throwable], trace: Trace): RIO[Any, A]", "member" : "zio.ZIO.resurrect", "link" : "zio\/Exit.html#resurrect(implicitev1:zio.IsSubtypeOfError[E,Throwable],implicittrace:zio.Trace):zio.RIO[R,A]", "kind" : "final def"}, {"label" : "orDieWith", "tail" : "(f: (E) => Throwable)(ev: CanFail[E], trace: Trace): URIO[Any, A]", "member" : "zio.ZIO.orDieWith", "link" : "zio\/Exit.html#orDieWith(f:E=>Throwable)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.URIO[R,A]", "kind" : "final def"}, {"label" : "orDie", "tail" : "(ev1: IsSubtypeOfError[E, Throwable], ev2: CanFail[E], trace: Trace): URIO[Any, A]", "member" : "zio.ZIO.orDie", "link" : "zio\/Exit.html#orDie(implicitev1:zio.IsSubtypeOfError[E,Throwable],implicitev2:zio.CanFail[E],implicittrace:zio.Trace):zio.URIO[R,A]", "kind" : "final def"}, {"label" : "option", "tail" : "(ev: CanFail[E], trace: Trace): URIO[Any, Option[A]]", "member" : "zio.ZIO.option", "link" : "zio\/Exit.html#option(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.URIO[R,Option[A]]", "kind" : "final def"}, {"label" : "onTermination", "tail" : "(cleanup: (Cause[Nothing]) => URIO[R1, Any])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.onTermination", "link" : "zio\/Exit.html#onTermination[R1<:R](cleanup:zio.Cause[Nothing]=>zio.URIO[R1,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "onInterrupt", "tail" : "(cleanup: (Set[FiberId]) => URIO[R1, Any])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.onInterrupt", "link" : "zio\/Exit.html#onInterrupt[R1<:R](cleanup:Set[zio.FiberId]=>zio.URIO[R1,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "onInterrupt", "tail" : "(cleanup: => URIO[R1, Any])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.onInterrupt", "link" : "zio\/Exit.html#onInterrupt[R1<:R](cleanup:=>zio.URIO[R1,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "onExit", "tail" : "(cleanup: (Exit[E, A]) => URIO[R1, Any])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.onExit", "link" : "zio\/Exit.html#onExit[R1<:R](cleanup:zio.Exit[E,A]=>zio.URIO[R1,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "onExecutionContext", "tail" : "(ec: => ExecutionContext)(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.onExecutionContext", "link" : "zio\/Exit.html#onExecutionContext(ec:=>scala.concurrent.ExecutionContext)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "onExecutor", "tail" : "(executor: => Executor)(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.onExecutor", "link" : "zio\/Exit.html#onExecutor(executor:=>zio.Executor)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "onError", "tail" : "(cleanup: (Cause[E]) => URIO[R1, Any])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.onError", "link" : "zio\/Exit.html#onError[R1<:R](cleanup:zio.Cause[E]=>zio.URIO[R1,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "onDoneCause", "tail" : "(error: (Cause[E]) => ZIO[R1, Nothing, Any], success: (A) => ZIO[R1, Nothing, Any])(trace: Trace): ZIO[R1, Nothing, Unit]", "member" : "zio.ZIO.onDoneCause", "link" : "zio\/Exit.html#onDoneCause[R1<:R](error:zio.Cause[E]=>zio.ZIO[R1,Nothing,Any],success:A=>zio.ZIO[R1,Nothing,Any])(implicittrace:zio.Trace):zio.ZIO[R1,Nothing,Unit]", "kind" : "final def"}, {"label" : "onDone", "tail" : "(error: (E) => ZIO[R1, Nothing, Any], success: (A) => ZIO[R1, Nothing, Any])(trace: Trace): ZIO[R1, Nothing, Unit]", "member" : "zio.ZIO.onDone", "link" : "zio\/Exit.html#onDone[R1<:R](error:E=>zio.ZIO[R1,Nothing,Any],success:A=>zio.ZIO[R1,Nothing,Any])(implicittrace:zio.Trace):zio.ZIO[R1,Nothing,Unit]", "kind" : "final def"}, {"label" : "once", "tail" : "(trace: Trace): UIO[ZIO[Any, E, Unit]]", "member" : "zio.ZIO.once", "link" : "zio\/Exit.html#once(implicittrace:zio.Trace):zio.UIO[zio.ZIO[R,E,Unit]]", "kind" : "final def"}, {"label" : "none", "tail" : "(ev: IsSubtypeOfOutput[A, Option[B]], trace: Trace): ZIO[Any, Option[E], Unit]", "member" : "zio.ZIO.none", "link" : "zio\/Exit.html#none[B](implicitev:zio.IsSubtypeOfOutput[A,Option[B]],implicittrace:zio.Trace):zio.ZIO[R,Option[E],Unit]", "kind" : "final def"}, {"label" : "negate", "tail" : "(ev: IsSubtypeOfOutput[A, Boolean], trace: Trace): ZIO[Any, E, Boolean]", "member" : "zio.ZIO.negate", "link" : "zio\/Exit.html#negate(implicitev:zio.IsSubtypeOfOutput[A,Boolean],implicittrace:zio.Trace):zio.ZIO[R,E,Boolean]", "kind" : "final def"}, {"label" : "merge", "tail" : "(ev1: IsSubtypeOfError[E, A1], ev2: CanFail[E], trace: Trace): URIO[Any, A1]", "member" : "zio.ZIO.merge", "link" : "zio\/Exit.html#merge[A1>:A](implicitev1:zio.IsSubtypeOfError[E,A1],implicitev2:zio.CanFail[E],implicittrace:zio.Trace):zio.URIO[R,A1]", "kind" : "final def"}, {"label" : "memoize", "tail" : "(trace: Trace): UIO[ZIO[Any, E, A]]", "member" : "zio.ZIO.memoize", "link" : "zio\/Exit.html#memoize(implicittrace:zio.Trace):zio.UIO[zio.ZIO[R,E,A]]", "kind" : "final def"}, {"label" : "mapErrorCause", "tail" : "(h: (Cause[E]) => Cause[E2])(trace: Trace): ZIO[Any, E2, A]", "member" : "zio.ZIO.mapErrorCause", "link" : "zio\/Exit.html#mapErrorCause[E2](h:zio.Cause[E]=>zio.Cause[E2])(implicittrace:zio.Trace):zio.ZIO[R,E2,A]", "kind" : "final def"}, {"label" : "mapError", "tail" : "(f: (E) => E2)(ev: CanFail[E], trace: Trace): ZIO[Any, E2, A]", "member" : "zio.ZIO.mapError", "link" : "zio\/Exit.html#mapError[E2](f:E=>E2)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,E2,A]", "kind" : "final def"}, {"label" : "mapBoth", "tail" : "(f: (E) => E2, g: (A) => B)(ev: CanFail[E], trace: Trace): ZIO[Any, E2, B]", "member" : "zio.ZIO.mapBoth", "link" : "zio\/Exit.html#mapBoth[E2,B](f:E=>E2,g:A=>B)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,E2,B]", "kind" : "final def"}, {"label" : "mapAttempt", "tail" : "(f: (A) => B)(ev: IsSubtypeOfError[E, Throwable], trace: Trace): RIO[Any, B]", "member" : "zio.ZIO.mapAttempt", "link" : "zio\/Exit.html#mapAttempt[B](f:A=>B)(implicitev:zio.IsSubtypeOfError[E,Throwable],implicittrace:zio.Trace):zio.RIO[R,B]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (A) => B)(trace: Trace): ZIO[Any, E, B]", "member" : "zio.ZIO.map", "link" : "zio\/Exit.html#map[B](f:A=>B)(implicittrace:zio.Trace):zio.ZIO[R,E,B]", "kind" : "final def"}, {"label" : "logSpan", "tail" : "(label: => String)(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.logSpan", "link" : "zio\/Exit.html#logSpan(label:=>String)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "logError", "tail" : "(message: => String)(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.logError", "link" : "zio\/Exit.html#logError(message:=>String)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "logError", "tail" : "(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.logError", "link" : "zio\/Exit.html#logError(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "leftWith", "tail" : "(f: (ZIO[Any, Either[E, C], B]) => ZIO[R1, Either[E1, C1], B1])(ev: IsSubtypeOfOutput[A, Either[B, C]], trace: Trace): ZIO[R1, E1, Either[B1, C1]]", "member" : "zio.ZIO.leftWith", "link" : "zio\/Exit.html#leftWith[R1,E1,A1,B,B1,C,C1](f:zio.ZIO[R,Either[E,C],B]=>zio.ZIO[R1,Either[E1,C1],B1])(implicitev:zio.IsSubtypeOfOutput[A,Either[B,C]],implicittrace:zio.Trace):zio.ZIO[R1,E1,Either[B1,C1]]", "kind" : "final def"}, {"label" : "left", "tail" : "(ev: IsSubtypeOfOutput[A, Either[B, C]], trace: Trace): ZIO[Any, Either[E, C], B]", "member" : "zio.ZIO.left", "link" : "zio\/Exit.html#left[B,C](implicitev:zio.IsSubtypeOfOutput[A,Either[B,C]],implicittrace:zio.Trace):zio.ZIO[R,Either[E,C],B]", "kind" : "final def"}, {"label" : "isSuccess", "tail" : "(trace: Trace): URIO[Any, Boolean]", "member" : "zio.ZIO.isSuccess", "link" : "zio\/Exit.html#isSuccess(implicittrace:zio.Trace):zio.URIO[R,Boolean]", "kind" : "final def"}, {"label" : "isFailure", "tail" : "(trace: Trace): URIO[Any, Boolean]", "member" : "zio.ZIO.isFailure", "link" : "zio\/Exit.html#isFailure(implicittrace:zio.Trace):zio.URIO[R,Boolean]", "kind" : "final def"}, {"label" : "intoPromise", "tail" : "(p: => Promise[E1, A1])(trace: Trace): URIO[Any, Boolean]", "member" : "zio.ZIO.intoPromise", "link" : "zio\/Exit.html#intoPromise[E1>:E,A1>:A](p:=>zio.Promise[E1,A1])(implicittrace:zio.Trace):zio.URIO[R,Boolean]", "kind" : "final def"}, {"label" : "interruptStatus", "tail" : "(flag: => InterruptStatus)(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.interruptStatus", "link" : "zio\/Exit.html#interruptStatus(flag:=>zio.InterruptStatus)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "interruptible", "tail" : "(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.interruptible", "link" : "zio\/Exit.html#interruptible(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "interruptAllChildren", "tail" : "(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.interruptAllChildren", "link" : "zio\/Exit.html#interruptAllChildren(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "ignoreLogged", "tail" : "(trace: Trace): URIO[Any, Unit]", "member" : "zio.ZIO.ignoreLogged", "link" : "zio\/Exit.html#ignoreLogged(implicittrace:zio.Trace):zio.URIO[R,Unit]", "kind" : "final def"}, {"label" : "ignore", "tail" : "(trace: Trace): URIO[Any, Unit]", "member" : "zio.ZIO.ignore", "link" : "zio\/Exit.html#ignore(implicittrace:zio.Trace):zio.URIO[R,Unit]", "kind" : "final def"}, {"label" : "head", "tail" : "(ev: IsSubtypeOfOutput[A, Seq[B]], trace: Trace): ZIO[Any, Option[E], B]", "member" : "zio.ZIO.head", "link" : "zio\/Exit.html#head[B](implicitev:zio.IsSubtypeOfOutput[A,Seq[B]],implicittrace:zio.Trace):zio.ZIO[R,Option[E],B]", "kind" : "final def"}, {"label" : "flattenErrorOption", "tail" : "(default: => E2)(ev: IsSubtypeOfError[E, Option[E1]], trace: Trace): ZIO[Any, E1, A]", "member" : "zio.ZIO.flattenErrorOption", "link" : "zio\/Exit.html#flattenErrorOption[E1,E2<:E1](default:=>E2)(implicitev:zio.IsSubtypeOfError[E,Option[E1]],implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "forkWithErrorHandler", "tail" : "(handler: (E) => URIO[R1, Any])(trace: Trace): URIO[R1, Fiber.Runtime[E, A]]", "member" : "zio.ZIO.forkWithErrorHandler", "link" : "zio\/Exit.html#forkWithErrorHandler[R1<:R](handler:E=>zio.URIO[R1,Any])(implicittrace:zio.Trace):zio.URIO[R1,zio.Fiber.Runtime[E,A]]", "kind" : "final def"}, {"label" : "forkScoped", "tail" : "(trace: Trace): ZIO[Scope, Nothing, Fiber.Runtime[E, A]]", "member" : "zio.ZIO.forkScoped", "link" : "zio\/Exit.html#forkScoped(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,zio.Fiber.Runtime[E,A]]", "kind" : "final def"}, {"label" : "forkDaemon", "tail" : "(trace: Trace): URIO[Any, Fiber.Runtime[E, A]]", "member" : "zio.ZIO.forkDaemon", "link" : "zio\/Exit.html#forkDaemon(implicittrace:zio.Trace):zio.URIO[R,zio.Fiber.Runtime[E,A]]", "kind" : "final def"}, {"label" : "forkIn", "tail" : "(scope: => Scope)(trace: Trace): URIO[Any, Fiber.Runtime[E, A]]", "member" : "zio.ZIO.forkIn", "link" : "zio\/Exit.html#forkIn(scope:=>zio.Scope)(implicittrace:zio.Trace):zio.URIO[R,zio.Fiber.Runtime[E,A]]", "kind" : "final def"}, {"label" : "fork", "tail" : "(trace: Trace): URIO[Any, Fiber.Runtime[E, A]]", "member" : "zio.ZIO.fork", "link" : "zio\/Exit.html#fork(implicittrace:zio.Trace):zio.URIO[R,zio.Fiber.Runtime[E,A]]", "kind" : "final def"}, {"label" : "forever", "tail" : "(trace: Trace): ZIO[Any, E, Nothing]", "member" : "zio.ZIO.forever", "link" : "zio\/Exit.html#forever(implicittrace:zio.Trace):zio.ZIO[R,E,Nothing]", "kind" : "final def"}, {"label" : "forEachZIO", "tail" : "(f: (A) => ZIO[R1, E2, B])(trace: Trace): ZIO[R1, E2, Option[B]]", "member" : "zio.ZIO.forEachZIO", "link" : "zio\/Exit.html#forEachZIO[R1<:R,E2,B](f:A=>zio.ZIO[R1,E2,B])(implicittrace:zio.Trace):zio.ZIO[R1,E2,Option[B]]", "kind" : "final def"}, {"label" : "foldZIO", "tail" : "(failure: (E) => ZIO[R1, E2, B], success: (A) => ZIO[R1, E2, B])(ev: CanFail[E], trace: Trace): ZIO[R1, E2, B]", "member" : "zio.ZIO.foldZIO", "link" : "zio\/Exit.html#foldZIO[R1<:R,E2,B](failure:E=>zio.ZIO[R1,E2,B],success:A=>zio.ZIO[R1,E2,B])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E2,B]", "kind" : "final def"}, {"label" : "foldTraceZIO", "tail" : "(failure: ((E, StackTrace)) => ZIO[R1, E2, B], success: (A) => ZIO[R1, E2, B])(ev: CanFail[E], trace: Trace): ZIO[R1, E2, B]", "member" : "zio.ZIO.foldTraceZIO", "link" : "zio\/Exit.html#foldTraceZIO[R1<:R,E2,B](failure:((E,zio.StackTrace))=>zio.ZIO[R1,E2,B],success:A=>zio.ZIO[R1,E2,B])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E2,B]", "kind" : "final def"}, {"label" : "foldCause", "tail" : "(failure: (Cause[E]) => B, success: (A) => B)(trace: Trace): URIO[Any, B]", "member" : "zio.ZIO.foldCause", "link" : "zio\/Exit.html#foldCause[B](failure:zio.Cause[E]=>B,success:A=>B)(implicittrace:zio.Trace):zio.URIO[R,B]", "kind" : "final def"}, {"label" : "fold", "tail" : "(failure: (E) => B, success: (A) => B)(ev: CanFail[E], trace: Trace): URIO[Any, B]", "member" : "zio.ZIO.fold", "link" : "zio\/Exit.html#fold[B](failure:E=>B,success:A=>B)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.URIO[R,B]", "kind" : "final def"}, {"label" : "flipWith", "tail" : "(f: (ZIO[Any, A, E]) => ZIO[R1, A1, E1])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.flipWith", "link" : "zio\/Exit.html#flipWith[R1,A1,E1](f:zio.ZIO[R,A,E]=>zio.ZIO[R1,A1,E1])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "flip", "tail" : "(trace: Trace): ZIO[Any, A, E]", "member" : "zio.ZIO.flip", "link" : "zio\/Exit.html#flip(implicittrace:zio.Trace):zio.ZIO[R,A,E]", "kind" : "final def"}, {"label" : "flatten", "tail" : "(ev1: IsSubtypeOfOutput[A, ZIO[R1, E1, B]], trace: Trace): ZIO[R1, E1, B]", "member" : "zio.ZIO.flatten", "link" : "zio\/Exit.html#flatten[R1<:R,E1>:E,B](implicitev1:zio.IsSubtypeOfOutput[A,zio.ZIO[R1,E1,B]],implicittrace:zio.Trace):zio.ZIO[R1,E1,B]", "kind" : "final def"}, {"label" : "flatMapError", "tail" : "(f: (E) => URIO[R1, E2])(ev: CanFail[E], trace: Trace): ZIO[R1, E2, A]", "member" : "zio.ZIO.flatMapError", "link" : "zio\/Exit.html#flatMapError[R1<:R,E2](f:E=>zio.URIO[R1,E2])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E2,A]", "kind" : "final def"}, {"label" : "firstSuccessOf", "tail" : "(rest: => Iterable[ZIO[R1, E1, A1]])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.firstSuccessOf", "link" : "zio\/Exit.html#firstSuccessOf[R1<:R,E1>:E,A1>:A](rest:=>Iterable[zio.ZIO[R1,E1,A1]])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "filterOrFail", "tail" : "(p: (A) => Boolean)(e: => E1)(trace: Trace): ZIO[Any, E1, A]", "member" : "zio.ZIO.filterOrFail", "link" : "zio\/Exit.html#filterOrFail[E1>:E](p:A=>Boolean)(e:=>E1)(implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "filterOrElseWith", "tail" : "(p: (A) => Boolean)(f: (A) => ZIO[R1, E1, A1])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.filterOrElseWith", "link" : "zio\/Exit.html#filterOrElseWith[R1<:R,E1>:E,A1>:A](p:A=>Boolean)(f:A=>zio.ZIO[R1,E1,A1])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "filterOrElse", "tail" : "(p: (A) => Boolean)(zio: => ZIO[R1, E1, A1])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.filterOrElse", "link" : "zio\/Exit.html#filterOrElse[R1<:R,E1>:E,A1>:A](p:A=>Boolean)(zio:=>zio.ZIO[R1,E1,A1])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "filterOrDieWith", "tail" : "(p: (A) => Boolean)(t: (A) => Throwable)(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.filterOrDieWith", "link" : "zio\/Exit.html#filterOrDieWith(p:A=>Boolean)(t:A=>Throwable)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "filterOrDieMessage", "tail" : "(p: (A) => Boolean)(message: => String)(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.filterOrDieMessage", "link" : "zio\/Exit.html#filterOrDieMessage(p:A=>Boolean)(message:=>String)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "filterOrDie", "tail" : "(p: (A) => Boolean)(t: => Throwable)(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.filterOrDie", "link" : "zio\/Exit.html#filterOrDie(p:A=>Boolean)(t:=>Throwable)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "exitCode", "tail" : "(trace: Trace): URIO[Any, ExitCode]", "member" : "zio.ZIO.exitCode", "link" : "zio\/Exit.html#exitCode(implicittrace:zio.Trace):zio.URIO[R,zio.ExitCode]", "kind" : "final def"}, {"label" : "exitWith", "tail" : "(f: (Exit[E, A]) => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, B]", "member" : "zio.ZIO.exitWith", "link" : "zio\/Exit.html#exitWith[R1<:R,E1,B](f:zio.Exit[E,A]=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,B]", "kind" : "final def"}, {"label" : "exit", "tail" : "(trace: Trace): URIO[Any, Exit[E, A]]", "member" : "zio.ZIO.exit", "link" : "zio\/Exit.html#exit(implicittrace:zio.Trace):zio.URIO[R,zio.Exit[E,A]]", "kind" : "final def"}, {"label" : "eventually", "tail" : "(ev: CanFail[E], trace: Trace): URIO[Any, A]", "member" : "zio.ZIO.eventually", "link" : "zio\/Exit.html#eventually(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.URIO[R,A]", "kind" : "final def"}, {"label" : "ensuringChildren", "tail" : "(children: (Chunk[Fiber.Runtime[Any, Any]]) => ZIO[R1, Nothing, Any])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.ensuringChildren", "link" : "zio\/Exit.html#ensuringChildren[R1<:R](children:zio.Chunk[zio.Fiber.Runtime[Any,Any]]=>zio.ZIO[R1,Nothing,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "def"}, {"label" : "ensuringChild", "tail" : "(f: (Fiber[Any, Iterable[Any]]) => ZIO[R1, Nothing, Any])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.ensuringChild", "link" : "zio\/Exit.html#ensuringChild[R1<:R](f:zio.Fiber[Any,Iterable[Any]]=>zio.ZIO[R1,Nothing,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "ensuring", "tail" : "(finalizer: => URIO[R1, Any])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.ensuring", "link" : "zio\/Exit.html#ensuring[R1<:R](finalizer:=>zio.URIO[R1,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "either", "tail" : "(ev: CanFail[E], trace: Trace): URIO[Any, Either[E, A]]", "member" : "zio.ZIO.either", "link" : "zio\/Exit.html#either(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.URIO[R,Either[E,A]]", "kind" : "final def"}, {"label" : "disconnect", "tail" : "(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.disconnect", "link" : "zio\/Exit.html#disconnect(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "diffFiberRefs", "tail" : "(trace: Trace): ZIO[Any, E, (Patch, A)]", "member" : "zio.ZIO.diffFiberRefs", "link" : "zio\/Exit.html#diffFiberRefs(implicittrace:zio.Trace):zio.ZIO[R,E,(zio.FiberRefs.Patch,A)]", "kind" : "def"}, {"label" : "delay", "tail" : "(duration: => zio.Duration)(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.delay", "link" : "zio\/Exit.html#delay(duration:=>zio.Duration)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "debug", "tail" : "(prefix: => String)(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.debug", "link" : "zio\/Exit.html#debug(prefix:=>String)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "debug", "tail" : "(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.debug", "link" : "zio\/Exit.html#debug(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "daemonChildren", "tail" : "(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.daemonChildren", "link" : "zio\/Exit.html#daemonChildren(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "collectZIO", "tail" : "(e: => E1)(pf: PartialFunction[A, ZIO[R1, E1, B]])(trace: Trace): ZIO[R1, E1, B]", "member" : "zio.ZIO.collectZIO", "link" : "zio\/Exit.html#collectZIO[R1<:R,E1>:E,B](e:=>E1)(pf:PartialFunction[A,zio.ZIO[R1,E1,B]])(implicittrace:zio.Trace):zio.ZIO[R1,E1,B]", "kind" : "final def"}, {"label" : "collect", "tail" : "(e: => E1)(pf: PartialFunction[A, B])(trace: Trace): ZIO[Any, E1, B]", "member" : "zio.ZIO.collect", "link" : "zio\/Exit.html#collect[E1>:E,B](e:=>E1)(pf:PartialFunction[A,B])(implicittrace:zio.Trace):zio.ZIO[R,E1,B]", "kind" : "final def"}, {"label" : "cause", "tail" : "(trace: Trace): URIO[Any, Cause[E]]", "member" : "zio.ZIO.cause", "link" : "zio\/Exit.html#cause(implicittrace:zio.Trace):zio.URIO[R,zio.Cause[E]]", "kind" : "final def"}, {"label" : "catchSomeDefect", "tail" : "(pf: PartialFunction[Throwable, ZIO[R1, E1, A1]])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.catchSomeDefect", "link" : "zio\/Exit.html#catchSomeDefect[R1<:R,E1>:E,A1>:A](pf:PartialFunction[Throwable,zio.ZIO[R1,E1,A1]])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "catchSomeCause", "tail" : "(pf: PartialFunction[Cause[E], ZIO[R1, E1, A1]])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.catchSomeCause", "link" : "zio\/Exit.html#catchSomeCause[R1<:R,E1>:E,A1>:A](pf:PartialFunction[zio.Cause[E],zio.ZIO[R1,E1,A1]])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "catchSomeTrace", "tail" : "(pf: PartialFunction[(E, StackTrace), ZIO[R1, E1, A1]])(ev: CanFail[E], trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.catchSomeTrace", "link" : "zio\/Exit.html#catchSomeTrace[R1<:R,E1>:E,A1>:A](pf:PartialFunction[(E,zio.StackTrace),zio.ZIO[R1,E1,A1]])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "catchSome", "tail" : "(pf: PartialFunction[E, ZIO[R1, E1, A1]])(ev: CanFail[E], trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.catchSome", "link" : "zio\/Exit.html#catchSome[R1<:R,E1>:E,A1>:A](pf:PartialFunction[E,zio.ZIO[R1,E1,A1]])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "catchNonFatalOrDie", "tail" : "(h: (E) => ZIO[R1, E2, A1])(ev1: CanFail[E], ev2: <:<[E, Throwable], trace: Trace): ZIO[R1, E2, A1]", "member" : "zio.ZIO.catchNonFatalOrDie", "link" : "zio\/Exit.html#catchNonFatalOrDie[R1<:R,E2,A1>:A](h:E=>zio.ZIO[R1,E2,A1])(implicitev1:zio.CanFail[E],implicitev2:E<:<Throwable,implicittrace:zio.Trace):zio.ZIO[R1,E2,A1]", "kind" : "final def"}, {"label" : "catchAllDefect", "tail" : "(h: (Throwable) => ZIO[R1, E1, A1])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.catchAllDefect", "link" : "zio\/Exit.html#catchAllDefect[R1<:R,E1>:E,A1>:A](h:Throwable=>zio.ZIO[R1,E1,A1])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "catchAllCause", "tail" : "(k: (Cause[E]) => ZIO[R1, E2, A1])(trace: Trace): ZIO[R1, E2, A1]", "member" : "zio.ZIO.catchAllCause", "link" : "zio\/Exit.html#catchAllCause[R1<:R,E2,A1>:A](k:zio.Cause[E]=>zio.ZIO[R1,E2,A1])(implicittrace:zio.Trace):zio.ZIO[R1,E2,A1]", "kind" : "final def"}, {"label" : "catchAllTrace", "tail" : "(h: ((E, StackTrace)) => ZIO[R1, E2, A1])(ev: CanFail[E], trace: Trace): ZIO[R1, E2, A1]", "member" : "zio.ZIO.catchAllTrace", "link" : "zio\/Exit.html#catchAllTrace[R1<:R,E2,A1>:A](h:((E,zio.StackTrace))=>zio.ZIO[R1,E2,A1])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E2,A1]", "kind" : "final def"}, {"label" : "catchAll", "tail" : "(h: (E) => ZIO[R1, E2, A1])(ev: CanFail[E], trace: Trace): ZIO[R1, E2, A1]", "member" : "zio.ZIO.catchAll", "link" : "zio\/Exit.html#catchAll[R1<:R,E2,A1>:A](h:E=>zio.ZIO[R1,E2,A1])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E2,A1]", "kind" : "final def"}, {"label" : "cachedInvalidate", "tail" : "(timeToLive0: => zio.Duration)(trace: Trace): ZIO[Any, Nothing, (IO[E, A], UIO[Unit])]", "member" : "zio.ZIO.cachedInvalidate", "link" : "zio\/Exit.html#cachedInvalidate(timeToLive0:=>zio.Duration)(implicittrace:zio.Trace):zio.ZIO[R,Nothing,(zio.IO[E,A],zio.UIO[Unit])]", "kind" : "final def"}, {"label" : "cached", "tail" : "(timeToLive: => zio.Duration)(trace: Trace): ZIO[Any, Nothing, IO[E, A]]", "member" : "zio.ZIO.cached", "link" : "zio\/Exit.html#cached(timeToLive:=>zio.Duration)(implicittrace:zio.Trace):zio.ZIO[R,Nothing,zio.IO[E,A]]", "kind" : "final def"}, {"label" : "awaitAllChildren", "tail" : "(trace: Trace): ZIO[Any, E, A]", "member" : "zio.ZIO.awaitAllChildren", "link" : "zio\/Exit.html#awaitAllChildren(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "asSomeError", "tail" : "(trace: Trace): ZIO[Any, Option[E], A]", "member" : "zio.ZIO.asSomeError", "link" : "zio\/Exit.html#asSomeError(implicittrace:zio.Trace):zio.ZIO[R,Option[E],A]", "kind" : "final def"}, {"label" : "asSome", "tail" : "(trace: Trace): ZIO[Any, E, Option[A]]", "member" : "zio.ZIO.asSome", "link" : "zio\/Exit.html#asSome(implicittrace:zio.Trace):zio.ZIO[R,E,Option[A]]", "kind" : "final def"}, {"label" : "asRightError", "tail" : "(trace: Trace): ZIO[Any, Either[Nothing, E], A]", "member" : "zio.ZIO.asRightError", "link" : "zio\/Exit.html#asRightError(implicittrace:zio.Trace):zio.ZIO[R,Either[Nothing,E],A]", "kind" : "final def"}, {"label" : "asRight", "tail" : "(trace: Trace): ZIO[Any, E, Either[Nothing, A]]", "member" : "zio.ZIO.asRight", "link" : "zio\/Exit.html#asRight(implicittrace:zio.Trace):zio.ZIO[R,E,Either[Nothing,A]]", "kind" : "final def"}, {"label" : "asLeftError", "tail" : "(trace: Trace): ZIO[Any, Either[E, Nothing], A]", "member" : "zio.ZIO.asLeftError", "link" : "zio\/Exit.html#asLeftError(implicittrace:zio.Trace):zio.ZIO[R,Either[E,Nothing],A]", "kind" : "final def"}, {"label" : "asLeft", "tail" : "(trace: Trace): ZIO[Any, E, Either[A, Nothing]]", "member" : "zio.ZIO.asLeft", "link" : "zio\/Exit.html#asLeft(implicittrace:zio.Trace):zio.ZIO[R,E,Either[A,Nothing]]", "kind" : "final def"}, {"label" : "as", "tail" : "(b: => B)(trace: Trace): ZIO[Any, E, B]", "member" : "zio.ZIO.as", "link" : "zio\/Exit.html#as[B](b:=>B)(implicittrace:zio.Trace):zio.ZIO[R,E,B]", "kind" : "final def"}, {"label" : "absorbWith", "tail" : "(f: (E) => Throwable)(trace: Trace): RIO[Any, A]", "member" : "zio.ZIO.absorbWith", "link" : "zio\/Exit.html#absorbWith(f:E=>Throwable)(implicittrace:zio.Trace):zio.RIO[R,A]", "kind" : "final def"}, {"label" : "absorb", "tail" : "(ev: IsSubtypeOfError[E, Throwable], trace: Trace): RIO[Any, A]", "member" : "zio.ZIO.absorb", "link" : "zio\/Exit.html#absorb(implicitev:zio.IsSubtypeOfError[E,Throwable],implicittrace:zio.Trace):zio.RIO[R,A]", "kind" : "final def"}, {"label" : "absolve", "tail" : "(ev: IsSubtypeOfOutput[A, Either[E1, B]], trace: Trace): ZIO[Any, E1, B]", "member" : "zio.ZIO.absolve", "link" : "zio\/Exit.html#absolve[E1>:E,B](implicitev:zio.IsSubtypeOfOutput[A,Either[E1,B]],implicittrace:zio.Trace):zio.ZIO[R,E1,B]", "kind" : "final def"}, {"label" : "unary_!", "tail" : "(ev: <:<[A, Boolean], trace: Trace): ZIO[R1, E1, Boolean]", "member" : "zio.ZIO.unary_!", "link" : "zio\/Exit.html#unary_![R1<:R,E1>:E](implicitev:A<:<Boolean,implicittrace:zio.Trace):zio.ZIO[R1,E1,Boolean]", "kind" : "final def"}, {"label" : "<|>", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, Either[A, B]]", "member" : "zio.ZIO.<|>", "link" : "zio\/Exit.html#<|>[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,Either[A,B]]", "kind" : "final def"}, {"label" : "<>", "tail" : "(that: => ZIO[R1, E2, A1])(ev: CanFail[E], trace: Trace): ZIO[R1, E2, A1]", "member" : "zio.ZIO.<>", "link" : "zio\/Exit.html#<>[R1<:R,E2,A1>:A](that:=>zio.ZIO[R1,E2,A1])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E2,A1]", "kind" : "final def"}, {"label" : "<+>", "tail" : "(that: => ZIO[R1, E1, B])(ev: CanFail[E], trace: Trace): ZIO[R1, E1, Either[A, B]]", "member" : "zio.ZIO.<+>", "link" : "zio\/Exit.html#<+>[R1<:R,E1,B](that:=>zio.ZIO[R1,E1,B])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E1,Either[A,B]]", "kind" : "final def"}, {"label" : "<*>", "tail" : "(that: => ZIO[R1, E1, B])(zippable: Zippable[A, B], trace: Trace): ZIO[R1, E1, Out]", "member" : "zio.ZIO.<*>", "link" : "zio\/Exit.html#<*>[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicitzippable:zio.Zippable[A,B],implicittrace:zio.Trace):zio.ZIO[R1,E1,zippable.Out]", "kind" : "final def"}, {"label" : "<*", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.<*", "link" : "zio\/Exit.html#<*[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "<&>", "tail" : "(that: => ZIO[R1, E1, B])(zippable: Zippable[A, B], trace: Trace): ZIO[R1, E1, Out]", "member" : "zio.ZIO.<&>", "link" : "zio\/Exit.html#<&>[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicitzippable:zio.Zippable[A,B],implicittrace:zio.Trace):zio.ZIO[R1,E1,zippable.Out]", "kind" : "final def"}, {"label" : "<&", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.<&", "link" : "zio\/Exit.html#<&[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "*>", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, B]", "member" : "zio.ZIO.*>", "link" : "zio\/Exit.html#*>[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,B]", "kind" : "final def"}, {"label" : "&>", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, B]", "member" : "zio.ZIO.&>", "link" : "zio\/Exit.html#&>[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,B]", "kind" : "final def"}, {"label" : "!", "tail" : "(ev1: <:<[E, Throwable], ev2: CanFail[E], trace: Trace): ZIO[Any, Nothing, A]", "member" : "zio.ZIO.!", "link" : "zio\/Exit.html#!(implicitev1:E<:<Throwable,implicitev2:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,Nothing,A]", "kind" : "final def"}, {"label" : "@@", "tail" : "(aspect: => ZIOAspect[LowerR, UpperR, LowerE, UpperE, LowerA, UpperA])(trace: Trace): ZIO[UpperR, LowerE, LowerA]", "member" : "zio.ZIO.@@", "link" : "zio\/Exit.html#@@[LowerR<:UpperR,UpperR<:R,LowerE>:E,UpperE>:LowerE,LowerA>:A,UpperA>:LowerA](aspect:=>zio.ZIOAspect[LowerR,UpperR,LowerE,UpperE,LowerA,UpperA])(implicittrace:zio.Trace):zio.ZIO[UpperR,LowerE,LowerA]", "kind" : "final def"}, {"label" : "provide", "tail" : "(layer: ZLayer[_, E1, _]*): ZIO[Any, E1, A]", "member" : "zio.ZIOVersionSpecific.provide", "link" : "zio\/Exit.html#provide[E1>:E](layer:zio.ZLayer[_,E1,_]*):zio.ZIO[Any,E1,A]", "kind" : "macro def"}, {"label" : "provideSome", "tail" : "(): ProvideSomeLayerPartiallyApplied[R0, Any, E, A]", "member" : "zio.ZIOVersionSpecific.provideSome", "link" : "zio\/Exit.html#provideSome[R0]:zio.ProvideSomeLayerPartiallyApplied[R0,R,E,A]", "kind" : "def"}, {"label" : "toCompletableFutureWith", "tail" : "(f: (E) => Throwable)(trace: Trace): URIO[Any, CompletableFuture[A1]]", "member" : "zio.ZIOPlatformSpecific.toCompletableFutureWith", "link" : "zio\/Exit.html#toCompletableFutureWith[A1>:A](f:E=>Throwable)(implicittrace:zio.Trace):zio.URIO[R,java.util.concurrent.CompletableFuture[A1]]", "kind" : "def"}, {"label" : "toCompletableFuture", "tail" : "(ev: IsSubtypeOfError[E, Throwable], trace: Trace): URIO[Any, CompletableFuture[A1]]", "member" : "zio.ZIOPlatformSpecific.toCompletableFuture", "link" : "zio\/Exit.html#toCompletableFuture[A1>:A](implicitev:zio.IsSubtypeOfError[E,Throwable],implicittrace:zio.Trace):zio.URIO[R,java.util.concurrent.CompletableFuture[A1]]", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/Exit.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "zio\/Exit.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "zio\/Exit.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "zio\/Exit.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Exit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Exit.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Exit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Exit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Exit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Exit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Exit.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Exit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Exit.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Exit.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Exit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Exit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Exit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Exit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Exit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Exit.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Exit.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Exit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Exit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "zio\/Exit.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "zio\/Exit.html#productArity:Int", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "zio\/Exit.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "An Exit[E, A] describes the result of executing an IO value."}, {"name" : "zio.ExitCode", "shortDescription" : "", "object" : "zio\/ExitCode$.html", "members_object" : [{"label" : "failure", "tail" : ": ExitCode", "member" : "zio.ExitCode.failure", "link" : "zio\/ExitCode$.html#failure:zio.ExitCode", "kind" : "val"}, {"label" : "success", "tail" : ": ExitCode", "member" : "zio.ExitCode.success", "link" : "zio\/ExitCode$.html#success:zio.ExitCode", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ExitCode$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ExitCode$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ExitCode$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ExitCode$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ExitCode$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ExitCode$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ExitCode$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ExitCode$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ExitCode$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ExitCode$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ExitCode$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ExitCode$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ExitCode$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ExitCode$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ExitCode$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ExitCode$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ExitCode$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ExitCode$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ExitCode$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "zio.ExitCode#<init>", "error" : "unsupported entity"}, {"label" : "code", "tail" : ": Int", "member" : "zio.ExitCode.code", "link" : "zio\/ExitCode.html#code:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/ExitCode.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ExitCode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ExitCode.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ExitCode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ExitCode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ExitCode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ExitCode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ExitCode.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ExitCode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ExitCode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ExitCode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ExitCode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ExitCode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ExitCode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ExitCode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ExitCode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ExitCode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/ExitCode.html", "kind" : "case class"}, {"name" : "zio.Fiber", "shortDescription" : "A fiber is a lightweight thread of execution that never consumes more than awhole thread (but may consume much less, depending on contention andasynchronicity).", "object" : "zio\/Fiber$.html", "members_class" : [{"label" : "zipWith", "tail" : "(that: => Fiber[E1, B])(f: (A, B) => C): Synthetic[E1, C]", "member" : "zio.Fiber.zipWith", "link" : "zio\/Fiber.html#zipWith[E1>:E,B,C](that:=>zio.Fiber[E1,B])(f:(A,B)=>C):zio.Fiber.Synthetic[E1,C]", "kind" : "final def"}, {"label" : "zipRight", "tail" : "(that: Fiber[E1, B]): Synthetic[E1, B]", "member" : "zio.Fiber.zipRight", "link" : "zio\/Fiber.html#zipRight[E1>:E,B](that:zio.Fiber[E1,B]):zio.Fiber.Synthetic[E1,B]", "kind" : "final def"}, {"label" : "zipLeft", "tail" : "(that: Fiber[E1, B]): Synthetic[E1, A]", "member" : "zio.Fiber.zipLeft", "link" : "zio\/Fiber.html#zipLeft[E1>:E,B](that:zio.Fiber[E1,B]):zio.Fiber.Synthetic[E1,A]", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: => Fiber[E1, B])(zippable: Zippable[A, B]): Synthetic[E1, Out]", "member" : "zio.Fiber.zip", "link" : "zio\/Fiber.html#zip[E1>:E,B](that:=>zio.Fiber[E1,B])(implicitzippable:zio.Zippable[A,B]):zio.Fiber.Synthetic[E1,zippable.Out]", "kind" : "final def"}, {"label" : "unit", "tail" : "(): Synthetic[E, Unit]", "member" : "zio.Fiber.unit", "link" : "zio\/Fiber.html#unit:zio.Fiber.Synthetic[E,Unit]", "kind" : "final def"}, {"label" : "toFutureWith", "tail" : "(f: (E) => Throwable)(trace: Trace): UIO[CancelableFuture[A]]", "member" : "zio.Fiber.toFutureWith", "link" : "zio\/Fiber.html#toFutureWith(f:E=>Throwable)(implicittrace:zio.Trace):zio.UIO[zio.CancelableFuture[A]]", "kind" : "final def"}, {"label" : "toFuture", "tail" : "(ev: IsSubtypeOfError[E, Throwable], trace: Trace): UIO[CancelableFuture[A]]", "member" : "zio.Fiber.toFuture", "link" : "zio\/Fiber.html#toFuture(implicitev:zio.IsSubtypeOfError[E,Throwable],implicittrace:zio.Trace):zio.UIO[zio.CancelableFuture[A]]", "kind" : "final def"}, {"label" : "scoped", "tail" : "(trace: Trace): ZIO[Scope, Nothing, Fiber[E, A]]", "member" : "zio.Fiber.scoped", "link" : "zio\/Fiber.html#scoped(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,zio.Fiber[E,A]]", "kind" : "final def"}, {"label" : "orElseEither", "tail" : "(that: => Fiber[E1, B]): Synthetic[E1, Either[A, B]]", "member" : "zio.Fiber.orElseEither", "link" : "zio\/Fiber.html#orElseEither[E1,B](that:=>zio.Fiber[E1,B]):zio.Fiber.Synthetic[E1,Either[A,B]]", "kind" : "final def"}, {"label" : "orElse", "tail" : "(that: => Fiber[E1, A1])(ev: CanFail[E]): Synthetic[E1, A1]", "member" : "zio.Fiber.orElse", "link" : "zio\/Fiber.html#orElse[E1,A1>:A](that:=>zio.Fiber[E1,A1])(implicitev:zio.CanFail[E]):zio.Fiber.Synthetic[E1,A1]", "kind" : "def"}, {"label" : "mapZIO", "tail" : "(f: (A) => IO[E1, B]): Synthetic[E1, B]", "member" : "zio.Fiber.mapZIO", "link" : "zio\/Fiber.html#mapZIO[E1>:E,B](f:A=>zio.IO[E1,B]):zio.Fiber.Synthetic[E1,B]", "kind" : "final def"}, {"label" : "mapFiber", "tail" : "(f: (A) => Fiber[E1, B])(trace: Trace): UIO[Fiber[E1, B]]", "member" : "zio.Fiber.mapFiber", "link" : "zio\/Fiber.html#mapFiber[E1>:E,B](f:A=>zio.Fiber[E1,B])(implicittrace:zio.Trace):zio.UIO[zio.Fiber[E1,B]]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (A) => B): Synthetic[E, B]", "member" : "zio.Fiber.map", "link" : "zio\/Fiber.html#map[B](f:A=>B):zio.Fiber.Synthetic[E,B]", "kind" : "final def"}, {"label" : "join", "tail" : "(trace: Trace): IO[E, A]", "member" : "zio.Fiber.join", "link" : "zio\/Fiber.html#join(implicittrace:zio.Trace):zio.IO[E,A]", "kind" : "final def"}, {"label" : "interruptFork", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.Fiber.interruptFork", "link" : "zio\/Fiber.html#interruptFork(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "final def"}, {"label" : "interruptAs", "tail" : "(fiberId: FiberId)(trace: Trace): UIO[Exit[E, A]]", "member" : "zio.Fiber.interruptAs", "link" : "zio\/Fiber.html#interruptAs(fiberId:zio.FiberId)(implicittrace:zio.Trace):zio.UIO[zio.Exit[E,A]]", "kind" : "final def"}, {"label" : "interrupt", "tail" : "(trace: Trace): UIO[Exit[E, A]]", "member" : "zio.Fiber.interrupt", "link" : "zio\/Fiber.html#interrupt(implicittrace:zio.Trace):zio.UIO[zio.Exit[E,A]]", "kind" : "final def"}, {"label" : "fold", "tail" : "(runtime: (Fiber.Runtime[E, A]) => Z, synthetic: (Synthetic[E, A]) => Z): Z", "member" : "zio.Fiber.fold", "link" : "zio\/Fiber.html#fold[Z](runtime:zio.Fiber.Runtime[E,A]=>Z,synthetic:zio.Fiber.Synthetic[E,A]=>Z):Z", "kind" : "final def"}, {"label" : "as", "tail" : "(b: => B): Synthetic[E, B]", "member" : "zio.Fiber.as", "link" : "zio\/Fiber.html#as[B](b:=>B):zio.Fiber.Synthetic[E,B]", "kind" : "final def"}, {"label" : "<>", "tail" : "(that: => Fiber[E1, A1])(ev: CanFail[E]): Synthetic[E1, A1]", "member" : "zio.Fiber.<>", "link" : "zio\/Fiber.html#<>[E1,A1>:A](that:=>zio.Fiber[E1,A1])(implicitev:zio.CanFail[E]):zio.Fiber.Synthetic[E1,A1]", "kind" : "def"}, {"label" : "<+>", "tail" : "(that: => Fiber[E1, B])(ev: CanFail[E]): Synthetic[E1, Either[A, B]]", "member" : "zio.Fiber.<+>", "link" : "zio\/Fiber.html#<+>[E1>:E,B](that:=>zio.Fiber[E1,B])(implicitev:zio.CanFail[E]):zio.Fiber.Synthetic[E1,Either[A,B]]", "kind" : "final def"}, {"label" : "<*>", "tail" : "(that: => Fiber[E1, B])(zippable: Zippable[A, B]): Synthetic[E1, Out]", "member" : "zio.Fiber.<*>", "link" : "zio\/Fiber.html#<*>[E1>:E,B](that:=>zio.Fiber[E1,B])(implicitzippable:zio.Zippable[A,B]):zio.Fiber.Synthetic[E1,zippable.Out]", "kind" : "final def"}, {"label" : "<*", "tail" : "(that: Fiber[E1, B]): Synthetic[E1, A]", "member" : "zio.Fiber.<*", "link" : "zio\/Fiber.html#<*[E1>:E,B](that:zio.Fiber[E1,B]):zio.Fiber.Synthetic[E1,A]", "kind" : "final def"}, {"label" : "*>", "tail" : "(that: Fiber[E1, B]): Synthetic[E1, B]", "member" : "zio.Fiber.*>", "link" : "zio\/Fiber.html#*>[E1>:E,B](that:zio.Fiber[E1,B]):zio.Fiber.Synthetic[E1,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Fiber.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Fiber.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Fiber.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Fiber.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Fiber.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Fiber.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Fiber.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Fiber.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Fiber.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Fiber.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Fiber.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Fiber.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Fiber.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Fiber.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Fiber.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Fiber.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Fiber.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Fiber.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Fiber.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "poll", "tail" : "(trace: Trace): UIO[Option[Exit[E, A]]]", "member" : "zio.Fiber.poll", "link" : "zio\/Fiber.html#poll(implicittrace:zio.Trace):zio.UIO[Option[zio.Exit[E,A]]]", "kind" : "abstract def"}, {"label" : "interruptAsFork", "tail" : "(fiberId: FiberId)(trace: Trace): UIO[Unit]", "member" : "zio.Fiber.interruptAsFork", "link" : "zio\/Fiber.html#interruptAsFork(fiberId:zio.FiberId)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "inheritAll", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.Fiber.inheritAll", "link" : "zio\/Fiber.html#inheritAll(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "id", "tail" : "(): FiberId", "member" : "zio.Fiber.id", "link" : "zio\/Fiber.html#id:zio.FiberId", "kind" : "abstract def"}, {"label" : "children", "tail" : "(trace: Trace): UIO[Chunk[Fiber.Runtime[_, _]]]", "member" : "zio.Fiber.children", "link" : "zio\/Fiber.html#children(implicittrace:zio.Trace):zio.UIO[zio.Chunk[zio.Fiber.Runtime[_,_]]]", "kind" : "abstract def"}, {"label" : "await", "tail" : "(trace: Trace): UIO[Exit[E, A]]", "member" : "zio.Fiber.await", "link" : "zio\/Fiber.html#await(implicittrace:zio.Trace):zio.UIO[zio.Exit[E,A]]", "kind" : "abstract def"}], "members_object" : [{"label" : "currentFiber", "tail" : "()(unsafe: Unsafe): Option[Fiber[Any, Any]]", "member" : "zio.Fiber.currentFiber", "link" : "zio\/Fiber$.html#currentFiber()(implicitunsafe:zio.Unsafe):Option[zio.Fiber[Any,Any]]", "kind" : "def"}, {"label" : "unit", "tail" : ": Synthetic[Nothing, Unit]", "member" : "zio.Fiber.unit", "link" : "zio\/Fiber$.html#unit:zio.Fiber.Synthetic[Nothing,Unit]", "kind" : "val"}, {"label" : "succeed", "tail" : "(a: A): Synthetic[Nothing, A]", "member" : "zio.Fiber.succeed", "link" : "zio\/Fiber$.html#succeed[A](a:A):zio.Fiber.Synthetic[Nothing,A]", "kind" : "def"}, {"label" : "roots", "tail" : "(trace: Trace): UIO[Chunk[Runtime[_, _]]]", "member" : "zio.Fiber.roots", "link" : "zio\/Fiber$.html#roots(implicittrace:zio.Trace):zio.UIO[zio.Chunk[zio.Fiber.Runtime[_,_]]]", "kind" : "def"}, {"label" : "never", "tail" : ": Synthetic[Nothing, Nothing]", "member" : "zio.Fiber.never", "link" : "zio\/Fiber$.html#never:zio.Fiber.Synthetic[Nothing,Nothing]", "kind" : "val"}, {"label" : "joinAll", "tail" : "(fs: Iterable[Fiber[E, Any]])(trace: Trace): IO[E, Unit]", "member" : "zio.Fiber.joinAll", "link" : "zio\/Fiber$.html#joinAll[E](fs:Iterable[zio.Fiber[E,Any]])(implicittrace:zio.Trace):zio.IO[E,Unit]", "kind" : "def"}, {"label" : "interruptAs", "tail" : "(id: FiberId): Synthetic[Nothing, Nothing]", "member" : "zio.Fiber.interruptAs", "link" : "zio\/Fiber$.html#interruptAs(id:zio.FiberId):zio.Fiber.Synthetic[Nothing,Nothing]", "kind" : "def"}, {"label" : "interruptAllAs", "tail" : "(fiberId: FiberId)(fs: Iterable[Fiber[Any, Any]])(trace: Trace): UIO[Unit]", "member" : "zio.Fiber.interruptAllAs", "link" : "zio\/Fiber$.html#interruptAllAs(fiberId:zio.FiberId)(fs:Iterable[zio.Fiber[Any,Any]])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "interruptAll", "tail" : "(fs: Iterable[Fiber[Any, Any]])(trace: Trace): UIO[Unit]", "member" : "zio.Fiber.interruptAll", "link" : "zio\/Fiber$.html#interruptAll(fs:Iterable[zio.Fiber[Any,Any]])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "fromZIO", "tail" : "(io: IO[E, A])(trace: Trace): UIO[Synthetic[E, A]]", "member" : "zio.Fiber.fromZIO", "link" : "zio\/Fiber$.html#fromZIO[E,A](io:zio.IO[E,A])(implicittrace:zio.Trace):zio.UIO[zio.Fiber.Synthetic[E,A]]", "kind" : "def"}, {"label" : "fromFuture", "tail" : "(thunk: => Future[A])(trace: Trace): Synthetic[Throwable, A]", "member" : "zio.Fiber.fromFuture", "link" : "zio\/Fiber$.html#fromFuture[A](thunk:=>scala.concurrent.Future[A])(implicittrace:zio.Trace):zio.Fiber.Synthetic[Throwable,A]", "kind" : "def"}, {"label" : "failCause", "tail" : "(cause: Cause[E]): Synthetic[E, Nothing]", "member" : "zio.Fiber.failCause", "link" : "zio\/Fiber$.html#failCause[E](cause:zio.Cause[E]):zio.Fiber.Synthetic[E,Nothing]", "kind" : "def"}, {"label" : "fail", "tail" : "(e: E): Synthetic[E, Nothing]", "member" : "zio.Fiber.fail", "link" : "zio\/Fiber$.html#fail[E](e:E):zio.Fiber.Synthetic[E,Nothing]", "kind" : "def"}, {"label" : "dumpAllWith", "tail" : "(f: (Dump) => ZIO[R, E, Any])(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.Fiber.dumpAllWith", "link" : "zio\/Fiber$.html#dumpAllWith[R,E](f:zio.Fiber.Dump=>zio.ZIO[R,E,Any])(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "def"}, {"label" : "dumpAll", "tail" : "(trace: Trace): ZIO[Any, IOException, Unit]", "member" : "zio.Fiber.dumpAll", "link" : "zio\/Fiber$.html#dumpAll(implicittrace:zio.Trace):zio.ZIO[Any,java.io.IOException,Unit]", "kind" : "def"}, {"label" : "done", "tail" : "(exit: => Exit[E, A]): Synthetic[E, A]", "member" : "zio.Fiber.done", "link" : "zio\/Fiber$.html#done[E,A](exit:=>zio.Exit[E,A]):zio.Fiber.Synthetic[E,A]", "kind" : "def"}, {"label" : "collectAllDiscard", "tail" : "(fibers: Iterable[Fiber[E, A]]): Synthetic[E, Unit]", "member" : "zio.Fiber.collectAllDiscard", "link" : "zio\/Fiber$.html#collectAllDiscard[E,A](fibers:Iterable[zio.Fiber[E,A]]):zio.Fiber.Synthetic[E,Unit]", "kind" : "def"}, {"label" : "collectAll", "tail" : "(fibers: Collection[Fiber[E, A]])(bf: zio.BuildFrom[Collection[Fiber[E, A]], A, Collection[A]]): Synthetic[E, Collection[A]]", "member" : "zio.Fiber.collectAll", "link" : "zio\/Fiber$.html#collectAll[E,A,Collection[+Element]<:Iterable[Element]](fibers:Collection[zio.Fiber[E,A]])(implicitbf:zio.BuildFrom[Collection[zio.Fiber[E,A]],A,Collection[A]]):zio.Fiber.Synthetic[E,Collection[A]]", "kind" : "def"}, {"label" : "awaitAll", "tail" : "(fs: Iterable[Fiber[Any, Any]])(trace: Trace): UIO[Unit]", "member" : "zio.Fiber.awaitAll", "link" : "zio\/Fiber$.html#awaitAll(fs:Iterable[zio.Fiber[Any,Any]])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "Status", "tail" : "", "member" : "zio.Fiber.Status", "link" : "zio\/Fiber$.html#Status", "kind" : "object"}, {"label" : "Status", "tail" : "", "member" : "zio.Fiber.Status", "link" : "zio\/Fiber$.html#StatusextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Dump", "tail" : "", "member" : "zio.Fiber.Dump", "link" : "zio\/Fiber$.html#DumpextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "Descriptor", "tail" : "", "member" : "zio.Fiber.Descriptor", "link" : "zio\/Fiber$.html#DescriptorextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "Synthetic", "tail" : "", "member" : "zio.Fiber.Synthetic", "link" : "zio\/Fiber$.html#Synthetic[+E,+A]extendsFiber.Internal[E,A]", "kind" : "sealed abstract class"}, {"label" : "Runtime", "tail" : "", "member" : "zio.Fiber.Runtime", "link" : "zio\/Fiber$.html#Runtime[+E,+A]extendsFiber.Internal[E,A]", "kind" : "sealed abstract class"}, {"label" : "fromFutureJava", "tail" : "(thunk: => Future[A]): Fiber[Throwable, A]", "member" : "zio.FiberPlatformSpecific.fromFutureJava", "link" : "zio\/Fiber$.html#fromFutureJava[A](thunk:=>java.util.concurrent.Future[A]):zio.Fiber[Throwable,A]", "kind" : "def"}, {"label" : "fromCompletionStage", "tail" : "(thunk: => CompletionStage[A]): Fiber[Throwable, A]", "member" : "zio.FiberPlatformSpecific.fromCompletionStage", "link" : "zio\/Fiber$.html#fromCompletionStage[A](thunk:=>java.util.concurrent.CompletionStage[A]):zio.Fiber[Throwable,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Fiber$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Fiber$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Fiber$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Fiber$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Fiber$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Fiber$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Fiber$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Fiber$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Fiber$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Fiber$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Fiber$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Fiber$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Fiber$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Fiber$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Fiber$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Fiber$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Fiber$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Fiber$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Fiber$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/Fiber.html", "kind" : "class"}, {"name" : "zio.FiberFailure", "shortDescription" : "Represents a failure in a fiber.", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "zio.FiberFailure.toString", "link" : "zio\/FiberFailure.html#toString():String", "kind" : "def"}, {"label" : "fillSuppressed", "tail" : "()(unsafe: Unsafe): Unit", "member" : "zio.FiberFailure.fillSuppressed", "link" : "zio\/FiberFailure.html#fillSuppressed()(implicitunsafe:zio.Unsafe):Unit", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "zio.FiberFailure.getCause", "link" : "zio\/FiberFailure.html#getCause():Throwable", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "zio.FiberFailure.getStackTrace", "link" : "zio\/FiberFailure.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "zio.FiberFailure.getMessage", "link" : "zio\/FiberFailure.html#getMessage():String", "kind" : "def"}, {"member" : "zio.FiberFailure#<init>", "error" : "unsupported entity"}, {"label" : "cause", "tail" : ": Cause[Any]", "member" : "zio.FiberFailure.cause", "link" : "zio\/FiberFailure.html#cause:zio.Cause[Any]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/FiberFailure.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "zio\/FiberFailure.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "zio\/FiberFailure.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "zio\/FiberFailure.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "zio\/FiberFailure.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "zio\/FiberFailure.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "zio\/FiberFailure.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "zio\/FiberFailure.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "zio\/FiberFailure.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "zio\/FiberFailure.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/FiberFailure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/FiberFailure.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/FiberFailure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/FiberFailure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/FiberFailure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/FiberFailure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/FiberFailure.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/FiberFailure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/FiberFailure.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/FiberFailure.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/FiberFailure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/FiberFailure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/FiberFailure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/FiberFailure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/FiberFailure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/FiberFailure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/FiberFailure.html", "kind" : "case class"}, {"name" : "zio.FiberId", "object" : "zio\/FiberId$.html", "members_object" : [{"label" : "Composite", "tail" : "", "member" : "zio.FiberId.Composite", "link" : "zio\/FiberId$.html#CompositeextendsFiberIdwithProductwithSerializable", "kind" : "final case class"}, {"label" : "Runtime", "tail" : "", "member" : "zio.FiberId.Runtime", "link" : "zio\/FiberId$.html#RuntimeextendsFiberIdwithProductwithSerializable", "kind" : "final case class"}, {"label" : "None", "tail" : "", "member" : "zio.FiberId.None", "link" : "zio\/FiberId$.html#None", "kind" : "case object"}, {"label" : "apply", "tail" : "(id: Int, startTimeSeconds: Int, location: Trace): FiberId", "member" : "zio.FiberId.apply", "link" : "zio\/FiberId$.html#apply(id:Int,startTimeSeconds:Int,location:zio.Trace):zio.FiberId", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/FiberId$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/FiberId$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/FiberId$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/FiberId$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/FiberId$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/FiberId$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/FiberId$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/FiberId$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/FiberId$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/FiberId$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/FiberId$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/FiberId$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/FiberId$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/FiberId$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/FiberId$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/FiberId$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/FiberId$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/FiberId$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/FiberId$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/FiberId.html", "kind" : "trait", "members_trait" : [{"label" : "toSet", "tail" : "(): Set[FiberId.Runtime]", "member" : "zio.FiberId.toSet", "link" : "zio\/FiberId.html#toSet:Set[zio.FiberId.Runtime]", "kind" : "final def"}, {"label" : "toOption", "tail" : "(): Option[FiberId]", "member" : "zio.FiberId.toOption", "link" : "zio\/FiberId.html#toOption:Option[zio.FiberId]", "kind" : "final def"}, {"label" : "threadName", "tail" : "(): String", "member" : "zio.FiberId.threadName", "link" : "zio\/FiberId.html#threadName:String", "kind" : "final def"}, {"label" : "isNone", "tail" : "(): Boolean", "member" : "zio.FiberId.isNone", "link" : "zio\/FiberId.html#isNone:Boolean", "kind" : "final def"}, {"label" : "ids", "tail" : "(): Set[Int]", "member" : "zio.FiberId.ids", "link" : "zio\/FiberId.html#ids:Set[Int]", "kind" : "final def"}, {"label" : "getOrElse", "tail" : "(that: => FiberId): FiberId", "member" : "zio.FiberId.getOrElse", "link" : "zio\/FiberId.html#getOrElse(that:=>zio.FiberId):zio.FiberId", "kind" : "final def"}, {"label" : "combine", "tail" : "(that: FiberId): FiberId", "member" : "zio.FiberId.combine", "link" : "zio\/FiberId.html#combine(that:zio.FiberId):zio.FiberId", "kind" : "final def"}, {"label" : "<>", "tail" : "(that: FiberId): FiberId", "member" : "zio.FiberId.<>", "link" : "zio\/FiberId.html#<>(that:zio.FiberId):zio.FiberId", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/FiberId.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/FiberId.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/FiberId.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/FiberId.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/FiberId.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/FiberId.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/FiberId.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/FiberId.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/FiberId.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/FiberId.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/FiberId.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/FiberId.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/FiberId.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/FiberId.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/FiberId.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/FiberId.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/FiberId.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/FiberId.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/FiberId.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "The identity of a Fiber, described by the time it began life, and amonotonically increasing sequence number generated from an atomic counter."}, {"name" : "zio.FiberRef", "object" : "zio\/FiberRef$.html", "members_object" : [{"label" : "unsafe", "tail" : "", "member" : "zio.FiberRef.unsafe", "link" : "zio\/FiberRef$.html#unsafe", "kind" : "object"}, {"label" : "makeSet", "tail" : "(initial: => Set[A])(trace: Trace): ZIO[Scope, Nothing, WithPatch[Set[A], SetPatch[A]]]", "member" : "zio.FiberRef.makeSet", "link" : "zio\/FiberRef$.html#makeSet[A](initial:=>Set[A])(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,zio.FiberRef.WithPatch[Set[A],zio.Differ.SetPatch[A]]]", "kind" : "def"}, {"label" : "makeRuntimeFlags", "tail" : "(initial: RuntimeFlags)(trace: Trace): ZIO[Scope, Nothing, WithPatch[RuntimeFlags, Patch]]", "member" : "zio.FiberRef.makeRuntimeFlags", "link" : "zio\/FiberRef$.html#makeRuntimeFlags(initial:zio.RuntimeFlags)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,zio.FiberRef.WithPatch[zio.RuntimeFlags,zio.RuntimeFlags.Patch]]", "kind" : "def"}, {"label" : "makePatch", "tail" : "(initial: Value, differ: Differ[Value, Patch], fork: Patch)(trace: Trace): ZIO[Scope, Nothing, WithPatch[Value, Patch]]", "member" : "zio.FiberRef.makePatch", "link" : "zio\/FiberRef$.html#makePatch[Value,Patch](initial:Value,differ:zio.Differ[Value,Patch],fork:Patch)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,zio.FiberRef.WithPatch[Value,Patch]]", "kind" : "def"}, {"label" : "makePatch", "tail" : "(initial: Value, differ: Differ[Value, Patch])(trace: Trace): ZIO[Scope, Nothing, WithPatch[Value, Patch]]", "member" : "zio.FiberRef.makePatch", "link" : "zio\/FiberRef$.html#makePatch[Value,Patch](initial:Value,differ:zio.Differ[Value,Patch])(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,zio.FiberRef.WithPatch[Value,Patch]]", "kind" : "def"}, {"label" : "makeEnvironment", "tail" : "(initial: => ZEnvironment[A])(trace: Trace): ZIO[Scope, Nothing, WithPatch[ZEnvironment[A], Patch[A, A]]]", "member" : "zio.FiberRef.makeEnvironment", "link" : "zio\/FiberRef$.html#makeEnvironment[A](initial:=>zio.ZEnvironment[A])(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,zio.FiberRef.WithPatch[zio.ZEnvironment[A],zio.ZEnvironment.Patch[A,A]]]", "kind" : "def"}, {"label" : "make", "tail" : "(initial: => A, fork: (A) => A, join: (A, A) => A)(trace: Trace): ZIO[Scope, Nothing, FiberRef[A]]", "member" : "zio.FiberRef.make", "link" : "zio\/FiberRef$.html#make[A](initial:=>A,fork:A=>A,join:(A,A)=>A)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,zio.FiberRef[A]]", "kind" : "def"}, {"label" : "currentTags", "tail" : ": WithPatch[Set[MetricLabel], SetPatch[MetricLabel]]", "member" : "zio.FiberRef.currentTags", "link" : "zio\/FiberRef$.html#currentTags:zio.FiberRef.WithPatch[Set[zio.metrics.MetricLabel],zio.Differ.SetPatch[zio.metrics.MetricLabel]]", "kind" : "val"}, {"label" : "currentLogAnnotations", "tail" : ": FiberRef[Map[String, String]]", "member" : "zio.FiberRef.currentLogAnnotations", "link" : "zio\/FiberRef$.html#currentLogAnnotations:zio.FiberRef[Map[String,String]]", "kind" : "val"}, {"label" : "currentLogSpan", "tail" : ": FiberRef[List[LogSpan]]", "member" : "zio.FiberRef.currentLogSpan", "link" : "zio\/FiberRef$.html#currentLogSpan:zio.FiberRef[List[zio.LogSpan]]", "kind" : "val"}, {"label" : "currentLogLevel", "tail" : ": FiberRef[LogLevel]", "member" : "zio.FiberRef.currentLogLevel", "link" : "zio\/FiberRef$.html#currentLogLevel:zio.FiberRef[zio.LogLevel]", "kind" : "val"}, {"label" : "WithPatch", "tail" : "", "member" : "zio.FiberRef.WithPatch", "link" : "zio\/FiberRef$.html#WithPatch[Value0,Patch0]=zio.FiberRef[Value0]{typePatch=Patch0}", "kind" : "type"}, {"label" : "Proxy", "tail" : "", "member" : "zio.FiberRef.Proxy", "link" : "zio\/FiberRef$.html#Proxy[A]extendsFiberRef[A]", "kind" : "abstract class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/FiberRef$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/FiberRef$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/FiberRef$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/FiberRef$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/FiberRef$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/FiberRef$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/FiberRef$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/FiberRef$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/FiberRef$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/FiberRef$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/FiberRef$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/FiberRef$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/FiberRef$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/FiberRef$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/FiberRef$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/FiberRef$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/FiberRef$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/FiberRef$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/FiberRef$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/FiberRef.html", "kind" : "trait", "members_trait" : [{"label" : "asThreadLocal", "tail" : "(trace: Trace, unsafe: Unsafe): UIO[ThreadLocal[A]]", "member" : "zio.FiberRef.asThreadLocal", "link" : "zio\/FiberRef.html#asThreadLocal(implicittrace:zio.Trace,implicitunsafe:zio.Unsafe):zio.UIO[ThreadLocal[A]]", "kind" : "def"}, {"label" : "updateSomeAndGet", "tail" : "(pf: PartialFunction[A, A])(trace: Trace): UIO[A]", "member" : "zio.FiberRef.updateSomeAndGet", "link" : "zio\/FiberRef.html#updateSomeAndGet(pf:PartialFunction[A,A])(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "final def"}, {"label" : "updateSome", "tail" : "(pf: PartialFunction[A, A])(trace: Trace): UIO[Unit]", "member" : "zio.FiberRef.updateSome", "link" : "zio\/FiberRef.html#updateSome(pf:PartialFunction[A,A])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "final def"}, {"label" : "updateAndGet", "tail" : "(f: (A) => A)(trace: Trace): UIO[A]", "member" : "zio.FiberRef.updateAndGet", "link" : "zio\/FiberRef.html#updateAndGet(f:A=>A)(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "final def"}, {"label" : "update", "tail" : "(f: (A) => A)(trace: Trace): UIO[Unit]", "member" : "zio.FiberRef.update", "link" : "zio\/FiberRef.html#update(f:A=>A)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "set", "tail" : "(value: A)(trace: Trace): UIO[Unit]", "member" : "zio.FiberRef.set", "link" : "zio\/FiberRef.html#set(value:A)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "reset", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.FiberRef.reset", "link" : "zio\/FiberRef.html#reset(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "final def"}, {"label" : "modifySome", "tail" : "(default: B)(pf: PartialFunction[A, (B, A)])(trace: Trace): UIO[B]", "member" : "zio.FiberRef.modifySome", "link" : "zio\/FiberRef.html#modifySome[B](default:B)(pf:PartialFunction[A,(B,A)])(implicittrace:zio.Trace):zio.UIO[B]", "kind" : "final def"}, {"label" : "modify", "tail" : "(f: (A) => (B, A))(trace: Trace): UIO[B]", "member" : "zio.FiberRef.modify", "link" : "zio\/FiberRef.html#modify[B](f:A=>(B,A))(implicittrace:zio.Trace):zio.UIO[B]", "kind" : "def"}, {"label" : "locallyScopedWith", "tail" : "(f: (A) => A)(trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.FiberRef.locallyScopedWith", "link" : "zio\/FiberRef.html#locallyScopedWith(f:A=>A)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "final def"}, {"label" : "locallyScoped", "tail" : "(value: A)(trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.FiberRef.locallyScoped", "link" : "zio\/FiberRef.html#locallyScoped(value:A)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "final def"}, {"label" : "locallyWith", "tail" : "(f: (A) => A)(zio: ZIO[R, E, B])(trace: Trace): ZIO[R, E, B]", "member" : "zio.FiberRef.locallyWith", "link" : "zio\/FiberRef.html#locallyWith[R,E,B](f:A=>A)(zio:zio.ZIO[R,E,B])(implicittrace:zio.Trace):zio.ZIO[R,E,B]", "kind" : "final def"}, {"label" : "locally", "tail" : "(newValue: A)(zio: ZIO[R, E, B])(trace: Trace): ZIO[R, E, B]", "member" : "zio.FiberRef.locally", "link" : "zio\/FiberRef.html#locally[R,E,B](newValue:A)(zio:zio.ZIO[R,E,B])(implicittrace:zio.Trace):zio.ZIO[R,E,B]", "kind" : "def"}, {"label" : "getWith", "tail" : "(f: (A) => ZIO[R, E, B])(trace: Trace): ZIO[R, E, B]", "member" : "zio.FiberRef.getWith", "link" : "zio\/FiberRef.html#getWith[R,E,B](f:A=>zio.ZIO[R,E,B])(implicittrace:zio.Trace):zio.ZIO[R,E,B]", "kind" : "def"}, {"label" : "getAndUpdateSome", "tail" : "(pf: PartialFunction[A, A])(trace: Trace): UIO[A]", "member" : "zio.FiberRef.getAndUpdateSome", "link" : "zio\/FiberRef.html#getAndUpdateSome(pf:PartialFunction[A,A])(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "final def"}, {"label" : "getAndUpdate", "tail" : "(f: (A) => A)(trace: Trace): UIO[A]", "member" : "zio.FiberRef.getAndUpdate", "link" : "zio\/FiberRef.html#getAndUpdate(f:A=>A)(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "final def"}, {"label" : "getAndSet", "tail" : "(newValue: A)(trace: Trace): UIO[A]", "member" : "zio.FiberRef.getAndSet", "link" : "zio\/FiberRef.html#getAndSet(newValue:A)(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "final def"}, {"label" : "get", "tail" : "(trace: Trace): UIO[A]", "member" : "zio.FiberRef.get", "link" : "zio\/FiberRef.html#get(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "def"}, {"label" : "delete", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.FiberRef.delete", "link" : "zio\/FiberRef.html#delete(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "Value", "tail" : "", "member" : "zio.FiberRef.Value", "link" : "zio\/FiberRef.html#Value=A", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/FiberRef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/FiberRef.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/FiberRef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/FiberRef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/FiberRef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/FiberRef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/FiberRef.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/FiberRef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/FiberRef.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/FiberRef.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/FiberRef.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/FiberRef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/FiberRef.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/FiberRef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/FiberRef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/FiberRef.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/FiberRef.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/FiberRef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/FiberRef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "join", "tail" : "(oldValue: Value, newValue: Value): Value", "member" : "zio.FiberRef.join", "link" : "zio\/FiberRef.html#join(oldValue:FiberRef.this.Value,newValue:FiberRef.this.Value):FiberRef.this.Value", "kind" : "abstract def"}, {"label" : "fork", "tail" : "(): Patch", "member" : "zio.FiberRef.fork", "link" : "zio\/FiberRef.html#fork:FiberRef.this.Patch", "kind" : "abstract def"}, {"label" : "patch", "tail" : "(patch: Patch)(oldValue: Value): Value", "member" : "zio.FiberRef.patch", "link" : "zio\/FiberRef.html#patch(patch:FiberRef.this.Patch)(oldValue:FiberRef.this.Value):FiberRef.this.Value", "kind" : "abstract def"}, {"label" : "combine", "tail" : "(first: Patch, second: Patch): Patch", "member" : "zio.FiberRef.combine", "link" : "zio\/FiberRef.html#combine(first:FiberRef.this.Patch,second:FiberRef.this.Patch):FiberRef.this.Patch", "kind" : "abstract def"}, {"label" : "diff", "tail" : "(oldValue: Value, newValue: Value): Patch", "member" : "zio.FiberRef.diff", "link" : "zio\/FiberRef.html#diff(oldValue:FiberRef.this.Value,newValue:FiberRef.this.Value):FiberRef.this.Patch", "kind" : "abstract def"}, {"label" : "initial", "tail" : "(): Value", "member" : "zio.FiberRef.initial", "link" : "zio\/FiberRef.html#initial:FiberRef.this.Value", "kind" : "abstract def"}, {"member" : "zio.FiberRef.Patch", "error" : "unsupported entity"}], "shortDescription" : "A FiberRef is ZIO's equivalent of Java's ThreadLocal."}, {"name" : "zio.FiberRefs", "shortDescription" : "FiberRefs is a data type that represents a collection of FiberRef values.", "object" : "zio\/FiberRefs$.html", "members_class" : [{"label" : "updatedAs", "tail" : "(fiberId: FiberId.Runtime)(fiberRef: FiberRef[A], value: A): FiberRefs", "member" : "zio.FiberRefs.updatedAs", "link" : "zio\/FiberRefs.html#updatedAs[A](fiberId:zio.FiberId.Runtime)(fiberRef:zio.FiberRef[A],value:A):zio.FiberRefs", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "zio.FiberRefs.toString", "link" : "zio\/FiberRefs.html#toString():String", "kind" : "final def"}, {"label" : "setAll", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.FiberRefs.setAll", "link" : "zio\/FiberRefs.html#setAll(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "joinAs", "tail" : "(fiberId: FiberId.Runtime)(that: FiberRefs): FiberRefs", "member" : "zio.FiberRefs.joinAs", "link" : "zio\/FiberRefs.html#joinAs(fiberId:zio.FiberId.Runtime)(that:zio.FiberRefs):zio.FiberRefs", "kind" : "def"}, {"label" : "getOrDefault", "tail" : "(fiberRef: FiberRef[A]): A", "member" : "zio.FiberRefs.getOrDefault", "link" : "zio\/FiberRefs.html#getOrDefault[A](fiberRef:zio.FiberRef[A]):A", "kind" : "def"}, {"label" : "get", "tail" : "(fiberRef: FiberRef[A]): Option[A]", "member" : "zio.FiberRefs.get", "link" : "zio\/FiberRefs.html#get[A](fiberRef:zio.FiberRef[A]):Option[A]", "kind" : "def"}, {"label" : "forkAs", "tail" : "(childId: FiberId.Runtime): FiberRefs", "member" : "zio.FiberRefs.forkAs", "link" : "zio\/FiberRefs.html#forkAs(childId:zio.FiberId.Runtime):zio.FiberRefs", "kind" : "def"}, {"label" : "fiberRefs", "tail" : "(): Set[FiberRef[_]]", "member" : "zio.FiberRefs.fiberRefs", "link" : "zio\/FiberRefs.html#fiberRefs:Set[zio.FiberRef[_]]", "kind" : "def"}, {"label" : "delete", "tail" : "(fiberRef: FiberRef[_]): FiberRefs", "member" : "zio.FiberRefs.delete", "link" : "zio\/FiberRefs.html#delete(fiberRef:zio.FiberRef[_]):zio.FiberRefs", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/FiberRefs.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/FiberRefs.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/FiberRefs.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/FiberRefs.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/FiberRefs.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/FiberRefs.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/FiberRefs.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/FiberRefs.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/FiberRefs.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/FiberRefs.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/FiberRefs.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/FiberRefs.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/FiberRefs.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/FiberRefs.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/FiberRefs.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/FiberRefs.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/FiberRefs.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/FiberRefs.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Patch", "tail" : "", "member" : "zio.FiberRefs.Patch", "link" : "zio\/FiberRefs$.html#Patch", "kind" : "object"}, {"label" : "Patch", "tail" : "", "member" : "zio.FiberRefs.Patch", "link" : "zio\/FiberRefs$.html#Patchextends(zio.FiberId.Runtime,zio.FiberRefs)=>zio.FiberRefs", "kind" : "sealed trait"}, {"label" : "empty", "tail" : ": FiberRefs", "member" : "zio.FiberRefs.empty", "link" : "zio\/FiberRefs$.html#empty:zio.FiberRefs", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/FiberRefs$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/FiberRefs$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/FiberRefs$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/FiberRefs$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/FiberRefs$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/FiberRefs$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/FiberRefs$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/FiberRefs$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/FiberRefs$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/FiberRefs$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/FiberRefs$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/FiberRefs$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/FiberRefs$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/FiberRefs$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/FiberRefs$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/FiberRefs$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/FiberRefs$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/FiberRefs$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/FiberRefs$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/FiberRefs.html", "kind" : "class"}, {"name" : "zio.HasNoScope", "object" : "zio\/HasNoScope$.html", "members_object" : [{"label" : "instance", "tail" : ": HasNoScope[Any]", "member" : "zio.HasNoScope.instance", "link" : "zio\/HasNoScope$.html#instance:zio.HasNoScope[Any]", "kind" : "val"}, {"label" : "noScope", "tail" : "(): HasNoScope[R]", "member" : "zio.HasNoScopeCompanionVersionSpecific.noScope", "link" : "zio\/HasNoScope$.html#noScope[R]:zio.HasNoScope[R]", "kind" : "implicit macro def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/HasNoScope$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/HasNoScope$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/HasNoScope$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/HasNoScope$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/HasNoScope$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/HasNoScope$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/HasNoScope$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/HasNoScope$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/HasNoScope$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/HasNoScope$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/HasNoScope$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/HasNoScope$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/HasNoScope$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/HasNoScope$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/HasNoScope$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/HasNoScope$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/HasNoScope$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/HasNoScope$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/HasNoScope$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/HasNoScope.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/HasNoScope.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/HasNoScope.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/HasNoScope.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/HasNoScope.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/HasNoScope.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/HasNoScope.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/HasNoScope.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/HasNoScope.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/HasNoScope.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/HasNoScope.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/HasNoScope.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/HasNoScope.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/HasNoScope.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/HasNoScope.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/HasNoScope.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/HasNoScope.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/HasNoScope.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/HasNoScope.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/HasNoScope.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.Hub", "shortDescription" : "A Hub is an asynchronous message hub.", "object" : "zio\/Hub$.html", "members_class" : [{"label" : "offerAll", "tail" : "(as: Iterable[A1])(trace: Trace): UIO[Chunk[A1]]", "member" : "zio.Hub.offerAll", "link" : "zio\/Hub.html#offerAll[A1<:A](as:Iterable[A1])(implicittrace:zio.Trace):zio.UIO[zio.Chunk[A1]]", "kind" : "final def"}, {"label" : "offer", "tail" : "(a: A)(trace: Trace): UIO[Boolean]", "member" : "zio.Hub.offer", "link" : "zio\/Hub.html#offer(a:A)(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "final def"}, {"label" : "isFull", "tail" : "(trace: Trace): UIO[Boolean]", "member" : "zio.Hub.isFull", "link" : "zio\/Hub.html#isFull(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(trace: Trace): UIO[Boolean]", "member" : "zio.Hub.isEmpty", "link" : "zio\/Hub.html#isEmpty(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "final def"}, {"member" : "zio.Hub#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Hub.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Hub.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Hub.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Hub.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Hub.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Hub.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Hub.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Hub.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Hub.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Hub.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Hub.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Hub.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Hub.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Hub.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Hub.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Hub.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Hub.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Hub.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Hub.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "subscribe", "tail" : "(trace: Trace): ZIO[Scope, Nothing, Dequeue[A]]", "member" : "zio.Hub.subscribe", "link" : "zio\/Hub.html#subscribe(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,zio.Dequeue[A]]", "kind" : "abstract def"}, {"label" : "publishAll", "tail" : "(as: Iterable[A1])(trace: Trace): UIO[Chunk[A1]]", "member" : "zio.Hub.publishAll", "link" : "zio\/Hub.html#publishAll[A1<:A](as:Iterable[A1])(implicittrace:zio.Trace):zio.UIO[zio.Chunk[A1]]", "kind" : "abstract def"}, {"label" : "publish", "tail" : "(a: A)(trace: Trace): UIO[Boolean]", "member" : "zio.Hub.publish", "link" : "zio\/Hub.html#publish(a:A)(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "abstract def"}, {"label" : "size", "tail" : "(trace: Trace): UIO[Int]", "member" : "zio.Enqueue.size", "link" : "zio\/Hub.html#size(implicittrace:zio.Trace):zio.UIO[Int]", "kind" : "abstract def"}, {"label" : "shutdown", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.Enqueue.shutdown", "link" : "zio\/Hub.html#shutdown(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "isShutdown", "tail" : "(trace: Trace): UIO[Boolean]", "member" : "zio.Enqueue.isShutdown", "link" : "zio\/Hub.html#isShutdown(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "abstract def"}, {"label" : "capacity", "tail" : "(): Int", "member" : "zio.Enqueue.capacity", "link" : "zio\/Hub.html#capacity:Int", "kind" : "abstract def"}, {"label" : "awaitShutdown", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.Enqueue.awaitShutdown", "link" : "zio\/Hub.html#awaitShutdown(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}], "members_object" : [{"label" : "unbounded", "tail" : "(trace: Trace): UIO[Hub[A]]", "member" : "zio.Hub.unbounded", "link" : "zio\/Hub$.html#unbounded[A](implicittrace:zio.Trace):zio.UIO[zio.Hub[A]]", "kind" : "def"}, {"label" : "sliding", "tail" : "(requestedCapacity: => Int)(trace: Trace): UIO[Hub[A]]", "member" : "zio.Hub.sliding", "link" : "zio\/Hub$.html#sliding[A](requestedCapacity:=>Int)(implicittrace:zio.Trace):zio.UIO[zio.Hub[A]]", "kind" : "def"}, {"label" : "dropping", "tail" : "(requestedCapacity: => Int)(trace: Trace): UIO[Hub[A]]", "member" : "zio.Hub.dropping", "link" : "zio\/Hub$.html#dropping[A](requestedCapacity:=>Int)(implicittrace:zio.Trace):zio.UIO[zio.Hub[A]]", "kind" : "def"}, {"label" : "bounded", "tail" : "(requestedCapacity: => Int)(trace: Trace): UIO[Hub[A]]", "member" : "zio.Hub.bounded", "link" : "zio\/Hub$.html#bounded[A](requestedCapacity:=>Int)(implicittrace:zio.Trace):zio.UIO[zio.Hub[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Hub$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Hub$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Hub$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Hub$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Hub$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Hub$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Hub$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Hub$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Hub$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Hub$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Hub$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Hub$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Hub$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Hub$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Hub$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Hub$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Hub$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Hub$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Hub$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/Hub.html", "kind" : "class"}, {"name" : "zio.InterruptStatus", "shortDescription" : "The InterruptStatus of a fiber determines whether or not it can beinterrupted.", "object" : "zio\/InterruptStatus$.html", "members_class" : [{"label" : "isUninterruptible", "tail" : "(): Boolean", "member" : "zio.InterruptStatus.isUninterruptible", "link" : "zio\/InterruptStatus.html#isUninterruptible:Boolean", "kind" : "final def"}, {"label" : "isInterruptible", "tail" : ": Boolean", "member" : "zio.InterruptStatus.isInterruptible", "link" : "zio\/InterruptStatus.html#isInterruptible:Boolean", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/InterruptStatus.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "zio\/InterruptStatus.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "zio\/InterruptStatus.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "zio\/InterruptStatus.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/InterruptStatus.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/InterruptStatus.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/InterruptStatus.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/InterruptStatus.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/InterruptStatus.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/InterruptStatus.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/InterruptStatus.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/InterruptStatus.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/InterruptStatus.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/InterruptStatus.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/InterruptStatus.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/InterruptStatus.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/InterruptStatus.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/InterruptStatus.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/InterruptStatus.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/InterruptStatus.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/InterruptStatus.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/InterruptStatus.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/InterruptStatus.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "zio\/InterruptStatus.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "zio\/InterruptStatus.html#productArity:Int", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "zio\/InterruptStatus.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "members_object" : [{"label" : "Uninterruptible", "tail" : "", "member" : "zio.InterruptStatus.Uninterruptible", "link" : "zio\/InterruptStatus$.html#Uninterruptible", "kind" : "case object"}, {"label" : "Interruptible", "tail" : "", "member" : "zio.InterruptStatus.Interruptible", "link" : "zio\/InterruptStatus$.html#Interruptible", "kind" : "case object"}, {"label" : "uninterruptible", "tail" : "(): InterruptStatus", "member" : "zio.InterruptStatus.uninterruptible", "link" : "zio\/InterruptStatus$.html#uninterruptible:zio.InterruptStatus", "kind" : "def"}, {"label" : "interruptible", "tail" : "(): InterruptStatus", "member" : "zio.InterruptStatus.interruptible", "link" : "zio\/InterruptStatus$.html#interruptible:zio.InterruptStatus", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/InterruptStatus$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/InterruptStatus$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/InterruptStatus$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/InterruptStatus$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/InterruptStatus$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/InterruptStatus$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/InterruptStatus$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/InterruptStatus$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/InterruptStatus$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/InterruptStatus$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/InterruptStatus$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/InterruptStatus$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/InterruptStatus$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/InterruptStatus$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/InterruptStatus$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/InterruptStatus$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/InterruptStatus$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/InterruptStatus$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/InterruptStatus$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/InterruptStatus.html", "kind" : "class"}, {"name" : "zio.IsReloadable", "object" : "zio\/IsReloadable$.html", "members_object" : [{"label" : "apply", "tail" : "(isReloadable: IsReloadable[Service]): IsReloadable[Service]", "member" : "zio.IsReloadable.apply", "link" : "zio\/IsReloadable$.html#apply[Service](implicitisReloadable:zio.IsReloadable[Service]):zio.IsReloadable[Service]", "kind" : "def"}, {"label" : "derived", "tail" : "(): IsReloadable[A]", "member" : "zio.IsReloadableVersionSpecific.derived", "link" : "zio\/IsReloadable$.html#derived[A]:zio.IsReloadable[A]", "kind" : "implicit macro def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/IsReloadable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/IsReloadable$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/IsReloadable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/IsReloadable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/IsReloadable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/IsReloadable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/IsReloadable$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/IsReloadable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/IsReloadable$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/IsReloadable$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/IsReloadable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/IsReloadable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/IsReloadable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/IsReloadable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/IsReloadable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/IsReloadable$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/IsReloadable$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/IsReloadable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/IsReloadable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/IsReloadable.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/IsReloadable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/IsReloadable.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/IsReloadable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/IsReloadable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/IsReloadable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/IsReloadable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/IsReloadable.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/IsReloadable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/IsReloadable.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/IsReloadable.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/IsReloadable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/IsReloadable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/IsReloadable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/IsReloadable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/IsReloadable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/IsReloadable.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/IsReloadable.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/IsReloadable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/IsReloadable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "reloadable", "tail" : "(scopedRef: ScopedRef[Service]): Service", "member" : "zio.IsReloadable.reloadable", "link" : "zio\/IsReloadable.html#reloadable(scopedRef:zio.ScopedRef[Service]):Service", "kind" : "abstract def"}], "shortDescription" : "IsReloadable[Service] provides evidence that we know enough about thestructure of a service to create a reloadable version of it."}, {"name" : "zio.IsSubtypeOfError", "shortDescription" : "", "object" : "zio\/IsSubtypeOfError$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "zio\/IsSubtypeOfError.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (B) => A): (A) => A", "member" : "scala.Function1.andThen", "link" : "zio\/IsSubtypeOfError.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => A): (A) => B", "member" : "scala.Function1.compose", "link" : "zio\/IsSubtypeOfError.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/IsSubtypeOfError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/IsSubtypeOfError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/IsSubtypeOfError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/IsSubtypeOfError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/IsSubtypeOfError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/IsSubtypeOfError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/IsSubtypeOfError.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/IsSubtypeOfError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/IsSubtypeOfError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/IsSubtypeOfError.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/IsSubtypeOfError.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/IsSubtypeOfError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/IsSubtypeOfError.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/IsSubtypeOfError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/IsSubtypeOfError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/IsSubtypeOfError.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/IsSubtypeOfError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/IsSubtypeOfError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(v1: A): B", "member" : "scala.Function1.apply", "link" : "zio\/IsSubtypeOfError.html#apply(v1:T1):R", "kind" : "abstract def"}], "members_object" : [{"label" : "implNothing", "tail" : "(): IsSubtypeOfError[Nothing, B]", "member" : "zio.IsSubtypeOfError.implNothing", "link" : "zio\/IsSubtypeOfError$.html#implNothing[B]:zio.IsSubtypeOfError[Nothing,B]", "kind" : "implicit def"}, {"label" : "impl", "tail" : "(subtype: <:<[A, B]): IsSubtypeOfError[A, B]", "member" : "zio.IsSubtypeOfError.impl", "link" : "zio\/IsSubtypeOfError$.html#impl[A,B](implicitsubtype:A<:<B):zio.IsSubtypeOfError[A,B]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/IsSubtypeOfError$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/IsSubtypeOfError$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/IsSubtypeOfError$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/IsSubtypeOfError$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/IsSubtypeOfError$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/IsSubtypeOfError$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/IsSubtypeOfError$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/IsSubtypeOfError$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/IsSubtypeOfError$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/IsSubtypeOfError$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/IsSubtypeOfError$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/IsSubtypeOfError$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/IsSubtypeOfError$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/IsSubtypeOfError$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/IsSubtypeOfError$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/IsSubtypeOfError$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/IsSubtypeOfError$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/IsSubtypeOfError$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/IsSubtypeOfError$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/IsSubtypeOfError.html", "kind" : "class"}, {"name" : "zio.IsSubtypeOfOutput", "shortDescription" : "", "object" : "zio\/IsSubtypeOfOutput$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "zio\/IsSubtypeOfOutput.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (B) => A): (A) => A", "member" : "scala.Function1.andThen", "link" : "zio\/IsSubtypeOfOutput.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => A): (A) => B", "member" : "scala.Function1.compose", "link" : "zio\/IsSubtypeOfOutput.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/IsSubtypeOfOutput.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/IsSubtypeOfOutput.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/IsSubtypeOfOutput.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/IsSubtypeOfOutput.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/IsSubtypeOfOutput.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/IsSubtypeOfOutput.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/IsSubtypeOfOutput.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/IsSubtypeOfOutput.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/IsSubtypeOfOutput.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/IsSubtypeOfOutput.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/IsSubtypeOfOutput.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/IsSubtypeOfOutput.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/IsSubtypeOfOutput.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/IsSubtypeOfOutput.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/IsSubtypeOfOutput.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/IsSubtypeOfOutput.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/IsSubtypeOfOutput.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/IsSubtypeOfOutput.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(v1: A): B", "member" : "scala.Function1.apply", "link" : "zio\/IsSubtypeOfOutput.html#apply(v1:T1):R", "kind" : "abstract def"}], "members_object" : [{"label" : "implNothing", "tail" : "(): IsSubtypeOfOutput[Nothing, B]", "member" : "zio.IsSubtypeOfOutput.implNothing", "link" : "zio\/IsSubtypeOfOutput$.html#implNothing[B]:zio.IsSubtypeOfOutput[Nothing,B]", "kind" : "implicit def"}, {"label" : "impl", "tail" : "(subtype: <:<[A, B]): IsSubtypeOfOutput[A, B]", "member" : "zio.IsSubtypeOfOutput.impl", "link" : "zio\/IsSubtypeOfOutput$.html#impl[A,B](implicitsubtype:A<:<B):zio.IsSubtypeOfOutput[A,B]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/IsSubtypeOfOutput$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/IsSubtypeOfOutput$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/IsSubtypeOfOutput$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/IsSubtypeOfOutput$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/IsSubtypeOfOutput$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/IsSubtypeOfOutput$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/IsSubtypeOfOutput$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/IsSubtypeOfOutput$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/IsSubtypeOfOutput$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/IsSubtypeOfOutput$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/IsSubtypeOfOutput$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/IsSubtypeOfOutput$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/IsSubtypeOfOutput$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/IsSubtypeOfOutput$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/IsSubtypeOfOutput$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/IsSubtypeOfOutput$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/IsSubtypeOfOutput$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/IsSubtypeOfOutput$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/IsSubtypeOfOutput$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/IsSubtypeOfOutput.html", "kind" : "class"}, {"name" : "zio.LogAnnotation", "shortDescription" : "A LogAnnotation represents a key value pair that allows annotating logswith additional information.", "members_case class" : [{"member" : "zio.LogAnnotation#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": String", "member" : "zio.LogAnnotation.value", "link" : "zio\/LogAnnotation.html#value:String", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "zio.LogAnnotation.key", "link" : "zio\/LogAnnotation.html#key:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/LogAnnotation.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/LogAnnotation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/LogAnnotation.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/LogAnnotation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/LogAnnotation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/LogAnnotation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/LogAnnotation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/LogAnnotation.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/LogAnnotation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/LogAnnotation.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/LogAnnotation.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/LogAnnotation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/LogAnnotation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/LogAnnotation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/LogAnnotation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/LogAnnotation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/LogAnnotation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/LogAnnotation.html", "kind" : "case class"}, {"name" : "zio.LogLevel", "shortDescription" : "LogLevel represents the log level associated with an individual loggingoperation.", "object" : "zio\/LogLevel$.html", "members_object" : [{"label" : "orderingLogLevel", "tail" : ": Ordering[LogLevel]", "member" : "zio.LogLevel.orderingLogLevel", "link" : "zio\/LogLevel$.html#orderingLogLevel:Ordering[zio.LogLevel]", "kind" : "implicit val"}, {"label" : "levels", "tail" : ": Set[LogLevel]", "member" : "zio.LogLevel.levels", "link" : "zio\/LogLevel$.html#levels:Set[zio.LogLevel]", "kind" : "val"}, {"label" : "None", "tail" : ": LogLevel", "member" : "zio.LogLevel.None", "link" : "zio\/LogLevel$.html#None:zio.LogLevel", "kind" : "val"}, {"label" : "Trace", "tail" : ": LogLevel", "member" : "zio.LogLevel.Trace", "link" : "zio\/LogLevel$.html#Trace:zio.LogLevel", "kind" : "val"}, {"label" : "Debug", "tail" : ": LogLevel", "member" : "zio.LogLevel.Debug", "link" : "zio\/LogLevel$.html#Debug:zio.LogLevel", "kind" : "val"}, {"label" : "Info", "tail" : ": LogLevel", "member" : "zio.LogLevel.Info", "link" : "zio\/LogLevel$.html#Info:zio.LogLevel", "kind" : "val"}, {"label" : "Warning", "tail" : ": LogLevel", "member" : "zio.LogLevel.Warning", "link" : "zio\/LogLevel$.html#Warning:zio.LogLevel", "kind" : "val"}, {"label" : "Error", "tail" : ": LogLevel", "member" : "zio.LogLevel.Error", "link" : "zio\/LogLevel$.html#Error:zio.LogLevel", "kind" : "val"}, {"label" : "Fatal", "tail" : ": LogLevel", "member" : "zio.LogLevel.Fatal", "link" : "zio\/LogLevel$.html#Fatal:zio.LogLevel", "kind" : "val"}, {"label" : "All", "tail" : ": LogLevel", "member" : "zio.LogLevel.All", "link" : "zio\/LogLevel$.html#All:zio.LogLevel", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/LogLevel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/LogLevel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/LogLevel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/LogLevel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/LogLevel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/LogLevel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/LogLevel$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/LogLevel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/LogLevel$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/LogLevel$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/LogLevel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/LogLevel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/LogLevel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/LogLevel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/LogLevel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/LogLevel$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/LogLevel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/LogLevel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/LogLevel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "apply", "tail" : "(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.LogLevel.apply", "link" : "zio\/LogLevel.html#apply[R,E,A](zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : ">", "tail" : "(that: LogLevel): Boolean", "member" : "zio.LogLevel.>", "link" : "zio\/LogLevel.html#>(that:zio.LogLevel):Boolean", "kind" : "def"}, {"label" : ">=", "tail" : "(that: LogLevel): Boolean", "member" : "zio.LogLevel.>=", "link" : "zio\/LogLevel.html#>=(that:zio.LogLevel):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(that: LogLevel): Boolean", "member" : "zio.LogLevel.<=", "link" : "zio\/LogLevel.html#<=(that:zio.LogLevel):Boolean", "kind" : "def"}, {"label" : "<", "tail" : "(that: LogLevel): Boolean", "member" : "zio.LogLevel.<", "link" : "zio\/LogLevel.html#<(that:zio.LogLevel):Boolean", "kind" : "def"}, {"member" : "zio.LogLevel#<init>", "error" : "unsupported entity"}, {"label" : "syslog", "tail" : ": Int", "member" : "zio.LogLevel.syslog", "link" : "zio\/LogLevel.html#syslog:Int", "kind" : "val"}, {"label" : "label", "tail" : ": String", "member" : "zio.LogLevel.label", "link" : "zio\/LogLevel.html#label:String", "kind" : "val"}, {"label" : "ordinal", "tail" : ": Int", "member" : "zio.LogLevel.ordinal", "link" : "zio\/LogLevel.html#ordinal:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/LogLevel.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "flip", "tail" : "(): ZIOAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.ZIOAspect.flip", "link" : "zio\/LogLevel.html#flip:zio.ZIOAspect[LowerR,UpperR,LowerA,UpperA,LowerE,UpperE]", "kind" : "def"}, {"label" : "andThen", "tail" : "(that: ZIOAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]): ZIOAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]", "member" : "zio.ZIOAspect.andThen", "link" : "zio\/LogLevel.html#andThen[LowerR1>:LowerR,UpperR1<:UpperR,LowerE1>:LowerE,UpperE1<:UpperE,LowerA1>:LowerA,UpperA1<:UpperA](that:zio.ZIOAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]):zio.ZIOAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]", "kind" : "def"}, {"label" : "@@", "tail" : "(that: ZIOAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]): ZIOAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]", "member" : "zio.ZIOAspect.@@", "link" : "zio\/LogLevel.html#@@[LowerR1>:LowerR,UpperR1<:UpperR,LowerE1>:LowerE,UpperE1<:UpperE,LowerA1>:LowerA,UpperA1<:UpperA](that:zio.ZIOAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]):zio.ZIOAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]", "kind" : "def"}, {"label" : ">>>", "tail" : "(that: ZIOAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]): ZIOAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]", "member" : "zio.ZIOAspect.>>>", "link" : "zio\/LogLevel.html#>>>[LowerR1>:LowerR,UpperR1<:UpperR,LowerE1>:LowerE,UpperE1<:UpperE,LowerA1>:LowerA,UpperA1<:UpperA](that:zio.ZIOAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]):zio.ZIOAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/LogLevel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/LogLevel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/LogLevel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/LogLevel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/LogLevel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/LogLevel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/LogLevel.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/LogLevel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/LogLevel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/LogLevel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/LogLevel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/LogLevel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/LogLevel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/LogLevel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/LogLevel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/LogLevel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/LogLevel.html", "kind" : "case class"}, {"name" : "zio.LogSpan", "shortDescription" : "", "members_case class" : [{"label" : "render", "tail" : "(now: Long): String", "member" : "zio.LogSpan.render", "link" : "zio\/LogSpan.html#render(now:Long):String", "kind" : "def"}, {"member" : "zio.LogSpan#<init>", "error" : "unsupported entity"}, {"label" : "startTime", "tail" : ": Long", "member" : "zio.LogSpan.startTime", "link" : "zio\/LogSpan.html#startTime:Long", "kind" : "val"}, {"label" : "label", "tail" : ": String", "member" : "zio.LogSpan.label", "link" : "zio\/LogSpan.html#label:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/LogSpan.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/LogSpan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/LogSpan.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/LogSpan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/LogSpan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/LogSpan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/LogSpan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/LogSpan.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/LogSpan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/LogSpan.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/LogSpan.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/LogSpan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/LogSpan.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/LogSpan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/LogSpan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/LogSpan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/LogSpan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/LogSpan.html", "kind" : "case class"}, {"name" : "zio.MakePartiallyApplied", "shortDescription" : "", "members_class" : [{"label" : "apply", "tail" : "(layer: ZLayer[_, E, _]*)(dummyKRemainder: DummyK[Any], dummyK: DummyK[R]): ZLayer[Any, E, R]", "member" : "zio.MakePartiallyApplied.apply", "link" : "zio\/MakePartiallyApplied.html#apply[E](layer:zio.ZLayer[_,E,_]*)(implicitdummyKRemainder:zio.internal.macros.DummyK[Any],implicitdummyK:zio.internal.macros.DummyK[R]):zio.ZLayer[Any,E,R]", "kind" : "macro def"}, {"member" : "zio.MakePartiallyApplied#<init>", "error" : "unsupported entity"}, {"label" : "dummy", "tail" : ": Boolean", "member" : "zio.MakePartiallyApplied.dummy", "link" : "zio\/MakePartiallyApplied.html#dummy:Boolean", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/MakePartiallyApplied.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/MakePartiallyApplied.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/MakePartiallyApplied.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/MakePartiallyApplied.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/MakePartiallyApplied.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/MakePartiallyApplied.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/MakePartiallyApplied.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "zio\/MakePartiallyApplied.html", "kind" : "class"}, {"name" : "zio.MakeSomePartiallyApplied", "shortDescription" : "", "members_class" : [{"label" : "apply", "tail" : "(layer: ZLayer[_, E, _]*)(dummyKRemainder: DummyK[R0], dummyK: DummyK[R]): ZLayer[R0, E, R]", "member" : "zio.MakeSomePartiallyApplied.apply", "link" : "zio\/MakeSomePartiallyApplied.html#apply[E](layer:zio.ZLayer[_,E,_]*)(implicitdummyKRemainder:zio.internal.macros.DummyK[R0],implicitdummyK:zio.internal.macros.DummyK[R]):zio.ZLayer[R0,E,R]", "kind" : "macro def"}, {"member" : "zio.MakeSomePartiallyApplied#<init>", "error" : "unsupported entity"}, {"label" : "dummy", "tail" : ": Boolean", "member" : "zio.MakeSomePartiallyApplied.dummy", "link" : "zio\/MakeSomePartiallyApplied.html#dummy:Boolean", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/MakeSomePartiallyApplied.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/MakeSomePartiallyApplied.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/MakeSomePartiallyApplied.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/MakeSomePartiallyApplied.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/MakeSomePartiallyApplied.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/MakeSomePartiallyApplied.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/MakeSomePartiallyApplied.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "zio\/MakeSomePartiallyApplied.html", "kind" : "class"}, {"name" : "zio.NonEmptyChunk", "shortDescription" : "A NonEmptyChunk is a Chunk that is guaranteed to contain at least oneelement.", "object" : "zio\/NonEmptyChunk$.html", "members_class" : [{"label" : "zipWithIndexFrom", "tail" : "(indexOffset: Int): NonEmptyChunk[(A, Int)]", "member" : "zio.NonEmptyChunk.zipWithIndexFrom", "link" : "zio\/NonEmptyChunk.html#zipWithIndexFrom(indexOffset:Int):zio.NonEmptyChunk[(A,Int)]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): NonEmptyChunk[(A, Int)]", "member" : "zio.NonEmptyChunk.zipWithIndex", "link" : "zio\/NonEmptyChunk.html#zipWithIndex:zio.NonEmptyChunk[(A,Int)]", "kind" : "def"}, {"label" : "zipWith", "tail" : "(that: NonEmptyChunk[B])(f: (A, B) => C): NonEmptyChunk[C]", "member" : "zio.NonEmptyChunk.zipWith", "link" : "zio\/NonEmptyChunk.html#zipWith[B,C](that:zio.NonEmptyChunk[B])(f:(A,B)=>C):zio.NonEmptyChunk[C]", "kind" : "def"}, {"label" : "zipAllWith", "tail" : "(that: Chunk[B])(left: (A) => C, right: (B) => C)(both: (A, B) => C): NonEmptyChunk[C]", "member" : "zio.NonEmptyChunk.zipAllWith", "link" : "zio\/NonEmptyChunk.html#zipAllWith[B,C](that:zio.Chunk[B])(left:A=>C,right:B=>C)(both:(A,B)=>C):zio.NonEmptyChunk[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Chunk[B]): NonEmptyChunk[(Option[A], Option[B])]", "member" : "zio.NonEmptyChunk.zipAll", "link" : "zio\/NonEmptyChunk.html#zipAll[B](that:zio.Chunk[B]):zio.NonEmptyChunk[(Option[A],Option[B])]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: NonEmptyChunk[B])(zippable: Zippable[A, B]): NonEmptyChunk[Out]", "member" : "zio.NonEmptyChunk.zip", "link" : "zio\/NonEmptyChunk.html#zip[B](that:zio.NonEmptyChunk[B])(implicitzippable:zio.Zippable[A,B]):zio.NonEmptyChunk[zippable.Out]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "zio.NonEmptyChunk.toString", "link" : "zio\/NonEmptyChunk.html#toString():String", "kind" : "def"}, {"label" : "toCons", "tail" : "(): ::[A1]", "member" : "zio.NonEmptyChunk.toCons", "link" : "zio\/NonEmptyChunk.html#toCons[A1>:A]:::[A1]", "kind" : "def"}, {"label" : "toChunk", "tail" : "(): Chunk[A]", "member" : "zio.NonEmptyChunk.toChunk", "link" : "zio\/NonEmptyChunk.html#toChunk:zio.Chunk[A]", "kind" : "def"}, {"label" : "tail", "tail" : "(): Chunk[A]", "member" : "zio.NonEmptyChunk.tail", "link" : "zio\/NonEmptyChunk.html#tail:zio.Chunk[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): NonEmptyChunk[B]", "member" : "zio.NonEmptyChunk.sorted", "link" : "zio\/NonEmptyChunk.html#sorted[B>:A](implicitord:Ordering[B]):zio.NonEmptyChunk[B]", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (A) => B)(ord: Ordering[B]): NonEmptyChunk[A]", "member" : "zio.NonEmptyChunk.sortBy", "link" : "zio\/NonEmptyChunk.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):zio.NonEmptyChunk[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): NonEmptyChunk[A]", "member" : "zio.NonEmptyChunk.reverse", "link" : "zio\/NonEmptyChunk.html#reverse:zio.NonEmptyChunk[A]", "kind" : "def"}, {"label" : "reduceMapRight", "tail" : "(map: (A) => B)(reduce: (A, B) => B): B", "member" : "zio.NonEmptyChunk.reduceMapRight", "link" : "zio\/NonEmptyChunk.html#reduceMapRight[B](map:A=>B)(reduce:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceMapLeft", "tail" : "(map: (A) => B)(reduce: (B, A) => B): B", "member" : "zio.NonEmptyChunk.reduceMapLeft", "link" : "zio\/NonEmptyChunk.html#reduceMapLeft[B](map:A=>B)(reduce:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "zio.NonEmptyChunk.reduce", "link" : "zio\/NonEmptyChunk.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "prepended", "tail" : "(a: A1): NonEmptyChunk[A1]", "member" : "zio.NonEmptyChunk.prepended", "link" : "zio\/NonEmptyChunk.html#prepended[A1>:A](a:A1):zio.NonEmptyChunk[A1]", "kind" : "def"}, {"label" : "prepend", "tail" : "(that: Chunk[A1]): NonEmptyChunk[A1]", "member" : "zio.NonEmptyChunk.prepend", "link" : "zio\/NonEmptyChunk.html#prepend[A1>:A](that:zio.Chunk[A1]):zio.NonEmptyChunk[A1]", "kind" : "def"}, {"label" : "materialize", "tail" : "(): NonEmptyChunk[A1]", "member" : "zio.NonEmptyChunk.materialize", "link" : "zio\/NonEmptyChunk.html#materialize[A1>:A]:zio.NonEmptyChunk[A1]", "kind" : "def"}, {"label" : "mapZIOPar", "tail" : "(f: (A) => ZIO[R, E, B])(trace: Trace): ZIO[R, E, NonEmptyChunk[B]]", "member" : "zio.NonEmptyChunk.mapZIOPar", "link" : "zio\/NonEmptyChunk.html#mapZIOPar[R,E,B](f:A=>zio.ZIO[R,E,B])(implicittrace:zio.Trace):zio.ZIO[R,E,zio.NonEmptyChunk[B]]", "kind" : "def"}, {"label" : "mapZIO", "tail" : "(f: (A) => ZIO[R, E, B])(trace: Trace): ZIO[R, E, NonEmptyChunk[B]]", "member" : "zio.NonEmptyChunk.mapZIO", "link" : "zio\/NonEmptyChunk.html#mapZIO[R,E,B](f:A=>zio.ZIO[R,E,B])(implicittrace:zio.Trace):zio.ZIO[R,E,zio.NonEmptyChunk[B]]", "kind" : "def"}, {"label" : "mapAccumZIO", "tail" : "(s: S)(f: (S, A) => ZIO[R, E, (S, B)])(trace: Trace): ZIO[R, E, (S, NonEmptyChunk[B])]", "member" : "zio.NonEmptyChunk.mapAccumZIO", "link" : "zio\/NonEmptyChunk.html#mapAccumZIO[R,E,S,B](s:S)(f:(S,A)=>zio.ZIO[R,E,(S,B)])(implicittrace:zio.Trace):zio.ZIO[R,E,(S,zio.NonEmptyChunk[B])]", "kind" : "def"}, {"label" : "mapAccum", "tail" : "(s: S)(f: (S, A) => (S, B)): (S, NonEmptyChunk[B])", "member" : "zio.NonEmptyChunk.mapAccum", "link" : "zio\/NonEmptyChunk.html#mapAccum[S,B](s:S)(f:(S,A)=>(S,B)):(S,zio.NonEmptyChunk[B])", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B): NonEmptyChunk[B]", "member" : "zio.NonEmptyChunk.map", "link" : "zio\/NonEmptyChunk.html#map[B](f:A=>B):zio.NonEmptyChunk[B]", "kind" : "def"}, {"label" : "last", "tail" : "(): A", "member" : "zio.NonEmptyChunk.last", "link" : "zio\/NonEmptyChunk.html#last:A", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[A]", "member" : "zio.NonEmptyChunk.iterator", "link" : "zio\/NonEmptyChunk.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "init", "tail" : "(): Chunk[A]", "member" : "zio.NonEmptyChunk.init", "link" : "zio\/NonEmptyChunk.html#init:zio.Chunk[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): A", "member" : "zio.NonEmptyChunk.head", "link" : "zio\/NonEmptyChunk.html#head:A", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "zio.NonEmptyChunk.hashCode", "link" : "zio\/NonEmptyChunk.html#hashCode():Int", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (A) => K)(f: (A) => V): Map[K, NonEmptyChunk[V]]", "member" : "zio.NonEmptyChunk.groupMap", "link" : "zio\/NonEmptyChunk.html#groupMap[K,V](key:A=>K)(f:A=>V):Map[K,zio.NonEmptyChunk[V]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (A) => K): Map[K, NonEmptyChunk[A]]", "member" : "zio.NonEmptyChunk.groupBy", "link" : "zio\/NonEmptyChunk.html#groupBy[K](f:A=>K):Map[K,zio.NonEmptyChunk[A]]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[NonEmptyChunk[A]]", "member" : "zio.NonEmptyChunk.grouped", "link" : "zio\/NonEmptyChunk.html#grouped(size:Int):Iterator[zio.NonEmptyChunk[A]]", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (A) => Boolean): Boolean", "member" : "zio.NonEmptyChunk.forall", "link" : "zio\/NonEmptyChunk.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, A) => B): B", "member" : "zio.NonEmptyChunk.foldLeft", "link" : "zio\/NonEmptyChunk.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[A, NonEmptyChunk[B]]): NonEmptyChunk[B]", "member" : "zio.NonEmptyChunk.flatten", "link" : "zio\/NonEmptyChunk.html#flatten[B](implicitev:A<:<zio.NonEmptyChunk[B]):zio.NonEmptyChunk[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) => NonEmptyChunk[B]): NonEmptyChunk[B]", "member" : "zio.NonEmptyChunk.flatMap", "link" : "zio\/NonEmptyChunk.html#flatMap[B](f:A=>zio.NonEmptyChunk[B]):zio.NonEmptyChunk[B]", "kind" : "def"}, {"label" : "find", "tail" : "(p: (A) => Boolean): Option[A]", "member" : "zio.NonEmptyChunk.find", "link" : "zio\/NonEmptyChunk.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (A) => Boolean): Chunk[A]", "member" : "zio.NonEmptyChunk.filterNot", "link" : "zio\/NonEmptyChunk.html#filterNot(p:A=>Boolean):zio.Chunk[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (A) => Boolean): Chunk[A]", "member" : "zio.NonEmptyChunk.filter", "link" : "zio\/NonEmptyChunk.html#filter(p:A=>Boolean):zio.Chunk[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (A) => Boolean): Boolean", "member" : "zio.NonEmptyChunk.exists", "link" : "zio\/NonEmptyChunk.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "zio.NonEmptyChunk.equals", "link" : "zio\/NonEmptyChunk.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "distinct", "tail" : "(): NonEmptyChunk[A]", "member" : "zio.NonEmptyChunk.distinct", "link" : "zio\/NonEmptyChunk.html#distinct:zio.NonEmptyChunk[A]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[A, B]): Option[B]", "member" : "zio.NonEmptyChunk.collectFirst", "link" : "zio\/NonEmptyChunk.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B]): Chunk[B]", "member" : "zio.NonEmptyChunk.collect", "link" : "zio\/NonEmptyChunk.html#collect[B](pf:PartialFunction[A,B]):zio.Chunk[B]", "kind" : "def"}, {"label" : "asBits", "tail" : "(ev: <:<[A, Byte]): NonEmptyChunk[Boolean]", "member" : "zio.NonEmptyChunk.asBits", "link" : "zio\/NonEmptyChunk.html#asBits(implicitev:A<:<Byte):zio.NonEmptyChunk[Boolean]", "kind" : "def"}, {"label" : "asBitsLong", "tail" : "(endianness: Endianness)(ev: <:<[A, Long]): NonEmptyChunk[Boolean]", "member" : "zio.NonEmptyChunk.asBitsLong", "link" : "zio\/NonEmptyChunk.html#asBitsLong(endianness:zio.Chunk.BitChunk.Endianness)(implicitev:A<:<Long):zio.NonEmptyChunk[Boolean]", "kind" : "def"}, {"label" : "asBitsInt", "tail" : "(endianness: Endianness)(ev: <:<[A, Int]): NonEmptyChunk[Boolean]", "member" : "zio.NonEmptyChunk.asBitsInt", "link" : "zio\/NonEmptyChunk.html#asBitsInt(endianness:zio.Chunk.BitChunk.Endianness)(implicitev:A<:<Int):zio.NonEmptyChunk[Boolean]", "kind" : "def"}, {"label" : "appended", "tail" : "(a: A1): NonEmptyChunk[A1]", "member" : "zio.NonEmptyChunk.appended", "link" : "zio\/NonEmptyChunk.html#appended[A1>:A](a:A1):zio.NonEmptyChunk[A1]", "kind" : "def"}, {"label" : "append", "tail" : "(that: Chunk[A1]): NonEmptyChunk[A1]", "member" : "zio.NonEmptyChunk.append", "link" : "zio\/NonEmptyChunk.html#append[A1>:A](that:zio.Chunk[A1]):zio.NonEmptyChunk[A1]", "kind" : "def"}, {"label" : "++", "tail" : "(that: Chunk[A1]): NonEmptyChunk[A1]", "member" : "zio.NonEmptyChunk.++", "link" : "zio\/NonEmptyChunk.html#++[A1>:A](that:zio.Chunk[A1]):zio.NonEmptyChunk[A1]", "kind" : "def"}, {"label" : ":+", "tail" : "(a: A1): NonEmptyChunk[A1]", "member" : "zio.NonEmptyChunk.:+", "link" : "zio\/NonEmptyChunk.html#:+[A1>:A](a:A1):zio.NonEmptyChunk[A1]", "kind" : "def"}, {"label" : "+:", "tail" : "(a: A1): NonEmptyChunk[A1]", "member" : "zio.NonEmptyChunk.+:", "link" : "zio\/NonEmptyChunk.html#+:[A1>:A](a:A1):zio.NonEmptyChunk[A1]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/NonEmptyChunk.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/NonEmptyChunk.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/NonEmptyChunk.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/NonEmptyChunk.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/NonEmptyChunk.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/NonEmptyChunk.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/NonEmptyChunk.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/NonEmptyChunk.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/NonEmptyChunk.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/NonEmptyChunk.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/NonEmptyChunk.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/NonEmptyChunk.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/NonEmptyChunk.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/NonEmptyChunk.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/NonEmptyChunk.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/NonEmptyChunk.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "toChunk", "tail" : "(nonEmptyChunk: NonEmptyChunk[A]): Chunk[A]", "member" : "zio.NonEmptyChunk.toChunk", "link" : "zio\/NonEmptyChunk$.html#toChunk[A](nonEmptyChunk:zio.NonEmptyChunk[A]):zio.Chunk[A]", "kind" : "implicit def"}, {"label" : "unit", "tail" : ": NonEmptyChunk[Unit]", "member" : "zio.NonEmptyChunk.unit", "link" : "zio\/NonEmptyChunk$.html#unit:zio.NonEmptyChunk[Unit]", "kind" : "val"}, {"label" : "unapplySeq", "tail" : "(nonEmptyChunk: NonEmptyChunk[A]): Some[Seq[A]]", "member" : "zio.NonEmptyChunk.unapplySeq", "link" : "zio\/NonEmptyChunk$.html#unapplySeq[A](nonEmptyChunk:zio.NonEmptyChunk[A]):Some[Seq[A]]", "kind" : "def"}, {"label" : "unapplySeq", "tail" : "(seq: Seq[A]): Option[Seq[A]]", "member" : "zio.NonEmptyChunk.unapplySeq", "link" : "zio\/NonEmptyChunk$.html#unapplySeq[A](seq:Seq[A]):Option[Seq[A]]", "kind" : "def"}, {"label" : "single", "tail" : "(a: A): NonEmptyChunk[A]", "member" : "zio.NonEmptyChunk.single", "link" : "zio\/NonEmptyChunk$.html#single[A](a:A):zio.NonEmptyChunk[A]", "kind" : "def"}, {"label" : "fromIterableOption", "tail" : "(as: Iterable[A]): Option[NonEmptyChunk[A]]", "member" : "zio.NonEmptyChunk.fromIterableOption", "link" : "zio\/NonEmptyChunk$.html#fromIterableOption[A](as:Iterable[A]):Option[zio.NonEmptyChunk[A]]", "kind" : "def"}, {"label" : "fromIterable", "tail" : "(a: A, as: Iterable[A]): NonEmptyChunk[A]", "member" : "zio.NonEmptyChunk.fromIterable", "link" : "zio\/NonEmptyChunk$.html#fromIterable[A](a:A,as:Iterable[A]):zio.NonEmptyChunk[A]", "kind" : "def"}, {"label" : "fromCons", "tail" : "(as: ::[A]): NonEmptyChunk[A]", "member" : "zio.NonEmptyChunk.fromCons", "link" : "zio\/NonEmptyChunk$.html#fromCons[A](as:::[A]):zio.NonEmptyChunk[A]", "kind" : "def"}, {"label" : "fromChunk", "tail" : "(chunk: Chunk[A]): Option[NonEmptyChunk[A]]", "member" : "zio.NonEmptyChunk.fromChunk", "link" : "zio\/NonEmptyChunk$.html#fromChunk[A](chunk:zio.Chunk[A]):Option[zio.NonEmptyChunk[A]]", "kind" : "def"}, {"label" : "apply", "tail" : "(a: A, as: A*): NonEmptyChunk[A]", "member" : "zio.NonEmptyChunk.apply", "link" : "zio\/NonEmptyChunk$.html#apply[A](a:A,as:A*):zio.NonEmptyChunk[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/NonEmptyChunk$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/NonEmptyChunk$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/NonEmptyChunk$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/NonEmptyChunk$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/NonEmptyChunk$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/NonEmptyChunk$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/NonEmptyChunk$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/NonEmptyChunk$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/NonEmptyChunk$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/NonEmptyChunk$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/NonEmptyChunk$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/NonEmptyChunk$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/NonEmptyChunk$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/NonEmptyChunk$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/NonEmptyChunk$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/NonEmptyChunk$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/NonEmptyChunk$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/NonEmptyChunk$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/NonEmptyChunk$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/NonEmptyChunk.html", "kind" : "class"}, {"name" : "zio.NonEmptyOps", "trait" : "zio\/NonEmptyOps.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/NonEmptyOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/NonEmptyOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/NonEmptyOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/NonEmptyOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/NonEmptyOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/NonEmptyOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/NonEmptyOps.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/NonEmptyOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/NonEmptyOps.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/NonEmptyOps.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/NonEmptyOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/NonEmptyOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/NonEmptyOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/NonEmptyOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/NonEmptyOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/NonEmptyOps.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/NonEmptyOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/NonEmptyOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/NonEmptyOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): CC[(A, Int)]", "member" : "zio.NonEmptyOps.zipWithIndex", "link" : "zio\/NonEmptyOps.html#zipWithIndex:CC[(A,Int)]", "kind" : "abstract def"}, {"label" : "zip", "tail" : "(that: CC[B])(zippable: Zippable[A, B]): CC[Out]", "member" : "zio.NonEmptyOps.zip", "link" : "zio\/NonEmptyOps.html#zip[B](that:CC[B])(implicitzippable:zio.Zippable[A,B]):CC[zippable.Out]", "kind" : "abstract def"}, {"label" : "tail", "tail" : "(): EC[A]", "member" : "zio.NonEmptyOps.tail", "link" : "zio\/NonEmptyOps.html#tail:EC[A]", "kind" : "abstract def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "zio.NonEmptyOps.reduce", "link" : "zio\/NonEmptyOps.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "abstract def"}, {"label" : "map", "tail" : "(f: (A) => B): CC[B]", "member" : "zio.NonEmptyOps.map", "link" : "zio\/NonEmptyOps.html#map[B](f:A=>B):CC[B]", "kind" : "abstract def"}, {"label" : "last", "tail" : "(): A", "member" : "zio.NonEmptyOps.last", "link" : "zio\/NonEmptyOps.html#last:A", "kind" : "abstract def"}, {"label" : "iterator", "tail" : "(): Iterator[A]", "member" : "zio.NonEmptyOps.iterator", "link" : "zio\/NonEmptyOps.html#iterator:Iterator[A]", "kind" : "abstract def"}, {"label" : "init", "tail" : "(): EC[A]", "member" : "zio.NonEmptyOps.init", "link" : "zio\/NonEmptyOps.html#init:EC[A]", "kind" : "abstract def"}, {"label" : "head", "tail" : "(): A", "member" : "zio.NonEmptyOps.head", "link" : "zio\/NonEmptyOps.html#head:A", "kind" : "abstract def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[CC[A]]", "member" : "zio.NonEmptyOps.grouped", "link" : "zio\/NonEmptyOps.html#grouped(size:Int):Iterator[CC[A]]", "kind" : "abstract def"}, {"label" : "forall", "tail" : "(p: (A) => Boolean): Boolean", "member" : "zio.NonEmptyOps.forall", "link" : "zio\/NonEmptyOps.html#forall(p:A=>Boolean):Boolean", "kind" : "abstract def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, A) => B): B", "member" : "zio.NonEmptyOps.foldLeft", "link" : "zio\/NonEmptyOps.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "abstract def"}, {"label" : "find", "tail" : "(p: (A) => Boolean): Option[A]", "member" : "zio.NonEmptyOps.find", "link" : "zio\/NonEmptyOps.html#find(p:A=>Boolean):Option[A]", "kind" : "abstract def"}, {"label" : "filterNot", "tail" : "(p: (A) => Boolean): EC[A]", "member" : "zio.NonEmptyOps.filterNot", "link" : "zio\/NonEmptyOps.html#filterNot(p:A=>Boolean):EC[A]", "kind" : "abstract def"}, {"label" : "filter", "tail" : "(p: (A) => Boolean): EC[A]", "member" : "zio.NonEmptyOps.filter", "link" : "zio\/NonEmptyOps.html#filter(p:A=>Boolean):EC[A]", "kind" : "abstract def"}, {"label" : "exists", "tail" : "(p: (A) => Boolean): Boolean", "member" : "zio.NonEmptyOps.exists", "link" : "zio\/NonEmptyOps.html#exists(p:A=>Boolean):Boolean", "kind" : "abstract def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B]): EC[B]", "member" : "zio.NonEmptyOps.collect", "link" : "zio\/NonEmptyOps.html#collect[B](pf:PartialFunction[A,B]):EC[B]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.NonEmptySeq", "trait" : "zio\/NonEmptySeq.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/NonEmptySeq.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/NonEmptySeq.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/NonEmptySeq.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/NonEmptySeq.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/NonEmptySeq.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/NonEmptySeq.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/NonEmptySeq.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/NonEmptySeq.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/NonEmptySeq.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/NonEmptySeq.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/NonEmptySeq.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/NonEmptySeq.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/NonEmptySeq.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/NonEmptySeq.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/NonEmptySeq.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/NonEmptySeq.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/NonEmptySeq.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/NonEmptySeq.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/NonEmptySeq.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): CC[B]", "member" : "zio.NonEmptySeq.sorted", "link" : "zio\/NonEmptySeq.html#sorted[B>:A](implicitord:Ordering[B]):CC[B]", "kind" : "abstract def"}, {"label" : "sortBy", "tail" : "(f: (A) => B)(ord: Ordering[B]): CC[A]", "member" : "zio.NonEmptySeq.sortBy", "link" : "zio\/NonEmptySeq.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):CC[A]", "kind" : "abstract def"}, {"label" : "reverse", "tail" : "(): CC[A]", "member" : "zio.NonEmptySeq.reverse", "link" : "zio\/NonEmptySeq.html#reverse:CC[A]", "kind" : "abstract def"}, {"label" : "prepended", "tail" : "(elem: B): CC[B]", "member" : "zio.NonEmptySeq.prepended", "link" : "zio\/NonEmptySeq.html#prepended[B>:A](elem:B):CC[B]", "kind" : "abstract def"}, {"label" : "distinct", "tail" : "(): CC[A]", "member" : "zio.NonEmptySeq.distinct", "link" : "zio\/NonEmptySeq.html#distinct:CC[A]", "kind" : "abstract def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[A, B]): Option[B]", "member" : "zio.NonEmptySeq.collectFirst", "link" : "zio\/NonEmptySeq.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "abstract def"}, {"label" : "appended", "tail" : "(elem: B): CC[B]", "member" : "zio.NonEmptySeq.appended", "link" : "zio\/NonEmptySeq.html#appended[B>:A](elem:B):CC[B]", "kind" : "abstract def"}, {"label" : "zipWithIndex", "tail" : "(): CC[(A, Int)]", "member" : "zio.NonEmptyOps.zipWithIndex", "link" : "zio\/NonEmptySeq.html#zipWithIndex:CC[(A,Int)]", "kind" : "abstract def"}, {"label" : "zip", "tail" : "(that: CC[B])(zippable: Zippable[A, B]): CC[Out]", "member" : "zio.NonEmptyOps.zip", "link" : "zio\/NonEmptySeq.html#zip[B](that:CC[B])(implicitzippable:zio.Zippable[A,B]):CC[zippable.Out]", "kind" : "abstract def"}, {"label" : "tail", "tail" : "(): EC[A]", "member" : "zio.NonEmptyOps.tail", "link" : "zio\/NonEmptySeq.html#tail:EC[A]", "kind" : "abstract def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "zio.NonEmptyOps.reduce", "link" : "zio\/NonEmptySeq.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "abstract def"}, {"label" : "map", "tail" : "(f: (A) => B): CC[B]", "member" : "zio.NonEmptyOps.map", "link" : "zio\/NonEmptySeq.html#map[B](f:A=>B):CC[B]", "kind" : "abstract def"}, {"label" : "last", "tail" : "(): A", "member" : "zio.NonEmptyOps.last", "link" : "zio\/NonEmptySeq.html#last:A", "kind" : "abstract def"}, {"label" : "iterator", "tail" : "(): Iterator[A]", "member" : "zio.NonEmptyOps.iterator", "link" : "zio\/NonEmptySeq.html#iterator:Iterator[A]", "kind" : "abstract def"}, {"label" : "init", "tail" : "(): EC[A]", "member" : "zio.NonEmptyOps.init", "link" : "zio\/NonEmptySeq.html#init:EC[A]", "kind" : "abstract def"}, {"label" : "head", "tail" : "(): A", "member" : "zio.NonEmptyOps.head", "link" : "zio\/NonEmptySeq.html#head:A", "kind" : "abstract def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[CC[A]]", "member" : "zio.NonEmptyOps.grouped", "link" : "zio\/NonEmptySeq.html#grouped(size:Int):Iterator[CC[A]]", "kind" : "abstract def"}, {"label" : "forall", "tail" : "(p: (A) => Boolean): Boolean", "member" : "zio.NonEmptyOps.forall", "link" : "zio\/NonEmptySeq.html#forall(p:A=>Boolean):Boolean", "kind" : "abstract def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, A) => B): B", "member" : "zio.NonEmptyOps.foldLeft", "link" : "zio\/NonEmptySeq.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "abstract def"}, {"label" : "find", "tail" : "(p: (A) => Boolean): Option[A]", "member" : "zio.NonEmptyOps.find", "link" : "zio\/NonEmptySeq.html#find(p:A=>Boolean):Option[A]", "kind" : "abstract def"}, {"label" : "filterNot", "tail" : "(p: (A) => Boolean): EC[A]", "member" : "zio.NonEmptyOps.filterNot", "link" : "zio\/NonEmptySeq.html#filterNot(p:A=>Boolean):EC[A]", "kind" : "abstract def"}, {"label" : "filter", "tail" : "(p: (A) => Boolean): EC[A]", "member" : "zio.NonEmptyOps.filter", "link" : "zio\/NonEmptySeq.html#filter(p:A=>Boolean):EC[A]", "kind" : "abstract def"}, {"label" : "exists", "tail" : "(p: (A) => Boolean): Boolean", "member" : "zio.NonEmptyOps.exists", "link" : "zio\/NonEmptySeq.html#exists(p:A=>Boolean):Boolean", "kind" : "abstract def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B]): EC[B]", "member" : "zio.NonEmptyOps.collect", "link" : "zio\/NonEmptySeq.html#collect[B](pf:PartialFunction[A,B]):EC[B]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.Promise", "shortDescription" : "A promise represents an asynchronous variable, of zio.ZIO type, that canbe set exactly once, with the ability for an arbitrary number of fibers tosuspend (by calling await) and automatically resume when the variable isset.", "object" : "zio\/Promise$.html", "members_class" : [{"label" : "succeed", "tail" : "(a: A)(trace: Trace): UIO[Boolean]", "member" : "zio.Promise.succeed", "link" : "zio\/Promise.html#succeed(a:A)(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "def"}, {"label" : "refailCause", "tail" : "(e: Cause[E])(trace: Trace): UIO[Boolean]", "member" : "zio.Promise.refailCause", "link" : "zio\/Promise.html#refailCause(e:zio.Cause[E])(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "def"}, {"label" : "poll", "tail" : "(trace: Trace): UIO[Option[IO[E, A]]]", "member" : "zio.Promise.poll", "link" : "zio\/Promise.html#poll(implicittrace:zio.Trace):zio.UIO[Option[zio.IO[E,A]]]", "kind" : "def"}, {"label" : "isDone", "tail" : "(trace: Trace): UIO[Boolean]", "member" : "zio.Promise.isDone", "link" : "zio\/Promise.html#isDone(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "def"}, {"label" : "interruptAs", "tail" : "(fiberId: FiberId)(trace: Trace): UIO[Boolean]", "member" : "zio.Promise.interruptAs", "link" : "zio\/Promise.html#interruptAs(fiberId:zio.FiberId)(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "def"}, {"label" : "interrupt", "tail" : "(trace: Trace): UIO[Boolean]", "member" : "zio.Promise.interrupt", "link" : "zio\/Promise.html#interrupt(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "def"}, {"label" : "failCause", "tail" : "(e: Cause[E])(trace: Trace): UIO[Boolean]", "member" : "zio.Promise.failCause", "link" : "zio\/Promise.html#failCause(e:zio.Cause[E])(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "def"}, {"label" : "fail", "tail" : "(e: E)(trace: Trace): UIO[Boolean]", "member" : "zio.Promise.fail", "link" : "zio\/Promise.html#fail(e:E)(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "def"}, {"label" : "completeWith", "tail" : "(io: IO[E, A])(trace: Trace): UIO[Boolean]", "member" : "zio.Promise.completeWith", "link" : "zio\/Promise.html#completeWith(io:zio.IO[E,A])(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "def"}, {"label" : "complete", "tail" : "(io: IO[E, A])(trace: Trace): UIO[Boolean]", "member" : "zio.Promise.complete", "link" : "zio\/Promise.html#complete(io:zio.IO[E,A])(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "def"}, {"label" : "done", "tail" : "(e: Exit[E, A])(trace: Trace): UIO[Boolean]", "member" : "zio.Promise.done", "link" : "zio\/Promise.html#done(e:zio.Exit[E,A])(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "def"}, {"label" : "die", "tail" : "(e: Throwable)(trace: Trace): UIO[Boolean]", "member" : "zio.Promise.die", "link" : "zio\/Promise.html#die(e:Throwable)(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "def"}, {"label" : "await", "tail" : "(trace: Trace): IO[E, A]", "member" : "zio.Promise.await", "link" : "zio\/Promise.html#await(implicittrace:zio.Trace):zio.IO[E,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Promise.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Promise.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Promise.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Promise.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Promise.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Promise.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Promise.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Promise.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Promise.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Promise.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Promise.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Promise.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Promise.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Promise.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Promise.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Promise.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Promise.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Promise.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Promise.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unsafe", "tail" : "", "member" : "zio.Promise.unsafe", "link" : "zio\/Promise$.html#unsafe", "kind" : "object"}, {"label" : "makeAs", "tail" : "(fiberId: => FiberId)(trace: Trace): UIO[Promise[E, A]]", "member" : "zio.Promise.makeAs", "link" : "zio\/Promise$.html#makeAs[E,A](fiberId:=>zio.FiberId)(implicittrace:zio.Trace):zio.UIO[zio.Promise[E,A]]", "kind" : "def"}, {"label" : "make", "tail" : "(trace: Trace): UIO[Promise[E, A]]", "member" : "zio.Promise.make", "link" : "zio\/Promise$.html#make[E,A](implicittrace:zio.Trace):zio.UIO[zio.Promise[E,A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Promise$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Promise$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Promise$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Promise$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Promise$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Promise$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Promise$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Promise$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Promise$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Promise$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Promise$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Promise$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Promise$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Promise$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Promise$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Promise$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Promise$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Promise$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Promise$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/Promise.html", "kind" : "class"}, {"name" : "zio.ProvideSomeLayerPartiallyApplied", "shortDescription" : "", "members_class" : [{"label" : "apply", "tail" : "(layer: ZLayer[_, E1, _]*): ZIO[R0, E1, A]", "member" : "zio.ProvideSomeLayerPartiallyApplied.apply", "link" : "zio\/ProvideSomeLayerPartiallyApplied.html#apply[E1>:E](layer:zio.ZLayer[_,E1,_]*):zio.ZIO[R0,E1,A]", "kind" : "macro def"}, {"label" : "provideSomeLayer", "tail" : "(): ProvideSomeLayer[R0, R, E, A]", "member" : "zio.ProvideSomeLayerPartiallyApplied.provideSomeLayer", "link" : "zio\/ProvideSomeLayerPartiallyApplied.html#provideSomeLayer[R0]:zio.ZIO.ProvideSomeLayer[R0,R,E,A]", "kind" : "def"}, {"label" : "provideLayer", "tail" : "(layer: ZLayer[R0, E1, R])(trace: Trace): ZIO[R0, E1, A]", "member" : "zio.ProvideSomeLayerPartiallyApplied.provideLayer", "link" : "zio\/ProvideSomeLayerPartiallyApplied.html#provideLayer[E1>:E](layer:zio.ZLayer[R0,E1,R])(implicittrace:zio.Trace):zio.ZIO[R0,E1,A]", "kind" : "def"}, {"member" : "zio.ProvideSomeLayerPartiallyApplied#<init>", "error" : "unsupported entity"}, {"label" : "self", "tail" : ": ZIO[R, E, A]", "member" : "zio.ProvideSomeLayerPartiallyApplied.self", "link" : "zio\/ProvideSomeLayerPartiallyApplied.html#self:zio.ZIO[R,E,A]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/ProvideSomeLayerPartiallyApplied.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/ProvideSomeLayerPartiallyApplied.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ProvideSomeLayerPartiallyApplied.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ProvideSomeLayerPartiallyApplied.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/ProvideSomeLayerPartiallyApplied.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/ProvideSomeLayerPartiallyApplied.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/ProvideSomeLayerPartiallyApplied.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "zio\/ProvideSomeLayerPartiallyApplied.html", "kind" : "class"}, {"name" : "zio.Queue", "shortDescription" : "A Queue is a lightweight, asynchronous queue into which values can beenqueued and of which elements can be dequeued.", "object" : "zio\/Queue$.html", "members_class" : [{"label" : "isFull", "tail" : "(trace: Trace): UIO[Boolean]", "member" : "zio.Queue.isFull", "link" : "zio\/Queue.html#isFull(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(trace: Trace): UIO[Boolean]", "member" : "zio.Queue.isEmpty", "link" : "zio\/Queue.html#isEmpty(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "final def"}, {"member" : "zio.Queue#<init>", "error" : "unsupported entity"}, {"label" : "poll", "tail" : "(trace: Trace): UIO[Option[A]]", "member" : "zio.Dequeue.poll", "link" : "zio\/Queue.html#poll(implicittrace:zio.Trace):zio.UIO[Option[A]]", "kind" : "def"}, {"label" : "takeN", "tail" : "(n: Int)(trace: Trace): UIO[Chunk[A]]", "member" : "zio.Dequeue.takeN", "link" : "zio\/Queue.html#takeN(n:Int)(implicittrace:zio.Trace):zio.UIO[zio.Chunk[A]]", "kind" : "final def"}, {"label" : "takeBetween", "tail" : "(min: Int, max: Int)(trace: Trace): UIO[Chunk[A]]", "member" : "zio.Dequeue.takeBetween", "link" : "zio\/Queue.html#takeBetween(min:Int,max:Int)(implicittrace:zio.Trace):zio.UIO[zio.Chunk[A]]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Queue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Queue.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Queue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Queue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Queue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Queue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Queue.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Queue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Queue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Queue.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Queue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Queue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Queue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Queue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Queue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Queue.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Queue.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Queue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Queue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "size", "tail" : "(trace: Trace): UIO[Int]", "member" : "zio.Enqueue.size", "link" : "zio\/Queue.html#size(implicittrace:zio.Trace):zio.UIO[Int]", "kind" : "abstract def"}, {"label" : "shutdown", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.Enqueue.shutdown", "link" : "zio\/Queue.html#shutdown(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "offerAll", "tail" : "(as: Iterable[A1])(trace: Trace): UIO[Chunk[A1]]", "member" : "zio.Enqueue.offerAll", "link" : "zio\/Queue.html#offerAll[A1<:A](as:Iterable[A1])(implicittrace:zio.Trace):zio.UIO[zio.Chunk[A1]]", "kind" : "abstract def"}, {"label" : "offer", "tail" : "(a: A)(trace: Trace): UIO[Boolean]", "member" : "zio.Enqueue.offer", "link" : "zio\/Queue.html#offer(a:A)(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "abstract def"}, {"label" : "isShutdown", "tail" : "(trace: Trace): UIO[Boolean]", "member" : "zio.Enqueue.isShutdown", "link" : "zio\/Queue.html#isShutdown(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "abstract def"}, {"label" : "capacity", "tail" : "(): Int", "member" : "zio.Enqueue.capacity", "link" : "zio\/Queue.html#capacity:Int", "kind" : "abstract def"}, {"label" : "awaitShutdown", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.Enqueue.awaitShutdown", "link" : "zio\/Queue.html#awaitShutdown(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "takeUpTo", "tail" : "(max: Int)(trace: Trace): UIO[Chunk[A]]", "member" : "zio.Dequeue.takeUpTo", "link" : "zio\/Queue.html#takeUpTo(max:Int)(implicittrace:zio.Trace):zio.UIO[zio.Chunk[A]]", "kind" : "abstract def"}, {"label" : "takeAll", "tail" : "(trace: Trace): UIO[Chunk[A]]", "member" : "zio.Dequeue.takeAll", "link" : "zio\/Queue.html#takeAll(implicittrace:zio.Trace):zio.UIO[zio.Chunk[A]]", "kind" : "abstract def"}, {"label" : "take", "tail" : "(trace: Trace): UIO[A]", "member" : "zio.Dequeue.take", "link" : "zio\/Queue.html#take(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "abstract def"}], "members_object" : [{"label" : "unsafe", "tail" : "", "member" : "zio.Queue.unsafe", "link" : "zio\/Queue$.html#unsafe", "kind" : "object"}, {"label" : "unbounded", "tail" : "(trace: Trace): UIO[Queue[A]]", "member" : "zio.Queue.unbounded", "link" : "zio\/Queue$.html#unbounded[A](implicittrace:zio.Trace):zio.UIO[zio.Queue[A]]", "kind" : "def"}, {"label" : "sliding", "tail" : "(requestedCapacity: => Int)(trace: Trace): UIO[Queue[A]]", "member" : "zio.Queue.sliding", "link" : "zio\/Queue$.html#sliding[A](requestedCapacity:=>Int)(implicittrace:zio.Trace):zio.UIO[zio.Queue[A]]", "kind" : "def"}, {"label" : "dropping", "tail" : "(requestedCapacity: => Int)(trace: Trace): UIO[Queue[A]]", "member" : "zio.Queue.dropping", "link" : "zio\/Queue$.html#dropping[A](requestedCapacity:=>Int)(implicittrace:zio.Trace):zio.UIO[zio.Queue[A]]", "kind" : "def"}, {"label" : "bounded", "tail" : "(requestedCapacity: => Int)(trace: Trace): UIO[Queue[A]]", "member" : "zio.Queue.bounded", "link" : "zio\/Queue$.html#bounded[A](requestedCapacity:=>Int)(implicittrace:zio.Trace):zio.UIO[zio.Queue[A]]", "kind" : "def"}, {"label" : "ConcurrentDeque", "tail" : "", "member" : "zio.QueuePlatformSpecific.ConcurrentDeque", "link" : "zio\/Queue$.html#ConcurrentDeque[A]=java.util.concurrent.ConcurrentLinkedDeque[A]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Queue$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Queue$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Queue$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Queue$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Queue$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Queue$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Queue$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Queue$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Queue$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Queue$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Queue$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Queue$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Queue$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Queue$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Queue$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Queue$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Queue$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Queue$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Queue$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/Queue.html", "kind" : "class"}, {"name" : "zio.Random", "object" : "zio\/Random$.html", "members_object" : [{"label" : "shuffle", "tail" : "(list: => List[A])(trace: Trace): UIO[List[A]]", "member" : "zio.Random.shuffle", "link" : "zio\/Random$.html#shuffle[A](list:=>List[A])(implicittrace:zio.Trace):zio.UIO[List[A]]", "kind" : "def"}, {"label" : "setSeed", "tail" : "(seed: => Long)(trace: Trace): UIO[Unit]", "member" : "zio.Random.setSeed", "link" : "zio\/Random$.html#setSeed(seed:=>Long)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "nextString", "tail" : "(length: => Int)(trace: Trace): UIO[String]", "member" : "zio.Random.nextString", "link" : "zio\/Random$.html#nextString(length:=>Int)(implicittrace:zio.Trace):zio.UIO[String]", "kind" : "def"}, {"label" : "nextPrintableChar", "tail" : "(trace: Trace): UIO[Char]", "member" : "zio.Random.nextPrintableChar", "link" : "zio\/Random$.html#nextPrintableChar(implicittrace:zio.Trace):zio.UIO[Char]", "kind" : "def"}, {"label" : "nextUUID", "tail" : "(trace: Trace): UIO[UUID]", "member" : "zio.Random.nextUUID", "link" : "zio\/Random$.html#nextUUID(implicittrace:zio.Trace):zio.UIO[java.util.UUID]", "kind" : "def"}, {"label" : "nextLongBounded", "tail" : "(n: => Long)(trace: Trace): UIO[Long]", "member" : "zio.Random.nextLongBounded", "link" : "zio\/Random$.html#nextLongBounded(n:=>Long)(implicittrace:zio.Trace):zio.UIO[Long]", "kind" : "def"}, {"label" : "nextLongBetween", "tail" : "(minInclusive: => Long, maxExclusive: => Long)(trace: Trace): UIO[Long]", "member" : "zio.Random.nextLongBetween", "link" : "zio\/Random$.html#nextLongBetween(minInclusive:=>Long,maxExclusive:=>Long)(implicittrace:zio.Trace):zio.UIO[Long]", "kind" : "def"}, {"label" : "nextLong", "tail" : "(trace: Trace): UIO[Long]", "member" : "zio.Random.nextLong", "link" : "zio\/Random$.html#nextLong(implicittrace:zio.Trace):zio.UIO[Long]", "kind" : "def"}, {"label" : "nextIntBounded", "tail" : "(n: => Int)(trace: Trace): UIO[Int]", "member" : "zio.Random.nextIntBounded", "link" : "zio\/Random$.html#nextIntBounded(n:=>Int)(implicittrace:zio.Trace):zio.UIO[Int]", "kind" : "def"}, {"label" : "nextIntBetween", "tail" : "(minInclusive: => Int, maxExclusive: => Int)(trace: Trace): UIO[Int]", "member" : "zio.Random.nextIntBetween", "link" : "zio\/Random$.html#nextIntBetween(minInclusive:=>Int,maxExclusive:=>Int)(implicittrace:zio.Trace):zio.UIO[Int]", "kind" : "def"}, {"label" : "nextInt", "tail" : "(trace: Trace): UIO[Int]", "member" : "zio.Random.nextInt", "link" : "zio\/Random$.html#nextInt(implicittrace:zio.Trace):zio.UIO[Int]", "kind" : "def"}, {"label" : "nextGaussian", "tail" : "(trace: Trace): UIO[Double]", "member" : "zio.Random.nextGaussian", "link" : "zio\/Random$.html#nextGaussian(implicittrace:zio.Trace):zio.UIO[Double]", "kind" : "def"}, {"label" : "nextFloatBetween", "tail" : "(minInclusive: => Float, maxExclusive: => Float)(trace: Trace): UIO[Float]", "member" : "zio.Random.nextFloatBetween", "link" : "zio\/Random$.html#nextFloatBetween(minInclusive:=>Float,maxExclusive:=>Float)(implicittrace:zio.Trace):zio.UIO[Float]", "kind" : "def"}, {"label" : "nextFloat", "tail" : "(trace: Trace): UIO[Float]", "member" : "zio.Random.nextFloat", "link" : "zio\/Random$.html#nextFloat(implicittrace:zio.Trace):zio.UIO[Float]", "kind" : "def"}, {"label" : "nextDoubleBetween", "tail" : "(minInclusive: => Double, maxExclusive: => Double)(trace: Trace): UIO[Double]", "member" : "zio.Random.nextDoubleBetween", "link" : "zio\/Random$.html#nextDoubleBetween(minInclusive:=>Double,maxExclusive:=>Double)(implicittrace:zio.Trace):zio.UIO[Double]", "kind" : "def"}, {"label" : "nextDouble", "tail" : "(trace: Trace): UIO[Double]", "member" : "zio.Random.nextDouble", "link" : "zio\/Random$.html#nextDouble(implicittrace:zio.Trace):zio.UIO[Double]", "kind" : "def"}, {"label" : "nextBytes", "tail" : "(length: => Int)(trace: Trace): UIO[Chunk[Byte]]", "member" : "zio.Random.nextBytes", "link" : "zio\/Random$.html#nextBytes(length:=>Int)(implicittrace:zio.Trace):zio.UIO[zio.Chunk[Byte]]", "kind" : "def"}, {"label" : "nextBoolean", "tail" : "(trace: Trace): UIO[Boolean]", "member" : "zio.Random.nextBoolean", "link" : "zio\/Random$.html#nextBoolean(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "def"}, {"label" : "RandomScala", "tail" : "", "member" : "zio.Random.RandomScala", "link" : "zio\/Random$.html#RandomScalaextendsRandomwithProductwithSerializable", "kind" : "final case class"}, {"label" : "RandomLive", "tail" : "", "member" : "zio.Random.RandomLive", "link" : "zio\/Random$.html#RandomLive", "kind" : "object"}, {"label" : "tag", "tail" : ": Tag[Random]", "member" : "zio.Random.tag", "link" : "zio\/Random$.html#tag:zio.Tag[zio.Random]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Random$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Random$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Random$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Random$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Random$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Random$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Random$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Random$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Random$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Random$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Random$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Random$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Random$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Random$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Random$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Random$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Random$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Random$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Random$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/Random.html", "kind" : "trait", "members_trait" : [{"label" : "unsafe", "tail" : "(): UnsafeAPI", "member" : "zio.Random.unsafe", "link" : "zio\/Random.html#unsafe:Random.this.UnsafeAPI", "kind" : "def"}, {"label" : "UnsafeAPI", "tail" : "", "member" : "zio.Random.UnsafeAPI", "link" : "zio\/Random.html#UnsafeAPIextendsSerializable", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Random.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Random.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Random.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Random.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Random.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Random.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Random.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Random.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Random.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Random.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Random.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Random.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Random.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Random.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Random.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Random.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Random.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Random.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Random.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "shuffle", "tail" : "(collection: => Collection[A])(bf: zio.BuildFrom[Collection[A], A, Collection[A]], trace: Trace): UIO[Collection[A]]", "member" : "zio.Random.shuffle", "link" : "zio\/Random.html#shuffle[A,Collection[+Element]<:Iterable[Element]](collection:=>Collection[A])(implicitbf:zio.BuildFrom[Collection[A],A,Collection[A]],implicittrace:zio.Trace):zio.UIO[Collection[A]]", "kind" : "abstract def"}, {"label" : "setSeed", "tail" : "(seed: => Long)(trace: Trace): UIO[Unit]", "member" : "zio.Random.setSeed", "link" : "zio\/Random.html#setSeed(seed:=>Long)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "nextUUID", "tail" : "(trace: Trace): UIO[UUID]", "member" : "zio.Random.nextUUID", "link" : "zio\/Random.html#nextUUID(implicittrace:zio.Trace):zio.UIO[java.util.UUID]", "kind" : "abstract def"}, {"label" : "nextString", "tail" : "(length: => Int)(trace: Trace): UIO[String]", "member" : "zio.Random.nextString", "link" : "zio\/Random.html#nextString(length:=>Int)(implicittrace:zio.Trace):zio.UIO[String]", "kind" : "abstract def"}, {"label" : "nextPrintableChar", "tail" : "(trace: Trace): UIO[Char]", "member" : "zio.Random.nextPrintableChar", "link" : "zio\/Random.html#nextPrintableChar(implicittrace:zio.Trace):zio.UIO[Char]", "kind" : "abstract def"}, {"label" : "nextLongBounded", "tail" : "(n: => Long)(trace: Trace): UIO[Long]", "member" : "zio.Random.nextLongBounded", "link" : "zio\/Random.html#nextLongBounded(n:=>Long)(implicittrace:zio.Trace):zio.UIO[Long]", "kind" : "abstract def"}, {"label" : "nextLongBetween", "tail" : "(minInclusive: => Long, maxExclusive: => Long)(trace: Trace): UIO[Long]", "member" : "zio.Random.nextLongBetween", "link" : "zio\/Random.html#nextLongBetween(minInclusive:=>Long,maxExclusive:=>Long)(implicittrace:zio.Trace):zio.UIO[Long]", "kind" : "abstract def"}, {"label" : "nextLong", "tail" : "(trace: Trace): UIO[Long]", "member" : "zio.Random.nextLong", "link" : "zio\/Random.html#nextLong(implicittrace:zio.Trace):zio.UIO[Long]", "kind" : "abstract def"}, {"label" : "nextIntBounded", "tail" : "(n: => Int)(trace: Trace): UIO[Int]", "member" : "zio.Random.nextIntBounded", "link" : "zio\/Random.html#nextIntBounded(n:=>Int)(implicittrace:zio.Trace):zio.UIO[Int]", "kind" : "abstract def"}, {"label" : "nextIntBetween", "tail" : "(minInclusive: => Int, maxExclusive: => Int)(trace: Trace): UIO[Int]", "member" : "zio.Random.nextIntBetween", "link" : "zio\/Random.html#nextIntBetween(minInclusive:=>Int,maxExclusive:=>Int)(implicittrace:zio.Trace):zio.UIO[Int]", "kind" : "abstract def"}, {"label" : "nextInt", "tail" : "(trace: Trace): UIO[Int]", "member" : "zio.Random.nextInt", "link" : "zio\/Random.html#nextInt(implicittrace:zio.Trace):zio.UIO[Int]", "kind" : "abstract def"}, {"label" : "nextGaussian", "tail" : "(trace: Trace): UIO[Double]", "member" : "zio.Random.nextGaussian", "link" : "zio\/Random.html#nextGaussian(implicittrace:zio.Trace):zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "nextFloatBetween", "tail" : "(minInclusive: => Float, maxExclusive: => Float)(trace: Trace): UIO[Float]", "member" : "zio.Random.nextFloatBetween", "link" : "zio\/Random.html#nextFloatBetween(minInclusive:=>Float,maxExclusive:=>Float)(implicittrace:zio.Trace):zio.UIO[Float]", "kind" : "abstract def"}, {"label" : "nextFloat", "tail" : "(trace: Trace): UIO[Float]", "member" : "zio.Random.nextFloat", "link" : "zio\/Random.html#nextFloat(implicittrace:zio.Trace):zio.UIO[Float]", "kind" : "abstract def"}, {"label" : "nextDoubleBetween", "tail" : "(minInclusive: => Double, maxExclusive: => Double)(trace: Trace): UIO[Double]", "member" : "zio.Random.nextDoubleBetween", "link" : "zio\/Random.html#nextDoubleBetween(minInclusive:=>Double,maxExclusive:=>Double)(implicittrace:zio.Trace):zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "nextDouble", "tail" : "(trace: Trace): UIO[Double]", "member" : "zio.Random.nextDouble", "link" : "zio\/Random.html#nextDouble(implicittrace:zio.Trace):zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "nextBytes", "tail" : "(length: => Int)(trace: Trace): UIO[Chunk[Byte]]", "member" : "zio.Random.nextBytes", "link" : "zio\/Random.html#nextBytes(length:=>Int)(implicittrace:zio.Trace):zio.UIO[zio.Chunk[Byte]]", "kind" : "abstract def"}, {"label" : "nextBoolean", "tail" : "(trace: Trace): UIO[Boolean]", "member" : "zio.Random.nextBoolean", "link" : "zio\/Random.html#nextBoolean(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.Ref", "shortDescription" : "A Ref is a purely functional description of a mutable reference.", "object" : "zio\/Ref$.html", "members_class" : [{"label" : "addAndGet", "tail" : "(delta: A)(num: Numeric[A], trace: Trace): UIO[A]", "member" : "zio.Ref.addAndGet", "link" : "zio\/Ref.html#addAndGet(delta:A)(implicitnum:scala.math.Numeric[A],implicittrace:zio.Trace):zio.UIO[A]", "kind" : "final def"}, {"label" : "decrementAndGet", "tail" : "(num: Numeric[A], trace: Trace): UIO[A]", "member" : "zio.Ref.decrementAndGet", "link" : "zio\/Ref.html#decrementAndGet(implicitnum:scala.math.Numeric[A],implicittrace:zio.Trace):zio.UIO[A]", "kind" : "final def"}, {"label" : "incrementAndGet", "tail" : "(num: Numeric[A], trace: Trace): UIO[A]", "member" : "zio.Ref.incrementAndGet", "link" : "zio\/Ref.html#incrementAndGet(implicitnum:scala.math.Numeric[A],implicittrace:zio.Trace):zio.UIO[A]", "kind" : "final def"}, {"label" : "getAndAdd", "tail" : "(delta: A)(num: Numeric[A], trace: Trace): UIO[A]", "member" : "zio.Ref.getAndAdd", "link" : "zio\/Ref.html#getAndAdd(delta:A)(implicitnum:scala.math.Numeric[A],implicittrace:zio.Trace):zio.UIO[A]", "kind" : "final def"}, {"label" : "getAndDecrement", "tail" : "(num: Numeric[A], trace: Trace): UIO[A]", "member" : "zio.Ref.getAndDecrement", "link" : "zio\/Ref.html#getAndDecrement(implicitnum:scala.math.Numeric[A],implicittrace:zio.Trace):zio.UIO[A]", "kind" : "final def"}, {"label" : "getAndIncrement", "tail" : "(num: Numeric[A], trace: Trace): UIO[A]", "member" : "zio.Ref.getAndIncrement", "link" : "zio\/Ref.html#getAndIncrement(implicitnum:scala.math.Numeric[A],implicittrace:zio.Trace):zio.UIO[A]", "kind" : "final def"}, {"label" : "updateSomeAndGet", "tail" : "(pf: PartialFunction[A, A])(trace: Trace): UIO[A]", "member" : "zio.Ref.updateSomeAndGet", "link" : "zio\/Ref.html#updateSomeAndGet(pf:PartialFunction[A,A])(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "def"}, {"label" : "updateSome", "tail" : "(pf: PartialFunction[A, A])(trace: Trace): UIO[Unit]", "member" : "zio.Ref.updateSome", "link" : "zio\/Ref.html#updateSome(pf:PartialFunction[A,A])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "updateAndGet", "tail" : "(f: (A) => A)(trace: Trace): UIO[A]", "member" : "zio.Ref.updateAndGet", "link" : "zio\/Ref.html#updateAndGet(f:A=>A)(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "def"}, {"label" : "update", "tail" : "(f: (A) => A)(trace: Trace): UIO[Unit]", "member" : "zio.Ref.update", "link" : "zio\/Ref.html#update(f:A=>A)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "modifySome", "tail" : "(default: B)(pf: PartialFunction[A, (B, A)])(trace: Trace): UIO[B]", "member" : "zio.Ref.modifySome", "link" : "zio\/Ref.html#modifySome[B](default:B)(pf:PartialFunction[A,(B,A)])(implicittrace:zio.Trace):zio.UIO[B]", "kind" : "def"}, {"label" : "getAndUpdateSome", "tail" : "(pf: PartialFunction[A, A])(trace: Trace): UIO[A]", "member" : "zio.Ref.getAndUpdateSome", "link" : "zio\/Ref.html#getAndUpdateSome(pf:PartialFunction[A,A])(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "def"}, {"label" : "getAndUpdate", "tail" : "(f: (A) => A)(trace: Trace): UIO[A]", "member" : "zio.Ref.getAndUpdate", "link" : "zio\/Ref.html#getAndUpdate(f:A=>A)(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "def"}, {"label" : "getAndSet", "tail" : "(a: A)(trace: Trace): UIO[A]", "member" : "zio.Ref.getAndSet", "link" : "zio\/Ref.html#getAndSet(a:A)(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Ref.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Ref.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Ref.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Ref.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Ref.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Ref.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Ref.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Ref.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Ref.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Ref.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Ref.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Ref.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Ref.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Ref.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Ref.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Ref.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Ref.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Ref.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Ref.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "setAsync", "tail" : "(a: A)(trace: Trace): UIO[Unit]", "member" : "zio.Ref.setAsync", "link" : "zio\/Ref.html#setAsync(a:A)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "set", "tail" : "(a: A)(trace: Trace): UIO[Unit]", "member" : "zio.Ref.set", "link" : "zio\/Ref.html#set(a:A)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "modify", "tail" : "(f: (A) => (B, A))(trace: Trace): UIO[B]", "member" : "zio.Ref.modify", "link" : "zio\/Ref.html#modify[B](f:A=>(B,A))(implicittrace:zio.Trace):zio.UIO[B]", "kind" : "abstract def"}, {"label" : "get", "tail" : "(trace: Trace): UIO[A]", "member" : "zio.Ref.get", "link" : "zio\/Ref.html#get(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "abstract def"}], "members_object" : [{"label" : "Synchronized", "tail" : "", "member" : "zio.Ref.Synchronized", "link" : "zio\/Ref$.html#Synchronized", "kind" : "object"}, {"label" : "Synchronized", "tail" : "", "member" : "zio.Ref.Synchronized", "link" : "zio\/Ref$.html#Synchronized[A]extendsRef[A]", "kind" : "abstract class"}, {"label" : "unsafe", "tail" : "", "member" : "zio.Ref.unsafe", "link" : "zio\/Ref$.html#unsafe", "kind" : "object"}, {"label" : "make", "tail" : "(a: => A)(trace: Trace): UIO[Ref[A]]", "member" : "zio.Ref.make", "link" : "zio\/Ref$.html#make[A](a:=>A)(implicittrace:zio.Trace):zio.UIO[zio.Ref[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Ref$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Ref$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Ref$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Ref$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Ref$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Ref$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Ref$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Ref$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Ref$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Ref$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Ref$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Ref$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Ref$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Ref$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Ref$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Ref$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Ref$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Ref$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Ref$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/Ref.html", "kind" : "class"}, {"name" : "zio.Reloadable", "shortDescription" : "A Reloadable is an implementation of some service that can be dynamicallyreloaded, or swapped out for another implementation on-the-fly.", "object" : "zio\/Reloadable$.html", "members_object" : [{"label" : "reloadFork", "tail" : "(arg0: Tag[Service], trace: Trace): ZIO[Reloadable[Service], Nothing, Unit]", "member" : "zio.Reloadable.reloadFork", "link" : "zio\/Reloadable$.html#reloadFork[Service](implicitevidence$6:zio.Tag[Service],implicittrace:zio.Trace):zio.ZIO[zio.Reloadable[Service],Nothing,Unit]", "kind" : "def"}, {"label" : "reload", "tail" : "(arg0: Tag[Service], trace: Trace): ZIO[Reloadable[Service], Any, Unit]", "member" : "zio.Reloadable.reload", "link" : "zio\/Reloadable$.html#reload[Service](implicitevidence$5:zio.Tag[Service],implicittrace:zio.Trace):zio.ZIO[zio.Reloadable[Service],Any,Unit]", "kind" : "def"}, {"label" : "get", "tail" : "(arg0: Tag[Service], trace: Trace): ZIO[Reloadable[Service], Any, Service]", "member" : "zio.Reloadable.get", "link" : "zio\/Reloadable$.html#get[Service](implicitevidence$4:zio.Tag[Service],implicittrace:zio.Trace):zio.ZIO[zio.Reloadable[Service],Any,Service]", "kind" : "def"}, {"label" : "autoFromConfig", "tail" : "(layer: ZLayer[In, E, Out], scheduleFromConfig: (ZEnvironment[In]) => Schedule[In, Any, Any])(arg0: Tag[Out], trace: Trace): ZLayer[In, E, Reloadable[Out]]", "member" : "zio.Reloadable.autoFromConfig", "link" : "zio\/Reloadable$.html#autoFromConfig[In,E,Out](layer:zio.ZLayer[In,E,Out],scheduleFromConfig:zio.ZEnvironment[In]=>zio.Schedule[In,Any,Any])(implicitevidence$3:zio.Tag[Out],implicittrace:zio.Trace):zio.ZLayer[In,E,zio.Reloadable[Out]]", "kind" : "def"}, {"label" : "auto", "tail" : "(layer: ZLayer[In, E, Out], schedule: Schedule[In, Any, Any])(arg0: Tag[Out], trace: Trace): ZLayer[In, E, Reloadable[Out]]", "member" : "zio.Reloadable.auto", "link" : "zio\/Reloadable$.html#auto[In,E,Out](layer:zio.ZLayer[In,E,Out],schedule:zio.Schedule[In,Any,Any])(implicitevidence$2:zio.Tag[Out],implicittrace:zio.Trace):zio.ZLayer[In,E,zio.Reloadable[Out]]", "kind" : "def"}, {"label" : "manual", "tail" : "(layer: ZLayer[In, E, Out])(arg0: Tag[Out], trace: Trace): ZLayer[In, E, Reloadable[Out]]", "member" : "zio.Reloadable.manual", "link" : "zio\/Reloadable$.html#manual[In,E,Out](layer:zio.ZLayer[In,E,Out])(implicitevidence$1:zio.Tag[Out],implicittrace:zio.Trace):zio.ZLayer[In,E,zio.Reloadable[Out]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Reloadable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Reloadable$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Reloadable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Reloadable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Reloadable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Reloadable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Reloadable$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Reloadable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Reloadable$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Reloadable$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Reloadable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Reloadable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Reloadable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Reloadable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Reloadable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Reloadable$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Reloadable$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Reloadable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Reloadable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "reloadFork", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.Reloadable.reloadFork", "link" : "zio\/Reloadable.html#reloadFork(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "get", "tail" : "(trace: Trace): UIO[Service]", "member" : "zio.Reloadable.get", "link" : "zio\/Reloadable.html#get(implicittrace:zio.Trace):zio.UIO[Service]", "kind" : "def"}, {"member" : "zio.Reloadable#<init>", "error" : "unsupported entity"}, {"label" : "reload", "tail" : ": IO[Any, Unit]", "member" : "zio.Reloadable.reload", "link" : "zio\/Reloadable.html#reload:zio.IO[Any,Unit]", "kind" : "val"}, {"label" : "scopedRef", "tail" : ": ScopedRef[Service]", "member" : "zio.Reloadable.scopedRef", "link" : "zio\/Reloadable.html#scopedRef:zio.ScopedRef[Service]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/Reloadable.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Reloadable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Reloadable.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Reloadable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Reloadable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Reloadable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Reloadable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Reloadable.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Reloadable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Reloadable.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Reloadable.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Reloadable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Reloadable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Reloadable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Reloadable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Reloadable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Reloadable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/Reloadable.html", "kind" : "case class"}, {"name" : "zio.Runtime", "object" : "zio\/Runtime$.html", "members_object" : [{"label" : "Scoped", "tail" : "", "member" : "zio.Runtime.Scoped", "link" : "zio\/Runtime$.html#Scoped[+R]extendsRuntime[R]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Proxy", "tail" : "", "member" : "zio.Runtime.Proxy", "link" : "zio\/Runtime$.html#Proxy[+R]extendsRuntime[R]", "kind" : "class"}, {"label" : "unsafe", "tail" : "", "member" : "zio.Runtime.unsafe", "link" : "zio\/Runtime$.html#unsafe", "kind" : "object"}, {"label" : "setReportFatal", "tail" : "(reportFatal: (Throwable) => Nothing)(trace: Trace): ZLayer[Any, Nothing, Unit]", "member" : "zio.Runtime.setReportFatal", "link" : "zio\/Runtime$.html#setReportFatal(reportFatal:Throwable=>Nothing)(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "setUnhandledErrorLogLevel", "tail" : "(logLevel: LogLevel)(trace: Trace): ZLayer[Any, Nothing, Unit]", "member" : "zio.Runtime.setUnhandledErrorLogLevel", "link" : "zio\/Runtime$.html#setUnhandledErrorLogLevel(logLevel:zio.LogLevel)(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "setExecutor", "tail" : "(executor: Executor)(trace: Trace): ZLayer[Any, Nothing, Unit]", "member" : "zio.Runtime.setExecutor", "link" : "zio\/Runtime$.html#setExecutor(executor:zio.Executor)(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "setConfigProvider", "tail" : "(configProvider: ConfigProvider)(trace: Trace): ZLayer[Any, Nothing, Unit]", "member" : "zio.Runtime.setConfigProvider", "link" : "zio\/Runtime$.html#setConfigProvider(configProvider:zio.ConfigProvider)(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "setBlockingExecutor", "tail" : "(executor: Executor)(trace: Trace): ZLayer[Any, Nothing, Unit]", "member" : "zio.Runtime.setBlockingExecutor", "link" : "zio\/Runtime$.html#setBlockingExecutor(executor:zio.Executor)(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "removeDefaultLoggers", "tail" : ": ZLayer[Any, Nothing, Unit]", "member" : "zio.Runtime.removeDefaultLoggers", "link" : "zio\/Runtime$.html#removeDefaultLoggers:zio.ZLayer[Any,Nothing,Unit]", "kind" : "val"}, {"label" : "enableWorkStealing", "tail" : "(trace: Trace): ZLayer[Any, Nothing, Unit]", "member" : "zio.Runtime.enableWorkStealing", "link" : "zio\/Runtime$.html#enableWorkStealing(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "enableRuntimeMetrics", "tail" : "(trace: Trace): ZLayer[Any, Nothing, Unit]", "member" : "zio.Runtime.enableRuntimeMetrics", "link" : "zio\/Runtime$.html#enableRuntimeMetrics(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "enableOpSupervision", "tail" : "(trace: Trace): ZLayer[Any, Nothing, Unit]", "member" : "zio.Runtime.enableOpSupervision", "link" : "zio\/Runtime$.html#enableOpSupervision(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "enableOpLog", "tail" : "(trace: Trace): ZLayer[Any, Nothing, Unit]", "member" : "zio.Runtime.enableOpLog", "link" : "zio\/Runtime$.html#enableOpLog(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "enableFiberRoots", "tail" : "(trace: Trace): ZLayer[Any, Nothing, Unit]", "member" : "zio.Runtime.enableFiberRoots", "link" : "zio\/Runtime$.html#enableFiberRoots(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "enableFlags", "tail" : "(flags: RuntimeFlag*)(trace: Trace): ZLayer[Any, Nothing, Unit]", "member" : "zio.Runtime.enableFlags", "link" : "zio\/Runtime$.html#enableFlags(flags:zio.RuntimeFlag*)(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "enableCurrentFiber", "tail" : "(trace: Trace): ZLayer[Any, Nothing, Unit]", "member" : "zio.Runtime.enableCurrentFiber", "link" : "zio\/Runtime$.html#enableCurrentFiber(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "enableCooperativeYielding", "tail" : "(trace: Trace): ZLayer[Any, Nothing, Unit]", "member" : "zio.Runtime.enableCooperativeYielding", "link" : "zio\/Runtime$.html#enableCooperativeYielding(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "disableFlags", "tail" : "(flags: RuntimeFlag*)(trace: Trace): ZLayer[Any, Nothing, Unit]", "member" : "zio.Runtime.disableFlags", "link" : "zio\/Runtime$.html#disableFlags(flags:zio.RuntimeFlag*)(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "default", "tail" : ": Runtime[Any]", "member" : "zio.Runtime.default", "link" : "zio\/Runtime$.html#default:zio.Runtime[Any]", "kind" : "val"}, {"label" : "apply", "tail" : "(r: ZEnvironment[R], fiberRefs0: FiberRefs, runtimeFlags0: RuntimeFlags): Runtime[R]", "member" : "zio.Runtime.apply", "link" : "zio\/Runtime$.html#apply[R](r:zio.ZEnvironment[R],fiberRefs0:zio.FiberRefs,runtimeFlags0:zio.RuntimeFlags):zio.Runtime[R]", "kind" : "def"}, {"label" : "addSupervisor", "tail" : "(supervisor: Supervisor[Any])(trace: Trace): ZLayer[Any, Nothing, Unit]", "member" : "zio.Runtime.addSupervisor", "link" : "zio\/Runtime$.html#addSupervisor(supervisor:zio.Supervisor[Any])(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "addLogger", "tail" : "(logger: ZLogger[String, Any])(trace: Trace): ZLayer[Any, Nothing, Unit]", "member" : "zio.Runtime.addLogger", "link" : "zio\/Runtime$.html#addLogger(logger:zio.ZLogger[String,Any])(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "addLogAnnotation", "tail" : "(annotation: LogAnnotation)(trace: Trace): ZLayer[Any, Nothing, Unit]", "member" : "zio.Runtime.addLogAnnotation", "link" : "zio\/Runtime$.html#addLogAnnotation(annotation:zio.LogAnnotation)(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "addFatal", "tail" : "(fatal: Class[_ <: Throwable])(trace: Trace): ZLayer[Any, Nothing, Unit]", "member" : "zio.Runtime.addFatal", "link" : "zio\/Runtime$.html#addFatal(fatal:Class[_<:Throwable])(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "enableAutoBlockingExecutor", "tail" : "(trace: Trace): ZLayer[Any, Nothing, Unit]", "member" : "zio.RuntimePlatformSpecific.enableAutoBlockingExecutor", "link" : "zio\/Runtime$.html#enableAutoBlockingExecutor(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "enableLoomBasedBlockingExecutor", "tail" : "(trace: Trace): ZLayer[Any, LoomNotAvailableException, Unit]", "member" : "zio.RuntimePlatformSpecific.enableLoomBasedBlockingExecutor", "link" : "zio\/Runtime$.html#enableLoomBasedBlockingExecutor(implicittrace:zio.Trace):zio.ZLayer[Any,zio.internal.LoomSupport.LoomNotAvailableException,Unit]", "kind" : "def"}, {"label" : "enableLoomBasedExecutor", "tail" : "(trace: Trace): ZLayer[Any, LoomNotAvailableException, Unit]", "member" : "zio.RuntimePlatformSpecific.enableLoomBasedExecutor", "link" : "zio\/Runtime$.html#enableLoomBasedExecutor(implicittrace:zio.Trace):zio.ZLayer[Any,zio.internal.LoomSupport.LoomNotAvailableException,Unit]", "kind" : "def"}, {"label" : "defaultSupervisor", "tail" : ": Supervisor[Any]", "member" : "zio.RuntimePlatformSpecific.defaultSupervisor", "link" : "zio\/Runtime$.html#defaultSupervisor:zio.Supervisor[Any]", "kind" : "final val"}, {"label" : "defaultReportFatal", "tail" : ": (Throwable) => Nothing", "member" : "zio.RuntimePlatformSpecific.defaultReportFatal", "link" : "zio\/Runtime$.html#defaultReportFatal:Throwable=>Nothing", "kind" : "final val"}, {"label" : "defaultLoggers", "tail" : ": Set[ZLogger[String, Any]]", "member" : "zio.RuntimePlatformSpecific.defaultLoggers", "link" : "zio\/Runtime$.html#defaultLoggers:Set[zio.ZLogger[String,Any]]", "kind" : "final val"}, {"label" : "defaultFatal", "tail" : ": IsFatal", "member" : "zio.RuntimePlatformSpecific.defaultFatal", "link" : "zio\/Runtime$.html#defaultFatal:zio.internal.IsFatal", "kind" : "final val"}, {"label" : "defaultBlockingExecutor", "tail" : ": Executor", "member" : "zio.RuntimePlatformSpecific.defaultBlockingExecutor", "link" : "zio\/Runtime$.html#defaultBlockingExecutor:zio.Executor", "kind" : "final val"}, {"label" : "defaultExecutor", "tail" : ": Executor", "member" : "zio.RuntimePlatformSpecific.defaultExecutor", "link" : "zio\/Runtime$.html#defaultExecutor:zio.Executor", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Runtime$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Runtime$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Runtime$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Runtime$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Runtime$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Runtime$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Runtime$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Runtime$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Runtime$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Runtime$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Runtime$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Runtime$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Runtime$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Runtime$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Runtime$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Runtime$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Runtime$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Runtime$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Runtime$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/Runtime.html", "kind" : "trait", "members_trait" : [{"label" : "UnsafeAPIV1", "tail" : "", "member" : "zio.Runtime.UnsafeAPIV1", "link" : "zio\/Runtime.html#UnsafeAPIV1extendsRuntime.this.UnsafeAPIwithRuntime.this.UnsafeAPI3", "kind" : "abstract class"}, {"label" : "unsafe", "tail" : "(): UnsafeAPI with UnsafeAPI3", "member" : "zio.Runtime.unsafe", "link" : "zio\/Runtime.html#unsafe:Runtime.this.UnsafeAPIwithRuntime.this.UnsafeAPI3", "kind" : "def"}, {"label" : "UnsafeAPI3", "tail" : "", "member" : "zio.Runtime.UnsafeAPI3", "link" : "zio\/Runtime.html#UnsafeAPI3extendsAnyRef", "kind" : "trait"}, {"label" : "UnsafeAPI", "tail" : "", "member" : "zio.Runtime.UnsafeAPI", "link" : "zio\/Runtime.html#UnsafeAPIextendsAnyRef", "kind" : "trait"}, {"label" : "withEnvironment", "tail" : "(r1: ZEnvironment[R1]): Runtime[R1]", "member" : "zio.Runtime.withEnvironment", "link" : "zio\/Runtime.html#withEnvironment[R1](r1:zio.ZEnvironment[R1]):zio.Runtime[R1]", "kind" : "def"}, {"label" : "run", "tail" : "(zio: ZIO[R, E, A])(trace: Trace): IO[E, A]", "member" : "zio.Runtime.run", "link" : "zio\/Runtime.html#run[E,A](zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.IO[E,A]", "kind" : "final def"}, {"label" : "mapEnvironment", "tail" : "(f: (ZEnvironment[R]) => ZEnvironment[R1]): Runtime[R1]", "member" : "zio.Runtime.mapEnvironment", "link" : "zio\/Runtime.html#mapEnvironment[R1](f:zio.ZEnvironment[R]=>zio.ZEnvironment[R1]):zio.Runtime[R1]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Runtime.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Runtime.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Runtime.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Runtime.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Runtime.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Runtime.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Runtime.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Runtime.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Runtime.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Runtime.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Runtime.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Runtime.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Runtime.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Runtime.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Runtime.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Runtime.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Runtime.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Runtime.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Runtime.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "runtimeFlags", "tail" : "(): RuntimeFlags", "member" : "zio.Runtime.runtimeFlags", "link" : "zio\/Runtime.html#runtimeFlags:zio.RuntimeFlags", "kind" : "abstract def"}, {"label" : "fiberRefs", "tail" : "(): FiberRefs", "member" : "zio.Runtime.fiberRefs", "link" : "zio\/Runtime.html#fiberRefs:zio.FiberRefs", "kind" : "abstract def"}, {"label" : "environment", "tail" : "(): ZEnvironment[R]", "member" : "zio.Runtime.environment", "link" : "zio\/Runtime.html#environment:zio.ZEnvironment[R]", "kind" : "abstract def"}], "shortDescription" : "A Runtime[R] is capable of executing tasks within an environment R."}, {"name" : "zio.RuntimeFlag", "object" : "zio\/RuntimeFlag$.html", "members_object" : [{"label" : "EagerShiftBack", "tail" : "", "member" : "zio.RuntimeFlag.EagerShiftBack", "link" : "zio\/RuntimeFlag$.html#EagerShiftBack", "kind" : "case object"}, {"label" : "WorkStealing", "tail" : "", "member" : "zio.RuntimeFlag.WorkStealing", "link" : "zio\/RuntimeFlag$.html#WorkStealing", "kind" : "case object"}, {"label" : "CooperativeYielding", "tail" : "", "member" : "zio.RuntimeFlag.CooperativeYielding", "link" : "zio\/RuntimeFlag$.html#CooperativeYielding", "kind" : "case object"}, {"label" : "WindDown", "tail" : "", "member" : "zio.RuntimeFlag.WindDown", "link" : "zio\/RuntimeFlag$.html#WindDown", "kind" : "case object"}, {"label" : "FiberRoots", "tail" : "", "member" : "zio.RuntimeFlag.FiberRoots", "link" : "zio\/RuntimeFlag$.html#FiberRoots", "kind" : "case object"}, {"label" : "RuntimeMetrics", "tail" : "", "member" : "zio.RuntimeFlag.RuntimeMetrics", "link" : "zio\/RuntimeFlag$.html#RuntimeMetrics", "kind" : "case object"}, {"label" : "OpSupervision", "tail" : "", "member" : "zio.RuntimeFlag.OpSupervision", "link" : "zio\/RuntimeFlag$.html#OpSupervision", "kind" : "case object"}, {"label" : "OpLog", "tail" : "", "member" : "zio.RuntimeFlag.OpLog", "link" : "zio\/RuntimeFlag$.html#OpLog", "kind" : "case object"}, {"label" : "CurrentFiber", "tail" : "", "member" : "zio.RuntimeFlag.CurrentFiber", "link" : "zio\/RuntimeFlag$.html#CurrentFiber", "kind" : "case object"}, {"label" : "Interruption", "tail" : "", "member" : "zio.RuntimeFlag.Interruption", "link" : "zio\/RuntimeFlag$.html#Interruption", "kind" : "case object"}, {"label" : "all", "tail" : ": Set[RuntimeFlag]", "member" : "zio.RuntimeFlag.all", "link" : "zio\/RuntimeFlag$.html#all:Set[zio.RuntimeFlag]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/RuntimeFlag$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/RuntimeFlag$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/RuntimeFlag$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/RuntimeFlag$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/RuntimeFlag$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/RuntimeFlag$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/RuntimeFlag$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/RuntimeFlag$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/RuntimeFlag$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/RuntimeFlag$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/RuntimeFlag$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/RuntimeFlag$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/RuntimeFlag$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/RuntimeFlag$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/RuntimeFlag$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/RuntimeFlag$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/RuntimeFlag$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/RuntimeFlag$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/RuntimeFlag$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/RuntimeFlag.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/RuntimeFlag.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/RuntimeFlag.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/RuntimeFlag.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/RuntimeFlag.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/RuntimeFlag.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/RuntimeFlag.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/RuntimeFlag.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/RuntimeFlag.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/RuntimeFlag.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/RuntimeFlag.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/RuntimeFlag.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/RuntimeFlag.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/RuntimeFlag.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/RuntimeFlag.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/RuntimeFlag.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/RuntimeFlag.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/RuntimeFlag.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/RuntimeFlag.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/RuntimeFlag.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "notMask", "tail" : "(): Int", "member" : "zio.RuntimeFlag.notMask", "link" : "zio\/RuntimeFlag.html#notMask:Int", "kind" : "abstract def"}, {"label" : "mask", "tail" : "(): Int", "member" : "zio.RuntimeFlag.mask", "link" : "zio\/RuntimeFlag.html#mask:Int", "kind" : "abstract def"}, {"label" : "index", "tail" : "(): Int", "member" : "zio.RuntimeFlag.index", "link" : "zio\/RuntimeFlag.html#index:Int", "kind" : "abstract def"}], "shortDescription" : "A RuntimeFlag is a flag that can be set to enable or disable a particularfeature of the ZIO runtime."}, {"name" : "zio.RuntimeFlags", "shortDescription" : "Maintains a set of runtime flags.", "object" : "zio\/RuntimeFlags$.html", "members_object" : [{"label" : "none", "tail" : ": RuntimeFlags", "member" : "zio.RuntimeFlags.none", "link" : "zio\/RuntimeFlags$.html#none:zio.RuntimeFlags", "kind" : "val"}, {"label" : "enable", "tail" : "(flag: RuntimeFlag): Patch", "member" : "zio.RuntimeFlags.enable", "link" : "zio\/RuntimeFlags$.html#enable(flag:zio.RuntimeFlag):zio.RuntimeFlags.Patch", "kind" : "def"}, {"label" : "disable", "tail" : "(flag: RuntimeFlag): Patch", "member" : "zio.RuntimeFlags.disable", "link" : "zio\/RuntimeFlags$.html#disable(flag:zio.RuntimeFlag):zio.RuntimeFlags.Patch", "kind" : "def"}, {"label" : "default", "tail" : ": RuntimeFlags", "member" : "zio.RuntimeFlags.default", "link" : "zio\/RuntimeFlags$.html#default:zio.RuntimeFlags", "kind" : "val"}, {"label" : "apply", "tail" : "(flags: RuntimeFlag*): RuntimeFlags", "member" : "zio.RuntimeFlags.apply", "link" : "zio\/RuntimeFlags$.html#apply(flags:zio.RuntimeFlag*):zio.RuntimeFlags", "kind" : "def"}, {"label" : "Patch", "tail" : "", "member" : "zio.RuntimeFlags.Patch", "link" : "zio\/RuntimeFlags$.html#Patch", "kind" : "object"}, {"label" : "Patch", "tail" : "", "member" : "zio.RuntimeFlags.Patch", "link" : "zio\/RuntimeFlags$.html#Patch=Long", "kind" : "type"}, {"label" : "workStealing", "tail" : "(flags: RuntimeFlags): Boolean", "member" : "zio.RuntimeFlags.workStealing", "link" : "zio\/RuntimeFlags$.html#workStealing(flags:zio.RuntimeFlags):Boolean", "kind" : "def"}, {"label" : "windDown", "tail" : "(flags: RuntimeFlags): Boolean", "member" : "zio.RuntimeFlags.windDown", "link" : "zio\/RuntimeFlags$.html#windDown(flags:zio.RuntimeFlags):Boolean", "kind" : "def"}, {"label" : "toSet", "tail" : "(flags: RuntimeFlags): Set[RuntimeFlag]", "member" : "zio.RuntimeFlags.toSet", "link" : "zio\/RuntimeFlags$.html#toSet(flags:zio.RuntimeFlags):Set[zio.RuntimeFlag]", "kind" : "def"}, {"label" : "runtimeMetrics", "tail" : "(flags: RuntimeFlags): Boolean", "member" : "zio.RuntimeFlags.runtimeMetrics", "link" : "zio\/RuntimeFlags$.html#runtimeMetrics(flags:zio.RuntimeFlags):Boolean", "kind" : "def"}, {"label" : "render", "tail" : "(flags: RuntimeFlags): String", "member" : "zio.RuntimeFlags.render", "link" : "zio\/RuntimeFlags$.html#render(flags:zio.RuntimeFlags):String", "kind" : "def"}, {"label" : "patch", "tail" : "(patch: Patch)(flags: RuntimeFlags): RuntimeFlags", "member" : "zio.RuntimeFlags.patch", "link" : "zio\/RuntimeFlags$.html#patch(patch:zio.RuntimeFlags.Patch)(flags:zio.RuntimeFlags):zio.RuntimeFlags", "kind" : "def"}, {"label" : "opSupervision", "tail" : "(flags: RuntimeFlags): Boolean", "member" : "zio.RuntimeFlags.opSupervision", "link" : "zio\/RuntimeFlags$.html#opSupervision(flags:zio.RuntimeFlags):Boolean", "kind" : "def"}, {"label" : "opLog", "tail" : "(flags: RuntimeFlags): Boolean", "member" : "zio.RuntimeFlags.opLog", "link" : "zio\/RuntimeFlags$.html#opLog(flags:zio.RuntimeFlags):Boolean", "kind" : "def"}, {"label" : "isEnabled", "tail" : "(flags: RuntimeFlags)(flag: RuntimeFlag): Boolean", "member" : "zio.RuntimeFlags.isEnabled", "link" : "zio\/RuntimeFlags$.html#isEnabled(flags:zio.RuntimeFlags)(flag:zio.RuntimeFlag):Boolean", "kind" : "def"}, {"label" : "isDisabled", "tail" : "(flags: RuntimeFlags)(flag: RuntimeFlag): Boolean", "member" : "zio.RuntimeFlags.isDisabled", "link" : "zio\/RuntimeFlags$.html#isDisabled(flags:zio.RuntimeFlags)(flag:zio.RuntimeFlag):Boolean", "kind" : "def"}, {"label" : "interruption", "tail" : "(flags: RuntimeFlags): Boolean", "member" : "zio.RuntimeFlags.interruption", "link" : "zio\/RuntimeFlags$.html#interruption(flags:zio.RuntimeFlags):Boolean", "kind" : "def"}, {"label" : "interruptible", "tail" : "(flags: RuntimeFlags): Boolean", "member" : "zio.RuntimeFlags.interruptible", "link" : "zio\/RuntimeFlags$.html#interruptible(flags:zio.RuntimeFlags):Boolean", "kind" : "def"}, {"label" : "fiberRoots", "tail" : "(flags: RuntimeFlags): Boolean", "member" : "zio.RuntimeFlags.fiberRoots", "link" : "zio\/RuntimeFlags$.html#fiberRoots(flags:zio.RuntimeFlags):Boolean", "kind" : "def"}, {"label" : "enableAll", "tail" : "(self: RuntimeFlags)(that: RuntimeFlags): RuntimeFlags", "member" : "zio.RuntimeFlags.enableAll", "link" : "zio\/RuntimeFlags$.html#enableAll(self:zio.RuntimeFlags)(that:zio.RuntimeFlags):zio.RuntimeFlags", "kind" : "def"}, {"label" : "enable", "tail" : "(flags: RuntimeFlags)(flag: RuntimeFlag): RuntimeFlags", "member" : "zio.RuntimeFlags.enable", "link" : "zio\/RuntimeFlags$.html#enable(flags:zio.RuntimeFlags)(flag:zio.RuntimeFlag):zio.RuntimeFlags", "kind" : "def"}, {"label" : "eagerShiftBack", "tail" : "(flags: RuntimeFlags): Boolean", "member" : "zio.RuntimeFlags.eagerShiftBack", "link" : "zio\/RuntimeFlags$.html#eagerShiftBack(flags:zio.RuntimeFlags):Boolean", "kind" : "def"}, {"label" : "disableAll", "tail" : "(self: RuntimeFlags)(that: RuntimeFlags): RuntimeFlags", "member" : "zio.RuntimeFlags.disableAll", "link" : "zio\/RuntimeFlags$.html#disableAll(self:zio.RuntimeFlags)(that:zio.RuntimeFlags):zio.RuntimeFlags", "kind" : "def"}, {"label" : "disable", "tail" : "(flags: RuntimeFlags)(flag: RuntimeFlag): RuntimeFlags", "member" : "zio.RuntimeFlags.disable", "link" : "zio\/RuntimeFlags$.html#disable(flags:zio.RuntimeFlags)(flag:zio.RuntimeFlag):zio.RuntimeFlags", "kind" : "def"}, {"label" : "diff", "tail" : "(oldValue: RuntimeFlags, newValue: RuntimeFlags): Patch", "member" : "zio.RuntimeFlags.diff", "link" : "zio\/RuntimeFlags$.html#diff(oldValue:zio.RuntimeFlags,newValue:zio.RuntimeFlags):zio.RuntimeFlags.Patch", "kind" : "def"}, {"label" : "currentFiber", "tail" : "(flags: RuntimeFlags): Boolean", "member" : "zio.RuntimeFlags.currentFiber", "link" : "zio\/RuntimeFlags$.html#currentFiber(flags:zio.RuntimeFlags):Boolean", "kind" : "def"}, {"label" : "cooperativeYielding", "tail" : "(flags: RuntimeFlags): Boolean", "member" : "zio.RuntimeFlags.cooperativeYielding", "link" : "zio\/RuntimeFlags$.html#cooperativeYielding(flags:zio.RuntimeFlags):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/RuntimeFlags$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/RuntimeFlags$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/RuntimeFlags$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/RuntimeFlags$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/RuntimeFlags$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/RuntimeFlags$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/RuntimeFlags$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/RuntimeFlags$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/RuntimeFlags$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/RuntimeFlags$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/RuntimeFlags$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/RuntimeFlags$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/RuntimeFlags$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/RuntimeFlags$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/RuntimeFlags$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/RuntimeFlags$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/RuntimeFlags$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/RuntimeFlags$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/RuntimeFlags$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.Schedule", "object" : "zio\/Schedule$.html", "members_object" : [{"label" : "Decision", "tail" : "", "member" : "zio.Schedule.Decision", "link" : "zio\/Schedule$.html#Decision", "kind" : "object"}, {"label" : "Decision", "tail" : "", "member" : "zio.Schedule.Decision", "link" : "zio\/Schedule$.html#DecisionextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Driver", "tail" : "", "member" : "zio.Schedule.Driver", "link" : "zio\/Schedule$.html#Driver[+State,-Env,-In,+Out]extendsProductwithSerializable", "kind" : "final case class"}, {"label" : "WithState", "tail" : "", "member" : "zio.Schedule.WithState", "link" : "zio\/Schedule$.html#WithState[State0,-Env,-In0,+Out0]=zio.Schedule[Env,In0,Out0]{typeState=State0}", "kind" : "type"}, {"label" : "maxOffsetDateTime", "tail" : "(l: OffsetDateTime, r: OffsetDateTime): OffsetDateTime", "member" : "zio.Schedule.maxOffsetDateTime", "link" : "zio\/Schedule$.html#maxOffsetDateTime(l:java.time.OffsetDateTime,r:java.time.OffsetDateTime):java.time.OffsetDateTime", "kind" : "def"}, {"label" : "minOffsetDateTime", "tail" : "(l: OffsetDateTime, r: OffsetDateTime): OffsetDateTime", "member" : "zio.Schedule.minOffsetDateTime", "link" : "zio\/Schedule$.html#minOffsetDateTime(l:java.time.OffsetDateTime,r:java.time.OffsetDateTime):java.time.OffsetDateTime", "kind" : "def"}, {"label" : "Intervals", "tail" : "", "member" : "zio.Schedule.Intervals", "link" : "zio\/Schedule$.html#Intervals", "kind" : "object"}, {"label" : "Intervals", "tail" : "", "member" : "zio.Schedule.Intervals", "link" : "zio\/Schedule$.html#IntervalsextendsProductwithSerializable", "kind" : "sealed abstract case class"}, {"label" : "Interval", "tail" : "", "member" : "zio.Schedule.Interval", "link" : "zio\/Schedule$.html#Interval", "kind" : "object"}, {"label" : "Interval", "tail" : "", "member" : "zio.Schedule.Interval", "link" : "zio\/Schedule$.html#IntervalextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "dayOfMonth", "tail" : "(day: Int)(trace: Trace): WithState[(OffsetDateTime, Long), Any, Any, Long]", "member" : "zio.Schedule.dayOfMonth", "link" : "zio\/Schedule$.html#dayOfMonth(day:Int)(implicittrace:zio.Trace):zio.Schedule.WithState[(java.time.OffsetDateTime,Long),Any,Any,Long]", "kind" : "def"}, {"label" : "dayOfWeek", "tail" : "(day: Int)(trace: Trace): WithState[(OffsetDateTime, Long), Any, Any, Long]", "member" : "zio.Schedule.dayOfWeek", "link" : "zio\/Schedule$.html#dayOfWeek(day:Int)(implicittrace:zio.Trace):zio.Schedule.WithState[(java.time.OffsetDateTime,Long),Any,Any,Long]", "kind" : "def"}, {"label" : "hourOfDay", "tail" : "(hour: Int)(trace: Trace): WithState[(OffsetDateTime, Long), Any, Any, Long]", "member" : "zio.Schedule.hourOfDay", "link" : "zio\/Schedule$.html#hourOfDay(hour:Int)(implicittrace:zio.Trace):zio.Schedule.WithState[(java.time.OffsetDateTime,Long),Any,Any,Long]", "kind" : "def"}, {"label" : "minuteOfHour", "tail" : "(minute: Int)(trace: Trace): WithState[(OffsetDateTime, Long), Any, Any, Long]", "member" : "zio.Schedule.minuteOfHour", "link" : "zio\/Schedule$.html#minuteOfHour(minute:Int)(implicittrace:zio.Trace):zio.Schedule.WithState[(java.time.OffsetDateTime,Long),Any,Any,Long]", "kind" : "def"}, {"label" : "secondOfMinute", "tail" : "(second0: Int)(trace: Trace): WithState[(OffsetDateTime, Long), Any, Any, Long]", "member" : "zio.Schedule.secondOfMinute", "link" : "zio\/Schedule$.html#secondOfMinute(second0:Int)(implicittrace:zio.Trace):zio.Schedule.WithState[(java.time.OffsetDateTime,Long),Any,Any,Long]", "kind" : "def"}, {"label" : "windowed", "tail" : "(interval: zio.Duration): WithState[(Option[Long], Long), Any, Any, Long]", "member" : "zio.Schedule.windowed", "link" : "zio\/Schedule$.html#windowed(interval:zio.Duration):zio.Schedule.WithState[(Option[Long],Long),Any,Any,Long]", "kind" : "def"}, {"label" : "unfold", "tail" : "(a: => A)(f: (A) => A): WithState[A, Any, Any, A]", "member" : "zio.Schedule.unfold", "link" : "zio\/Schedule$.html#unfold[A](a:=>A)(f:A=>A):zio.Schedule.WithState[A,Any,Any,A]", "kind" : "def"}, {"label" : "succeed", "tail" : "(a: => A)(trace: Trace): WithState[Long, Any, Any, A]", "member" : "zio.Schedule.succeed", "link" : "zio\/Schedule$.html#succeed[A](a:=>A)(implicittrace:zio.Trace):zio.Schedule.WithState[Long,Any,Any,A]", "kind" : "def"}, {"label" : "stop", "tail" : "(trace: Trace): WithState[Long, Any, Any, Unit]", "member" : "zio.Schedule.stop", "link" : "zio\/Schedule$.html#stop(implicittrace:zio.Trace):zio.Schedule.WithState[Long,Any,Any,Unit]", "kind" : "def"}, {"label" : "spaced", "tail" : "(duration: zio.Duration)(trace: Trace): WithState[Long, Any, Any, Long]", "member" : "zio.Schedule.spaced", "link" : "zio\/Schedule$.html#spaced(duration:zio.Duration)(implicittrace:zio.Trace):zio.Schedule.WithState[Long,Any,Any,Long]", "kind" : "def"}, {"label" : "recurs", "tail" : "(n: Int)(trace: Trace): WithState[Long, Any, Any, Long]", "member" : "zio.Schedule.recurs", "link" : "zio\/Schedule$.html#recurs(n:Int)(implicittrace:zio.Trace):zio.Schedule.WithState[Long,Any,Any,Long]", "kind" : "def"}, {"label" : "recurs", "tail" : "(n: Long)(trace: Trace): WithState[Long, Any, Any, Long]", "member" : "zio.Schedule.recurs", "link" : "zio\/Schedule$.html#recurs(n:Long)(implicittrace:zio.Trace):zio.Schedule.WithState[Long,Any,Any,Long]", "kind" : "def"}, {"label" : "once", "tail" : "(trace: Trace): WithState[Long, Any, Any, Unit]", "member" : "zio.Schedule.once", "link" : "zio\/Schedule$.html#once(implicittrace:zio.Trace):zio.Schedule.WithState[Long,Any,Any,Unit]", "kind" : "def"}, {"label" : "linear", "tail" : "(base: zio.Duration)(trace: Trace): WithState[Long, Any, Any, zio.Duration]", "member" : "zio.Schedule.linear", "link" : "zio\/Schedule$.html#linear(base:zio.Duration)(implicittrace:zio.Trace):zio.Schedule.WithState[Long,Any,Any,zio.Duration]", "kind" : "def"}, {"label" : "identity", "tail" : "(): WithState[Unit, Any, A, A]", "member" : "zio.Schedule.identity", "link" : "zio\/Schedule$.html#identity[A]:zio.Schedule.WithState[Unit,Any,A,A]", "kind" : "def"}, {"label" : "count", "tail" : ": WithState[Long, Any, Any, Long]", "member" : "zio.Schedule.count", "link" : "zio\/Schedule$.html#count:zio.Schedule.WithState[Long,Any,Any,Long]", "kind" : "val"}, {"label" : "fromFunction", "tail" : "(f: (A) => B)(trace: Trace): WithState[Unit, Any, A, B]", "member" : "zio.Schedule.fromFunction", "link" : "zio\/Schedule$.html#fromFunction[A,B](f:A=>B)(implicittrace:zio.Trace):zio.Schedule.WithState[Unit,Any,A,B]", "kind" : "def"}, {"label" : "fromDurations", "tail" : "(duration: zio.Duration, durations: zio.Duration*): WithState[(::[zio.Duration], Boolean), Any, Any, zio.Duration]", "member" : "zio.Schedule.fromDurations", "link" : "zio\/Schedule$.html#fromDurations(duration:zio.Duration,durations:zio.Duration*):zio.Schedule.WithState[(::[zio.Duration],Boolean),Any,Any,zio.Duration]", "kind" : "def"}, {"label" : "fromDuration", "tail" : "(duration: zio.Duration): WithState[Boolean, Any, Any, zio.Duration]", "member" : "zio.Schedule.fromDuration", "link" : "zio\/Schedule$.html#fromDuration(duration:zio.Duration):zio.Schedule.WithState[Boolean,Any,Any,zio.Duration]", "kind" : "def"}, {"label" : "forever", "tail" : ": WithState[Long, Any, Any, Long]", "member" : "zio.Schedule.forever", "link" : "zio\/Schedule$.html#forever:zio.Schedule.WithState[Long,Any,Any,Long]", "kind" : "val"}, {"label" : "upTo", "tail" : "(duration: zio.Duration)(trace: Trace): WithState[Option[OffsetDateTime], Any, Any, zio.Duration]", "member" : "zio.Schedule.upTo", "link" : "zio\/Schedule$.html#upTo(duration:zio.Duration)(implicittrace:zio.Trace):zio.Schedule.WithState[Option[java.time.OffsetDateTime],Any,Any,zio.Duration]", "kind" : "def"}, {"label" : "fixed", "tail" : "(interval: zio.Duration): WithState[(Option[(Long, Long)], Long), Any, Any, Long]", "member" : "zio.Schedule.fixed", "link" : "zio\/Schedule$.html#fixed(interval:zio.Duration):zio.Schedule.WithState[(Option[(Long,Long)],Long),Any,Any,Long]", "kind" : "def"}, {"label" : "fibonacci", "tail" : "(one: zio.Duration)(trace: Trace): WithState[(zio.Duration, zio.Duration), Any, Any, zio.Duration]", "member" : "zio.Schedule.fibonacci", "link" : "zio\/Schedule$.html#fibonacci(one:zio.Duration)(implicittrace:zio.Trace):zio.Schedule.WithState[(zio.Duration,zio.Duration),Any,Any,zio.Duration]", "kind" : "def"}, {"label" : "exponential", "tail" : "(base: zio.Duration, factor: Double)(trace: Trace): WithState[Long, Any, Any, zio.Duration]", "member" : "zio.Schedule.exponential", "link" : "zio\/Schedule$.html#exponential(base:zio.Duration,factor:Double)(implicittrace:zio.Trace):zio.Schedule.WithState[Long,Any,Any,zio.Duration]", "kind" : "def"}, {"label" : "elapsed", "tail" : ": WithState[Option[OffsetDateTime], Any, Any, zio.Duration]", "member" : "zio.Schedule.elapsed", "link" : "zio\/Schedule$.html#elapsed:zio.Schedule.WithState[Option[java.time.OffsetDateTime],Any,Any,zio.Duration]", "kind" : "val"}, {"label" : "duration", "tail" : "(duration: zio.Duration): WithState[Boolean, Any, Any, zio.Duration]", "member" : "zio.Schedule.duration", "link" : "zio\/Schedule$.html#duration(duration:zio.Duration):zio.Schedule.WithState[Boolean,Any,Any,zio.Duration]", "kind" : "def"}, {"label" : "recurUntil", "tail" : "(pf: PartialFunction[A, B])(trace: Trace): WithState[Unit, Any, A, Option[B]]", "member" : "zio.Schedule.recurUntil", "link" : "zio\/Schedule$.html#recurUntil[A,B](pf:PartialFunction[A,B])(implicittrace:zio.Trace):zio.Schedule.WithState[Unit,Any,A,Option[B]]", "kind" : "def"}, {"label" : "recurUntilEquals", "tail" : "(a: => A)(trace: Trace): WithState[Unit, Any, A, A]", "member" : "zio.Schedule.recurUntilEquals", "link" : "zio\/Schedule$.html#recurUntilEquals[A](a:=>A)(implicittrace:zio.Trace):zio.Schedule.WithState[Unit,Any,A,A]", "kind" : "def"}, {"label" : "recurUntilZIO", "tail" : "(f: (A) => URIO[Env, Boolean])(trace: Trace): WithState[Unit, Env, A, A]", "member" : "zio.Schedule.recurUntilZIO", "link" : "zio\/Schedule$.html#recurUntilZIO[Env,A](f:A=>zio.URIO[Env,Boolean])(implicittrace:zio.Trace):zio.Schedule.WithState[Unit,Env,A,A]", "kind" : "def"}, {"label" : "recurUntil", "tail" : "(f: (A) => Boolean)(trace: Trace): WithState[Unit, Any, A, A]", "member" : "zio.Schedule.recurUntil", "link" : "zio\/Schedule$.html#recurUntil[A](f:A=>Boolean)(implicittrace:zio.Trace):zio.Schedule.WithState[Unit,Any,A,A]", "kind" : "def"}, {"label" : "recurWhileEquals", "tail" : "(a: => A)(trace: Trace): WithState[Unit, Any, A, A]", "member" : "zio.Schedule.recurWhileEquals", "link" : "zio\/Schedule$.html#recurWhileEquals[A](a:=>A)(implicittrace:zio.Trace):zio.Schedule.WithState[Unit,Any,A,A]", "kind" : "def"}, {"label" : "recurWhileZIO", "tail" : "(f: (A) => URIO[Env, Boolean]): WithState[Unit, Env, A, A]", "member" : "zio.Schedule.recurWhileZIO", "link" : "zio\/Schedule$.html#recurWhileZIO[Env,A](f:A=>zio.URIO[Env,Boolean]):zio.Schedule.WithState[Unit,Env,A,A]", "kind" : "def"}, {"label" : "recurWhile", "tail" : "(f: (A) => Boolean)(trace: Trace): WithState[Unit, Any, A, A]", "member" : "zio.Schedule.recurWhile", "link" : "zio\/Schedule$.html#recurWhile[A](f:A=>Boolean)(implicittrace:zio.Trace):zio.Schedule.WithState[Unit,Any,A,A]", "kind" : "def"}, {"label" : "delayed", "tail" : "(schedule: Schedule[Env, In, zio.Duration])(trace: Trace): WithState[State, Env, In, zio.Duration]", "member" : "zio.Schedule.delayed", "link" : "zio\/Schedule$.html#delayed[Env,In](schedule:zio.Schedule[Env,In,zio.Duration])(implicittrace:zio.Trace):zio.Schedule.WithState[schedule.State,Env,In,zio.Duration]", "kind" : "def"}, {"label" : "collectUntilZIO", "tail" : "(f: (A) => URIO[Env, Boolean])(trace: Trace): WithState[(Unit, Chunk[A]), Env, A, Chunk[A]]", "member" : "zio.Schedule.collectUntilZIO", "link" : "zio\/Schedule$.html#collectUntilZIO[Env,A](f:A=>zio.URIO[Env,Boolean])(implicittrace:zio.Trace):zio.Schedule.WithState[(Unit,zio.Chunk[A]),Env,A,zio.Chunk[A]]", "kind" : "def"}, {"label" : "collectUntil", "tail" : "(f: (A) => Boolean)(trace: Trace): WithState[(Unit, Chunk[A]), Any, A, Chunk[A]]", "member" : "zio.Schedule.collectUntil", "link" : "zio\/Schedule$.html#collectUntil[A](f:A=>Boolean)(implicittrace:zio.Trace):zio.Schedule.WithState[(Unit,zio.Chunk[A]),Any,A,zio.Chunk[A]]", "kind" : "def"}, {"label" : "collectWhileZIO", "tail" : "(f: (A) => URIO[Env, Boolean])(trace: Trace): WithState[(Unit, Chunk[A]), Env, A, Chunk[A]]", "member" : "zio.Schedule.collectWhileZIO", "link" : "zio\/Schedule$.html#collectWhileZIO[Env,A](f:A=>zio.URIO[Env,Boolean])(implicittrace:zio.Trace):zio.Schedule.WithState[(Unit,zio.Chunk[A]),Env,A,zio.Chunk[A]]", "kind" : "def"}, {"label" : "collectWhile", "tail" : "(f: (A) => Boolean)(trace: Trace): WithState[(Unit, Chunk[A]), Any, A, Chunk[A]]", "member" : "zio.Schedule.collectWhile", "link" : "zio\/Schedule$.html#collectWhile[A](f:A=>Boolean)(implicittrace:zio.Trace):zio.Schedule.WithState[(Unit,zio.Chunk[A]),Any,A,zio.Chunk[A]]", "kind" : "def"}, {"label" : "collectAll", "tail" : "(trace: Trace): WithState[(Unit, Chunk[A]), Any, A, Chunk[A]]", "member" : "zio.Schedule.collectAll", "link" : "zio\/Schedule$.html#collectAll[A](implicittrace:zio.Trace):zio.Schedule.WithState[(Unit,zio.Chunk[A]),Any,A,zio.Chunk[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Schedule$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Schedule$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Schedule$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Schedule$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Schedule$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Schedule$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Schedule$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Schedule$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Schedule$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Schedule$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Schedule$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Schedule$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Schedule$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Schedule$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Schedule$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Schedule$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Schedule$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Schedule$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Schedule$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/Schedule.html", "kind" : "trait", "members_trait" : [{"label" : "zipWith", "tail" : "(that: Schedule[Env1, In1, Out2])(f: (Out, Out2) => Out3)(trace: Trace): WithState[(State, State), Env1, In1, Out3]", "member" : "zio.Schedule.zipWith", "link" : "zio\/Schedule.html#zipWith[Env1<:Env,In1<:In,Out2,Out3](that:zio.Schedule[Env1,In1,Out2])(f:(Out,Out2)=>Out3)(implicittrace:zio.Trace):zio.Schedule.WithState[(Schedule.this.State,that.State),Env1,In1,Out3]", "kind" : "final def"}, {"label" : "zipRight", "tail" : "(that: Schedule[Env1, In1, Out2])(trace: Trace): WithState[(State, State), Env1, In1, Out2]", "member" : "zio.Schedule.zipRight", "link" : "zio\/Schedule.html#zipRight[Env1<:Env,In1<:In,Out2](that:zio.Schedule[Env1,In1,Out2])(implicittrace:zio.Trace):zio.Schedule.WithState[(Schedule.this.State,that.State),Env1,In1,Out2]", "kind" : "final def"}, {"label" : "zipLeft", "tail" : "(that: Schedule[Env1, In1, Out2])(trace: Trace): WithState[(State, State), Env1, In1, Out]", "member" : "zio.Schedule.zipLeft", "link" : "zio\/Schedule.html#zipLeft[Env1<:Env,In1<:In,Out2](that:zio.Schedule[Env1,In1,Out2])(implicittrace:zio.Trace):zio.Schedule.WithState[(Schedule.this.State,that.State),Env1,In1,Out]", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: Schedule[Env1, In1, Out2])(zippable: Zippable[Out, Out2]): WithState[(State, State), Env1, In1, Out]", "member" : "zio.Schedule.zip", "link" : "zio\/Schedule.html#zip[Env1<:Env,In1<:In,Out2](that:zio.Schedule[Env1,In1,Out2])(implicitzippable:zio.Zippable[Out,Out2]):zio.Schedule.WithState[(Schedule.this.State,that.State),Env1,In1,zippable.Out]", "kind" : "final def"}, {"label" : "whileOutputZIO", "tail" : "(f: (Out) => URIO[Env1, Boolean]): WithState[State, Env1, In, Out]", "member" : "zio.Schedule.whileOutputZIO", "link" : "zio\/Schedule.html#whileOutputZIO[Env1<:Env](f:Out=>zio.URIO[Env1,Boolean]):zio.Schedule.WithState[Schedule.this.State,Env1,In,Out]", "kind" : "final def"}, {"label" : "whileOutput", "tail" : "(f: (Out) => Boolean)(trace: Trace): WithState[State, Env, In, Out]", "member" : "zio.Schedule.whileOutput", "link" : "zio\/Schedule.html#whileOutput(f:Out=>Boolean)(implicittrace:zio.Trace):zio.Schedule.WithState[Schedule.this.State,Env,In,Out]", "kind" : "final def"}, {"label" : "whileInputZIO", "tail" : "(f: (In1) => URIO[Env1, Boolean]): WithState[State, Env1, In1, Out]", "member" : "zio.Schedule.whileInputZIO", "link" : "zio\/Schedule.html#whileInputZIO[Env1<:Env,In1<:In](f:In1=>zio.URIO[Env1,Boolean]):zio.Schedule.WithState[Schedule.this.State,Env1,In1,Out]", "kind" : "final def"}, {"label" : "whileInput", "tail" : "(f: (In1) => Boolean)(trace: Trace): WithState[State, Env, In1, Out]", "member" : "zio.Schedule.whileInput", "link" : "zio\/Schedule.html#whileInput[In1<:In](f:In1=>Boolean)(implicittrace:zio.Trace):zio.Schedule.WithState[Schedule.this.State,Env,In1,Out]", "kind" : "final def"}, {"label" : "untilOutputZIO", "tail" : "(f: (Out) => URIO[Env1, Boolean])(trace: Trace): WithState[State, Env1, In, Out]", "member" : "zio.Schedule.untilOutputZIO", "link" : "zio\/Schedule.html#untilOutputZIO[Env1<:Env](f:Out=>zio.URIO[Env1,Boolean])(implicittrace:zio.Trace):zio.Schedule.WithState[Schedule.this.State,Env1,In,Out]", "kind" : "final def"}, {"label" : "untilOutput", "tail" : "(f: (Out) => Boolean)(trace: Trace): WithState[State, Env, In, Out]", "member" : "zio.Schedule.untilOutput", "link" : "zio\/Schedule.html#untilOutput(f:Out=>Boolean)(implicittrace:zio.Trace):zio.Schedule.WithState[Schedule.this.State,Env,In,Out]", "kind" : "final def"}, {"label" : "untilInputZIO", "tail" : "(f: (In1) => URIO[Env1, Boolean])(trace: Trace): WithState[State, Env1, In1, Out]", "member" : "zio.Schedule.untilInputZIO", "link" : "zio\/Schedule.html#untilInputZIO[Env1<:Env,In1<:In](f:In1=>zio.URIO[Env1,Boolean])(implicittrace:zio.Trace):zio.Schedule.WithState[Schedule.this.State,Env1,In1,Out]", "kind" : "final def"}, {"label" : "untilInput", "tail" : "(f: (In1) => Boolean)(trace: Trace): WithState[State, Env, In1, Out]", "member" : "zio.Schedule.untilInput", "link" : "zio\/Schedule.html#untilInput[In1<:In](f:In1=>Boolean)(implicittrace:zio.Trace):zio.Schedule.WithState[Schedule.this.State,Env,In1,Out]", "kind" : "final def"}, {"label" : "unit", "tail" : "(trace: Trace): WithState[State, Env, In, Unit]", "member" : "zio.Schedule.unit", "link" : "zio\/Schedule.html#unit(implicittrace:zio.Trace):zio.Schedule.WithState[Schedule.this.State,Env,In,Unit]", "kind" : "final def"}, {"label" : "unionWith", "tail" : "(that: Schedule[Env1, In1, Out2])(f: (Intervals, Intervals) => Intervals)(zippable: Zippable[Out, Out2]): WithState[(State, State), Env1, In1, Out]", "member" : "zio.Schedule.unionWith", "link" : "zio\/Schedule.html#unionWith[Env1<:Env,In1<:In,Out2](that:zio.Schedule[Env1,In1,Out2])(f:(zio.Schedule.Intervals,zio.Schedule.Intervals)=>zio.Schedule.Intervals)(implicitzippable:zio.Zippable[Out,Out2]):zio.Schedule.WithState[(Schedule.this.State,that.State),Env1,In1,zippable.Out]", "kind" : "final def"}, {"label" : "tapOutput", "tail" : "(f: (Out) => URIO[Env1, Any]): WithState[State, Env1, In, Out]", "member" : "zio.Schedule.tapOutput", "link" : "zio\/Schedule.html#tapOutput[Env1<:Env](f:Out=>zio.URIO[Env1,Any]):zio.Schedule.WithState[Schedule.this.State,Env1,In,Out]", "kind" : "final def"}, {"label" : "tapInput", "tail" : "(f: (In1) => URIO[Env1, Any]): WithState[State, Env1, In1, Out]", "member" : "zio.Schedule.tapInput", "link" : "zio\/Schedule.html#tapInput[Env1<:Env,In1<:In](f:In1=>zio.URIO[Env1,Any]):zio.Schedule.WithState[Schedule.this.State,Env1,In1,Out]", "kind" : "final def"}, {"label" : "second", "tail" : "(): WithState[(Unit, State), Env, (X, In), (X, Out)]", "member" : "zio.Schedule.second", "link" : "zio\/Schedule.html#second[X]:zio.Schedule.WithState[(Unit,Schedule.this.State),Env,(X,In),(X,Out)]", "kind" : "final def"}, {"label" : "run", "tail" : "(now: OffsetDateTime, input: Iterable[In])(trace: Trace): URIO[Env, Chunk[Out]]", "member" : "zio.Schedule.run", "link" : "zio\/Schedule.html#run(now:java.time.OffsetDateTime,input:Iterable[In])(implicittrace:zio.Trace):zio.URIO[Env,zio.Chunk[Out]]", "kind" : "final def"}, {"label" : "right", "tail" : "(): WithState[(Unit, State), Env, Either[X, In], Either[X, Out]]", "member" : "zio.Schedule.right", "link" : "zio\/Schedule.html#right[X]:zio.Schedule.WithState[(Unit,Schedule.this.State),Env,Either[X,In],Either[X,Out]]", "kind" : "final def"}, {"label" : "resetWhen", "tail" : "(f: (Out) => Boolean): WithState[State, Env, In, Out]", "member" : "zio.Schedule.resetWhen", "link" : "zio\/Schedule.html#resetWhen(f:Out=>Boolean):zio.Schedule.WithState[Schedule.this.State,Env,In,Out]", "kind" : "final def"}, {"label" : "resetAfter", "tail" : "(duration: zio.Duration)(trace: Trace): WithState[(State, Option[OffsetDateTime]), Env, In, Out]", "member" : "zio.Schedule.resetAfter", "link" : "zio\/Schedule.html#resetAfter(duration:zio.Duration)(implicittrace:zio.Trace):zio.Schedule.WithState[(Schedule.this.State,Option[java.time.OffsetDateTime]),Env,In,Out]", "kind" : "final def"}, {"label" : "repetitions", "tail" : "(trace: Trace): WithState[(State, Long), Env, In, Long]", "member" : "zio.Schedule.repetitions", "link" : "zio\/Schedule.html#repetitions(implicittrace:zio.Trace):zio.Schedule.WithState[(Schedule.this.State,Long),Env,In,Long]", "kind" : "final def"}, {"label" : "reconsiderZIO", "tail" : "(f: (State, Out, Decision) => URIO[Env1, Either[Out2, (Out2, Interval)]]): WithState[State, Env1, In1, Out2]", "member" : "zio.Schedule.reconsiderZIO", "link" : "zio\/Schedule.html#reconsiderZIO[Env1<:Env,In1<:In,Out2](f:(Schedule.this.State,Out,zio.Schedule.Decision)=>zio.URIO[Env1,Either[Out2,(Out2,zio.Schedule.Interval)]]):zio.Schedule.WithState[Schedule.this.State,Env1,In1,Out2]", "kind" : "final def"}, {"label" : "reconsider", "tail" : "(f: (State, Out, Decision) => Either[Out2, (Out2, Interval)])(trace: Trace): WithState[State, Env, In, Out2]", "member" : "zio.Schedule.reconsider", "link" : "zio\/Schedule.html#reconsider[Out2](f:(Schedule.this.State,Out,zio.Schedule.Decision)=>Either[Out2,(Out2,zio.Schedule.Interval)])(implicittrace:zio.Trace):zio.Schedule.WithState[Schedule.this.State,Env,In,Out2]", "kind" : "final def"}, {"label" : "provideSomeEnvironment", "tail" : "(f: (ZEnvironment[Env2]) => ZEnvironment[Env]): WithState[State, Env2, In, Out]", "member" : "zio.Schedule.provideSomeEnvironment", "link" : "zio\/Schedule.html#provideSomeEnvironment[Env2](f:zio.ZEnvironment[Env2]=>zio.ZEnvironment[Env]):zio.Schedule.WithState[Schedule.this.State,Env2,In,Out]", "kind" : "final def"}, {"label" : "provideEnvironment", "tail" : "(env: ZEnvironment[Env]): WithState[State, Any, In, Out]", "member" : "zio.Schedule.provideEnvironment", "link" : "zio\/Schedule.html#provideEnvironment(env:zio.ZEnvironment[Env]):zio.Schedule.WithState[Schedule.this.State,Any,In,Out]", "kind" : "final def"}, {"label" : "passthrough", "tail" : "(trace: Trace): WithState[State, Env, In1, In1]", "member" : "zio.Schedule.passthrough", "link" : "zio\/Schedule.html#passthrough[In1<:In](implicittrace:zio.Trace):zio.Schedule.WithState[Schedule.this.State,Env,In1,In1]", "kind" : "final def"}, {"label" : "onDecision", "tail" : "(f: (State, Out, Decision) => URIO[Env1, Any]): WithState[State, Env1, In, Out]", "member" : "zio.Schedule.onDecision", "link" : "zio\/Schedule.html#onDecision[Env1<:Env](f:(Schedule.this.State,Out,zio.Schedule.Decision)=>zio.URIO[Env1,Any]):zio.Schedule.WithState[Schedule.this.State,Env1,In,Out]", "kind" : "final def"}, {"label" : "modifyDelayZIO", "tail" : "(f: (Out, zio.Duration) => URIO[Env1, zio.Duration]): WithState[State, Env1, In, Out]", "member" : "zio.Schedule.modifyDelayZIO", "link" : "zio\/Schedule.html#modifyDelayZIO[Env1<:Env](f:(Out,zio.Duration)=>zio.URIO[Env1,zio.Duration]):zio.Schedule.WithState[Schedule.this.State,Env1,In,Out]", "kind" : "final def"}, {"label" : "modifyDelay", "tail" : "(f: (Out, zio.Duration) => zio.Duration): WithState[State, Env, In, Out]", "member" : "zio.Schedule.modifyDelay", "link" : "zio\/Schedule.html#modifyDelay(f:(Out,zio.Duration)=>zio.Duration):zio.Schedule.WithState[Schedule.this.State,Env,In,Out]", "kind" : "final def"}, {"label" : "mapZIO", "tail" : "(f: (Out) => URIO[Env1, Out2]): WithState[State, Env1, In, Out2]", "member" : "zio.Schedule.mapZIO", "link" : "zio\/Schedule.html#mapZIO[Env1<:Env,Out2](f:Out=>zio.URIO[Env1,Out2]):zio.Schedule.WithState[Schedule.this.State,Env1,In,Out2]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Out) => Out2)(trace: Trace): WithState[State, Env, In, Out2]", "member" : "zio.Schedule.map", "link" : "zio\/Schedule.html#map[Out2](f:Out=>Out2)(implicittrace:zio.Trace):zio.Schedule.WithState[Schedule.this.State,Env,In,Out2]", "kind" : "final def"}, {"label" : "left", "tail" : "(): WithState[(State, Unit), Env, Either[In, X], Either[Out, X]]", "member" : "zio.Schedule.left", "link" : "zio\/Schedule.html#left[X]:zio.Schedule.WithState[(Schedule.this.State,Unit),Env,Either[In,X],Either[Out,X]]", "kind" : "final def"}, {"label" : "jittered", "tail" : "(min: Double, max: Double)(trace: Trace): WithState[State, Env, In, Out]", "member" : "zio.Schedule.jittered", "link" : "zio\/Schedule.html#jittered(min:Double,max:Double)(implicittrace:zio.Trace):zio.Schedule.WithState[Schedule.this.State,Env,In,Out]", "kind" : "final def"}, {"label" : "jittered", "tail" : "(trace: Trace): WithState[State, Env, In, Out]", "member" : "zio.Schedule.jittered", "link" : "zio\/Schedule.html#jittered(implicittrace:zio.Trace):zio.Schedule.WithState[Schedule.this.State,Env,In,Out]", "kind" : "final def"}, {"label" : "intersectWith", "tail" : "(that: Schedule[Env1, In1, Out2])(f: (Intervals, Intervals) => Intervals)(zippable: Zippable[Out, Out2]): WithState[(State, State), Env1, In1, Out]", "member" : "zio.Schedule.intersectWith", "link" : "zio\/Schedule.html#intersectWith[Env1<:Env,In1<:In,Out2](that:zio.Schedule[Env1,In1,Out2])(f:(zio.Schedule.Intervals,zio.Schedule.Intervals)=>zio.Schedule.Intervals)(implicitzippable:zio.Zippable[Out,Out2]):zio.Schedule.WithState[(Schedule.this.State,that.State),Env1,In1,zippable.Out]", "kind" : "final def"}, {"label" : "forever", "tail" : "(): WithState[State, Env, In, Out]", "member" : "zio.Schedule.forever", "link" : "zio\/Schedule.html#forever:zio.Schedule.WithState[Schedule.this.State,Env,In,Out]", "kind" : "final def"}, {"label" : "foldZIO", "tail" : "(z: Z)(f: (Z, Out) => URIO[Env1, Z]): WithState[(State, Z), Env1, In, Z]", "member" : "zio.Schedule.foldZIO", "link" : "zio\/Schedule.html#foldZIO[Env1<:Env,Z](z:Z)(f:(Z,Out)=>zio.URIO[Env1,Z]):zio.Schedule.WithState[(Schedule.this.State,Z),Env1,In,Z]", "kind" : "final def"}, {"label" : "fold", "tail" : "(z: Z)(f: (Z, Out) => Z)(trace: Trace): WithState[(State, Z), Env, In, Z]", "member" : "zio.Schedule.fold", "link" : "zio\/Schedule.html#fold[Z](z:Z)(f:(Z,Out)=>Z)(implicittrace:zio.Trace):zio.Schedule.WithState[(Schedule.this.State,Z),Env,In,Z]", "kind" : "final def"}, {"label" : "first", "tail" : "(): WithState[(State, Unit), Env, (In, X), (Out, X)]", "member" : "zio.Schedule.first", "link" : "zio\/Schedule.html#first[X]:zio.Schedule.WithState[(Schedule.this.State,Unit),Env,(In,X),(Out,X)]", "kind" : "final def"}, {"label" : "ensuring", "tail" : "(finalizer: UIO[Any]): WithState[State, Env, In, Out]", "member" : "zio.Schedule.ensuring", "link" : "zio\/Schedule.html#ensuring(finalizer:zio.UIO[Any]):zio.Schedule.WithState[Schedule.this.State,Env,In,Out]", "kind" : "final def"}, {"label" : "eitherWith", "tail" : "(that: Schedule[Env1, In1, Out2])(f: (Out, Out2) => Out3)(trace: Trace): WithState[(State, State), Env1, In1, Out3]", "member" : "zio.Schedule.eitherWith", "link" : "zio\/Schedule.html#eitherWith[Env1<:Env,In1<:In,Out2,Out3](that:zio.Schedule[Env1,In1,Out2])(f:(Out,Out2)=>Out3)(implicittrace:zio.Trace):zio.Schedule.WithState[(Schedule.this.State,that.State),Env1,In1,Out3]", "kind" : "final def"}, {"label" : "either", "tail" : "(that: Schedule[Env1, In1, Out2]): WithState[(State, State), Env1, In1, (Out, Out2)]", "member" : "zio.Schedule.either", "link" : "zio\/Schedule.html#either[Env1<:Env,In1<:In,Out2](that:zio.Schedule[Env1,In1,Out2]):zio.Schedule.WithState[(Schedule.this.State,that.State),Env1,In1,(Out,Out2)]", "kind" : "final def"}, {"label" : "driver", "tail" : "(trace: Trace): UIO[Driver[State, Env, In, Out]]", "member" : "zio.Schedule.driver", "link" : "zio\/Schedule.html#driver(implicittrace:zio.Trace):zio.UIO[zio.Schedule.Driver[Schedule.this.State,Env,In,Out]]", "kind" : "final def"}, {"label" : "dimapZIO", "tail" : "(f: (In2) => URIO[Env1, In], g: (Out) => URIO[Env1, Out2]): WithState[State, Env1, In2, Out2]", "member" : "zio.Schedule.dimapZIO", "link" : "zio\/Schedule.html#dimapZIO[Env1<:Env,In2,Out2](f:In2=>zio.URIO[Env1,In],g:Out=>zio.URIO[Env1,Out2]):zio.Schedule.WithState[Schedule.this.State,Env1,In2,Out2]", "kind" : "final def"}, {"label" : "dimap", "tail" : "(f: (In2) => In, g: (Out) => Out2)(trace: Trace): WithState[State, Env, In2, Out2]", "member" : "zio.Schedule.dimap", "link" : "zio\/Schedule.html#dimap[In2,Out2](f:In2=>In,g:Out=>Out2)(implicittrace:zio.Trace):zio.Schedule.WithState[Schedule.this.State,Env,In2,Out2]", "kind" : "final def"}, {"label" : "delayedZIO", "tail" : "(f: (zio.Duration) => URIO[Env1, zio.Duration]): WithState[State, Env1, In, Out]", "member" : "zio.Schedule.delayedZIO", "link" : "zio\/Schedule.html#delayedZIO[Env1<:Env](f:zio.Duration=>zio.URIO[Env1,zio.Duration]):zio.Schedule.WithState[Schedule.this.State,Env1,In,Out]", "kind" : "final def"}, {"label" : "delays", "tail" : "(): WithState[State, Env, In, zio.Duration]", "member" : "zio.Schedule.delays", "link" : "zio\/Schedule.html#delays:zio.Schedule.WithState[Schedule.this.State,Env,In,zio.Duration]", "kind" : "final def"}, {"label" : "delayed", "tail" : "(f: (zio.Duration) => zio.Duration)(trace: Trace): WithState[State, Env, In, Out]", "member" : "zio.Schedule.delayed", "link" : "zio\/Schedule.html#delayed(f:zio.Duration=>zio.Duration)(implicittrace:zio.Trace):zio.Schedule.WithState[Schedule.this.State,Env,In,Out]", "kind" : "final def"}, {"label" : "upTo", "tail" : "(duration: zio.Duration)(trace: Trace): WithState[(State, Option[OffsetDateTime]), Env, In, Out]", "member" : "zio.Schedule.upTo", "link" : "zio\/Schedule.html#upTo(duration:zio.Duration)(implicittrace:zio.Trace):zio.Schedule.WithState[(Schedule.this.State,Option[java.time.OffsetDateTime]),Env,In,Out]", "kind" : "final def"}, {"label" : "contramapZIO", "tail" : "(f: (In2) => URIO[Env1, In]): WithState[State, Env1, In2, Out]", "member" : "zio.Schedule.contramapZIO", "link" : "zio\/Schedule.html#contramapZIO[Env1<:Env,In2](f:In2=>zio.URIO[Env1,In]):zio.Schedule.WithState[Schedule.this.State,Env1,In2,Out]", "kind" : "final def"}, {"label" : "contramap", "tail" : "(f: (In2) => In)(trace: Trace): WithState[State, Env, In2, Out]", "member" : "zio.Schedule.contramap", "link" : "zio\/Schedule.html#contramap[Env1<:Env,In2](f:In2=>In)(implicittrace:zio.Trace):zio.Schedule.WithState[Schedule.this.State,Env,In2,Out]", "kind" : "final def"}, {"label" : "compose", "tail" : "(that: Schedule[Env1, In2, In]): WithState[(State, State), Env1, In2, Out]", "member" : "zio.Schedule.compose", "link" : "zio\/Schedule.html#compose[Env1<:Env,In2](that:zio.Schedule[Env1,In2,In]):zio.Schedule.WithState[(that.State,Schedule.this.State),Env1,In2,Out]", "kind" : "final def"}, {"label" : "collectUntilZIO", "tail" : "(f: (Out) => URIO[Env1, Boolean])(trace: Trace): WithState[(State, Chunk[Out1]), Env1, In, Chunk[Out1]]", "member" : "zio.Schedule.collectUntilZIO", "link" : "zio\/Schedule.html#collectUntilZIO[Env1<:Env,Out1>:Out](f:Out=>zio.URIO[Env1,Boolean])(implicittrace:zio.Trace):zio.Schedule.WithState[(Schedule.this.State,zio.Chunk[Out1]),Env1,In,zio.Chunk[Out1]]", "kind" : "final def"}, {"label" : "collectUntil", "tail" : "(f: (Out) => Boolean)(trace: Trace): WithState[(State, Chunk[Out1]), Env, In, Chunk[Out1]]", "member" : "zio.Schedule.collectUntil", "link" : "zio\/Schedule.html#collectUntil[Out1>:Out](f:Out=>Boolean)(implicittrace:zio.Trace):zio.Schedule.WithState[(Schedule.this.State,zio.Chunk[Out1]),Env,In,zio.Chunk[Out1]]", "kind" : "final def"}, {"label" : "collectWhileZIO", "tail" : "(f: (Out) => URIO[Env1, Boolean])(trace: Trace): WithState[(State, Chunk[Out1]), Env1, In, Chunk[Out1]]", "member" : "zio.Schedule.collectWhileZIO", "link" : "zio\/Schedule.html#collectWhileZIO[Env1<:Env,Out1>:Out](f:Out=>zio.URIO[Env1,Boolean])(implicittrace:zio.Trace):zio.Schedule.WithState[(Schedule.this.State,zio.Chunk[Out1]),Env1,In,zio.Chunk[Out1]]", "kind" : "final def"}, {"label" : "collectWhile", "tail" : "(f: (Out) => Boolean)(trace: Trace): WithState[(State, Chunk[Out1]), Env, In, Chunk[Out1]]", "member" : "zio.Schedule.collectWhile", "link" : "zio\/Schedule.html#collectWhile[Out1>:Out](f:Out=>Boolean)(implicittrace:zio.Trace):zio.Schedule.WithState[(Schedule.this.State,zio.Chunk[Out1]),Env,In,zio.Chunk[Out1]]", "kind" : "final def"}, {"label" : "collectAll", "tail" : "(trace: Trace): WithState[(State, Chunk[Out1]), Env, In, Chunk[Out1]]", "member" : "zio.Schedule.collectAll", "link" : "zio\/Schedule.html#collectAll[Out1>:Out](implicittrace:zio.Trace):zio.Schedule.WithState[(Schedule.this.State,zio.Chunk[Out1]),Env,In,zio.Chunk[Out1]]", "kind" : "final def"}, {"label" : "checkZIO", "tail" : "(test: (In1, Out) => URIO[Env1, Boolean]): WithState[State, Env1, In1, Out]", "member" : "zio.Schedule.checkZIO", "link" : "zio\/Schedule.html#checkZIO[Env1<:Env,In1<:In](test:(In1,Out)=>zio.URIO[Env1,Boolean]):zio.Schedule.WithState[Schedule.this.State,Env1,In1,Out]", "kind" : "final def"}, {"label" : "check", "tail" : "(test: (In1, Out) => Boolean)(trace: Trace): WithState[State, Env, In1, Out]", "member" : "zio.Schedule.check", "link" : "zio\/Schedule.html#check[In1<:In](test:(In1,Out)=>Boolean)(implicittrace:zio.Trace):zio.Schedule.WithState[Schedule.this.State,Env,In1,Out]", "kind" : "final def"}, {"label" : "as", "tail" : "(out2: => Out2)(trace: Trace): WithState[State, Env, In, Out2]", "member" : "zio.Schedule.as", "link" : "zio\/Schedule.html#as[Out2](out2:=>Out2)(implicittrace:zio.Trace):zio.Schedule.WithState[Schedule.this.State,Env,In,Out2]", "kind" : "final def"}, {"label" : "andThenEither", "tail" : "(that: Schedule[Env1, In1, Out2]): WithState[(State, State, Boolean), Env1, In1, Either[Out, Out2]]", "member" : "zio.Schedule.andThenEither", "link" : "zio\/Schedule.html#andThenEither[Env1<:Env,In1<:In,Out2](that:zio.Schedule[Env1,In1,Out2]):zio.Schedule.WithState[(Schedule.this.State,that.State,Boolean),Env1,In1,Either[Out,Out2]]", "kind" : "final def"}, {"label" : "andThen", "tail" : "(that: Schedule[Env1, In1, Out2])(trace: Trace): WithState[(State, State, Boolean), Env1, In1, Out2]", "member" : "zio.Schedule.andThen", "link" : "zio\/Schedule.html#andThen[Env1<:Env,In1<:In,Out2>:Out](that:zio.Schedule[Env1,In1,Out2])(implicittrace:zio.Trace):zio.Schedule.WithState[(Schedule.this.State,that.State,Boolean),Env1,In1,Out2]", "kind" : "final def"}, {"label" : "addDelayZIO", "tail" : "(f: (Out) => URIO[Env1, zio.Duration])(trace: Trace): WithState[State, Env1, In, Out]", "member" : "zio.Schedule.addDelayZIO", "link" : "zio\/Schedule.html#addDelayZIO[Env1<:Env](f:Out=>zio.URIO[Env1,zio.Duration])(implicittrace:zio.Trace):zio.Schedule.WithState[Schedule.this.State,Env1,In,Out]", "kind" : "final def"}, {"label" : "addDelay", "tail" : "(f: (Out) => zio.Duration)(trace: Trace): WithState[State, Env, In, Out]", "member" : "zio.Schedule.addDelay", "link" : "zio\/Schedule.html#addDelay(f:Out=>zio.Duration)(implicittrace:zio.Trace):zio.Schedule.WithState[Schedule.this.State,Env,In,Out]", "kind" : "final def"}, {"label" : "|||", "tail" : "(that: Schedule[Env1, In2, Out1])(trace: Trace): WithState[(State, State), Env1, Either[In, In2], Out1]", "member" : "zio.Schedule.|||", "link" : "zio\/Schedule.html#|||[Env1<:Env,Out1>:Out,In2](that:zio.Schedule[Env1,In2,Out1])(implicittrace:zio.Trace):zio.Schedule.WithState[(Schedule.this.State,that.State),Env1,Either[In,In2],Out1]", "kind" : "final def"}, {"label" : "||", "tail" : "(that: Schedule[Env1, In1, Out2])(zippable: Zippable[Out, Out2]): WithState[(State, State), Env1, In1, Out]", "member" : "zio.Schedule.||", "link" : "zio\/Schedule.html#||[Env1<:Env,In1<:In,Out2](that:zio.Schedule[Env1,In1,Out2])(implicitzippable:zio.Zippable[Out,Out2]):zio.Schedule.WithState[(Schedule.this.State,that.State),Env1,In1,zippable.Out]", "kind" : "final def"}, {"label" : ">>>", "tail" : "(that: Schedule[Env1, Out, Out2]): WithState[(State, State), Env1, In, Out2]", "member" : "zio.Schedule.>>>", "link" : "zio\/Schedule.html#>>>[Env1<:Env,Out2](that:zio.Schedule[Env1,Out,Out2]):zio.Schedule.WithState[(Schedule.this.State,that.State),Env1,In,Out2]", "kind" : "final def"}, {"label" : "<<<", "tail" : "(that: Schedule[Env1, In2, In]): WithState[(State, State), Env1, In2, Out]", "member" : "zio.Schedule.<<<", "link" : "zio\/Schedule.html#<<<[Env1<:Env,In2](that:zio.Schedule[Env1,In2,In]):zio.Schedule.WithState[(that.State,Schedule.this.State),Env1,In2,Out]", "kind" : "final def"}, {"label" : "<*>", "tail" : "(that: Schedule[Env1, In1, Out2])(zippable: Zippable[Out, Out2]): WithState[(State, State), Env1, In1, Out]", "member" : "zio.Schedule.<*>", "link" : "zio\/Schedule.html#<*>[Env1<:Env,In1<:In,Out2](that:zio.Schedule[Env1,In1,Out2])(implicitzippable:zio.Zippable[Out,Out2]):zio.Schedule.WithState[(Schedule.this.State,that.State),Env1,In1,zippable.Out]", "kind" : "final def"}, {"label" : "<*", "tail" : "(that: Schedule[Env1, In1, Out2])(trace: Trace): WithState[(State, State), Env1, In1, Out]", "member" : "zio.Schedule.<*", "link" : "zio\/Schedule.html#<*[Env1<:Env,In1<:In,Out2](that:zio.Schedule[Env1,In1,Out2])(implicittrace:zio.Trace):zio.Schedule.WithState[(Schedule.this.State,that.State),Env1,In1,Out]", "kind" : "final def"}, {"label" : "<||>", "tail" : "(that: Schedule[Env1, In1, Out2]): WithState[(State, State, Boolean), Env1, In1, Either[Out, Out2]]", "member" : "zio.Schedule.<||>", "link" : "zio\/Schedule.html#<||>[Env1<:Env,In1<:In,Out2](that:zio.Schedule[Env1,In1,Out2]):zio.Schedule.WithState[(Schedule.this.State,that.State,Boolean),Env1,In1,Either[Out,Out2]]", "kind" : "final def"}, {"label" : "+++", "tail" : "(that: Schedule[Env1, In2, Out2]): WithState[(State, State), Env1, Either[In, In2], Either[Out, Out2]]", "member" : "zio.Schedule.+++", "link" : "zio\/Schedule.html#+++[Env1<:Env,In2,Out2](that:zio.Schedule[Env1,In2,Out2]):zio.Schedule.WithState[(Schedule.this.State,that.State),Env1,Either[In,In2],Either[Out,Out2]]", "kind" : "final def"}, {"label" : "++", "tail" : "(that: Schedule[Env1, In1, Out2])(trace: Trace): WithState[(State, State, Boolean), Env1, In1, Out2]", "member" : "zio.Schedule.++", "link" : "zio\/Schedule.html#++[Env1<:Env,In1<:In,Out2>:Out](that:zio.Schedule[Env1,In1,Out2])(implicittrace:zio.Trace):zio.Schedule.WithState[(Schedule.this.State,that.State,Boolean),Env1,In1,Out2]", "kind" : "final def"}, {"label" : "*>", "tail" : "(that: Schedule[Env1, In1, Out2])(trace: Trace): WithState[(State, State), Env1, In1, Out2]", "member" : "zio.Schedule.*>", "link" : "zio\/Schedule.html#*>[Env1<:Env,In1<:In,Out2](that:zio.Schedule[Env1,In1,Out2])(implicittrace:zio.Trace):zio.Schedule.WithState[(Schedule.this.State,that.State),Env1,In1,Out2]", "kind" : "final def"}, {"label" : "***", "tail" : "(that: Schedule[Env1, In2, Out2]): WithState[(State, State), Env1, (In, In2), (Out, Out2)]", "member" : "zio.Schedule.***", "link" : "zio\/Schedule.html#***[Env1<:Env,In2,Out2](that:zio.Schedule[Env1,In2,Out2]):zio.Schedule.WithState[(Schedule.this.State,that.State),Env1,(In,In2),(Out,Out2)]", "kind" : "final def"}, {"label" : "&&", "tail" : "(that: Schedule[Env1, In1, Out2])(zippable: Zippable[Out, Out2]): WithState[(State, State), Env1, In1, Out]", "member" : "zio.Schedule.&&", "link" : "zio\/Schedule.html#&&[Env1<:Env,In1<:In,Out2](that:zio.Schedule[Env1,In1,Out2])(implicitzippable:zio.Zippable[Out,Out2]):zio.Schedule.WithState[(Schedule.this.State,that.State),Env1,In1,zippable.Out]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Schedule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Schedule.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Schedule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Schedule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Schedule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Schedule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Schedule.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Schedule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Schedule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Schedule.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Schedule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Schedule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Schedule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Schedule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Schedule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Schedule.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Schedule.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Schedule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Schedule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "step", "tail" : "(now: OffsetDateTime, in: In, state: State)(trace: Trace): ZIO[Env, Nothing, (State, Out, Decision)]", "member" : "zio.Schedule.step", "link" : "zio\/Schedule.html#step(now:java.time.OffsetDateTime,in:In,state:Schedule.this.State)(implicittrace:zio.Trace):zio.ZIO[Env,Nothing,(Schedule.this.State,Out,zio.Schedule.Decision)]", "kind" : "abstract def"}, {"label" : "initial", "tail" : "(): State", "member" : "zio.Schedule.initial", "link" : "zio\/Schedule.html#initial:Schedule.this.State", "kind" : "abstract def"}, {"member" : "zio.Schedule.State", "error" : "unsupported entity"}], "shortDescription" : "A Schedule[Env, In, Out] defines a recurring schedule, which consumesvalues of type In, and which returns values of type Out."}, {"name" : "zio.Scheduler", "shortDescription" : "", "object" : "zio\/Scheduler$.html", "members_class" : [{"member" : "zio.Scheduler#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Scheduler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Scheduler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Scheduler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Scheduler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Scheduler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Scheduler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Scheduler.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Scheduler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Scheduler.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Scheduler.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Scheduler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Scheduler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Scheduler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Scheduler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Scheduler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Scheduler.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Scheduler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Scheduler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Scheduler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "schedule", "tail" : "(task: Runnable, duration: zio.Duration)(unsafe: Unsafe): CancelToken", "member" : "zio.Scheduler.schedule", "link" : "zio\/Scheduler.html#schedule(task:Runnable,duration:zio.Duration)(implicitunsafe:zio.Unsafe):zio.Scheduler.CancelToken", "kind" : "abstract def"}, {"label" : "asScheduledExecutorService", "tail" : "(): ScheduledExecutorService", "member" : "zio.Scheduler.asScheduledExecutorService", "link" : "zio\/Scheduler.html#asScheduledExecutorService:java.util.concurrent.ScheduledExecutorService", "kind" : "abstract def"}], "members_object" : [{"label" : "fromScheduledExecutorService", "tail" : "(service: ScheduledExecutorService): Scheduler", "member" : "zio.Scheduler.fromScheduledExecutorService", "link" : "zio\/Scheduler$.html#fromScheduledExecutorService(service:java.util.concurrent.ScheduledExecutorService):zio.Scheduler", "kind" : "def"}, {"label" : "CancelToken", "tail" : "", "member" : "zio.Scheduler.CancelToken", "link" : "zio\/Scheduler$.html#CancelToken=()=>Boolean", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Scheduler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Scheduler$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Scheduler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Scheduler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Scheduler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Scheduler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Scheduler$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Scheduler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Scheduler$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Scheduler$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Scheduler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Scheduler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Scheduler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Scheduler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Scheduler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Scheduler$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Scheduler$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Scheduler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Scheduler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/Scheduler.html", "kind" : "class"}, {"name" : "zio.Scope", "object" : "zio\/Scope$.html", "members_object" : [{"label" : "UsePartiallyApplied", "tail" : "", "member" : "zio.Scope.UsePartiallyApplied", "link" : "zio\/Scope$.html#UsePartiallyApplied[R]extendsAnyVal", "kind" : "final class"}, {"label" : "ExtendPartiallyApplied", "tail" : "", "member" : "zio.Scope.ExtendPartiallyApplied", "link" : "zio\/Scope$.html#ExtendPartiallyApplied[R]extendsAnyVal", "kind" : "final class"}, {"label" : "unsafe", "tail" : "", "member" : "zio.Scope.unsafe", "link" : "zio\/Scope$.html#unsafe", "kind" : "object"}, {"label" : "parallel", "tail" : "(trace: Trace): UIO[Closeable]", "member" : "zio.Scope.parallel", "link" : "zio\/Scope$.html#parallel(implicittrace:zio.Trace):zio.UIO[zio.Scope.Closeable]", "kind" : "def"}, {"label" : "makeWith", "tail" : "(executionStrategy0: => ExecutionStrategy)(trace: Trace): UIO[Closeable]", "member" : "zio.Scope.makeWith", "link" : "zio\/Scope$.html#makeWith(executionStrategy0:=>zio.ExecutionStrategy)(implicittrace:zio.Trace):zio.UIO[zio.Scope.Closeable]", "kind" : "def"}, {"label" : "make", "tail" : "(trace: Trace): UIO[Closeable]", "member" : "zio.Scope.make", "link" : "zio\/Scope$.html#make(implicittrace:zio.Trace):zio.UIO[zio.Scope.Closeable]", "kind" : "def"}, {"label" : "global", "tail" : ": Closeable", "member" : "zio.Scope.global", "link" : "zio\/Scope$.html#global:zio.Scope.Closeable", "kind" : "val"}, {"label" : "default", "tail" : ": ZLayer[Any, Nothing, Scope]", "member" : "zio.Scope.default", "link" : "zio\/Scope$.html#default:zio.ZLayer[Any,Nothing,zio.Scope]", "kind" : "val"}, {"label" : "addFinalizerExit", "tail" : "(finalizer: (Exit[Any, Any]) => UIO[Any])(trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.Scope.addFinalizerExit", "link" : "zio\/Scope$.html#addFinalizerExit(finalizer:zio.Exit[Any,Any]=>zio.UIO[Any])(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "addFinalizer", "tail" : "(finalizer: => UIO[Any])(trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.Scope.addFinalizer", "link" : "zio\/Scope$.html#addFinalizer(finalizer:=>zio.UIO[Any])(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "Closeable", "tail" : "", "member" : "zio.Scope.Closeable", "link" : "zio\/Scope$.html#CloseableextendsScope", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Scope$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Scope$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Scope$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Scope$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Scope$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Scope$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Scope$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Scope$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Scope$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Scope$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Scope$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Scope$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Scope$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Scope$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Scope$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Scope$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Scope$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Scope$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Scope$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/Scope.html", "kind" : "trait", "members_trait" : [{"label" : "fork", "tail" : "(trace: Trace): UIO[Closeable]", "member" : "zio.Scope.fork", "link" : "zio\/Scope.html#fork(implicittrace:zio.Trace):zio.UIO[zio.Scope.Closeable]", "kind" : "final def"}, {"label" : "extend", "tail" : "(): ExtendPartiallyApplied[R]", "member" : "zio.Scope.extend", "link" : "zio\/Scope.html#extend[R]:zio.Scope.ExtendPartiallyApplied[R]", "kind" : "final def"}, {"label" : "executionStrategy", "tail" : "(): ExecutionStrategy", "member" : "zio.Scope.executionStrategy", "link" : "zio\/Scope.html#executionStrategy:zio.ExecutionStrategy", "kind" : "def"}, {"label" : "addFinalizer", "tail" : "(finalizer: => UIO[Any])(trace: Trace): UIO[Unit]", "member" : "zio.Scope.addFinalizer", "link" : "zio\/Scope.html#addFinalizer(finalizer:=>zio.UIO[Any])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Scope.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Scope.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Scope.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Scope.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Scope.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Scope.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Scope.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Scope.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Scope.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Scope.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Scope.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Scope.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Scope.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Scope.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Scope.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Scope.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Scope.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Scope.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Scope.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "forkWith", "tail" : "(executionStrategy: => ExecutionStrategy)(trace: Trace): UIO[Closeable]", "member" : "zio.Scope.forkWith", "link" : "zio\/Scope.html#forkWith(executionStrategy:=>zio.ExecutionStrategy)(implicittrace:zio.Trace):zio.UIO[zio.Scope.Closeable]", "kind" : "abstract def"}, {"label" : "addFinalizerExit", "tail" : "(finalizer: (Exit[Any, Any]) => UIO[Any])(trace: Trace): UIO[Unit]", "member" : "zio.Scope.addFinalizerExit", "link" : "zio\/Scope.html#addFinalizerExit(finalizer:zio.Exit[Any,Any]=>zio.UIO[Any])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}], "shortDescription" : "A Scope is the foundation of safe, composable resource management in ZIO."}, {"name" : "zio.ScopedRef", "object" : "zio\/ScopedRef$.html", "members_object" : [{"label" : "fromAcquire", "tail" : "(acquire: ZIO[R, E, A])(trace: Trace): ZIO[R with Scope, E, ScopedRef[A]]", "member" : "zio.ScopedRef.fromAcquire", "link" : "zio\/ScopedRef$.html#fromAcquire[R,E,A](acquire:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,E,zio.ScopedRef[A]]", "kind" : "def"}, {"label" : "make", "tail" : "(a: => A): ZIO[Scope, Nothing, ScopedRef[A]]", "member" : "zio.ScopedRef.make", "link" : "zio\/ScopedRef$.html#make[A](a:=>A):zio.ZIO[zio.Scope,Nothing,zio.ScopedRef[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ScopedRef$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ScopedRef$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ScopedRef$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ScopedRef$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ScopedRef$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ScopedRef$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ScopedRef$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ScopedRef$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ScopedRef$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ScopedRef$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ScopedRef$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ScopedRef$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ScopedRef$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ScopedRef$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ScopedRef$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ScopedRef$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ScopedRef$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ScopedRef$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ScopedRef$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/ScopedRef.html", "kind" : "trait", "members_trait" : [{"label" : "setAsync", "tail" : "(acquire: ZIO[R with Scope, E, A])(trace: Trace): ZIO[R, Nothing, Unit]", "member" : "zio.ScopedRef.setAsync", "link" : "zio\/ScopedRef.html#setAsync[R,E](acquire:zio.ZIO[Rwithzio.Scope,E,A])(implicittrace:zio.Trace):zio.ZIO[R,Nothing,Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ScopedRef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ScopedRef.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ScopedRef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ScopedRef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ScopedRef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ScopedRef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ScopedRef.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ScopedRef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ScopedRef.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ScopedRef.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ScopedRef.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ScopedRef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ScopedRef.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ScopedRef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ScopedRef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ScopedRef.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ScopedRef.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ScopedRef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ScopedRef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "get", "tail" : "(trace: Trace): UIO[A]", "member" : "zio.ScopedRef.get", "link" : "zio\/ScopedRef.html#get(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "abstract def"}, {"label" : "set", "tail" : "(acquire: ZIO[R with Scope, E, A])(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.ScopedRef.set", "link" : "zio\/ScopedRef.html#set[R,E](acquire:zio.ZIO[Rwithzio.Scope,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "abstract def"}], "shortDescription" : "A ScopedRef is a reference whose value is associated with resources,which must be released properly."}, {"name" : "zio.Semaphore", "object" : "zio\/Semaphore$.html", "members_object" : [{"label" : "unsafe", "tail" : "", "member" : "zio.Semaphore.unsafe", "link" : "zio\/Semaphore$.html#unsafe", "kind" : "object"}, {"label" : "make", "tail" : "(permits: => Long)(trace: Trace): UIO[Semaphore]", "member" : "zio.Semaphore.make", "link" : "zio\/Semaphore$.html#make(permits:=>Long)(implicittrace:zio.Trace):zio.UIO[zio.Semaphore]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Semaphore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Semaphore$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Semaphore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Semaphore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Semaphore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Semaphore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Semaphore$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Semaphore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Semaphore$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Semaphore$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Semaphore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Semaphore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Semaphore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Semaphore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Semaphore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Semaphore$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Semaphore$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Semaphore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Semaphore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/Semaphore.html", "kind" : "trait", "members_trait" : [{"label" : "awaiting", "tail" : "(trace: Trace): UIO[Long]", "member" : "zio.Semaphore.awaiting", "link" : "zio\/Semaphore.html#awaiting(implicittrace:zio.Trace):zio.UIO[Long]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Semaphore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Semaphore.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Semaphore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Semaphore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Semaphore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Semaphore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Semaphore.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Semaphore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Semaphore.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Semaphore.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Semaphore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Semaphore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Semaphore.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Semaphore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Semaphore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Semaphore.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Semaphore.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Semaphore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Semaphore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withPermitsScoped", "tail" : "(n: Long)(trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.Semaphore.withPermitsScoped", "link" : "zio\/Semaphore.html#withPermitsScoped(n:Long)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "abstract def"}, {"label" : "withPermits", "tail" : "(n: Long)(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.Semaphore.withPermits", "link" : "zio\/Semaphore.html#withPermits[R,E,A](n:Long)(zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "abstract def"}, {"label" : "withPermitScoped", "tail" : "(trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.Semaphore.withPermitScoped", "link" : "zio\/Semaphore.html#withPermitScoped(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "abstract def"}, {"label" : "withPermit", "tail" : "(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.Semaphore.withPermit", "link" : "zio\/Semaphore.html#withPermit[R,E,A](zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "abstract def"}, {"label" : "available", "tail" : "(trace: Trace): UIO[Long]", "member" : "zio.Semaphore.available", "link" : "zio\/Semaphore.html#available(implicittrace:zio.Trace):zio.UIO[Long]", "kind" : "abstract def"}], "shortDescription" : "An asynchronous semaphore, which is a generalization of a mutex."}, {"name" : "zio.StackTrace", "shortDescription" : "", "object" : "zio\/StackTrace$.html", "members_object" : [{"label" : "none", "tail" : ": StackTrace", "member" : "zio.StackTrace.none", "link" : "zio\/StackTrace$.html#none:zio.StackTrace", "kind" : "val"}, {"label" : "fromJava", "tail" : "(fiberId: FiberId, stackTrace: Array[StackTraceElement])(trace: Trace): StackTrace", "member" : "zio.StackTrace.fromJava", "link" : "zio\/StackTrace$.html#fromJava(fiberId:zio.FiberId,stackTrace:Array[StackTraceElement])(implicittrace:zio.Trace):zio.StackTrace", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/StackTrace$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/StackTrace$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/StackTrace$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/StackTrace$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/StackTrace$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/StackTrace$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/StackTrace$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/StackTrace$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/StackTrace$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/StackTrace$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/StackTrace$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/StackTrace$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/StackTrace$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/StackTrace$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/StackTrace$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/StackTrace$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/StackTrace$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/StackTrace$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/StackTrace$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "zio.StackTrace.toString", "link" : "zio\/StackTrace.html#toString():String", "kind" : "def"}, {"label" : "prettyPrint", "tail" : "(): String", "member" : "zio.StackTrace.prettyPrint", "link" : "zio\/StackTrace.html#prettyPrint:String", "kind" : "def"}, {"label" : "prettyPrint", "tail" : "(prefix: String): String", "member" : "zio.StackTrace.prettyPrint", "link" : "zio\/StackTrace.html#prettyPrint(prefix:String):String", "kind" : "def"}, {"label" : "toJava", "tail" : "(): Chunk[StackTraceElement]", "member" : "zio.StackTrace.toJava", "link" : "zio\/StackTrace.html#toJava:zio.Chunk[StackTraceElement]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "zio.StackTrace.size", "link" : "zio\/StackTrace.html#size:Int", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "zio.StackTrace.isEmpty", "link" : "zio\/StackTrace.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "++", "tail" : "(that: StackTrace): StackTrace", "member" : "zio.StackTrace.++", "link" : "zio\/StackTrace.html#++(that:zio.StackTrace):zio.StackTrace", "kind" : "def"}, {"member" : "zio.StackTrace#<init>", "error" : "unsupported entity"}, {"label" : "stackTrace", "tail" : ": Chunk[Trace]", "member" : "zio.StackTrace.stackTrace", "link" : "zio\/StackTrace.html#stackTrace:zio.Chunk[zio.Trace]", "kind" : "val"}, {"label" : "fiberId", "tail" : ": FiberId", "member" : "zio.StackTrace.fiberId", "link" : "zio\/StackTrace.html#fiberId:zio.FiberId", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/StackTrace.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/StackTrace.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/StackTrace.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/StackTrace.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/StackTrace.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/StackTrace.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/StackTrace.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/StackTrace.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/StackTrace.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/StackTrace.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/StackTrace.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/StackTrace.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/StackTrace.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/StackTrace.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/StackTrace.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/StackTrace.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/StackTrace.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/StackTrace.html", "kind" : "case class"}, {"name" : "zio.Supervisor", "shortDescription" : "A Supervisor[A] is allowed to supervise the launching and termination offibers, producing some visible value of type A from the supervision.", "object" : "zio\/Supervisor$.html", "members_class" : [{"label" : "onResume", "tail" : "(fiber: Fiber.Runtime[E, A])(unsafe: Unsafe): Unit", "member" : "zio.Supervisor.onResume", "link" : "zio\/Supervisor.html#onResume[E,A](fiber:zio.Fiber.Runtime[E,A])(implicitunsafe:zio.Unsafe):Unit", "kind" : "def"}, {"label" : "onSuspend", "tail" : "(fiber: Fiber.Runtime[E, A])(unsafe: Unsafe): Unit", "member" : "zio.Supervisor.onSuspend", "link" : "zio\/Supervisor.html#onSuspend[E,A](fiber:zio.Fiber.Runtime[E,A])(implicitunsafe:zio.Unsafe):Unit", "kind" : "def"}, {"label" : "onEffect", "tail" : "(fiber: Fiber.Runtime[E, A], effect: ZIO[_, _, _])(unsafe: Unsafe): Unit", "member" : "zio.Supervisor.onEffect", "link" : "zio\/Supervisor.html#onEffect[E,A](fiber:zio.Fiber.Runtime[E,A],effect:zio.ZIO[_,_,_])(implicitunsafe:zio.Unsafe):Unit", "kind" : "def"}, {"label" : "++", "tail" : "(that: Supervisor[B]): Supervisor[(A, B)]", "member" : "zio.Supervisor.++", "link" : "zio\/Supervisor.html#++[B](that:zio.Supervisor[B]):zio.Supervisor[(A,B)]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (A) => B): Supervisor[B]", "member" : "zio.Supervisor.map", "link" : "zio\/Supervisor.html#map[B](f:A=>B):zio.Supervisor[B]", "kind" : "def"}, {"member" : "zio.Supervisor#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Supervisor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Supervisor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Supervisor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Supervisor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Supervisor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Supervisor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Supervisor.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Supervisor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Supervisor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Supervisor.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Supervisor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Supervisor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Supervisor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Supervisor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Supervisor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Supervisor.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Supervisor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Supervisor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Supervisor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onEnd", "tail" : "(value: Exit[E, A], fiber: Fiber.Runtime[E, A])(unsafe: Unsafe): Unit", "member" : "zio.Supervisor.onEnd", "link" : "zio\/Supervisor.html#onEnd[R,E,A](value:zio.Exit[E,A],fiber:zio.Fiber.Runtime[E,A])(implicitunsafe:zio.Unsafe):Unit", "kind" : "abstract def"}, {"label" : "onStart", "tail" : "(environment: ZEnvironment[R], effect: ZIO[R, E, A], parent: Option[Fiber.Runtime[Any, Any]], fiber: Fiber.Runtime[E, A])(unsafe: Unsafe): Unit", "member" : "zio.Supervisor.onStart", "link" : "zio\/Supervisor.html#onStart[R,E,A](environment:zio.ZEnvironment[R],effect:zio.ZIO[R,E,A],parent:Option[zio.Fiber.Runtime[Any,Any]],fiber:zio.Fiber.Runtime[E,A])(implicitunsafe:zio.Unsafe):Unit", "kind" : "abstract def"}, {"label" : "value", "tail" : "(trace: Trace): UIO[A]", "member" : "zio.Supervisor.value", "link" : "zio\/Supervisor.html#value(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "abstract def"}], "members_object" : [{"label" : "Patch", "tail" : "", "member" : "zio.Supervisor.Patch", "link" : "zio\/Supervisor$.html#Patch", "kind" : "object"}, {"label" : "Patch", "tail" : "", "member" : "zio.Supervisor.Patch", "link" : "zio\/Supervisor$.html#PatchextendsAnyRef", "kind" : "sealed trait"}, {"label" : "none", "tail" : ": Supervisor[Unit]", "member" : "zio.Supervisor.none", "link" : "zio\/Supervisor$.html#none:zio.Supervisor[Unit]", "kind" : "val"}, {"label" : "fibersIn", "tail" : "(ref: AtomicReference[SortedSet[Fiber.Runtime[Any, Any]]])(trace: Trace): UIO[Supervisor[SortedSet[Fiber.Runtime[Any, Any]]]]", "member" : "zio.Supervisor.fibersIn", "link" : "zio\/Supervisor$.html#fibersIn(ref:java.util.concurrent.atomic.AtomicReference[scala.collection.immutable.SortedSet[zio.Fiber.Runtime[Any,Any]]])(implicittrace:zio.Trace):zio.UIO[zio.Supervisor[scala.collection.immutable.SortedSet[zio.Fiber.Runtime[Any,Any]]]]", "kind" : "def"}, {"label" : "fromZIO", "tail" : "(value: UIO[A]): Supervisor[A]", "member" : "zio.Supervisor.fromZIO", "link" : "zio\/Supervisor$.html#fromZIO[A](value:zio.UIO[A]):zio.Supervisor[A]", "kind" : "def"}, {"label" : "track", "tail" : "(weak: Boolean)(trace: Trace): UIO[Supervisor[Chunk[Fiber.Runtime[Any, Any]]]]", "member" : "zio.Supervisor.track", "link" : "zio\/Supervisor$.html#track(weak:Boolean)(implicittrace:zio.Trace):zio.UIO[zio.Supervisor[zio.Chunk[zio.Fiber.Runtime[Any,Any]]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Supervisor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Supervisor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Supervisor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Supervisor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Supervisor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Supervisor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Supervisor$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Supervisor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Supervisor$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Supervisor$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Supervisor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Supervisor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Supervisor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Supervisor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Supervisor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Supervisor$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Supervisor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Supervisor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Supervisor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/Supervisor.html", "kind" : "class"}, {"name" : "zio.System", "object" : "zio\/System$.html", "members_object" : [{"label" : "OS", "tail" : "", "member" : "zio.System.OS", "link" : "zio\/System$.html#OS", "kind" : "object"}, {"label" : "OS", "tail" : "", "member" : "zio.System.OS", "link" : "zio\/System$.html#OSextendsAnyRef", "kind" : "sealed trait"}, {"label" : "os", "tail" : ": OS", "member" : "zio.System.os", "link" : "zio\/System$.html#os:zio.System.OS", "kind" : "lazy val"}, {"label" : "lineSeparator", "tail" : "(trace: Trace): UIO[String]", "member" : "zio.System.lineSeparator", "link" : "zio\/System$.html#lineSeparator(implicittrace:zio.Trace):zio.UIO[String]", "kind" : "def"}, {"label" : "propertyOrOption", "tail" : "(prop: => String, alt: => Option[String])(trace: Trace): Task[Option[String]]", "member" : "zio.System.propertyOrOption", "link" : "zio\/System$.html#propertyOrOption(prop:=>String,alt:=>Option[String])(implicittrace:zio.Trace):zio.Task[Option[String]]", "kind" : "def"}, {"label" : "propertyOrElse", "tail" : "(prop: => String, alt: => String)(trace: Trace): Task[String]", "member" : "zio.System.propertyOrElse", "link" : "zio\/System$.html#propertyOrElse(prop:=>String,alt:=>String)(implicittrace:zio.Trace):zio.Task[String]", "kind" : "def"}, {"label" : "property", "tail" : "(prop: => String)(trace: Trace): Task[Option[String]]", "member" : "zio.System.property", "link" : "zio\/System$.html#property(prop:=>String)(implicittrace:zio.Trace):zio.Task[Option[String]]", "kind" : "def"}, {"label" : "properties", "tail" : "(trace: Trace): Task[Map[String, String]]", "member" : "zio.System.properties", "link" : "zio\/System$.html#properties(implicittrace:zio.Trace):zio.Task[Map[String,String]]", "kind" : "def"}, {"label" : "envs", "tail" : "(trace: Trace): IO[SecurityException, Map[String, String]]", "member" : "zio.System.envs", "link" : "zio\/System$.html#envs(implicittrace:zio.Trace):zio.IO[SecurityException,Map[String,String]]", "kind" : "def"}, {"label" : "envOrOption", "tail" : "(variable: => String, alt: => Option[String])(trace: Trace): IO[SecurityException, Option[String]]", "member" : "zio.System.envOrOption", "link" : "zio\/System$.html#envOrOption(variable:=>String,alt:=>Option[String])(implicittrace:zio.Trace):zio.IO[SecurityException,Option[String]]", "kind" : "def"}, {"label" : "envOrElse", "tail" : "(variable: => String, alt: => String)(trace: Trace): IO[SecurityException, String]", "member" : "zio.System.envOrElse", "link" : "zio\/System$.html#envOrElse(variable:=>String,alt:=>String)(implicittrace:zio.Trace):zio.IO[SecurityException,String]", "kind" : "def"}, {"label" : "env", "tail" : "(variable: => String)(trace: Trace): IO[SecurityException, Option[String]]", "member" : "zio.System.env", "link" : "zio\/System$.html#env(variable:=>String)(implicittrace:zio.Trace):zio.IO[SecurityException,Option[String]]", "kind" : "def"}, {"label" : "SystemLive", "tail" : "", "member" : "zio.System.SystemLive", "link" : "zio\/System$.html#SystemLive", "kind" : "object"}, {"label" : "tag", "tail" : ": Tag[System]", "member" : "zio.System.tag", "link" : "zio\/System$.html#tag:zio.Tag[zio.System]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/System$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/System$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/System$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/System$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/System$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/System$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/System$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/System$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/System$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/System$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/System$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/System$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/System$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/System$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/System$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/System$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/System$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/System$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/System$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/System.html", "kind" : "trait", "members_trait" : [{"label" : "unsafe", "tail" : "(): UnsafeAPI", "member" : "zio.System.unsafe", "link" : "zio\/System.html#unsafe:System.this.UnsafeAPI", "kind" : "def"}, {"label" : "UnsafeAPI", "tail" : "", "member" : "zio.System.UnsafeAPI", "link" : "zio\/System.html#UnsafeAPIextendsSerializable", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/System.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/System.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/System.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/System.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/System.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/System.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/System.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/System.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/System.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/System.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/System.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/System.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/System.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/System.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/System.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/System.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/System.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/System.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/System.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "propertyOrOption", "tail" : "(prop: => String, alt: => Option[String])(trace: Trace): IO[Throwable, Option[String]]", "member" : "zio.System.propertyOrOption", "link" : "zio\/System.html#propertyOrOption(prop:=>String,alt:=>Option[String])(implicittrace:zio.Trace):zio.IO[Throwable,Option[String]]", "kind" : "abstract def"}, {"label" : "propertyOrElse", "tail" : "(prop: => String, alt: => String)(trace: Trace): IO[Throwable, String]", "member" : "zio.System.propertyOrElse", "link" : "zio\/System.html#propertyOrElse(prop:=>String,alt:=>String)(implicittrace:zio.Trace):zio.IO[Throwable,String]", "kind" : "abstract def"}, {"label" : "property", "tail" : "(prop: => String)(trace: Trace): IO[Throwable, Option[String]]", "member" : "zio.System.property", "link" : "zio\/System.html#property(prop:=>String)(implicittrace:zio.Trace):zio.IO[Throwable,Option[String]]", "kind" : "abstract def"}, {"label" : "properties", "tail" : "(trace: Trace): IO[Throwable, Map[String, String]]", "member" : "zio.System.properties", "link" : "zio\/System.html#properties(implicittrace:zio.Trace):zio.IO[Throwable,Map[String,String]]", "kind" : "abstract def"}, {"label" : "lineSeparator", "tail" : "(trace: Trace): UIO[String]", "member" : "zio.System.lineSeparator", "link" : "zio\/System.html#lineSeparator(implicittrace:zio.Trace):zio.UIO[String]", "kind" : "abstract def"}, {"label" : "envs", "tail" : "(trace: Trace): IO[SecurityException, Map[String, String]]", "member" : "zio.System.envs", "link" : "zio\/System.html#envs(implicittrace:zio.Trace):zio.IO[SecurityException,Map[String,String]]", "kind" : "abstract def"}, {"label" : "envOrOption", "tail" : "(variable: => String, alt: => Option[String])(trace: Trace): IO[SecurityException, Option[String]]", "member" : "zio.System.envOrOption", "link" : "zio\/System.html#envOrOption(variable:=>String,alt:=>Option[String])(implicittrace:zio.Trace):zio.IO[SecurityException,Option[String]]", "kind" : "abstract def"}, {"label" : "envOrElse", "tail" : "(variable: => String, alt: => String)(trace: Trace): IO[SecurityException, String]", "member" : "zio.System.envOrElse", "link" : "zio\/System.html#envOrElse(variable:=>String,alt:=>String)(implicittrace:zio.Trace):zio.IO[SecurityException,String]", "kind" : "abstract def"}, {"label" : "env", "tail" : "(variable: => String)(trace: Trace): IO[SecurityException, Option[String]]", "member" : "zio.System.env", "link" : "zio\/System.html#env(variable:=>String)(implicittrace:zio.Trace):zio.IO[SecurityException,Option[String]]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.Tag", "object" : "zio\/package$$Tag$.html", "members_object" : [{"label" : "apply", "tail" : "(tag0: zio.EnvironmentTag[A]): Tag[A]", "member" : "zio.Tag.apply", "link" : "zio\/package$$Tag$.html#apply[A](implicittag0:zio.package.EnvironmentTag[A]):zio.package.Tag[A]", "kind" : "def"}, {"label" : "materialize", "tail" : "(): Tag[A]", "member" : "zio.TagVersionSpecific.materialize", "link" : "zio\/package$$Tag$.html#materialize[A]:zio.Tag[A]", "kind" : "implicit macro def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/package$$Tag$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/package$$Tag$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/package$$Tag$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/package$$Tag$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/package$$Tag$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/package$$Tag$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/package$$Tag$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/package$$Tag$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/package$$Tag$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/package$$Tag$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/package$$Tag$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/package$$Tag$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/package$$Tag$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/package$$Tag$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/package$$Tag$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/package$$Tag$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/package$$Tag$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/package$$Tag$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/package$$Tag$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/package$$Tag.html", "kind" : "trait", "members_trait" : [{"label" : "toString", "tail" : "(): String", "member" : "izumi.reflect.Tag.toString", "link" : "zio\/package$$Tag.html#toString():String", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "izumi.reflect.AnyTag.hashCode", "link" : "zio\/package$$Tag.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "izumi.reflect.AnyTag.equals", "link" : "zio\/package$$Tag.html#equals(that:Any):Boolean", "kind" : "final def"}, {"label" : "<:<", "tail" : "(that: AnyTag): Boolean", "member" : "izumi.reflect.AnyTag.<:<", "link" : "zio\/package$$Tag.html#<:<(that:izumi.reflect.AnyTag):Boolean", "kind" : "final def"}, {"label" : "=:=", "tail" : "(that: AnyTag): Boolean", "member" : "izumi.reflect.AnyTag.=:=", "link" : "zio\/package$$Tag.html#=:=(that:izumi.reflect.AnyTag):Boolean", "kind" : "final def"}, {"label" : "hasPreciseClass", "tail" : "(): Boolean", "member" : "izumi.reflect.AnyTag.hasPreciseClass", "link" : "zio\/package$$Tag.html#hasPreciseClass:Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/package$$Tag.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/package$$Tag.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/package$$Tag.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/package$$Tag.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/package$$Tag.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/package$$Tag.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/package$$Tag.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/package$$Tag.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/package$$Tag.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/package$$Tag.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/package$$Tag.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/package$$Tag.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/package$$Tag.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/package$$Tag.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/package$$Tag.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/package$$Tag.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "tag", "tail" : "(): zio.LightTypeTag", "member" : "zio.Tag.tag", "link" : "zio\/package$$Tag.html#tag:zio.package.LightTypeTag", "kind" : "abstract def"}, {"label" : "closestClass", "tail" : "(): Class[_]", "member" : "izumi.reflect.Tag.closestClass", "link" : "zio\/package$$Tag.html#closestClass:Class[_]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.ThreadLocalBridge", "object" : "zio\/ThreadLocalBridge$.html", "members_object" : [{"label" : "TrackingFiberRef", "tail" : "", "member" : "zio.ThreadLocalBridge.TrackingFiberRef", "link" : "zio\/ThreadLocalBridge$.html#TrackingFiberRef[A]extendsFiberRef.Proxy[A]", "kind" : "class"}, {"label" : "live", "tail" : ": ZLayer[Any, Nothing, ThreadLocalBridge]", "member" : "zio.ThreadLocalBridge.live", "link" : "zio\/ThreadLocalBridge$.html#live:zio.ZLayer[Any,Nothing,zio.ThreadLocalBridge]", "kind" : "val"}, {"label" : "makeFiberRef", "tail" : "(initialValue: A)(link: (A) => Unit): ZIO[Scope with ThreadLocalBridge, Nothing, FiberRef[A]]", "member" : "zio.ThreadLocalBridge.makeFiberRef", "link" : "zio\/ThreadLocalBridge$.html#makeFiberRef[A](initialValue:A)(link:A=>Unit):zio.ZIO[zio.Scopewithzio.ThreadLocalBridge,Nothing,zio.FiberRef[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ThreadLocalBridge$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ThreadLocalBridge$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ThreadLocalBridge$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ThreadLocalBridge$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ThreadLocalBridge$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ThreadLocalBridge$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ThreadLocalBridge$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ThreadLocalBridge$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ThreadLocalBridge$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ThreadLocalBridge$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ThreadLocalBridge$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ThreadLocalBridge$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ThreadLocalBridge$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ThreadLocalBridge$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ThreadLocalBridge$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ThreadLocalBridge$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ThreadLocalBridge$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ThreadLocalBridge$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ThreadLocalBridge$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/ThreadLocalBridge.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ThreadLocalBridge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ThreadLocalBridge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ThreadLocalBridge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ThreadLocalBridge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ThreadLocalBridge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ThreadLocalBridge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ThreadLocalBridge.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ThreadLocalBridge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ThreadLocalBridge.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ThreadLocalBridge.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ThreadLocalBridge.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ThreadLocalBridge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ThreadLocalBridge.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ThreadLocalBridge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ThreadLocalBridge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ThreadLocalBridge.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ThreadLocalBridge.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ThreadLocalBridge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ThreadLocalBridge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "makeFiberRef", "tail" : "(initialValue: A)(link: (A) => Unit): ZIO[Scope, Nothing, FiberRef[A]]", "member" : "zio.ThreadLocalBridge.makeFiberRef", "link" : "zio\/ThreadLocalBridge.html#makeFiberRef[A](initialValue:A)(link:A=>Unit):zio.ZIO[zio.Scope,Nothing,zio.FiberRef[A]]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.Trace", "shortDescription" : "", "object" : "zio\/Trace$.html", "members_object" : [{"label" : "unapply", "tail" : "(trace: Trace): Option[(String, String, Int)]", "member" : "zio.Trace.unapply", "link" : "zio\/Trace$.html#unapply(trace:zio.Trace):Option[(String,String,Int)]", "kind" : "def"}, {"label" : "toJava", "tail" : "(trace: Trace): Option[StackTraceElement]", "member" : "zio.Trace.toJava", "link" : "zio\/Trace$.html#toJava(trace:zio.Trace):Option[StackTraceElement]", "kind" : "def"}, {"label" : "fromJava", "tail" : "(stackTraceElement: StackTraceElement): Trace", "member" : "zio.Trace.fromJava", "link" : "zio\/Trace$.html#fromJava(stackTraceElement:StackTraceElement):zio.Trace", "kind" : "def"}, {"label" : "empty", "tail" : ": Trace", "member" : "zio.Trace.empty", "link" : "zio\/Trace$.html#empty:zio.Trace", "kind" : "val"}, {"label" : "equalIgnoreLocation", "tail" : "(left: Trace, right: Trace): Boolean", "member" : "zio.Trace.equalIgnoreLocation", "link" : "zio\/Trace$.html#equalIgnoreLocation(left:zio.Trace,right:zio.Trace):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(location: String, file: String, line: Int): Trace", "member" : "zio.Trace.apply", "link" : "zio\/Trace$.html#apply(location:String,file:String,line:Int):zio.Trace", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Trace$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Trace$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Trace$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Trace$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Trace$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Trace$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Trace$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Trace$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Trace$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Trace$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Trace$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Trace$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Trace$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Trace$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Trace$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Trace$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Trace$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Trace$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Trace$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.Unsafe", "object" : "zio\/Unsafe$.html", "members_object" : [{"label" : "unsafeCompat", "tail" : "(f: (Unsafe) => A): A", "member" : "zio.Unsafe.unsafeCompat", "link" : "zio\/Unsafe$.html#unsafeCompat[A](f:zio.Unsafe=>A):A", "kind" : "def"}, {"label" : "unsafe", "tail" : "(f: (Unsafe) => A): A", "member" : "zio.Unsafe.unsafe", "link" : "zio\/Unsafe$.html#unsafe[A](f:zio.Unsafe=>A):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Unsafe$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Unsafe$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Unsafe$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Unsafe$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Unsafe$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Unsafe$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Unsafe$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Unsafe$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Unsafe$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Unsafe$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Unsafe$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Unsafe$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Unsafe$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Unsafe$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Unsafe$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Unsafe$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Unsafe$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Unsafe$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Unsafe$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/Unsafe.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Unsafe.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Unsafe.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Unsafe.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Unsafe.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Unsafe.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Unsafe.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Unsafe.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Unsafe.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Unsafe.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Unsafe.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Unsafe.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Unsafe.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Unsafe.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Unsafe.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Unsafe.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Unsafe.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Unsafe.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Unsafe.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Unsafe.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A marker interface used to indicate that a method is side-effecting, partial,or potentially type unsafe, such that it might throw a ClassCastException ifused improperly."}, {"name" : "zio.Unzippable", "object" : "zio\/Unzippable$.html", "members_object" : [{"label" : "UnzippableLeftIdentity", "tail" : "(): In[Unit, A, A]", "member" : "zio.Unzippable.UnzippableLeftIdentity", "link" : "zio\/Unzippable$.html#UnzippableLeftIdentity[A]:zio.Unzippable.In[Unit,A,A]", "kind" : "implicit def"}, {"label" : "In", "tail" : "", "member" : "zio.Unzippable.In", "link" : "zio\/Unzippable$.html#In[A,B,C]=zio.Unzippable[A,B]{typeIn=C}", "kind" : "type"}, {"label" : "UnzippableRightIdentity", "tail" : "(): In[A, Unit, A]", "member" : "zio.UnzippableLowPriority1.UnzippableRightIdentity", "link" : "zio\/Unzippable$.html#UnzippableRightIdentity[A]:zio.Unzippable.In[A,Unit,A]", "kind" : "implicit def"}, {"label" : "Unzippable22", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable22", "link" : "zio\/Unzippable$.html#Unzippable22[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable21", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable21", "link" : "zio\/Unzippable$.html#Unzippable21[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable20", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable20", "link" : "zio\/Unzippable$.html#Unzippable20[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable19", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable19", "link" : "zio\/Unzippable$.html#Unzippable19[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable18", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable18", "link" : "zio\/Unzippable$.html#Unzippable18[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable17", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable17", "link" : "zio\/Unzippable$.html#Unzippable17[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable16", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable16", "link" : "zio\/Unzippable$.html#Unzippable16[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable15", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable15", "link" : "zio\/Unzippable$.html#Unzippable15[A,B,C,D,E,F,G,H,I,J,K,L,M,N,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable14", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable14", "link" : "zio\/Unzippable$.html#Unzippable14[A,B,C,D,E,F,G,H,I,J,K,L,M,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable13", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L), Z, (A, B, C, D, E, F, G, H, I, J, K, L, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable13", "link" : "zio\/Unzippable$.html#Unzippable13[A,B,C,D,E,F,G,H,I,J,K,L,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L),Z,(A,B,C,D,E,F,G,H,I,J,K,L,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable12", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K), Z, (A, B, C, D, E, F, G, H, I, J, K, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable12", "link" : "zio\/Unzippable$.html#Unzippable12[A,B,C,D,E,F,G,H,I,J,K,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K),Z,(A,B,C,D,E,F,G,H,I,J,K,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable11", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J), Z, (A, B, C, D, E, F, G, H, I, J, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable11", "link" : "zio\/Unzippable$.html#Unzippable11[A,B,C,D,E,F,G,H,I,J,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J),Z,(A,B,C,D,E,F,G,H,I,J,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable10", "tail" : "(): In[(A, B, C, D, E, F, G, H, I), Z, (A, B, C, D, E, F, G, H, I, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable10", "link" : "zio\/Unzippable$.html#Unzippable10[A,B,C,D,E,F,G,H,I,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I),Z,(A,B,C,D,E,F,G,H,I,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable9", "tail" : "(): In[(A, B, C, D, E, F, G, H), Z, (A, B, C, D, E, F, G, H, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable9", "link" : "zio\/Unzippable$.html#Unzippable9[A,B,C,D,E,F,G,H,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H),Z,(A,B,C,D,E,F,G,H,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable8", "tail" : "(): In[(A, B, C, D, E, F, G), Z, (A, B, C, D, E, F, G, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable8", "link" : "zio\/Unzippable$.html#Unzippable8[A,B,C,D,E,F,G,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G),Z,(A,B,C,D,E,F,G,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable7", "tail" : "(): In[(A, B, C, D, E, F), Z, (A, B, C, D, E, F, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable7", "link" : "zio\/Unzippable$.html#Unzippable7[A,B,C,D,E,F,Z]:zio.Unzippable.In[(A,B,C,D,E,F),Z,(A,B,C,D,E,F,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable6", "tail" : "(): In[(A, B, C, D, E), Z, (A, B, C, D, E, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable6", "link" : "zio\/Unzippable$.html#Unzippable6[A,B,C,D,E,Z]:zio.Unzippable.In[(A,B,C,D,E),Z,(A,B,C,D,E,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable5", "tail" : "(): In[(A, B, C, D), Z, (A, B, C, D, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable5", "link" : "zio\/Unzippable$.html#Unzippable5[A,B,C,D,Z]:zio.Unzippable.In[(A,B,C,D),Z,(A,B,C,D,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable4", "tail" : "(): In[(A, B, C), Z, (A, B, C, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable4", "link" : "zio\/Unzippable$.html#Unzippable4[A,B,C,Z]:zio.Unzippable.In[(A,B,C),Z,(A,B,C,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable3", "tail" : "(): In[(A, B), Z, (A, B, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable3", "link" : "zio\/Unzippable$.html#Unzippable3[A,B,Z]:zio.Unzippable.In[(A,B),Z,(A,B,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable2", "tail" : "(): In[A, B, (A, B)]", "member" : "zio.UnzippableLowPriority3.Unzippable2", "link" : "zio\/Unzippable$.html#Unzippable2[A,B]:zio.Unzippable.In[A,B,(A,B)]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Unzippable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Unzippable$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Unzippable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Unzippable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Unzippable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Unzippable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Unzippable$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Unzippable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Unzippable$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Unzippable$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Unzippable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Unzippable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Unzippable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Unzippable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Unzippable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Unzippable$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Unzippable$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Unzippable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Unzippable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/Unzippable.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Unzippable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Unzippable.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Unzippable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Unzippable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Unzippable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Unzippable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Unzippable.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Unzippable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Unzippable.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Unzippable.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Unzippable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Unzippable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Unzippable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Unzippable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Unzippable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Unzippable.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Unzippable.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Unzippable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Unzippable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "unzip", "tail" : "(in: In): (A, B)", "member" : "zio.Unzippable.unzip", "link" : "zio\/Unzippable.html#unzip(in:Unzippable.this.In):(A,B)", "kind" : "abstract def"}, {"member" : "zio.Unzippable.In", "error" : "unsupported entity"}], "shortDescription" : ""}, {"name" : "zio.UnzippableLowPriority1", "trait" : "zio\/UnzippableLowPriority1.html", "kind" : "trait", "members_trait" : [{"label" : "UnzippableRightIdentity", "tail" : "(): In[A, Unit, A]", "member" : "zio.UnzippableLowPriority1.UnzippableRightIdentity", "link" : "zio\/UnzippableLowPriority1.html#UnzippableRightIdentity[A]:zio.Unzippable.In[A,Unit,A]", "kind" : "implicit def"}, {"label" : "Unzippable22", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable22", "link" : "zio\/UnzippableLowPriority1.html#Unzippable22[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable21", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable21", "link" : "zio\/UnzippableLowPriority1.html#Unzippable21[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable20", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable20", "link" : "zio\/UnzippableLowPriority1.html#Unzippable20[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable19", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable19", "link" : "zio\/UnzippableLowPriority1.html#Unzippable19[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable18", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable18", "link" : "zio\/UnzippableLowPriority1.html#Unzippable18[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable17", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable17", "link" : "zio\/UnzippableLowPriority1.html#Unzippable17[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable16", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable16", "link" : "zio\/UnzippableLowPriority1.html#Unzippable16[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable15", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable15", "link" : "zio\/UnzippableLowPriority1.html#Unzippable15[A,B,C,D,E,F,G,H,I,J,K,L,M,N,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable14", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable14", "link" : "zio\/UnzippableLowPriority1.html#Unzippable14[A,B,C,D,E,F,G,H,I,J,K,L,M,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable13", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L), Z, (A, B, C, D, E, F, G, H, I, J, K, L, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable13", "link" : "zio\/UnzippableLowPriority1.html#Unzippable13[A,B,C,D,E,F,G,H,I,J,K,L,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L),Z,(A,B,C,D,E,F,G,H,I,J,K,L,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable12", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K), Z, (A, B, C, D, E, F, G, H, I, J, K, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable12", "link" : "zio\/UnzippableLowPriority1.html#Unzippable12[A,B,C,D,E,F,G,H,I,J,K,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K),Z,(A,B,C,D,E,F,G,H,I,J,K,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable11", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J), Z, (A, B, C, D, E, F, G, H, I, J, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable11", "link" : "zio\/UnzippableLowPriority1.html#Unzippable11[A,B,C,D,E,F,G,H,I,J,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J),Z,(A,B,C,D,E,F,G,H,I,J,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable10", "tail" : "(): In[(A, B, C, D, E, F, G, H, I), Z, (A, B, C, D, E, F, G, H, I, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable10", "link" : "zio\/UnzippableLowPriority1.html#Unzippable10[A,B,C,D,E,F,G,H,I,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I),Z,(A,B,C,D,E,F,G,H,I,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable9", "tail" : "(): In[(A, B, C, D, E, F, G, H), Z, (A, B, C, D, E, F, G, H, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable9", "link" : "zio\/UnzippableLowPriority1.html#Unzippable9[A,B,C,D,E,F,G,H,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H),Z,(A,B,C,D,E,F,G,H,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable8", "tail" : "(): In[(A, B, C, D, E, F, G), Z, (A, B, C, D, E, F, G, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable8", "link" : "zio\/UnzippableLowPriority1.html#Unzippable8[A,B,C,D,E,F,G,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G),Z,(A,B,C,D,E,F,G,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable7", "tail" : "(): In[(A, B, C, D, E, F), Z, (A, B, C, D, E, F, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable7", "link" : "zio\/UnzippableLowPriority1.html#Unzippable7[A,B,C,D,E,F,Z]:zio.Unzippable.In[(A,B,C,D,E,F),Z,(A,B,C,D,E,F,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable6", "tail" : "(): In[(A, B, C, D, E), Z, (A, B, C, D, E, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable6", "link" : "zio\/UnzippableLowPriority1.html#Unzippable6[A,B,C,D,E,Z]:zio.Unzippable.In[(A,B,C,D,E),Z,(A,B,C,D,E,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable5", "tail" : "(): In[(A, B, C, D), Z, (A, B, C, D, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable5", "link" : "zio\/UnzippableLowPriority1.html#Unzippable5[A,B,C,D,Z]:zio.Unzippable.In[(A,B,C,D),Z,(A,B,C,D,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable4", "tail" : "(): In[(A, B, C), Z, (A, B, C, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable4", "link" : "zio\/UnzippableLowPriority1.html#Unzippable4[A,B,C,Z]:zio.Unzippable.In[(A,B,C),Z,(A,B,C,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable3", "tail" : "(): In[(A, B), Z, (A, B, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable3", "link" : "zio\/UnzippableLowPriority1.html#Unzippable3[A,B,Z]:zio.Unzippable.In[(A,B),Z,(A,B,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable2", "tail" : "(): In[A, B, (A, B)]", "member" : "zio.UnzippableLowPriority3.Unzippable2", "link" : "zio\/UnzippableLowPriority1.html#Unzippable2[A,B]:zio.Unzippable.In[A,B,(A,B)]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/UnzippableLowPriority1.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/UnzippableLowPriority1.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/UnzippableLowPriority1.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/UnzippableLowPriority1.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/UnzippableLowPriority1.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/UnzippableLowPriority1.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/UnzippableLowPriority1.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/UnzippableLowPriority1.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/UnzippableLowPriority1.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/UnzippableLowPriority1.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/UnzippableLowPriority1.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/UnzippableLowPriority1.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/UnzippableLowPriority1.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/UnzippableLowPriority1.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/UnzippableLowPriority1.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/UnzippableLowPriority1.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/UnzippableLowPriority1.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/UnzippableLowPriority1.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/UnzippableLowPriority1.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.UnzippableLowPriority2", "trait" : "zio\/UnzippableLowPriority2.html", "kind" : "trait", "members_trait" : [{"label" : "Unzippable22", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable22", "link" : "zio\/UnzippableLowPriority2.html#Unzippable22[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable21", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable21", "link" : "zio\/UnzippableLowPriority2.html#Unzippable21[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable20", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable20", "link" : "zio\/UnzippableLowPriority2.html#Unzippable20[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable19", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable19", "link" : "zio\/UnzippableLowPriority2.html#Unzippable19[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable18", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable18", "link" : "zio\/UnzippableLowPriority2.html#Unzippable18[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable17", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable17", "link" : "zio\/UnzippableLowPriority2.html#Unzippable17[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable16", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable16", "link" : "zio\/UnzippableLowPriority2.html#Unzippable16[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable15", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M, N), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable15", "link" : "zio\/UnzippableLowPriority2.html#Unzippable15[A,B,C,D,E,F,G,H,I,J,K,L,M,N,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M,N),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable14", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L, M), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable14", "link" : "zio\/UnzippableLowPriority2.html#Unzippable14[A,B,C,D,E,F,G,H,I,J,K,L,M,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L,M),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable13", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K, L), Z, (A, B, C, D, E, F, G, H, I, J, K, L, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable13", "link" : "zio\/UnzippableLowPriority2.html#Unzippable13[A,B,C,D,E,F,G,H,I,J,K,L,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K,L),Z,(A,B,C,D,E,F,G,H,I,J,K,L,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable12", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J, K), Z, (A, B, C, D, E, F, G, H, I, J, K, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable12", "link" : "zio\/UnzippableLowPriority2.html#Unzippable12[A,B,C,D,E,F,G,H,I,J,K,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J,K),Z,(A,B,C,D,E,F,G,H,I,J,K,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable11", "tail" : "(): In[(A, B, C, D, E, F, G, H, I, J), Z, (A, B, C, D, E, F, G, H, I, J, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable11", "link" : "zio\/UnzippableLowPriority2.html#Unzippable11[A,B,C,D,E,F,G,H,I,J,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I,J),Z,(A,B,C,D,E,F,G,H,I,J,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable10", "tail" : "(): In[(A, B, C, D, E, F, G, H, I), Z, (A, B, C, D, E, F, G, H, I, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable10", "link" : "zio\/UnzippableLowPriority2.html#Unzippable10[A,B,C,D,E,F,G,H,I,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H,I),Z,(A,B,C,D,E,F,G,H,I,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable9", "tail" : "(): In[(A, B, C, D, E, F, G, H), Z, (A, B, C, D, E, F, G, H, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable9", "link" : "zio\/UnzippableLowPriority2.html#Unzippable9[A,B,C,D,E,F,G,H,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G,H),Z,(A,B,C,D,E,F,G,H,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable8", "tail" : "(): In[(A, B, C, D, E, F, G), Z, (A, B, C, D, E, F, G, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable8", "link" : "zio\/UnzippableLowPriority2.html#Unzippable8[A,B,C,D,E,F,G,Z]:zio.Unzippable.In[(A,B,C,D,E,F,G),Z,(A,B,C,D,E,F,G,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable7", "tail" : "(): In[(A, B, C, D, E, F), Z, (A, B, C, D, E, F, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable7", "link" : "zio\/UnzippableLowPriority2.html#Unzippable7[A,B,C,D,E,F,Z]:zio.Unzippable.In[(A,B,C,D,E,F),Z,(A,B,C,D,E,F,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable6", "tail" : "(): In[(A, B, C, D, E), Z, (A, B, C, D, E, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable6", "link" : "zio\/UnzippableLowPriority2.html#Unzippable6[A,B,C,D,E,Z]:zio.Unzippable.In[(A,B,C,D,E),Z,(A,B,C,D,E,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable5", "tail" : "(): In[(A, B, C, D), Z, (A, B, C, D, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable5", "link" : "zio\/UnzippableLowPriority2.html#Unzippable5[A,B,C,D,Z]:zio.Unzippable.In[(A,B,C,D),Z,(A,B,C,D,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable4", "tail" : "(): In[(A, B, C), Z, (A, B, C, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable4", "link" : "zio\/UnzippableLowPriority2.html#Unzippable4[A,B,C,Z]:zio.Unzippable.In[(A,B,C),Z,(A,B,C,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable3", "tail" : "(): In[(A, B), Z, (A, B, Z)]", "member" : "zio.UnzippableLowPriority2.Unzippable3", "link" : "zio\/UnzippableLowPriority2.html#Unzippable3[A,B,Z]:zio.Unzippable.In[(A,B),Z,(A,B,Z)]", "kind" : "implicit def"}, {"label" : "Unzippable2", "tail" : "(): In[A, B, (A, B)]", "member" : "zio.UnzippableLowPriority3.Unzippable2", "link" : "zio\/UnzippableLowPriority2.html#Unzippable2[A,B]:zio.Unzippable.In[A,B,(A,B)]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/UnzippableLowPriority2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/UnzippableLowPriority2.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/UnzippableLowPriority2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/UnzippableLowPriority2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/UnzippableLowPriority2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/UnzippableLowPriority2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/UnzippableLowPriority2.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/UnzippableLowPriority2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/UnzippableLowPriority2.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/UnzippableLowPriority2.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/UnzippableLowPriority2.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/UnzippableLowPriority2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/UnzippableLowPriority2.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/UnzippableLowPriority2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/UnzippableLowPriority2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/UnzippableLowPriority2.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/UnzippableLowPriority2.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/UnzippableLowPriority2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/UnzippableLowPriority2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.UnzippableLowPriority3", "trait" : "zio\/UnzippableLowPriority3.html", "kind" : "trait", "members_trait" : [{"label" : "Unzippable2", "tail" : "(): In[A, B, (A, B)]", "member" : "zio.UnzippableLowPriority3.Unzippable2", "link" : "zio\/UnzippableLowPriority3.html#Unzippable2[A,B]:zio.Unzippable.In[A,B,(A,B)]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/UnzippableLowPriority3.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/UnzippableLowPriority3.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/UnzippableLowPriority3.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/UnzippableLowPriority3.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/UnzippableLowPriority3.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/UnzippableLowPriority3.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/UnzippableLowPriority3.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/UnzippableLowPriority3.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/UnzippableLowPriority3.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/UnzippableLowPriority3.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/UnzippableLowPriority3.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/UnzippableLowPriority3.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/UnzippableLowPriority3.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/UnzippableLowPriority3.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/UnzippableLowPriority3.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/UnzippableLowPriority3.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/UnzippableLowPriority3.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/UnzippableLowPriority3.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/UnzippableLowPriority3.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.ZEnvironment", "shortDescription" : "", "object" : "zio\/ZEnvironment$.html", "members_class" : [{"label" : "unsafe", "tail" : ": UnsafeAPI with UnsafeAPI2 with UnsafeAPI3", "member" : "zio.ZEnvironment.unsafe", "link" : "zio\/ZEnvironment.html#unsafe:ZEnvironment.this.UnsafeAPIwithZEnvironment.this.UnsafeAPI2withZEnvironment.this.UnsafeAPI3", "kind" : "val"}, {"label" : "UnsafeAPI3", "tail" : "", "member" : "zio.ZEnvironment.UnsafeAPI3", "link" : "zio\/ZEnvironment.html#UnsafeAPI3extendsAnyRef", "kind" : "trait"}, {"label" : "UnsafeAPI2", "tail" : "", "member" : "zio.ZEnvironment.UnsafeAPI2", "link" : "zio\/ZEnvironment.html#UnsafeAPI2extendsAnyRef", "kind" : "trait"}, {"label" : "UnsafeAPI", "tail" : "", "member" : "zio.ZEnvironment.UnsafeAPI", "link" : "zio\/ZEnvironment.html#UnsafeAPIextendsAnyRef", "kind" : "trait"}, {"label" : "updateAt", "tail" : "(k: K)(f: (V) => V)(ev: <:<[R, Map[K, V]], tag: Tag[Map[K, V]]): ZEnvironment[R]", "member" : "zio.ZEnvironment.updateAt", "link" : "zio\/ZEnvironment.html#updateAt[K,V](k:K)(f:V=>V)(implicitev:R<:<Map[K,V],implicittag:zio.Tag[Map[K,V]]):zio.ZEnvironment[R]", "kind" : "def"}, {"label" : "update", "tail" : "(f: (A) => A)(arg0: Tag[A]): ZEnvironment[R]", "member" : "zio.ZEnvironment.update", "link" : "zio\/ZEnvironment.html#update[A>:R](f:A=>A)(implicitevidence$3:zio.Tag[A]):zio.ZEnvironment[R]", "kind" : "def"}, {"label" : "unionAll", "tail" : "(that: ZEnvironment[R1]): ZEnvironment[R with R1]", "member" : "zio.ZEnvironment.unionAll", "link" : "zio\/ZEnvironment.html#unionAll[R1](that:zio.ZEnvironment[R1]):zio.ZEnvironment[RwithR1]", "kind" : "def"}, {"label" : "union", "tail" : "(that: ZEnvironment[R1])(arg0: zio.EnvironmentTag[R1]): ZEnvironment[R with R1]", "member" : "zio.ZEnvironment.union", "link" : "zio\/ZEnvironment.html#union[R1](that:zio.ZEnvironment[R1])(implicitevidence$2:zio.EnvironmentTag[R1]):zio.ZEnvironment[RwithR1]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "zio.ZEnvironment.toString", "link" : "zio\/ZEnvironment.html#toString():String", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "zio.ZEnvironment.isEmpty", "link" : "zio\/ZEnvironment.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "zio.ZEnvironment.size", "link" : "zio\/ZEnvironment.html#size:Int", "kind" : "def"}, {"label" : "prune", "tail" : "(tagged: zio.EnvironmentTag[R1]): ZEnvironment[R1]", "member" : "zio.ZEnvironment.prune", "link" : "zio\/ZEnvironment.html#prune[R1>:R](implicittagged:zio.EnvironmentTag[R1]):zio.ZEnvironment[R1]", "kind" : "def"}, {"label" : "hashCode", "tail" : ": Int", "member" : "zio.ZEnvironment.hashCode", "link" : "zio\/ZEnvironment.html#hashCode:Int", "kind" : "lazy val"}, {"label" : "getDynamic", "tail" : "(tag: Tag[A]): Option[A]", "member" : "zio.ZEnvironment.getDynamic", "link" : "zio\/ZEnvironment.html#getDynamic[A](implicittag:zio.Tag[A]):Option[A]", "kind" : "def"}, {"label" : "getAt", "tail" : "(k: K)(ev: <:<[R, Map[K, V]], tagged: zio.EnvironmentTag[Map[K, V]]): Option[V]", "member" : "zio.ZEnvironment.getAt", "link" : "zio\/ZEnvironment.html#getAt[K,V](k:K)(implicitev:R<:<Map[K,V],implicittagged:zio.EnvironmentTag[Map[K,V]]):Option[V]", "kind" : "def"}, {"label" : "get", "tail" : "(tag: Tag[A]): A", "member" : "zio.ZEnvironment.get", "link" : "zio\/ZEnvironment.html#get[A>:R](implicittag:zio.Tag[A]):A", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "zio.ZEnvironment.equals", "link" : "zio\/ZEnvironment.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "add", "tail" : "(a: A)(tag: Tag[A]): ZEnvironment[R with A]", "member" : "zio.ZEnvironment.add", "link" : "zio\/ZEnvironment.html#add[A](a:A)(implicittag:zio.Tag[A]):zio.ZEnvironment[RwithA]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ZEnvironment[R1])(arg0: zio.EnvironmentTag[R1]): ZEnvironment[R with R1]", "member" : "zio.ZEnvironment.++", "link" : "zio\/ZEnvironment.html#++[R1](that:zio.ZEnvironment[R1])(implicitevidence$1:zio.EnvironmentTag[R1]):zio.ZEnvironment[RwithR1]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZEnvironment.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZEnvironment.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZEnvironment.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZEnvironment.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZEnvironment.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZEnvironment.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZEnvironment.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZEnvironment.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZEnvironment.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZEnvironment.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZEnvironment.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZEnvironment.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZEnvironment.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZEnvironment.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZEnvironment.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZEnvironment.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Patch", "tail" : "", "member" : "zio.ZEnvironment.Patch", "link" : "zio\/ZEnvironment$.html#Patch", "kind" : "object"}, {"label" : "Patch", "tail" : "", "member" : "zio.ZEnvironment.Patch", "link" : "zio\/ZEnvironment$.html#Patch[-In,+Out]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "empty", "tail" : ": ZEnvironment[Any]", "member" : "zio.ZEnvironment.empty", "link" : "zio\/ZEnvironment$.html#empty:zio.ZEnvironment[Any]", "kind" : "val"}, {"label" : "apply", "tail" : "(a: A, b: B, c: C, d: D, e: E)(arg0: Tag[A], arg1: Tag[B], arg2: Tag[C], arg3: Tag[D], arg4: Tag[E]): ZEnvironment[A with B with C with D with E]", "member" : "zio.ZEnvironment.apply", "link" : "zio\/ZEnvironment$.html#apply[A,B,C,D,E](a:A,b:B,c:C,d:D,e:E)(implicitevidence$14:zio.Tag[A],implicitevidence$15:zio.Tag[B],implicitevidence$16:zio.Tag[C],implicitevidence$17:zio.Tag[D],implicitevidence$18:zio.Tag[E]):zio.ZEnvironment[AwithBwithCwithDwithE]", "kind" : "def"}, {"label" : "apply", "tail" : "(a: A, b: B, c: C, d: D)(arg0: Tag[A], arg1: Tag[B], arg2: Tag[C], arg3: Tag[D]): ZEnvironment[A with B with C with D]", "member" : "zio.ZEnvironment.apply", "link" : "zio\/ZEnvironment$.html#apply[A,B,C,D](a:A,b:B,c:C,d:D)(implicitevidence$10:zio.Tag[A],implicitevidence$11:zio.Tag[B],implicitevidence$12:zio.Tag[C],implicitevidence$13:zio.Tag[D]):zio.ZEnvironment[AwithBwithCwithD]", "kind" : "def"}, {"label" : "apply", "tail" : "(a: A, b: B, c: C)(arg0: Tag[A], arg1: Tag[B], arg2: Tag[C]): ZEnvironment[A with B with C]", "member" : "zio.ZEnvironment.apply", "link" : "zio\/ZEnvironment$.html#apply[A,B,C](a:A,b:B,c:C)(implicitevidence$7:zio.Tag[A],implicitevidence$8:zio.Tag[B],implicitevidence$9:zio.Tag[C]):zio.ZEnvironment[AwithBwithC]", "kind" : "def"}, {"label" : "apply", "tail" : "(a: A, b: B)(arg0: Tag[A], arg1: Tag[B]): ZEnvironment[A with B]", "member" : "zio.ZEnvironment.apply", "link" : "zio\/ZEnvironment$.html#apply[A,B](a:A,b:B)(implicitevidence$5:zio.Tag[A],implicitevidence$6:zio.Tag[B]):zio.ZEnvironment[AwithB]", "kind" : "def"}, {"label" : "apply", "tail" : "(a: A)(arg0: Tag[A]): ZEnvironment[A]", "member" : "zio.ZEnvironment.apply", "link" : "zio\/ZEnvironment$.html#apply[A](a:A)(implicitevidence$4:zio.Tag[A]):zio.ZEnvironment[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(): ZEnvironment[Any]", "member" : "zio.ZEnvironment.apply", "link" : "zio\/ZEnvironment$.html#apply():zio.ZEnvironment[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZEnvironment$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZEnvironment$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZEnvironment$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZEnvironment$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZEnvironment$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZEnvironment$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZEnvironment$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZEnvironment$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZEnvironment$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZEnvironment$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZEnvironment$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZEnvironment$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZEnvironment$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZEnvironment$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZEnvironment$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZEnvironment$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZEnvironment$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZEnvironment$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZEnvironment$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/ZEnvironment.html", "kind" : "class"}, {"name" : "zio.ZInputStream", "object" : "zio\/ZInputStream$.html", "members_object" : [{"label" : "fromInputStream", "tail" : "(is: InputStream): ZInputStream", "member" : "zio.ZInputStream.fromInputStream", "link" : "zio\/ZInputStream$.html#fromInputStream(is:java.io.InputStream):zio.ZInputStream", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZInputStream$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZInputStream$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZInputStream$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZInputStream$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZInputStream$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZInputStream$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZInputStream$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZInputStream$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZInputStream$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZInputStream$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZInputStream$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZInputStream$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZInputStream$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZInputStream$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZInputStream$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZInputStream$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZInputStream$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZInputStream$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZInputStream$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/ZInputStream.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZInputStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZInputStream.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZInputStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZInputStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZInputStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZInputStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZInputStream.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZInputStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZInputStream.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZInputStream.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZInputStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZInputStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZInputStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZInputStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZInputStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZInputStream.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZInputStream.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZInputStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZInputStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "readAll", "tail" : "(bufferSize: Int)(trace: Trace): IO[Option[IOException], Chunk[Byte]]", "member" : "zio.ZInputStream.readAll", "link" : "zio\/ZInputStream.html#readAll(bufferSize:Int)(implicittrace:zio.Trace):zio.IO[Option[java.io.IOException],zio.Chunk[Byte]]", "kind" : "abstract def"}, {"label" : "skip", "tail" : "(n: Long)(trace: Trace): IO[IOException, Long]", "member" : "zio.ZInputStream.skip", "link" : "zio\/ZInputStream.html#skip(n:Long)(implicittrace:zio.Trace):zio.IO[java.io.IOException,Long]", "kind" : "abstract def"}, {"label" : "readN", "tail" : "(n: Int)(trace: Trace): IO[Option[IOException], Chunk[Byte]]", "member" : "zio.ZInputStream.readN", "link" : "zio\/ZInputStream.html#readN(n:Int)(implicittrace:zio.Trace):zio.IO[Option[java.io.IOException],zio.Chunk[Byte]]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.ZIO", "object" : "zio\/ZIO$.html", "members_object" : [{"label" : "FinalizersRestorer", "tail" : "", "member" : "zio.ZIO.FinalizersRestorer", "link" : "zio\/ZIO$.html#FinalizersRestorer", "kind" : "object"}, {"label" : "FinalizersRestorer", "tail" : "", "member" : "zio.ZIO.FinalizersRestorer", "link" : "zio\/ZIO$.html#FinalizersRestorerextendsAnyRef", "kind" : "sealed trait"}, {"label" : "ParallelismRestorer", "tail" : "", "member" : "zio.ZIO.ParallelismRestorer", "link" : "zio\/ZIO$.html#ParallelismRestorer", "kind" : "object"}, {"label" : "ParallelismRestorer", "tail" : "", "member" : "zio.ZIO.ParallelismRestorer", "link" : "zio\/ZIO$.html#ParallelismRestorerextendsAnyRef", "kind" : "sealed trait"}, {"label" : "InterruptibilityRestorer", "tail" : "", "member" : "zio.ZIO.InterruptibilityRestorer", "link" : "zio\/ZIO$.html#InterruptibilityRestorer", "kind" : "object"}, {"label" : "InterruptibilityRestorer", "tail" : "", "member" : "zio.ZIO.InterruptibilityRestorer", "link" : "zio\/ZIO$.html#InterruptibilityRestorerextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Continuation", "tail" : "", "member" : "zio.ZIO.Continuation", "link" : "zio\/ZIO$.html#Continuation", "kind" : "object"}, {"label" : "ZIOConstructorLowPriority3", "tail" : "", "member" : "zio.ZIO.ZIOConstructorLowPriority3", "link" : "zio\/ZIO$.html#ZIOConstructorLowPriority3extendsAnyRef", "kind" : "trait"}, {"label" : "ZIOConstructorLowPriority2", "tail" : "", "member" : "zio.ZIO.ZIOConstructorLowPriority2", "link" : "zio\/ZIO$.html#ZIOConstructorLowPriority2extendsZIO.ZIOConstructorLowPriority3", "kind" : "trait"}, {"label" : "ZIOConstructorLowPriority1", "tail" : "", "member" : "zio.ZIO.ZIOConstructorLowPriority1", "link" : "zio\/ZIO$.html#ZIOConstructorLowPriority1extendsZIO.ZIOConstructorLowPriority2", "kind" : "trait"}, {"label" : "ZIOConstructor", "tail" : "", "member" : "zio.ZIO.ZIOConstructor", "link" : "zio\/ZIO$.html#ZIOConstructor", "kind" : "object"}, {"label" : "ZIOConstructor", "tail" : "", "member" : "zio.ZIO.ZIOConstructor", "link" : "zio\/ZIO$.html#ZIOConstructor[-Environment,+Error,In]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "Tagged", "tail" : "", "member" : "zio.ZIO.Tagged", "link" : "zio\/ZIO$.html#TaggedextendsAnyRef", "kind" : "final class"}, {"label" : "LogAnnotate", "tail" : "", "member" : "zio.ZIO.LogAnnotate", "link" : "zio\/ZIO$.html#LogAnnotateextendsAnyRef", "kind" : "final class"}, {"label" : "LogSpan", "tail" : "", "member" : "zio.ZIO.LogSpan", "link" : "zio\/ZIO$.html#LogSpanextendsAnyVal", "kind" : "final class"}, {"label" : "GetStateWithPartiallyApplied", "tail" : "", "member" : "zio.ZIO.GetStateWithPartiallyApplied", "link" : "zio\/ZIO$.html#GetStateWithPartiallyApplied[S]extendsAnyVal", "kind" : "final class"}, {"label" : "StatefulPatchPartiallyApplied", "tail" : "", "member" : "zio.ZIO.StatefulPatchPartiallyApplied", "link" : "zio\/ZIO$.html#StatefulPatchPartiallyApplied[R]extendsAnyVal", "kind" : "final class"}, {"label" : "StatefulPartiallyApplied", "tail" : "", "member" : "zio.ZIO.StatefulPartiallyApplied", "link" : "zio\/ZIO$.html#StatefulPartiallyApplied[R]extendsAnyVal", "kind" : "final class"}, {"label" : "ServiceWithZIOPartiallyApplied", "tail" : "", "member" : "zio.ZIO.ServiceWithZIOPartiallyApplied", "link" : "zio\/ZIO$.html#ServiceWithZIOPartiallyApplied[Service]extendsAnyVal", "kind" : "final class"}, {"label" : "ServiceWithPartiallyApplied", "tail" : "", "member" : "zio.ZIO.ServiceWithPartiallyApplied", "link" : "zio\/ZIO$.html#ServiceWithPartiallyApplied[Service]extendsAnyVal", "kind" : "final class"}, {"label" : "ServiceAtPartiallyApplied", "tail" : "", "member" : "zio.ZIO.ServiceAtPartiallyApplied", "link" : "zio\/ZIO$.html#ServiceAtPartiallyApplied[Service]extendsAnyVal", "kind" : "final class"}, {"label" : "UsingPartiallyApplied", "tail" : "", "member" : "zio.ZIO.UsingPartiallyApplied", "link" : "zio\/ZIO$.html#UsingPartiallyApplied[R]extendsAnyVal", "kind" : "final class"}, {"label" : "ScopedPartiallyApplied", "tail" : "", "member" : "zio.ZIO.ScopedPartiallyApplied", "link" : "zio\/ZIO$.html#ScopedPartiallyApplied[R]extendsAnyVal", "kind" : "final class"}, {"label" : "EnvironmentWithZIOPartiallyApplied", "tail" : "", "member" : "zio.ZIO.EnvironmentWithZIOPartiallyApplied", "link" : "zio\/ZIO$.html#EnvironmentWithZIOPartiallyApplied[R]extendsAnyVal", "kind" : "final class"}, {"label" : "EnvironmentWithPartiallyApplied", "tail" : "", "member" : "zio.ZIO.EnvironmentWithPartiallyApplied", "link" : "zio\/ZIO$.html#EnvironmentWithPartiallyApplied[R]extendsAnyVal", "kind" : "final class"}, {"label" : "ReleaseExit", "tail" : "", "member" : "zio.ZIO.ReleaseExit", "link" : "zio\/ZIO$.html#ReleaseExit[-R,+E,E1,+A,B]extendsAnyRef", "kind" : "final class"}, {"label" : "AcquireExit", "tail" : "", "member" : "zio.ZIO.AcquireExit", "link" : "zio\/ZIO$.html#AcquireExit[-R,+E,+A]extendsAnyVal", "kind" : "final class"}, {"label" : "Release", "tail" : "", "member" : "zio.ZIO.Release", "link" : "zio\/ZIO$.html#Release[-R,+E,+A]extendsAnyRef", "kind" : "final class"}, {"label" : "Acquire", "tail" : "", "member" : "zio.ZIO.Acquire", "link" : "zio\/ZIO$.html#Acquire[-R,+E,+A]extendsAnyVal", "kind" : "final class"}, {"label" : "TimeoutTo", "tail" : "", "member" : "zio.ZIO.TimeoutTo", "link" : "zio\/ZIO$.html#TimeoutTo[-R,+E,+A,+B]extendsAnyRef", "kind" : "final class"}, {"label" : "WhenZIODiscard", "tail" : "", "member" : "zio.ZIO.WhenZIODiscard", "link" : "zio\/ZIO$.html#WhenZIODiscard[R,E]extendsAnyVal", "kind" : "final class"}, {"label" : "WhenZIO", "tail" : "", "member" : "zio.ZIO.WhenZIO", "link" : "zio\/ZIO$.html#WhenZIO[R,E]extendsAnyVal", "kind" : "final class"}, {"label" : "UnlessZIODiscard", "tail" : "", "member" : "zio.ZIO.UnlessZIODiscard", "link" : "zio\/ZIO$.html#UnlessZIODiscard[R,E]extendsAnyVal", "kind" : "final class"}, {"label" : "UnlessZIO", "tail" : "", "member" : "zio.ZIO.UnlessZIO", "link" : "zio\/ZIO$.html#UnlessZIO[R,E]extendsAnyVal", "kind" : "final class"}, {"label" : "IfZIO", "tail" : "", "member" : "zio.ZIO.IfZIO", "link" : "zio\/ZIO$.html#IfZIO[R,E]extendsAnyVal", "kind" : "final class"}, {"label" : "Grafter", "tail" : "", "member" : "zio.ZIO.Grafter", "link" : "zio\/ZIO$.html#Grafter", "kind" : "object"}, {"label" : "Grafter", "tail" : "", "member" : "zio.ZIO.Grafter", "link" : "zio\/ZIO$.html#GrafterextendsAnyVal", "kind" : "final class"}, {"label" : "CanFilter", "tail" : "", "member" : "zio.ZIO.CanFilter", "link" : "zio\/ZIO$.html#CanFilter", "kind" : "object"}, {"label" : "CanFilter", "tail" : "", "member" : "zio.ZIO.CanFilter", "link" : "zio\/ZIO$.html#CanFilter[+E]extendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "UpdateServiceAt", "tail" : "", "member" : "zio.ZIO.UpdateServiceAt", "link" : "zio\/ZIO$.html#UpdateServiceAt[-R,+E,+A,Service]extendsAnyVal", "kind" : "final class"}, {"label" : "UpdateService", "tail" : "", "member" : "zio.ZIO.UpdateService", "link" : "zio\/ZIO$.html#UpdateService[-R,+E,+A,M]extendsAnyVal", "kind" : "final class"}, {"label" : "ProvideSomeLayer", "tail" : "", "member" : "zio.ZIO.ProvideSomeLayer", "link" : "zio\/ZIO$.html#ProvideSomeLayer[R0,-R,+E,+A]extendsAnyVal", "kind" : "final class"}, {"label" : "ZioRefineToOrDieOps", "tail" : "", "member" : "zio.ZIO.ZioRefineToOrDieOps", "link" : "zio\/ZIO$.html#ZioRefineToOrDieOps[R,E<:Throwable,A]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "ZIOBooleanOps", "tail" : "", "member" : "zio.ZIO.ZIOBooleanOps", "link" : "zio\/ZIO$.html#ZIOBooleanOps[R,E]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "ZIOAutoCloseableOps", "tail" : "", "member" : "zio.ZIO.ZIOAutoCloseableOps", "link" : "zio\/ZIO$.html#ZIOAutoCloseableOps[R,E,A<:AutoCloseable]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "yieldNow", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.yieldNow", "link" : "zio\/ZIO$.html#yieldNow(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "withSystemScoped", "tail" : "(system: => A)(tag: Tag[A], trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.ZIO.withSystemScoped", "link" : "zio\/ZIO$.html#withSystemScoped[A<:zio.System](system:=>A)(implicittag:zio.Tag[A],implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "withSystem", "tail" : "(system: => A)(zio: => ZIO[R, E, B])(tag: Tag[A], trace: Trace): ZIO[R, E, B]", "member" : "zio.ZIO.withSystem", "link" : "zio\/ZIO$.html#withSystem[R,E,A<:zio.System,B](system:=>A)(zio:=>zio.ZIO[R,E,B])(implicittag:zio.Tag[A],implicittrace:zio.Trace):zio.ZIO[R,E,B]", "kind" : "def"}, {"label" : "withRuntimeFlagsScoped", "tail" : "(update: Patch)(trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.ZIO.withRuntimeFlagsScoped", "link" : "zio\/ZIO$.html#withRuntimeFlagsScoped(update:zio.RuntimeFlags.Patch)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "withRandomScoped", "tail" : "(random: => A)(tag: Tag[A], trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.ZIO.withRandomScoped", "link" : "zio\/ZIO$.html#withRandomScoped[A<:zio.Random](random:=>A)(implicittag:zio.Tag[A],implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "withRandom", "tail" : "(random: => A)(zio: => ZIO[R, E, B])(tag: Tag[A], trace: Trace): ZIO[R, E, B]", "member" : "zio.ZIO.withRandom", "link" : "zio\/ZIO$.html#withRandom[R,E,A<:zio.Random,B](random:=>A)(zio:=>zio.ZIO[R,E,B])(implicittag:zio.Tag[A],implicittrace:zio.Trace):zio.ZIO[R,E,B]", "kind" : "def"}, {"label" : "withParallelismUnboundedMask", "tail" : "(f: (ParallelismRestorer) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.withParallelismUnboundedMask", "link" : "zio\/ZIO$.html#withParallelismUnboundedMask[R,E,A](f:zio.ZIO.ParallelismRestorer=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "withParallelismUnbounded", "tail" : "(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.withParallelismUnbounded", "link" : "zio\/ZIO$.html#withParallelismUnbounded[R,E,A](zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "withParallelismMask", "tail" : "(n: => Int)(f: (ParallelismRestorer) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.withParallelismMask", "link" : "zio\/ZIO$.html#withParallelismMask[R,E,A](n:=>Int)(f:zio.ZIO.ParallelismRestorer=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "withParallelism", "tail" : "(n: => Int)(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.withParallelism", "link" : "zio\/ZIO$.html#withParallelism[R,E,A](n:=>Int)(zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "withLoggerScoped", "tail" : "(logger: => A)(tag: Tag[A], trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.ZIO.withLoggerScoped", "link" : "zio\/ZIO$.html#withLoggerScoped[A<:zio.ZLogger[String,Any]](logger:=>A)(implicittag:zio.Tag[A],implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "withLogger", "tail" : "(logger: => A)(zio: => ZIO[R, E, B])(tag: Tag[A], trace: Trace): ZIO[R, E, B]", "member" : "zio.ZIO.withLogger", "link" : "zio\/ZIO$.html#withLogger[R,E,A<:zio.ZLogger[String,Any],B](logger:=>A)(zio:=>zio.ZIO[R,E,B])(implicittag:zio.Tag[A],implicittrace:zio.Trace):zio.ZIO[R,E,B]", "kind" : "def"}, {"label" : "withConsoleScoped", "tail" : "(console: => A)(tag: Tag[A], trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.ZIO.withConsoleScoped", "link" : "zio\/ZIO$.html#withConsoleScoped[A<:zio.Console](console:=>A)(implicittag:zio.Tag[A],implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "withConsole", "tail" : "(console: => A)(zio: => ZIO[R, E, B])(tag: Tag[A], trace: Trace): ZIO[R, E, B]", "member" : "zio.ZIO.withConsole", "link" : "zio\/ZIO$.html#withConsole[R,E,A<:zio.Console,B](console:=>A)(zio:=>zio.ZIO[R,E,B])(implicittag:zio.Tag[A],implicittrace:zio.Trace):zio.ZIO[R,E,B]", "kind" : "def"}, {"label" : "withConfigProviderScoped", "tail" : "(configProvider: => A)(tag: Tag[A], trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.ZIO.withConfigProviderScoped", "link" : "zio\/ZIO$.html#withConfigProviderScoped[A<:zio.ConfigProvider](configProvider:=>A)(implicittag:zio.Tag[A],implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "withConfigProvider", "tail" : "(configProvider: => A)(zio: => ZIO[R, E, B])(tag: Tag[A], trace: Trace): ZIO[R, E, B]", "member" : "zio.ZIO.withConfigProvider", "link" : "zio\/ZIO$.html#withConfigProvider[R,E,A<:zio.ConfigProvider,B](configProvider:=>A)(zio:=>zio.ZIO[R,E,B])(implicittag:zio.Tag[A],implicittrace:zio.Trace):zio.ZIO[R,E,B]", "kind" : "def"}, {"label" : "withClockScoped", "tail" : "(clock: => A)(tag: Tag[A], trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.ZIO.withClockScoped", "link" : "zio\/ZIO$.html#withClockScoped[A<:zio.Clock](clock:=>A)(implicittag:zio.Tag[A],implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "withClock", "tail" : "(clock: => A)(zio: => ZIO[R, E, B])(tag: Tag[A], trace: Trace): ZIO[R, E, B]", "member" : "zio.ZIO.withClock", "link" : "zio\/ZIO$.html#withClock[R,E,A<:zio.Clock,B](clock:=>A)(zio:=>zio.ZIO[R,E,B])(implicittag:zio.Tag[A],implicittrace:zio.Trace):zio.ZIO[R,E,B]", "kind" : "def"}, {"label" : "withChildren", "tail" : "(get: (UIO[Chunk[Fiber.Runtime[Any, Any]]]) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.withChildren", "link" : "zio\/ZIO$.html#withChildren[R,E,A](get:zio.UIO[zio.Chunk[zio.Fiber.Runtime[Any,Any]]]=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "whenZIODiscard", "tail" : "(p: => ZIO[R, E, Boolean]): WhenZIODiscard[R, E]", "member" : "zio.ZIO.whenZIODiscard", "link" : "zio\/ZIO$.html#whenZIODiscard[R,E](p:=>zio.ZIO[R,E,Boolean]):zio.ZIO.WhenZIODiscard[R,E]", "kind" : "def"}, {"label" : "whenZIO", "tail" : "(p: => ZIO[R, E, Boolean]): WhenZIO[R, E]", "member" : "zio.ZIO.whenZIO", "link" : "zio\/ZIO$.html#whenZIO[R,E](p:=>zio.ZIO[R,E,Boolean]):zio.ZIO.WhenZIO[R,E]", "kind" : "def"}, {"label" : "whenCaseZIODiscard", "tail" : "(a: => ZIO[R, E, A])(pf: PartialFunction[A, ZIO[R, E, Any]])(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.ZIO.whenCaseZIODiscard", "link" : "zio\/ZIO$.html#whenCaseZIODiscard[R,E,A](a:=>zio.ZIO[R,E,A])(pf:PartialFunction[A,zio.ZIO[R,E,Any]])(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "def"}, {"label" : "whenCaseZIO", "tail" : "(a: => ZIO[R, E, A])(pf: PartialFunction[A, ZIO[R, E, B]])(trace: Trace): ZIO[R, E, Option[B]]", "member" : "zio.ZIO.whenCaseZIO", "link" : "zio\/ZIO$.html#whenCaseZIO[R,E,A,B](a:=>zio.ZIO[R,E,A])(pf:PartialFunction[A,zio.ZIO[R,E,B]])(implicittrace:zio.Trace):zio.ZIO[R,E,Option[B]]", "kind" : "def"}, {"label" : "whenCaseDiscard", "tail" : "(a: => A)(pf: PartialFunction[A, ZIO[R, E, Any]])(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.ZIO.whenCaseDiscard", "link" : "zio\/ZIO$.html#whenCaseDiscard[R,E,A](a:=>A)(pf:PartialFunction[A,zio.ZIO[R,E,Any]])(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "def"}, {"label" : "whenCase", "tail" : "(a: => A)(pf: PartialFunction[A, ZIO[R, E, B]])(trace: Trace): ZIO[R, E, Option[B]]", "member" : "zio.ZIO.whenCase", "link" : "zio\/ZIO$.html#whenCase[R,E,A,B](a:=>A)(pf:PartialFunction[A,zio.ZIO[R,E,B]])(implicittrace:zio.Trace):zio.ZIO[R,E,Option[B]]", "kind" : "def"}, {"label" : "whenDiscard", "tail" : "(p: => Boolean)(zio: => ZIO[R, E, Any])(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.ZIO.whenDiscard", "link" : "zio\/ZIO$.html#whenDiscard[R,E](p:=>Boolean)(zio:=>zio.ZIO[R,E,Any])(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "def"}, {"label" : "when", "tail" : "(p: => Boolean)(zio: => ZIO[R, E, A])(trace: Trace): ZIO[R, E, Option[A]]", "member" : "zio.ZIO.when", "link" : "zio\/ZIO$.html#when[R,E,A](p:=>Boolean)(zio:=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,Option[A]]", "kind" : "def"}, {"label" : "validateFirstPar", "tail" : "(in: Collection[A])(f: (A) => ZIO[R, E, B])(bf: zio.BuildFrom[Collection[A], E, Collection[E]], ev: CanFail[E], trace: Trace): ZIO[R, Collection[E], B]", "member" : "zio.ZIO.validateFirstPar", "link" : "zio\/ZIO$.html#validateFirstPar[R,E,A,B,Collection[+Element]<:Iterable[Element]](in:Collection[A])(f:A=>zio.ZIO[R,E,B])(implicitbf:zio.BuildFrom[Collection[A],E,Collection[E]],implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,Collection[E],B]", "kind" : "def"}, {"label" : "validateFirst", "tail" : "(in: Collection[A])(f: (A) => ZIO[R, E, B])(bf: zio.BuildFrom[Collection[A], E, Collection[E]], ev: CanFail[E], trace: Trace): ZIO[R, Collection[E], B]", "member" : "zio.ZIO.validateFirst", "link" : "zio\/ZIO$.html#validateFirst[R,E,A,B,Collection[+Element]<:Iterable[Element]](in:Collection[A])(f:A=>zio.ZIO[R,E,B])(implicitbf:zio.BuildFrom[Collection[A],E,Collection[E]],implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,Collection[E],B]", "kind" : "def"}, {"label" : "validateParDiscard", "tail" : "(in: => Iterable[A])(f: (A) => ZIO[R, E, Any])(ev: CanFail[E], trace: Trace): ZIO[R, ::[E], Unit]", "member" : "zio.ZIO.validateParDiscard", "link" : "zio\/ZIO$.html#validateParDiscard[R,E,A](in:=>Iterable[A])(f:A=>zio.ZIO[R,E,Any])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,::[E],Unit]", "kind" : "def"}, {"label" : "validatePar", "tail" : "(in: NonEmptyChunk[A])(f: (A) => ZIO[R, E, B])(ev: CanFail[E], trace: Trace): ZIO[R, ::[E], NonEmptyChunk[B]]", "member" : "zio.ZIO.validatePar", "link" : "zio\/ZIO$.html#validatePar[R,E,A,B](in:zio.NonEmptyChunk[A])(f:A=>zio.ZIO[R,E,B])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,::[E],zio.NonEmptyChunk[B]]", "kind" : "def"}, {"label" : "validatePar", "tail" : "(in: Collection[A])(f: (A) => ZIO[R, E, B])(bf: zio.BuildFrom[Collection[A], B, Collection[B]], ev: CanFail[E], trace: Trace): ZIO[R, ::[E], Collection[B]]", "member" : "zio.ZIO.validatePar", "link" : "zio\/ZIO$.html#validatePar[R,E,A,B,Collection[+Element]<:Iterable[Element]](in:Collection[A])(f:A=>zio.ZIO[R,E,B])(implicitbf:zio.BuildFrom[Collection[A],B,Collection[B]],implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,::[E],Collection[B]]", "kind" : "def"}, {"label" : "validateDiscard", "tail" : "(in: => Iterable[A])(f: (A) => ZIO[R, E, Any])(ev: CanFail[E], trace: Trace): ZIO[R, ::[E], Unit]", "member" : "zio.ZIO.validateDiscard", "link" : "zio\/ZIO$.html#validateDiscard[R,E,A](in:=>Iterable[A])(f:A=>zio.ZIO[R,E,Any])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,::[E],Unit]", "kind" : "def"}, {"label" : "validate", "tail" : "(in: NonEmptyChunk[A])(f: (A) => ZIO[R, E, B])(ev: CanFail[E], trace: Trace): ZIO[R, ::[E], NonEmptyChunk[B]]", "member" : "zio.ZIO.validate", "link" : "zio\/ZIO$.html#validate[R,E,A,B](in:zio.NonEmptyChunk[A])(f:A=>zio.ZIO[R,E,B])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,::[E],zio.NonEmptyChunk[B]]", "kind" : "def"}, {"label" : "validate", "tail" : "(in: Collection[A])(f: (A) => ZIO[R, E, B])(bf: zio.BuildFrom[Collection[A], B, Collection[B]], ev: CanFail[E], trace: Trace): ZIO[R, ::[E], Collection[B]]", "member" : "zio.ZIO.validate", "link" : "zio\/ZIO$.html#validate[R,E,A,B,Collection[+Element]<:Iterable[Element]](in:Collection[A])(f:A=>zio.ZIO[R,E,B])(implicitbf:zio.BuildFrom[Collection[A],B,Collection[B]],implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,::[E],Collection[B]]", "kind" : "def"}, {"label" : "using", "tail" : "(): UsingPartiallyApplied[R]", "member" : "zio.ZIO.using", "link" : "zio\/ZIO$.html#using[R]:zio.ZIO.UsingPartiallyApplied[R]", "kind" : "def"}, {"label" : "updateState", "tail" : "(f: (S) => S)(arg0: zio.EnvironmentTag[S], trace: Trace): ZIO[ZState[S], Nothing, Unit]", "member" : "zio.ZIO.updateState", "link" : "zio\/ZIO$.html#updateState[S](f:S=>S)(implicitevidence$9:zio.EnvironmentTag[S],implicittrace:zio.Trace):zio.ZIO[zio.ZState[S],Nothing,Unit]", "kind" : "def"}, {"label" : "updateRuntimeFlags", "tail" : "(patch: Patch)(trace: Trace): ZIO[Any, Nothing, Unit]", "member" : "zio.ZIO.updateRuntimeFlags", "link" : "zio\/ZIO$.html#updateRuntimeFlags(patch:zio.RuntimeFlags.Patch)(implicittrace:zio.Trace):zio.ZIO[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "updateFiberRefs", "tail" : "(f: (FiberId.Runtime, FiberRefs) => FiberRefs)(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.updateFiberRefs", "link" : "zio\/ZIO$.html#updateFiberRefs(f:(zio.FiberId.Runtime,zio.FiberRefs)=>zio.FiberRefs)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "unshift", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.unshift", "link" : "zio\/ZIO$.html#unshift(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "unsandbox", "tail" : "(v: => ZIO[R, Cause[E], A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.unsandbox", "link" : "zio\/ZIO$.html#unsandbox[R,E,A](v:=>zio.ZIO[R,zio.Cause[E],A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "unlessZIODiscard", "tail" : "(p: => ZIO[R, E, Boolean]): UnlessZIODiscard[R, E]", "member" : "zio.ZIO.unlessZIODiscard", "link" : "zio\/ZIO$.html#unlessZIODiscard[R,E](p:=>zio.ZIO[R,E,Boolean]):zio.ZIO.UnlessZIODiscard[R,E]", "kind" : "def"}, {"label" : "unlessZIO", "tail" : "(p: => ZIO[R, E, Boolean]): UnlessZIO[R, E]", "member" : "zio.ZIO.unlessZIO", "link" : "zio\/ZIO$.html#unlessZIO[R,E](p:=>zio.ZIO[R,E,Boolean]):zio.ZIO.UnlessZIO[R,E]", "kind" : "def"}, {"label" : "unlessDiscard", "tail" : "(p: => Boolean)(zio: => ZIO[R, E, Any])(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.ZIO.unlessDiscard", "link" : "zio\/ZIO$.html#unlessDiscard[R,E](p:=>Boolean)(zio:=>zio.ZIO[R,E,Any])(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "def"}, {"label" : "unless", "tail" : "(p: => Boolean)(zio: => ZIO[R, E, A])(trace: Trace): ZIO[R, E, Option[A]]", "member" : "zio.ZIO.unless", "link" : "zio\/ZIO$.html#unless[R,E,A](p:=>Boolean)(zio:=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,Option[A]]", "kind" : "def"}, {"label" : "uninterruptibleMask", "tail" : "(f: (InterruptibilityRestorer) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.uninterruptibleMask", "link" : "zio\/ZIO$.html#uninterruptibleMask[R,E,A](f:zio.ZIO.InterruptibilityRestorer=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "uninterruptible", "tail" : "(zio: => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.uninterruptible", "link" : "zio\/ZIO$.html#uninterruptible[R,E,A](zio:=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "unit", "tail" : ": UIO[Unit]", "member" : "zio.ZIO.unit", "link" : "zio\/ZIO$.html#unit:zio.UIO[Unit]", "kind" : "val"}, {"label" : "transplant", "tail" : "(f: (Grafter) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.transplant", "link" : "zio\/ZIO$.html#transplant[R,E,A](f:zio.ZIO.Grafter=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "tags", "tail" : "(trace: Trace): ZIO[Any, Nothing, Set[MetricLabel]]", "member" : "zio.ZIO.tags", "link" : "zio\/ZIO$.html#tags(implicittrace:zio.Trace):zio.ZIO[Any,Nothing,Set[zio.metrics.MetricLabel]]", "kind" : "def"}, {"label" : "taggedScoped", "tail" : "(tags: => Set[MetricLabel])(trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.ZIO.taggedScoped", "link" : "zio\/ZIO$.html#taggedScoped(tags:=>Set[zio.metrics.MetricLabel])(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "taggedScoped", "tail" : "(tag: => MetricLabel, tags: MetricLabel*)(trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.ZIO.taggedScoped", "link" : "zio\/ZIO$.html#taggedScoped(tag:=>zio.metrics.MetricLabel,tags:zio.metrics.MetricLabel*)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "taggedScoped", "tail" : "(key: => String, value: => String)(trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.ZIO.taggedScoped", "link" : "zio\/ZIO$.html#taggedScoped(key:=>String,value:=>String)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "tagged", "tail" : "(tags: => Set[MetricLabel]): Tagged", "member" : "zio.ZIO.tagged", "link" : "zio\/ZIO$.html#tagged(tags:=>Set[zio.metrics.MetricLabel]):zio.ZIO.Tagged", "kind" : "def"}, {"label" : "tagged", "tail" : "(tag: => MetricLabel, tags: MetricLabel*): Tagged", "member" : "zio.ZIO.tagged", "link" : "zio\/ZIO$.html#tagged(tag:=>zio.metrics.MetricLabel,tags:zio.metrics.MetricLabel*):zio.ZIO.Tagged", "kind" : "def"}, {"label" : "tagged", "tail" : "(key: => String, value: => String): Tagged", "member" : "zio.ZIO.tagged", "link" : "zio\/ZIO$.html#tagged(key:=>String,value:=>String):zio.ZIO.Tagged", "kind" : "def"}, {"label" : "stackTrace", "tail" : "(trace: Trace): UIO[StackTrace]", "member" : "zio.ZIO.stackTrace", "link" : "zio\/ZIO$.html#stackTrace(implicittrace:zio.Trace):zio.UIO[zio.StackTrace]", "kind" : "def"}, {"label" : "systemWith", "tail" : "(f: (System) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.systemWith", "link" : "zio\/ZIO$.html#systemWith[R,E,A](f:zio.System=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "system", "tail" : "(trace: Trace): UIO[System]", "member" : "zio.ZIO.system", "link" : "zio\/ZIO$.html#system(implicittrace:zio.Trace):zio.UIO[zio.System]", "kind" : "def"}, {"label" : "suspendSucceedUnsafe", "tail" : "(zio: (Unsafe) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.suspendSucceedUnsafe", "link" : "zio\/ZIO$.html#suspendSucceedUnsafe[R,E,A](zio:zio.Unsafe=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "suspendSucceed", "tail" : "(zio: => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.suspendSucceed", "link" : "zio\/ZIO$.html#suspendSucceed[R,E,A](zio:=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "suspend", "tail" : "(rio: => RIO[R, A])(trace: Trace): RIO[R, A]", "member" : "zio.ZIO.suspend", "link" : "zio\/ZIO$.html#suspend[R,A](rio:=>zio.RIO[R,A])(implicittrace:zio.Trace):zio.RIO[R,A]", "kind" : "def"}, {"label" : "succeedUnsafe", "tail" : "(a: (Unsafe) => A)(trace: Trace): UIO[A]", "member" : "zio.ZIO.succeedUnsafe", "link" : "zio\/ZIO$.html#succeedUnsafe[A](a:zio.Unsafe=>A)(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "def"}, {"label" : "succeedBlockingUnsafe", "tail" : "(a: (Unsafe) => A)(trace: Trace): UIO[A]", "member" : "zio.ZIO.succeedBlockingUnsafe", "link" : "zio\/ZIO$.html#succeedBlockingUnsafe[A](a:zio.Unsafe=>A)(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "def"}, {"label" : "statefulPatch", "tail" : "(): StatefulPatchPartiallyApplied[R]", "member" : "zio.ZIO.statefulPatch", "link" : "zio\/ZIO$.html#statefulPatch[R]:zio.ZIO.StatefulPatchPartiallyApplied[R]", "kind" : "def"}, {"label" : "stateful", "tail" : "(): StatefulPartiallyApplied[R]", "member" : "zio.ZIO.stateful", "link" : "zio\/ZIO$.html#stateful[R]:zio.ZIO.StatefulPartiallyApplied[R]", "kind" : "def"}, {"label" : "some", "tail" : "(a: => A)(trace: Trace): UIO[Option[A]]", "member" : "zio.ZIO.some", "link" : "zio\/ZIO$.html#some[A](a:=>A)(implicittrace:zio.Trace):zio.UIO[Option[A]]", "kind" : "def"}, {"label" : "sleep", "tail" : "(duration: => zio.Duration)(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.sleep", "link" : "zio\/ZIO$.html#sleep(duration:=>zio.Duration)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "shift", "tail" : "(executor: => Executor)(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.shift", "link" : "zio\/ZIO$.html#shift(executor:=>zio.Executor)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "serviceWithZIO", "tail" : "(): ServiceWithZIOPartiallyApplied[Service]", "member" : "zio.ZIO.serviceWithZIO", "link" : "zio\/ZIO$.html#serviceWithZIO[Service]:zio.ZIO.ServiceWithZIOPartiallyApplied[Service]", "kind" : "def"}, {"label" : "serviceWith", "tail" : "(): ServiceWithPartiallyApplied[Service]", "member" : "zio.ZIO.serviceWith", "link" : "zio\/ZIO$.html#serviceWith[Service]:zio.ZIO.ServiceWithPartiallyApplied[Service]", "kind" : "def"}, {"label" : "serviceAt", "tail" : "(): ServiceAtPartiallyApplied[Service]", "member" : "zio.ZIO.serviceAt", "link" : "zio\/ZIO$.html#serviceAt[Service]:zio.ZIO.ServiceAtPartiallyApplied[Service]", "kind" : "def"}, {"label" : "service", "tail" : "(arg0: Tag[A], trace: Trace): URIO[A, A]", "member" : "zio.ZIO.service", "link" : "zio\/ZIO$.html#service[A](implicitevidence$8:zio.Tag[A],implicittrace:zio.Trace):zio.URIO[A,A]", "kind" : "def"}, {"label" : "setState", "tail" : "(s: => S)(arg0: zio.EnvironmentTag[S], trace: Trace): ZIO[ZState[S], Nothing, Unit]", "member" : "zio.ZIO.setState", "link" : "zio\/ZIO$.html#setState[S](s:=>S)(implicitevidence$7:zio.EnvironmentTag[S],implicittrace:zio.Trace):zio.ZIO[zio.ZState[S],Nothing,Unit]", "kind" : "def"}, {"label" : "setFiberRefs", "tail" : "(fiberRefs: => FiberRefs)(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.setFiberRefs", "link" : "zio\/ZIO$.html#setFiberRefs(fiberRefs:=>zio.FiberRefs)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "sequentialFinalizers", "tail" : "(zio: => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.sequentialFinalizers", "link" : "zio\/ZIO$.html#sequentialFinalizers[R,E,A](zio:=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "scopeWith", "tail" : "(f: (Scope) => ZIO[R, E, A])(trace: Trace): ZIO[R with Scope, E, A]", "member" : "zio.ZIO.scopeWith", "link" : "zio\/ZIO$.html#scopeWith[R,E,A](f:zio.Scope=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,E,A]", "kind" : "def"}, {"label" : "scopedWith", "tail" : "(f: (Scope) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.scopedWith", "link" : "zio\/ZIO$.html#scopedWith[R,E,A](f:zio.Scope=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "scoped", "tail" : "(): ScopedPartiallyApplied[R]", "member" : "zio.ZIO.scoped", "link" : "zio\/ZIO$.html#scoped[R]:zio.ZIO.ScopedPartiallyApplied[R]", "kind" : "def"}, {"label" : "scope", "tail" : "(trace: Trace): ZIO[Scope, Nothing, Scope]", "member" : "zio.ZIO.scope", "link" : "zio\/ZIO$.html#scope(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,zio.Scope]", "kind" : "def"}, {"label" : "runtimeFlags", "tail" : "(trace: Trace): ZIO[Any, Nothing, RuntimeFlags]", "member" : "zio.ZIO.runtimeFlags", "link" : "zio\/ZIO$.html#runtimeFlags(implicittrace:zio.Trace):zio.ZIO[Any,Nothing,zio.RuntimeFlags]", "kind" : "def"}, {"label" : "runtime", "tail" : "(trace: Trace): URIO[R, Runtime[R]]", "member" : "zio.ZIO.runtime", "link" : "zio\/ZIO$.html#runtime[R](implicittrace:zio.Trace):zio.URIO[R,zio.Runtime[R]]", "kind" : "def"}, {"label" : "right", "tail" : "(b: => B)(trace: Trace): UIO[Either[Nothing, B]]", "member" : "zio.ZIO.right", "link" : "zio\/ZIO$.html#right[B](b:=>B)(implicittrace:zio.Trace):zio.UIO[Either[Nothing,B]]", "kind" : "def"}, {"label" : "replicateZIODiscard", "tail" : "(n: => Int)(effect: => ZIO[R, E, A])(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.ZIO.replicateZIODiscard", "link" : "zio\/ZIO$.html#replicateZIODiscard[R,E,A](n:=>Int)(effect:=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "def"}, {"label" : "replicateZIO", "tail" : "(n: => Int)(effect: => ZIO[R, E, A])(trace: Trace): ZIO[R, E, Iterable[A]]", "member" : "zio.ZIO.replicateZIO", "link" : "zio\/ZIO$.html#replicateZIO[R,E,A](n:=>Int)(effect:=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,Iterable[A]]", "kind" : "def"}, {"label" : "replicate", "tail" : "(n: Int)(effect: ZIO[R, E, A])(trace: Trace): Iterable[ZIO[R, E, A]]", "member" : "zio.ZIO.replicate", "link" : "zio\/ZIO$.html#replicate[R,E,A](n:Int)(effect:zio.ZIO[R,E,A])(implicittrace:zio.Trace):Iterable[zio.ZIO[R,E,A]]", "kind" : "def"}, {"label" : "refailCause", "tail" : "(cause: Cause[E])(trace: Trace): ZIO[Any, E, Nothing]", "member" : "zio.ZIO.refailCause", "link" : "zio\/ZIO$.html#refailCause[E](cause:zio.Cause[E])(implicittrace:zio.Trace):zio.ZIO[Any,E,Nothing]", "kind" : "def"}, {"label" : "reduceAllPar", "tail" : "(a0: => ZIO[R, E, A], as0: => Iterable[ZIO[R1, E, A]])(f: (A, A) => A)(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.reduceAllPar", "link" : "zio\/ZIO$.html#reduceAllPar[R,R1<:R,E,A](a0:=>zio.ZIO[R,E,A],as0:=>Iterable[zio.ZIO[R1,E,A]])(f:(A,A)=>A)(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "def"}, {"label" : "reduceAll", "tail" : "(a: => ZIO[R, E, A], as: => Iterable[ZIO[R1, E, A]])(f: (A, A) => A)(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.reduceAll", "link" : "zio\/ZIO$.html#reduceAll[R,R1<:R,E,A](a:=>zio.ZIO[R,E,A],as:=>Iterable[zio.ZIO[R1,E,A]])(f:(A,A)=>A)(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "def"}, {"label" : "randomWith", "tail" : "(f: (Random) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.randomWith", "link" : "zio\/ZIO$.html#randomWith[R,E,A](f:zio.Random=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "random", "tail" : "(trace: Trace): UIO[Random]", "member" : "zio.ZIO.random", "link" : "zio\/ZIO$.html#random(implicittrace:zio.Trace):zio.UIO[zio.Random]", "kind" : "def"}, {"label" : "raceFirst", "tail" : "(zio: ZIO[R, E, A], ios: Iterable[ZIO[R1, E, A]])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.raceFirst", "link" : "zio\/ZIO$.html#raceFirst[R,R1<:R,E,A](zio:zio.ZIO[R,E,A],ios:Iterable[zio.ZIO[R1,E,A]])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "def"}, {"label" : "raceAll", "tail" : "(zio: => ZIO[R, E, A], ios: => Iterable[ZIO[R1, E, A]])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.raceAll", "link" : "zio\/ZIO$.html#raceAll[R,R1<:R,E,A](zio:=>zio.ZIO[R,E,A],ios:=>Iterable[zio.ZIO[R1,E,A]])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "def"}, {"label" : "provideLayer", "tail" : "(layer: ZLayer[RIn, E, ROut])(zio: ZIO[ROut with RIn2, E, ROut2])(ev: zio.EnvironmentTag[RIn2], tag: zio.EnvironmentTag[ROut], trace: Trace): ZIO[RIn with RIn2, E, ROut2]", "member" : "zio.ZIO.provideLayer", "link" : "zio\/ZIO$.html#provideLayer[RIn,E,ROut,RIn2,ROut2](layer:zio.ZLayer[RIn,E,ROut])(zio:zio.ZIO[ROutwithRIn2,E,ROut2])(implicitev:zio.EnvironmentTag[RIn2],implicittag:zio.EnvironmentTag[ROut],implicittrace:zio.Trace):zio.ZIO[RInwithRIn2,E,ROut2]", "kind" : "def"}, {"label" : "provideEnvironment", "tail" : "(r: => ZEnvironment[R])(trace: Trace): (ZIO[R, E, A]) => IO[E, A]", "member" : "zio.ZIO.provideEnvironment", "link" : "zio\/ZIO$.html#provideEnvironment[R,E,A](r:=>zio.ZEnvironment[R])(implicittrace:zio.Trace):zio.ZIO[R,E,A]=>zio.IO[E,A]", "kind" : "def"}, {"label" : "partitionPar", "tail" : "(in: => Iterable[A])(f: (A) => ZIO[R, E, B])(ev: CanFail[E], trace: Trace): ZIO[R, Nothing, (Iterable[E], Iterable[B])]", "member" : "zio.ZIO.partitionPar", "link" : "zio\/ZIO$.html#partitionPar[R,E,A,B](in:=>Iterable[A])(f:A=>zio.ZIO[R,E,B])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,Nothing,(Iterable[E],Iterable[B])]", "kind" : "def"}, {"label" : "partition", "tail" : "(in: => Iterable[A])(f: (A) => ZIO[R, E, B])(ev: CanFail[E], trace: Trace): ZIO[R, Nothing, (Iterable[E], Iterable[B])]", "member" : "zio.ZIO.partition", "link" : "zio\/ZIO$.html#partition[R,E,A,B](in:=>Iterable[A])(f:A=>zio.ZIO[R,E,B])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,Nothing,(Iterable[E],Iterable[B])]", "kind" : "def"}, {"label" : "parallelismWith", "tail" : "(f: (Option[Int]) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.parallelismWith", "link" : "zio\/ZIO$.html#parallelismWith[R,E,A](f:Option[Int]=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "parallelism", "tail" : "(trace: Trace): UIO[Option[Int]]", "member" : "zio.ZIO.parallelism", "link" : "zio\/ZIO$.html#parallelism(implicittrace:zio.Trace):zio.UIO[Option[Int]]", "kind" : "def"}, {"label" : "parallelFinalizersMask", "tail" : "(f: (FinalizersRestorer) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.parallelFinalizersMask", "link" : "zio\/ZIO$.html#parallelFinalizersMask[R,E,A](f:zio.ZIO.FinalizersRestorer=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "parallelFinalizers", "tail" : "(zio: => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.parallelFinalizers", "link" : "zio\/ZIO$.html#parallelFinalizers[R,E,A](zio:=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "patchFiberRefs", "tail" : "(patch: Patch)(trace: Trace): ZIO[Any, Nothing, Unit]", "member" : "zio.ZIO.patchFiberRefs", "link" : "zio\/ZIO$.html#patchFiberRefs(patch:zio.FiberRefs.Patch)(implicittrace:zio.Trace):zio.ZIO[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "onExecutorScoped", "tail" : "(executor: => Executor)(trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.ZIO.onExecutorScoped", "link" : "zio\/ZIO$.html#onExecutorScoped(executor:=>zio.Executor)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "onExecutor", "tail" : "(executor: => Executor)(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.onExecutor", "link" : "zio\/ZIO$.html#onExecutor[R,E,A](executor:=>zio.Executor)(zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "noneOrFailWith", "tail" : "(o: => Option[O])(f: (O) => E)(trace: Trace): IO[E, Unit]", "member" : "zio.ZIO.noneOrFailWith", "link" : "zio\/ZIO$.html#noneOrFailWith[E,O](o:=>Option[O])(f:O=>E)(implicittrace:zio.Trace):zio.IO[E,Unit]", "kind" : "def"}, {"label" : "noneOrFail", "tail" : "(o: => Option[E])(trace: Trace): IO[E, Unit]", "member" : "zio.ZIO.noneOrFail", "link" : "zio\/ZIO$.html#noneOrFail[E](o:=>Option[E])(implicittrace:zio.Trace):zio.IO[E,Unit]", "kind" : "def"}, {"label" : "none", "tail" : ": UIO[Option[Nothing]]", "member" : "zio.ZIO.none", "link" : "zio\/ZIO$.html#none:zio.UIO[Option[Nothing]]", "kind" : "val"}, {"label" : "never", "tail" : "(trace: Trace): UIO[Nothing]", "member" : "zio.ZIO.never", "link" : "zio\/ZIO$.html#never(implicittrace:zio.Trace):zio.UIO[Nothing]", "kind" : "def"}, {"label" : "metrics", "tail" : "(trace: Trace): UIO[Metrics]", "member" : "zio.ZIO.metrics", "link" : "zio\/ZIO$.html#metrics(implicittrace:zio.Trace):zio.UIO[zio.metrics.Metrics]", "kind" : "def"}, {"label" : "mergeAllPar", "tail" : "(in: => Iterable[ZIO[R, E, A]])(zero: => B)(f: (B, A) => B)(trace: Trace): ZIO[R, E, B]", "member" : "zio.ZIO.mergeAllPar", "link" : "zio\/ZIO$.html#mergeAllPar[R,E,A,B](in:=>Iterable[zio.ZIO[R,E,A]])(zero:=>B)(f:(B,A)=>B)(implicittrace:zio.Trace):zio.ZIO[R,E,B]", "kind" : "def"}, {"label" : "mergeAll", "tail" : "(in: => Iterable[ZIO[R, E, A]])(zero: => B)(f: (B, A) => B)(trace: Trace): ZIO[R, E, B]", "member" : "zio.ZIO.mergeAll", "link" : "zio\/ZIO$.html#mergeAll[R,E,A,B](in:=>Iterable[zio.ZIO[R,E,A]])(zero:=>B)(f:(B,A)=>B)(implicittrace:zio.Trace):zio.ZIO[R,E,B]", "kind" : "def"}, {"label" : "memoize", "tail" : "(f: (A) => ZIO[R, E, B])(trace: Trace): UIO[(A) => ZIO[R, E, B]]", "member" : "zio.ZIO.memoize", "link" : "zio\/ZIO$.html#memoize[R,E,A,B](f:A=>zio.ZIO[R,E,B])(implicittrace:zio.Trace):zio.UIO[A=>zio.ZIO[R,E,B]]", "kind" : "def"}, {"label" : "logWarningCause", "tail" : "(cause: => Cause[Any])(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.logWarningCause", "link" : "zio\/ZIO$.html#logWarningCause(cause:=>zio.Cause[Any])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "logWarningCause", "tail" : "(message: => String, cause: => Cause[Any])(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.logWarningCause", "link" : "zio\/ZIO$.html#logWarningCause(message:=>String,cause:=>zio.Cause[Any])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "logWarning", "tail" : "(message: => String)(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.logWarning", "link" : "zio\/ZIO$.html#logWarning(message:=>String)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "logTraceCause", "tail" : "(cause: => Cause[Any])(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.logTraceCause", "link" : "zio\/ZIO$.html#logTraceCause(cause:=>zio.Cause[Any])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "logTraceCause", "tail" : "(message: => String, cause: => Cause[Any])(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.logTraceCause", "link" : "zio\/ZIO$.html#logTraceCause(message:=>String,cause:=>zio.Cause[Any])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "logTrace", "tail" : "(message: => String)(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.logTrace", "link" : "zio\/ZIO$.html#logTrace(message:=>String)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "logSpans", "tail" : "(trace: Trace): UIO[List[zio.LogSpan]]", "member" : "zio.ZIO.logSpans", "link" : "zio\/ZIO$.html#logSpans(implicittrace:zio.Trace):zio.UIO[List[zio.LogSpan]]", "kind" : "def"}, {"label" : "logSpanScoped", "tail" : "(label: => String)(trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.ZIO.logSpanScoped", "link" : "zio\/ZIO$.html#logSpanScoped(label:=>String)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "logSpan", "tail" : "(label: => String): LogSpan", "member" : "zio.ZIO.logSpan", "link" : "zio\/ZIO$.html#logSpan(label:=>String):zio.ZIO.LogSpan", "kind" : "def"}, {"label" : "logLevelScoped", "tail" : "(level: LogLevel)(trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.ZIO.logLevelScoped", "link" : "zio\/ZIO$.html#logLevelScoped(level:zio.LogLevel)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "logLevel", "tail" : "(level: LogLevel): LogLevel", "member" : "zio.ZIO.logLevel", "link" : "zio\/ZIO$.html#logLevel(level:zio.LogLevel):zio.LogLevel", "kind" : "def"}, {"label" : "logInfoCause", "tail" : "(cause: => Cause[Any])(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.logInfoCause", "link" : "zio\/ZIO$.html#logInfoCause(cause:=>zio.Cause[Any])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "logInfoCause", "tail" : "(message: => String, cause: => Cause[Any])(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.logInfoCause", "link" : "zio\/ZIO$.html#logInfoCause(message:=>String,cause:=>zio.Cause[Any])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "logInfo", "tail" : "(message: => String)(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.logInfo", "link" : "zio\/ZIO$.html#logInfo(message:=>String)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "logFatalCause", "tail" : "(cause: => Cause[Any])(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.logFatalCause", "link" : "zio\/ZIO$.html#logFatalCause(cause:=>zio.Cause[Any])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "logFatalCause", "tail" : "(message: => String, cause: => Cause[Any])(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.logFatalCause", "link" : "zio\/ZIO$.html#logFatalCause(message:=>String,cause:=>zio.Cause[Any])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "logFatal", "tail" : "(message: => String)(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.logFatal", "link" : "zio\/ZIO$.html#logFatal(message:=>String)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "logErrorCause", "tail" : "(cause: => Cause[Any])(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.logErrorCause", "link" : "zio\/ZIO$.html#logErrorCause(cause:=>zio.Cause[Any])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "logErrorCause", "tail" : "(message: => String, cause: => Cause[Any])(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.logErrorCause", "link" : "zio\/ZIO$.html#logErrorCause(message:=>String,cause:=>zio.Cause[Any])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "logError", "tail" : "(message: => String)(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.logError", "link" : "zio\/ZIO$.html#logError(message:=>String)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "logDebugCause", "tail" : "(cause: => Cause[Any])(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.logDebugCause", "link" : "zio\/ZIO$.html#logDebugCause(cause:=>zio.Cause[Any])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "logDebugCause", "tail" : "(message: => String, cause: => Cause[Any])(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.logDebugCause", "link" : "zio\/ZIO$.html#logDebugCause(message:=>String,cause:=>zio.Cause[Any])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "logDebug", "tail" : "(message: => String)(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.logDebug", "link" : "zio\/ZIO$.html#logDebug(message:=>String)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "logAnnotations", "tail" : "(trace: Trace): UIO[Map[String, String]]", "member" : "zio.ZIO.logAnnotations", "link" : "zio\/ZIO$.html#logAnnotations(implicittrace:zio.Trace):zio.UIO[Map[String,String]]", "kind" : "def"}, {"label" : "logAnnotateScoped", "tail" : "(logAnnotations: => Set[LogAnnotation])(trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.ZIO.logAnnotateScoped", "link" : "zio\/ZIO$.html#logAnnotateScoped(logAnnotations:=>Set[zio.LogAnnotation])(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "logAnnotateScoped", "tail" : "(logAnnotation: => LogAnnotation, logAnnotations: LogAnnotation*)(trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.ZIO.logAnnotateScoped", "link" : "zio\/ZIO$.html#logAnnotateScoped(logAnnotation:=>zio.LogAnnotation,logAnnotations:zio.LogAnnotation*)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "logAnnotateScoped", "tail" : "(key: => String, value: => String)(trace: Trace): ZIO[Scope, Nothing, Unit]", "member" : "zio.ZIO.logAnnotateScoped", "link" : "zio\/ZIO$.html#logAnnotateScoped(key:=>String,value:=>String)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "logAnnotate", "tail" : "(logAnnotations: => Set[LogAnnotation]): LogAnnotate", "member" : "zio.ZIO.logAnnotate", "link" : "zio\/ZIO$.html#logAnnotate(logAnnotations:=>Set[zio.LogAnnotation]):zio.ZIO.LogAnnotate", "kind" : "def"}, {"label" : "logAnnotate", "tail" : "(logAnnotation: => LogAnnotation, logAnnotations: LogAnnotation*): LogAnnotate", "member" : "zio.ZIO.logAnnotate", "link" : "zio\/ZIO$.html#logAnnotate(logAnnotation:=>zio.LogAnnotation,logAnnotations:zio.LogAnnotation*):zio.ZIO.LogAnnotate", "kind" : "def"}, {"label" : "logAnnotate", "tail" : "(key: => String, value: => String): LogAnnotate", "member" : "zio.ZIO.logAnnotate", "link" : "zio\/ZIO$.html#logAnnotate(key:=>String,value:=>String):zio.ZIO.LogAnnotate", "kind" : "def"}, {"label" : "logCause", "tail" : "(message: => String, cause: => Cause[Any])(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.logCause", "link" : "zio\/ZIO$.html#logCause(message:=>String,cause:=>zio.Cause[Any])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "logCause", "tail" : "(cause: => Cause[Any])(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.logCause", "link" : "zio\/ZIO$.html#logCause(cause:=>zio.Cause[Any])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "log", "tail" : "(message: => String)(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.log", "link" : "zio\/ZIO$.html#log(message:=>String)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "not", "tail" : "(effect: => ZIO[R, E, Boolean])(trace: Trace): ZIO[R, E, Boolean]", "member" : "zio.ZIO.not", "link" : "zio\/ZIO$.html#not[R,E](effect:=>zio.ZIO[R,E,Boolean])(implicittrace:zio.Trace):zio.ZIO[R,E,Boolean]", "kind" : "def"}, {"label" : "loopDiscard", "tail" : "(initial: => S)(cont: (S) => Boolean, inc: (S) => S)(body: (S) => ZIO[R, E, Any])(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.ZIO.loopDiscard", "link" : "zio\/ZIO$.html#loopDiscard[R,E,S](initial:=>S)(cont:S=>Boolean,inc:S=>S)(body:S=>zio.ZIO[R,E,Any])(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "def"}, {"label" : "loop", "tail" : "(initial: => S)(cont: (S) => Boolean, inc: (S) => S)(body: (S) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, List[A]]", "member" : "zio.ZIO.loop", "link" : "zio\/ZIO$.html#loop[R,E,A,S](initial:=>S)(cont:S=>Boolean,inc:S=>S)(body:S=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,List[A]]", "kind" : "def"}, {"label" : "loggersWith", "tail" : "(f: (Set[ZLogger[String, Any]]) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.loggersWith", "link" : "zio\/ZIO$.html#loggersWith[R,E,A](f:Set[zio.ZLogger[String,Any]]=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "loggers", "tail" : "(trace: Trace): UIO[Set[ZLogger[String, Any]]]", "member" : "zio.ZIO.loggers", "link" : "zio\/ZIO$.html#loggers(implicittrace:zio.Trace):zio.UIO[Set[zio.ZLogger[String,Any]]]", "kind" : "def"}, {"label" : "left", "tail" : "(a: => A)(trace: Trace): UIO[Either[A, Nothing]]", "member" : "zio.ZIO.left", "link" : "zio\/ZIO$.html#left[A](a:=>A)(implicittrace:zio.Trace):zio.UIO[Either[A,Nothing]]", "kind" : "def"}, {"label" : "whileLoop", "tail" : "(check: => Boolean)(body: => ZIO[R, E, A])(process: (A) => Any)(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.ZIO.whileLoop", "link" : "zio\/ZIO$.html#whileLoop[R,E,A](check:=>Boolean)(body:=>zio.ZIO[R,E,A])(process:A=>Any)(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "def"}, {"label" : "iterate", "tail" : "(initial: => S)(cont: (S) => Boolean)(body: (S) => ZIO[R, E, S])(trace: Trace): ZIO[R, E, S]", "member" : "zio.ZIO.iterate", "link" : "zio\/ZIO$.html#iterate[R,E,S](initial:=>S)(cont:S=>Boolean)(body:S=>zio.ZIO[R,E,S])(implicittrace:zio.Trace):zio.ZIO[R,E,S]", "kind" : "def"}, {"label" : "isFatalWith", "tail" : "(f: ((Throwable) => Boolean) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.isFatalWith", "link" : "zio\/ZIO$.html#isFatalWith[R,E,A](f:(Throwable=>Boolean)=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "isFatal", "tail" : "(trace: Trace): UIO[(Throwable) => Boolean]", "member" : "zio.ZIO.isFatal", "link" : "zio\/ZIO$.html#isFatal(implicittrace:zio.Trace):zio.UIO[Throwable=>Boolean]", "kind" : "def"}, {"label" : "interruptibleMask", "tail" : "(k: (InterruptibilityRestorer) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.interruptibleMask", "link" : "zio\/ZIO$.html#interruptibleMask[R,E,A](k:zio.ZIO.InterruptibilityRestorer=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "interruptible", "tail" : "(zio: => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.interruptible", "link" : "zio\/ZIO$.html#interruptible[R,E,A](zio:=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "interruptAs", "tail" : "(fiberId: => FiberId)(trace: Trace): UIO[Nothing]", "member" : "zio.ZIO.interruptAs", "link" : "zio\/ZIO$.html#interruptAs(fiberId:=>zio.FiberId)(implicittrace:zio.Trace):zio.UIO[Nothing]", "kind" : "def"}, {"label" : "interrupt", "tail" : "(trace: Trace): UIO[Nothing]", "member" : "zio.ZIO.interrupt", "link" : "zio\/ZIO$.html#interrupt(implicittrace:zio.Trace):zio.UIO[Nothing]", "kind" : "def"}, {"label" : "inheritFiberRefs", "tail" : "(childFiberRefs: FiberRefs)(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.inheritFiberRefs", "link" : "zio\/ZIO$.html#inheritFiberRefs(childFiberRefs:zio.FiberRefs)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "infinity", "tail" : "(trace: Trace): UIO[Nothing]", "member" : "zio.ZIO.infinity", "link" : "zio\/ZIO$.html#infinity(implicittrace:zio.Trace):zio.UIO[Nothing]", "kind" : "def"}, {"label" : "ifZIO", "tail" : "(b: => ZIO[R, E, Boolean]): IfZIO[R, E]", "member" : "zio.ZIO.ifZIO", "link" : "zio\/ZIO$.html#ifZIO[R,E](b:=>zio.ZIO[R,E,Boolean]):zio.ZIO.IfZIO[R,E]", "kind" : "def"}, {"label" : "getStateWith", "tail" : "(): GetStateWithPartiallyApplied[S]", "member" : "zio.ZIO.getStateWith", "link" : "zio\/ZIO$.html#getStateWith[S]:zio.ZIO.GetStateWithPartiallyApplied[S]", "kind" : "def"}, {"label" : "getState", "tail" : "(arg0: zio.EnvironmentTag[S], trace: Trace): ZIO[ZState[S], Nothing, S]", "member" : "zio.ZIO.getState", "link" : "zio\/ZIO$.html#getState[S](implicitevidence$6:zio.EnvironmentTag[S],implicittrace:zio.Trace):zio.ZIO[zio.ZState[S],Nothing,S]", "kind" : "def"}, {"label" : "getOrFailWith", "tail" : "(e: => E)(v: => Option[A])(trace: Trace): IO[E, A]", "member" : "zio.ZIO.getOrFailWith", "link" : "zio\/ZIO$.html#getOrFailWith[E,A](e:=>E)(v:=>Option[A])(implicittrace:zio.Trace):zio.IO[E,A]", "kind" : "final def"}, {"label" : "getOrFailUnit", "tail" : "(v: => Option[A])(trace: Trace): IO[Unit, A]", "member" : "zio.ZIO.getOrFailUnit", "link" : "zio\/ZIO$.html#getOrFailUnit[A](v:=>Option[A])(implicittrace:zio.Trace):zio.IO[Unit,A]", "kind" : "final def"}, {"label" : "getOrFail", "tail" : "(v: => Option[A])(trace: Trace): Task[A]", "member" : "zio.ZIO.getOrFail", "link" : "zio\/ZIO$.html#getOrFail[A](v:=>Option[A])(implicittrace:zio.Trace):zio.Task[A]", "kind" : "final def"}, {"label" : "getFiberRefs", "tail" : "(trace: Trace): UIO[FiberRefs]", "member" : "zio.ZIO.getFiberRefs", "link" : "zio\/ZIO$.html#getFiberRefs(implicittrace:zio.Trace):zio.UIO[zio.FiberRefs]", "kind" : "def"}, {"label" : "fromTry", "tail" : "(value: => Try[A])(trace: Trace): Task[A]", "member" : "zio.ZIO.fromTry", "link" : "zio\/ZIO$.html#fromTry[A](value:=>scala.util.Try[A])(implicittrace:zio.Trace):zio.Task[A]", "kind" : "def"}, {"label" : "fromOption", "tail" : "(v: => Option[A])(trace: Trace): IO[Option[Nothing], A]", "member" : "zio.ZIO.fromOption", "link" : "zio\/ZIO$.html#fromOption[A](v:=>Option[A])(implicittrace:zio.Trace):zio.IO[Option[Nothing],A]", "kind" : "def"}, {"label" : "fromFutureInterrupt", "tail" : "(make: (ExecutionContext) => Future[A])(trace: Trace): Task[A]", "member" : "zio.ZIO.fromFutureInterrupt", "link" : "zio\/ZIO$.html#fromFutureInterrupt[A](make:scala.concurrent.ExecutionContext=>scala.concurrent.Future[A])(implicittrace:zio.Trace):zio.Task[A]", "kind" : "def"}, {"label" : "fromPromiseScala", "tail" : "(promise: => scala.concurrent.Promise[A])(trace: Trace): Task[A]", "member" : "zio.ZIO.fromPromiseScala", "link" : "zio\/ZIO$.html#fromPromiseScala[A](promise:=>scala.concurrent.Promise[A])(implicittrace:zio.Trace):zio.Task[A]", "kind" : "def"}, {"label" : "fromFuture", "tail" : "(make: (ExecutionContext) => Future[A])(trace: Trace): Task[A]", "member" : "zio.ZIO.fromFuture", "link" : "zio\/ZIO$.html#fromFuture[A](make:scala.concurrent.ExecutionContext=>scala.concurrent.Future[A])(implicittrace:zio.Trace):zio.Task[A]", "kind" : "def"}, {"label" : "fromFiberZIO", "tail" : "(fiber: => ZIO[R, E, Fiber[E, A]])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.fromFiberZIO", "link" : "zio\/ZIO$.html#fromFiberZIO[R,E,A](fiber:=>zio.ZIO[R,E,zio.Fiber[E,A]])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "fromFiber", "tail" : "(fiber: => Fiber[E, A])(trace: Trace): IO[E, A]", "member" : "zio.ZIO.fromFiber", "link" : "zio\/ZIO$.html#fromFiber[E,A](fiber:=>zio.Fiber[E,A])(implicittrace:zio.Trace):zio.IO[E,A]", "kind" : "def"}, {"label" : "fromEitherCause", "tail" : "(v: => Either[Cause[E], A])(trace: Trace): IO[E, A]", "member" : "zio.ZIO.fromEitherCause", "link" : "zio\/ZIO$.html#fromEitherCause[E,A](v:=>Either[zio.Cause[E],A])(implicittrace:zio.Trace):zio.IO[E,A]", "kind" : "def"}, {"label" : "fromEither", "tail" : "(v: => Either[E, A])(trace: Trace): IO[E, A]", "member" : "zio.ZIO.fromEither", "link" : "zio\/ZIO$.html#fromEither[E,A](v:=>Either[E,A])(implicittrace:zio.Trace):zio.IO[E,A]", "kind" : "def"}, {"label" : "fromAutoCloseable", "tail" : "(fa: => ZIO[R, E, A])(trace: Trace): ZIO[R with Scope, E, A]", "member" : "zio.ZIO.fromAutoCloseable", "link" : "zio\/ZIO$.html#fromAutoCloseable[R,E,A<:AutoCloseable](fa:=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,E,A]", "kind" : "def"}, {"label" : "from", "tail" : "(input: => Input)(constructor: ZIOConstructor[Nothing, Any, Input], trace: Trace): ZIO[OutEnvironment, OutError, OutSuccess]", "member" : "zio.ZIO.from", "link" : "zio\/ZIO$.html#from[Input](input:=>Input)(implicitconstructor:zio.ZIO.ZIOConstructor[Nothing,Any,Input],implicittrace:zio.Trace):zio.ZIO[constructor.OutEnvironment,constructor.OutError,constructor.OutSuccess]", "kind" : "def"}, {"label" : "forkAllDiscard", "tail" : "(as: => Iterable[ZIO[R, E, A]])(trace: Trace): URIO[R, Fiber[E, Unit]]", "member" : "zio.ZIO.forkAllDiscard", "link" : "zio\/ZIO$.html#forkAllDiscard[R,E,A](as:=>Iterable[zio.ZIO[R,E,A]])(implicittrace:zio.Trace):zio.URIO[R,zio.Fiber[E,Unit]]", "kind" : "def"}, {"label" : "forkAll", "tail" : "(as: Collection[ZIO[R, E, A]])(bf: zio.BuildFrom[Collection[ZIO[R, E, A]], A, Collection[A]], trace: Trace): URIO[R, Fiber[E, Collection[A]]]", "member" : "zio.ZIO.forkAll", "link" : "zio\/ZIO$.html#forkAll[R,E,A,Collection[+Element]<:Iterable[Element]](as:Collection[zio.ZIO[R,E,A]])(implicitbf:zio.BuildFrom[Collection[zio.ZIO[R,E,A]],A,Collection[A]],implicittrace:zio.Trace):zio.URIO[R,zio.Fiber[E,Collection[A]]]", "kind" : "def"}, {"label" : "foreachParDiscard", "tail" : "(as: => Iterable[A])(f: (A) => ZIO[R, E, Any])(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.ZIO.foreachParDiscard", "link" : "zio\/ZIO$.html#foreachParDiscard[R,E,A](as:=>Iterable[A])(f:A=>zio.ZIO[R,E,Any])(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "def"}, {"label" : "foreachPar", "tail" : "(as: NonEmptyChunk[A])(fn: (A) => ZIO[R, E, B])(trace: Trace): ZIO[R, E, NonEmptyChunk[B]]", "member" : "zio.ZIO.foreachPar", "link" : "zio\/ZIO$.html#foreachPar[R,E,A,B](as:zio.NonEmptyChunk[A])(fn:A=>zio.ZIO[R,E,B])(implicittrace:zio.Trace):zio.ZIO[R,E,zio.NonEmptyChunk[B]]", "kind" : "final def"}, {"label" : "foreachPar", "tail" : "(map: Map[Key, Value])(f: (Key, Value) => ZIO[R, E, (Key2, Value2)])(trace: Trace): ZIO[R, E, Map[Key2, Value2]]", "member" : "zio.ZIO.foreachPar", "link" : "zio\/ZIO$.html#foreachPar[R,E,Key,Key2,Value,Value2](map:Map[Key,Value])(f:(Key,Value)=>zio.ZIO[R,E,(Key2,Value2)])(implicittrace:zio.Trace):zio.ZIO[R,E,Map[Key2,Value2]]", "kind" : "def"}, {"label" : "foreachPar", "tail" : "(as: Array[A])(f: (A) => ZIO[R, E, B])(arg0: ClassTag[B], trace: Trace): ZIO[R, E, Array[B]]", "member" : "zio.ZIO.foreachPar", "link" : "zio\/ZIO$.html#foreachPar[R,E,A,B](as:Array[A])(f:A=>zio.ZIO[R,E,B])(implicitevidence$5:scala.reflect.ClassTag[B],implicittrace:zio.Trace):zio.ZIO[R,E,Array[B]]", "kind" : "final def"}, {"label" : "foreachPar", "tail" : "(as: Set[A])(fn: (A) => ZIO[R, E, B])(trace: Trace): ZIO[R, E, Set[B]]", "member" : "zio.ZIO.foreachPar", "link" : "zio\/ZIO$.html#foreachPar[R,E,A,B](as:Set[A])(fn:A=>zio.ZIO[R,E,B])(implicittrace:zio.Trace):zio.ZIO[R,E,Set[B]]", "kind" : "final def"}, {"label" : "foreachPar", "tail" : "(as: Collection[A])(f: (A) => ZIO[R, E, B])(bf: zio.BuildFrom[Collection[A], B, Collection[B]], trace: Trace): ZIO[R, E, Collection[B]]", "member" : "zio.ZIO.foreachPar", "link" : "zio\/ZIO$.html#foreachPar[R,E,A,B,Collection[+Element]<:Iterable[Element]](as:Collection[A])(f:A=>zio.ZIO[R,E,B])(implicitbf:zio.BuildFrom[Collection[A],B,Collection[B]],implicittrace:zio.Trace):zio.ZIO[R,E,Collection[B]]", "kind" : "def"}, {"label" : "foreachExec", "tail" : "(as: Collection[A])(exec: => ExecutionStrategy)(f: (A) => ZIO[R, E, B])(bf: zio.BuildFrom[Collection[A], B, Collection[B]], trace: Trace): ZIO[R, E, Collection[B]]", "member" : "zio.ZIO.foreachExec", "link" : "zio\/ZIO$.html#foreachExec[R,E,A,B,Collection[+Element]<:Iterable[Element]](as:Collection[A])(exec:=>zio.ExecutionStrategy)(f:A=>zio.ZIO[R,E,B])(implicitbf:zio.BuildFrom[Collection[A],B,Collection[B]],implicittrace:zio.Trace):zio.ZIO[R,E,Collection[B]]", "kind" : "final def"}, {"label" : "foreachDiscard", "tail" : "(as: => Iterable[A])(f: (A) => ZIO[R, E, Any])(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.ZIO.foreachDiscard", "link" : "zio\/ZIO$.html#foreachDiscard[R,E,A](as:=>Iterable[A])(f:A=>zio.ZIO[R,E,Any])(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "def"}, {"label" : "foreach", "tail" : "(in: NonEmptyChunk[A])(f: (A) => ZIO[R, E, B])(trace: Trace): ZIO[R, E, NonEmptyChunk[B]]", "member" : "zio.ZIO.foreach", "link" : "zio\/ZIO$.html#foreach[R,E,A,B](in:zio.NonEmptyChunk[A])(f:A=>zio.ZIO[R,E,B])(implicittrace:zio.Trace):zio.ZIO[R,E,zio.NonEmptyChunk[B]]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(in: Option[A])(f: (A) => ZIO[R, E, B])(trace: Trace): ZIO[R, E, Option[B]]", "member" : "zio.ZIO.foreach", "link" : "zio\/ZIO$.html#foreach[R,E,A,B](in:Option[A])(f:A=>zio.ZIO[R,E,B])(implicittrace:zio.Trace):zio.ZIO[R,E,Option[B]]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(map: Map[Key, Value])(f: (Key, Value) => ZIO[R, E, (Key2, Value2)])(trace: Trace): ZIO[R, E, Map[Key2, Value2]]", "member" : "zio.ZIO.foreach", "link" : "zio\/ZIO$.html#foreach[R,E,Key,Key2,Value,Value2](map:Map[Key,Value])(f:(Key,Value)=>zio.ZIO[R,E,(Key2,Value2)])(implicittrace:zio.Trace):zio.ZIO[R,E,Map[Key2,Value2]]", "kind" : "def"}, {"label" : "foreach", "tail" : "(in: Array[A])(f: (A) => ZIO[R, E, B])(arg0: ClassTag[B], trace: Trace): ZIO[R, E, Array[B]]", "member" : "zio.ZIO.foreach", "link" : "zio\/ZIO$.html#foreach[R,E,A,B](in:Array[A])(f:A=>zio.ZIO[R,E,B])(implicitevidence$4:scala.reflect.ClassTag[B],implicittrace:zio.Trace):zio.ZIO[R,E,Array[B]]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(in: Set[A])(f: (A) => ZIO[R, E, B])(trace: Trace): ZIO[R, E, Set[B]]", "member" : "zio.ZIO.foreach", "link" : "zio\/ZIO$.html#foreach[R,E,A,B](in:Set[A])(f:A=>zio.ZIO[R,E,B])(implicittrace:zio.Trace):zio.ZIO[R,E,Set[B]]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(in: Collection[A])(f: (A) => ZIO[R, E, B])(bf: zio.BuildFrom[Collection[A], B, Collection[B]], trace: Trace): ZIO[R, E, Collection[B]]", "member" : "zio.ZIO.foreach", "link" : "zio\/ZIO$.html#foreach[R,E,A,B,Collection[+Element]<:Iterable[Element]](in:Collection[A])(f:A=>zio.ZIO[R,E,B])(implicitbf:zio.BuildFrom[Collection[A],B,Collection[B]],implicittrace:zio.Trace):zio.ZIO[R,E,Collection[B]]", "kind" : "def"}, {"label" : "forall", "tail" : "(as: => Iterable[A])(f: (A) => ZIO[R, E, Boolean])(trace: Trace): ZIO[R, E, Boolean]", "member" : "zio.ZIO.forall", "link" : "zio\/ZIO$.html#forall[R,E,A](as:=>Iterable[A])(f:A=>zio.ZIO[R,E,Boolean])(implicittrace:zio.Trace):zio.ZIO[R,E,Boolean]", "kind" : "def"}, {"label" : "foldRight", "tail" : "(in: => Iterable[A])(zero: => S)(f: (A, S) => ZIO[R, E, S])(trace: Trace): ZIO[R, E, S]", "member" : "zio.ZIO.foldRight", "link" : "zio\/ZIO$.html#foldRight[R,E,S,A](in:=>Iterable[A])(zero:=>S)(f:(A,S)=>zio.ZIO[R,E,S])(implicittrace:zio.Trace):zio.ZIO[R,E,S]", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(in: => Iterable[A])(zero: => S)(f: (S, A) => ZIO[R, E, S])(trace: Trace): ZIO[R, E, S]", "member" : "zio.ZIO.foldLeft", "link" : "zio\/ZIO$.html#foldLeft[R,E,S,A](in:=>Iterable[A])(zero:=>S)(f:(S,A)=>zio.ZIO[R,E,S])(implicittrace:zio.Trace):zio.ZIO[R,E,S]", "kind" : "def"}, {"label" : "flatten", "tail" : "(zio: => ZIO[R, E, ZIO[R, E, A]])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.flatten", "link" : "zio\/ZIO$.html#flatten[R,E,A](zio:=>zio.ZIO[R,E,zio.ZIO[R,E,A]])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "firstSuccessOf", "tail" : "(zio: => ZIO[R, E, A], rest: => Iterable[ZIO[R1, E, A]])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.firstSuccessOf", "link" : "zio\/ZIO$.html#firstSuccessOf[R,R1<:R,E,A](zio:=>zio.ZIO[R,E,A],rest:=>Iterable[zio.ZIO[R1,E,A]])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "def"}, {"label" : "filterNotPar", "tail" : "(as: Set[A])(f: (A) => ZIO[R, E, Boolean])(trace: Trace): ZIO[R, E, Set[A]]", "member" : "zio.ZIO.filterNotPar", "link" : "zio\/ZIO$.html#filterNotPar[R,E,A](as:Set[A])(f:A=>zio.ZIO[R,E,Boolean])(implicittrace:zio.Trace):zio.ZIO[R,E,Set[A]]", "kind" : "def"}, {"label" : "filterNotPar", "tail" : "(as: Collection[A])(f: (A) => ZIO[R, E, Boolean])(bf: zio.BuildFrom[Collection[A], A, Collection[A]], trace: Trace): ZIO[R, E, Collection[A]]", "member" : "zio.ZIO.filterNotPar", "link" : "zio\/ZIO$.html#filterNotPar[R,E,A,Collection[+Element]<:Iterable[Element]](as:Collection[A])(f:A=>zio.ZIO[R,E,Boolean])(implicitbf:zio.BuildFrom[Collection[A],A,Collection[A]],implicittrace:zio.Trace):zio.ZIO[R,E,Collection[A]]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(as: Set[A])(f: (A) => ZIO[R, E, Boolean])(trace: Trace): ZIO[R, E, Set[A]]", "member" : "zio.ZIO.filterNot", "link" : "zio\/ZIO$.html#filterNot[R,E,A](as:Set[A])(f:A=>zio.ZIO[R,E,Boolean])(implicittrace:zio.Trace):zio.ZIO[R,E,Set[A]]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(as: Collection[A])(f: (A) => ZIO[R, E, Boolean])(bf: zio.BuildFrom[Collection[A], A, Collection[A]], trace: Trace): ZIO[R, E, Collection[A]]", "member" : "zio.ZIO.filterNot", "link" : "zio\/ZIO$.html#filterNot[R,E,A,Collection[+Element]<:Iterable[Element]](as:Collection[A])(f:A=>zio.ZIO[R,E,Boolean])(implicitbf:zio.BuildFrom[Collection[A],A,Collection[A]],implicittrace:zio.Trace):zio.ZIO[R,E,Collection[A]]", "kind" : "def"}, {"label" : "filterPar", "tail" : "(as: Set[A])(f: (A) => ZIO[R, E, Boolean])(trace: Trace): ZIO[R, E, Set[A]]", "member" : "zio.ZIO.filterPar", "link" : "zio\/ZIO$.html#filterPar[R,E,A](as:Set[A])(f:A=>zio.ZIO[R,E,Boolean])(implicittrace:zio.Trace):zio.ZIO[R,E,Set[A]]", "kind" : "def"}, {"label" : "filterPar", "tail" : "(as: Collection[A])(f: (A) => ZIO[R, E, Boolean])(bf: zio.BuildFrom[Collection[A], A, Collection[A]], trace: Trace): ZIO[R, E, Collection[A]]", "member" : "zio.ZIO.filterPar", "link" : "zio\/ZIO$.html#filterPar[R,E,A,Collection[+Element]<:Iterable[Element]](as:Collection[A])(f:A=>zio.ZIO[R,E,Boolean])(implicitbf:zio.BuildFrom[Collection[A],A,Collection[A]],implicittrace:zio.Trace):zio.ZIO[R,E,Collection[A]]", "kind" : "def"}, {"label" : "filter", "tail" : "(as: Set[A])(f: (A) => ZIO[R, E, Boolean])(trace: Trace): ZIO[R, E, Set[A]]", "member" : "zio.ZIO.filter", "link" : "zio\/ZIO$.html#filter[R,E,A](as:Set[A])(f:A=>zio.ZIO[R,E,Boolean])(implicittrace:zio.Trace):zio.ZIO[R,E,Set[A]]", "kind" : "def"}, {"label" : "filter", "tail" : "(as: Collection[A])(f: (A) => ZIO[R, E, Boolean])(bf: zio.BuildFrom[Collection[A], A, Collection[A]], trace: Trace): ZIO[R, E, Collection[A]]", "member" : "zio.ZIO.filter", "link" : "zio\/ZIO$.html#filter[R,E,A,Collection[+Element]<:Iterable[Element]](as:Collection[A])(f:A=>zio.ZIO[R,E,Boolean])(implicitbf:zio.BuildFrom[Collection[A],A,Collection[A]],implicittrace:zio.Trace):zio.ZIO[R,E,Collection[A]]", "kind" : "def"}, {"label" : "fiberIdWith", "tail" : "(f: (FiberId.Runtime) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.fiberIdWith", "link" : "zio\/ZIO$.html#fiberIdWith[R,E,A](f:zio.FiberId.Runtime=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "fiberId", "tail" : "(trace: Trace): UIO[FiberId.Runtime]", "member" : "zio.ZIO.fiberId", "link" : "zio\/ZIO$.html#fiberId(implicittrace:zio.Trace):zio.UIO[zio.FiberId.Runtime]", "kind" : "def"}, {"label" : "failCause", "tail" : "(cause: => Cause[E])(trace0: Trace): IO[E, Nothing]", "member" : "zio.ZIO.failCause", "link" : "zio\/ZIO$.html#failCause[E](cause:=>zio.Cause[E])(implicittrace0:zio.Trace):zio.IO[E,Nothing]", "kind" : "def"}, {"label" : "fail", "tail" : "(error: => E)(trace: Trace): IO[E, Nothing]", "member" : "zio.ZIO.fail", "link" : "zio\/ZIO$.html#fail[E](error:=>E)(implicittrace:zio.Trace):zio.IO[E,Nothing]", "kind" : "def"}, {"label" : "exists", "tail" : "(as: => Iterable[A])(f: (A) => ZIO[R, E, Boolean])(trace: Trace): ZIO[R, E, Boolean]", "member" : "zio.ZIO.exists", "link" : "zio\/ZIO$.html#exists[R,E,A](as:=>Iterable[A])(f:A=>zio.ZIO[R,E,Boolean])(implicittrace:zio.Trace):zio.ZIO[R,E,Boolean]", "kind" : "def"}, {"label" : "executorWith", "tail" : "(f: (Executor) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.executorWith", "link" : "zio\/ZIO$.html#executorWith[R,E,A](f:zio.Executor=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "executor", "tail" : "(trace: Trace): UIO[Executor]", "member" : "zio.ZIO.executor", "link" : "zio\/ZIO$.html#executor(implicittrace:zio.Trace):zio.UIO[zio.Executor]", "kind" : "def"}, {"label" : "environmentWithZIO", "tail" : "(): EnvironmentWithZIOPartiallyApplied[R]", "member" : "zio.ZIO.environmentWithZIO", "link" : "zio\/ZIO$.html#environmentWithZIO[R]:zio.ZIO.EnvironmentWithZIOPartiallyApplied[R]", "kind" : "def"}, {"label" : "environmentWith", "tail" : "(): EnvironmentWithPartiallyApplied[R]", "member" : "zio.ZIO.environmentWith", "link" : "zio\/ZIO$.html#environmentWith[R]:zio.ZIO.EnvironmentWithPartiallyApplied[R]", "kind" : "def"}, {"label" : "environment", "tail" : "(trace: Trace): URIO[R, ZEnvironment[R]]", "member" : "zio.ZIO.environment", "link" : "zio\/ZIO$.html#environment[R](implicittrace:zio.Trace):zio.URIO[R,zio.ZEnvironment[R]]", "kind" : "def"}, {"label" : "done", "tail" : "(r: => Exit[E, A])(trace: Trace): IO[E, A]", "member" : "zio.ZIO.done", "link" : "zio\/ZIO$.html#done[E,A](r:=>zio.Exit[E,A])(implicittrace:zio.Trace):zio.IO[E,A]", "kind" : "def"}, {"label" : "dieMessage", "tail" : "(message: => String)(trace: Trace): UIO[Nothing]", "member" : "zio.ZIO.dieMessage", "link" : "zio\/ZIO$.html#dieMessage(message:=>String)(implicittrace:zio.Trace):zio.UIO[Nothing]", "kind" : "def"}, {"label" : "die", "tail" : "(t: => Throwable)(trace: Trace): UIO[Nothing]", "member" : "zio.ZIO.die", "link" : "zio\/ZIO$.html#die(t:=>Throwable)(implicittrace:zio.Trace):zio.UIO[Nothing]", "kind" : "def"}, {"label" : "descriptorWith", "tail" : "(f: (Descriptor) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.descriptorWith", "link" : "zio\/ZIO$.html#descriptorWith[R,E,A](f:zio.Fiber.Descriptor=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "descriptor", "tail" : "(trace: Trace): UIO[Descriptor]", "member" : "zio.ZIO.descriptor", "link" : "zio\/ZIO$.html#descriptor(implicittrace:zio.Trace):zio.UIO[zio.Fiber.Descriptor]", "kind" : "def"}, {"label" : "debug", "tail" : "(value: => Any)(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.debug", "link" : "zio\/ZIO$.html#debug(value:=>Any)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "consoleWith", "tail" : "(f: (Console) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.consoleWith", "link" : "zio\/ZIO$.html#consoleWith[R,E,A](f:zio.Console=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "console", "tail" : "(trace: Trace): UIO[Console]", "member" : "zio.ZIO.console", "link" : "zio\/ZIO$.html#console(implicittrace:zio.Trace):zio.UIO[zio.Console]", "kind" : "def"}, {"label" : "configProviderWith", "tail" : "(f: (ConfigProvider) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.configProviderWith", "link" : "zio\/ZIO$.html#configProviderWith[R,E,A](f:zio.ConfigProvider=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "config", "tail" : "(trace: Trace, config: Config[A]): ZIO[Any, Error, A]", "member" : "zio.ZIO.config", "link" : "zio\/ZIO$.html#config[A](implicittrace:zio.Trace,implicitconfig:zio.Config[A]):zio.ZIO[Any,zio.Config.Error,A]", "kind" : "def"}, {"label" : "config", "tail" : "(config: Config[A])(trace: Trace): ZIO[Any, Error, A]", "member" : "zio.ZIO.config", "link" : "zio\/ZIO$.html#config[A](config:zio.Config[A])(implicittrace:zio.Trace):zio.ZIO[Any,zio.Config.Error,A]", "kind" : "def"}, {"label" : "cond", "tail" : "(predicate: => Boolean, result: => A, error: => E)(trace: Trace): IO[E, A]", "member" : "zio.ZIO.cond", "link" : "zio\/ZIO$.html#cond[E,A](predicate:=>Boolean,result:=>A,error:=>E)(implicittrace:zio.Trace):zio.IO[E,A]", "kind" : "def"}, {"label" : "collectPar", "tail" : "(map: Map[Key, Value])(f: (Key, Value) => ZIO[R, Option[E], (Key2, Value2)])(trace: Trace): ZIO[R, E, Map[Key2, Value2]]", "member" : "zio.ZIO.collectPar", "link" : "zio\/ZIO$.html#collectPar[R,E,Key,Key2,Value,Value2](map:Map[Key,Value])(f:(Key,Value)=>zio.ZIO[R,Option[E],(Key2,Value2)])(implicittrace:zio.Trace):zio.ZIO[R,E,Map[Key2,Value2]]", "kind" : "def"}, {"label" : "collectPar", "tail" : "(in: Collection[A])(f: (A) => ZIO[R, Option[E], B])(bf: zio.BuildFrom[Collection[A], B, Collection[B]], trace: Trace): ZIO[R, E, Collection[B]]", "member" : "zio.ZIO.collectPar", "link" : "zio\/ZIO$.html#collectPar[R,E,A,B,Collection[+Element]<:Iterable[Element]](in:Collection[A])(f:A=>zio.ZIO[R,Option[E],B])(implicitbf:zio.BuildFrom[Collection[A],B,Collection[B]],implicittrace:zio.Trace):zio.ZIO[R,E,Collection[B]]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(as: => Iterable[A])(f: (A) => ZIO[R, E, Option[B]])(trace: Trace): ZIO[R, E, Option[B]]", "member" : "zio.ZIO.collectFirst", "link" : "zio\/ZIO$.html#collectFirst[R,E,A,B](as:=>Iterable[A])(f:A=>zio.ZIO[R,E,Option[B]])(implicittrace:zio.Trace):zio.ZIO[R,E,Option[B]]", "kind" : "def"}, {"label" : "collectAllWithPar", "tail" : "(in: Collection[ZIO[R, E, A]])(f: PartialFunction[A, U])(bf: zio.BuildFrom[Collection[ZIO[R, E, A]], U, Collection[U]], trace: Trace): ZIO[R, E, Collection[U]]", "member" : "zio.ZIO.collectAllWithPar", "link" : "zio\/ZIO$.html#collectAllWithPar[R,E,A,U,Collection[+Element]<:Iterable[Element]](in:Collection[zio.ZIO[R,E,A]])(f:PartialFunction[A,U])(implicitbf:zio.BuildFrom[Collection[zio.ZIO[R,E,A]],U,Collection[U]],implicittrace:zio.Trace):zio.ZIO[R,E,Collection[U]]", "kind" : "def"}, {"label" : "collectAllWith", "tail" : "(in: Collection[ZIO[R, E, A]])(f: PartialFunction[A, B])(bf: zio.BuildFrom[Collection[ZIO[R, E, A]], B, Collection[B]], trace: Trace): ZIO[R, E, Collection[B]]", "member" : "zio.ZIO.collectAllWith", "link" : "zio\/ZIO$.html#collectAllWith[R,E,A,B,Collection[+Element]<:Iterable[Element]](in:Collection[zio.ZIO[R,E,A]])(f:PartialFunction[A,B])(implicitbf:zio.BuildFrom[Collection[zio.ZIO[R,E,A]],B,Collection[B]],implicittrace:zio.Trace):zio.ZIO[R,E,Collection[B]]", "kind" : "def"}, {"label" : "collectAllSuccessesPar", "tail" : "(in: Collection[ZIO[R, E, A]])(bf: zio.BuildFrom[Collection[ZIO[R, E, A]], A, Collection[A]], trace: Trace): URIO[R, Collection[A]]", "member" : "zio.ZIO.collectAllSuccessesPar", "link" : "zio\/ZIO$.html#collectAllSuccessesPar[R,E,A,Collection[+Element]<:Iterable[Element]](in:Collection[zio.ZIO[R,E,A]])(implicitbf:zio.BuildFrom[Collection[zio.ZIO[R,E,A]],A,Collection[A]],implicittrace:zio.Trace):zio.URIO[R,Collection[A]]", "kind" : "def"}, {"label" : "collectAllSuccesses", "tail" : "(in: Collection[ZIO[R, E, A]])(bf: zio.BuildFrom[Collection[ZIO[R, E, A]], A, Collection[A]], trace: Trace): URIO[R, Collection[A]]", "member" : "zio.ZIO.collectAllSuccesses", "link" : "zio\/ZIO$.html#collectAllSuccesses[R,E,A,Collection[+Element]<:Iterable[Element]](in:Collection[zio.ZIO[R,E,A]])(implicitbf:zio.BuildFrom[Collection[zio.ZIO[R,E,A]],A,Collection[A]],implicittrace:zio.Trace):zio.URIO[R,Collection[A]]", "kind" : "def"}, {"label" : "collectAllParDiscard", "tail" : "(as: => Iterable[ZIO[R, E, A]])(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.ZIO.collectAllParDiscard", "link" : "zio\/ZIO$.html#collectAllParDiscard[R,E,A](as:=>Iterable[zio.ZIO[R,E,A]])(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "def"}, {"label" : "collectAllPar", "tail" : "(as: NonEmptyChunk[ZIO[R, E, A]])(trace: Trace): ZIO[R, E, NonEmptyChunk[A]]", "member" : "zio.ZIO.collectAllPar", "link" : "zio\/ZIO$.html#collectAllPar[R,E,A](as:zio.NonEmptyChunk[zio.ZIO[R,E,A]])(implicittrace:zio.Trace):zio.ZIO[R,E,zio.NonEmptyChunk[A]]", "kind" : "def"}, {"label" : "collectAllPar", "tail" : "(as: Array[ZIO[R, E, A]])(arg0: ClassTag[A], trace: Trace): ZIO[R, E, Array[A]]", "member" : "zio.ZIO.collectAllPar", "link" : "zio\/ZIO$.html#collectAllPar[R,E,A](as:Array[zio.ZIO[R,E,A]])(implicitevidence$3:scala.reflect.ClassTag[A],implicittrace:zio.Trace):zio.ZIO[R,E,Array[A]]", "kind" : "def"}, {"label" : "collectAllPar", "tail" : "(as: Set[ZIO[R, E, A]])(trace: Trace): ZIO[R, E, Set[A]]", "member" : "zio.ZIO.collectAllPar", "link" : "zio\/ZIO$.html#collectAllPar[R,E,A](as:Set[zio.ZIO[R,E,A]])(implicittrace:zio.Trace):zio.ZIO[R,E,Set[A]]", "kind" : "def"}, {"label" : "collectAllPar", "tail" : "(as: Collection[ZIO[R, E, A]])(bf: zio.BuildFrom[Collection[ZIO[R, E, A]], A, Collection[A]], trace: Trace): ZIO[R, E, Collection[A]]", "member" : "zio.ZIO.collectAllPar", "link" : "zio\/ZIO$.html#collectAllPar[R,E,A,Collection[+Element]<:Iterable[Element]](as:Collection[zio.ZIO[R,E,A]])(implicitbf:zio.BuildFrom[Collection[zio.ZIO[R,E,A]],A,Collection[A]],implicittrace:zio.Trace):zio.ZIO[R,E,Collection[A]]", "kind" : "def"}, {"label" : "collectAllDiscard", "tail" : "(in: => Iterable[ZIO[R, E, A]])(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.ZIO.collectAllDiscard", "link" : "zio\/ZIO$.html#collectAllDiscard[R,E,A](in:=>Iterable[zio.ZIO[R,E,A]])(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "def"}, {"label" : "collectAll", "tail" : "(in: NonEmptyChunk[ZIO[R, E, A]])(trace: Trace): ZIO[R, E, NonEmptyChunk[A]]", "member" : "zio.ZIO.collectAll", "link" : "zio\/ZIO$.html#collectAll[R,E,A](in:zio.NonEmptyChunk[zio.ZIO[R,E,A]])(implicittrace:zio.Trace):zio.ZIO[R,E,zio.NonEmptyChunk[A]]", "kind" : "def"}, {"label" : "collectAll", "tail" : "(in: Option[ZIO[R, E, A]])(trace: Trace): ZIO[R, E, Option[A]]", "member" : "zio.ZIO.collectAll", "link" : "zio\/ZIO$.html#collectAll[R,E,A](in:Option[zio.ZIO[R,E,A]])(implicittrace:zio.Trace):zio.ZIO[R,E,Option[A]]", "kind" : "def"}, {"label" : "collectAll", "tail" : "(in: Array[ZIO[R, E, A]])(arg0: ClassTag[A], trace: Trace): ZIO[R, E, Array[A]]", "member" : "zio.ZIO.collectAll", "link" : "zio\/ZIO$.html#collectAll[R,E,A](in:Array[zio.ZIO[R,E,A]])(implicitevidence$2:scala.reflect.ClassTag[A],implicittrace:zio.Trace):zio.ZIO[R,E,Array[A]]", "kind" : "def"}, {"label" : "collectAll", "tail" : "(in: Set[ZIO[R, E, A]])(trace: Trace): ZIO[R, E, Set[A]]", "member" : "zio.ZIO.collectAll", "link" : "zio\/ZIO$.html#collectAll[R,E,A](in:Set[zio.ZIO[R,E,A]])(implicittrace:zio.Trace):zio.ZIO[R,E,Set[A]]", "kind" : "def"}, {"label" : "collectAll", "tail" : "(in: Collection[ZIO[R, E, A]])(bf: zio.BuildFrom[Collection[ZIO[R, E, A]], A, Collection[A]], trace: Trace): ZIO[R, E, Collection[A]]", "member" : "zio.ZIO.collectAll", "link" : "zio\/ZIO$.html#collectAll[R,E,A,Collection[+Element]<:Iterable[Element]](in:Collection[zio.ZIO[R,E,A]])(implicitbf:zio.BuildFrom[Collection[zio.ZIO[R,E,A]],A,Collection[A]],implicittrace:zio.Trace):zio.ZIO[R,E,Collection[A]]", "kind" : "def"}, {"label" : "collect", "tail" : "(map: Map[Key, Value])(f: (Key, Value) => ZIO[R, Option[E], (Key2, Value2)])(trace: Trace): ZIO[R, E, Map[Key2, Value2]]", "member" : "zio.ZIO.collect", "link" : "zio\/ZIO$.html#collect[R,E,Key,Key2,Value,Value2](map:Map[Key,Value])(f:(Key,Value)=>zio.ZIO[R,Option[E],(Key2,Value2)])(implicittrace:zio.Trace):zio.ZIO[R,E,Map[Key2,Value2]]", "kind" : "def"}, {"label" : "collect", "tail" : "(in: Collection[A])(f: (A) => ZIO[R, Option[E], B])(bf: zio.BuildFrom[Collection[A], B, Collection[B]], trace: Trace): ZIO[R, E, Collection[B]]", "member" : "zio.ZIO.collect", "link" : "zio\/ZIO$.html#collect[R,E,A,B,Collection[+Element]<:Iterable[Element]](in:Collection[A])(f:A=>zio.ZIO[R,Option[E],B])(implicitbf:zio.BuildFrom[Collection[A],B,Collection[B]],implicittrace:zio.Trace):zio.ZIO[R,E,Collection[B]]", "kind" : "def"}, {"label" : "clockWith", "tail" : "(f: (Clock) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.clockWith", "link" : "zio\/ZIO$.html#clockWith[R,E,A](f:zio.Clock=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "clock", "tail" : "(trace: Trace): UIO[Clock]", "member" : "zio.ZIO.clock", "link" : "zio\/ZIO$.html#clock(implicittrace:zio.Trace):zio.UIO[zio.Clock]", "kind" : "def"}, {"label" : "checkInterruptible", "tail" : "(f: (InterruptStatus) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.checkInterruptible", "link" : "zio\/ZIO$.html#checkInterruptible[R,E,A](f:zio.InterruptStatus=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "blockingExecutor", "tail" : "(trace: Trace): UIO[Executor]", "member" : "zio.ZIO.blockingExecutor", "link" : "zio\/ZIO$.html#blockingExecutor(implicittrace:zio.Trace):zio.UIO[zio.Executor]", "kind" : "def"}, {"label" : "blocking", "tail" : "(zio: => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.blocking", "link" : "zio\/ZIO$.html#blocking[R,E,A](zio:=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "attemptBlockingIOUnsafe", "tail" : "(effect: (Unsafe) => A)(trace: Trace): IO[IOException, A]", "member" : "zio.ZIO.attemptBlockingIOUnsafe", "link" : "zio\/ZIO$.html#attemptBlockingIOUnsafe[A](effect:zio.Unsafe=>A)(implicittrace:zio.Trace):zio.IO[java.io.IOException,A]", "kind" : "def"}, {"label" : "attemptUnsafe", "tail" : "(a: (Unsafe) => A)(trace: Trace): Task[A]", "member" : "zio.ZIO.attemptUnsafe", "link" : "zio\/ZIO$.html#attemptUnsafe[A](a:zio.Unsafe=>A)(implicittrace:zio.Trace):zio.Task[A]", "kind" : "def"}, {"label" : "asyncZIO", "tail" : "(register: ((ZIO[R, E, A]) => Unit) => ZIO[R, E, Any])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.asyncZIO", "link" : "zio\/ZIO$.html#asyncZIO[R,E,A](register:(zio.ZIO[R,E,A]=>Unit)=>zio.ZIO[R,E,Any])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "asyncInterruptUnsafe", "tail" : "(register: (Unsafe) => ((ZIO[R, E, A]) => Unit) => Either[URIO[R, Any], ZIO[R, E, A]], blockingOn: => FiberId)(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.asyncInterruptUnsafe", "link" : "zio\/ZIO$.html#asyncInterruptUnsafe[R,E,A](register:zio.Unsafe=>((zio.ZIO[R,E,A]=>Unit)=>Either[zio.URIO[R,Any],zio.ZIO[R,E,A]]),blockingOn:=>zio.FiberId)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "allowInterrupt", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.ZIO.allowInterrupt", "link" : "zio\/ZIO$.html#allowInterrupt(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "addFinalizerExit", "tail" : "(finalizer: (Exit[Any, Any]) => URIO[R, Any])(trace: Trace): ZIO[R with Scope, Nothing, Any]", "member" : "zio.ZIO.addFinalizerExit", "link" : "zio\/ZIO$.html#addFinalizerExit[R](finalizer:zio.Exit[Any,Any]=>zio.URIO[R,Any])(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,Any]", "kind" : "def"}, {"label" : "addFinalizer", "tail" : "(finalizer: => URIO[R, Any])(trace: Trace): ZIO[R with Scope, Nothing, Any]", "member" : "zio.ZIO.addFinalizer", "link" : "zio\/ZIO$.html#addFinalizer[R](finalizer:=>zio.URIO[R,Any])(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,Any]", "kind" : "def"}, {"label" : "acquireReleaseExitWith", "tail" : "(acquire: => ZIO[R, E, A]): AcquireExit[R, E, A]", "member" : "zio.ZIO.acquireReleaseExitWith", "link" : "zio\/ZIO$.html#acquireReleaseExitWith[R,E,A](acquire:=>zio.ZIO[R,E,A]):zio.ZIO.AcquireExit[R,E,A]", "kind" : "def"}, {"label" : "acquireReleaseWith", "tail" : "(acquire: => ZIO[R, E, A]): Acquire[R, E, A]", "member" : "zio.ZIO.acquireReleaseWith", "link" : "zio\/ZIO$.html#acquireReleaseWith[R,E,A](acquire:=>zio.ZIO[R,E,A]):zio.ZIO.Acquire[R,E,A]", "kind" : "def"}, {"label" : "acquireReleaseInterruptibleExit", "tail" : "(acquire: => ZIO[R, E, A])(release: (Exit[Any, Any]) => ZIO[R1, Nothing, Any])(trace: Trace): ZIO[R with R1 with Scope, E, A]", "member" : "zio.ZIO.acquireReleaseInterruptibleExit", "link" : "zio\/ZIO$.html#acquireReleaseInterruptibleExit[R,R1,E,A](acquire:=>zio.ZIO[R,E,A])(release:zio.Exit[Any,Any]=>zio.ZIO[R1,Nothing,Any])(implicittrace:zio.Trace):zio.ZIO[RwithR1withzio.Scope,E,A]", "kind" : "def"}, {"label" : "acquireReleaseInterruptible", "tail" : "(acquire: => ZIO[R, E, A])(release: ZIO[R1, Nothing, Any])(trace: Trace): ZIO[R with R1 with Scope, E, A]", "member" : "zio.ZIO.acquireReleaseInterruptible", "link" : "zio\/ZIO$.html#acquireReleaseInterruptible[R,R1,E,A](acquire:=>zio.ZIO[R,E,A])(release:zio.ZIO[R1,Nothing,Any])(implicittrace:zio.Trace):zio.ZIO[RwithR1withzio.Scope,E,A]", "kind" : "def"}, {"label" : "acquireReleaseExit", "tail" : "(acquire: => ZIO[R, E, A])(release: (A, Exit[Any, Any]) => ZIO[R1, Nothing, Any])(trace: Trace): ZIO[R with R1 with Scope, E, A]", "member" : "zio.ZIO.acquireReleaseExit", "link" : "zio\/ZIO$.html#acquireReleaseExit[R,R1,E,A](acquire:=>zio.ZIO[R,E,A])(release:(A,zio.Exit[Any,Any])=>zio.ZIO[R1,Nothing,Any])(implicittrace:zio.Trace):zio.ZIO[RwithR1withzio.Scope,E,A]", "kind" : "def"}, {"label" : "acquireRelease", "tail" : "(acquire: => ZIO[R, E, A])(release: (A) => ZIO[R1, Nothing, Any])(trace: Trace): ZIO[R with R1 with Scope, E, A]", "member" : "zio.ZIO.acquireRelease", "link" : "zio\/ZIO$.html#acquireRelease[R,R1,E,A](acquire:=>zio.ZIO[R,E,A])(release:A=>zio.ZIO[R1,Nothing,Any])(implicittrace:zio.Trace):zio.ZIO[RwithR1withzio.Scope,E,A]", "kind" : "def"}, {"label" : "absolve", "tail" : "(v: => ZIO[R, E, Either[E, A]])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.absolve", "link" : "zio\/ZIO$.html#absolve[R,E,A](v:=>zio.ZIO[R,E,Either[E,A]])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "Parallelism", "tail" : ": FiberRef[Option[Int]]", "member" : "zio.ZIO.Parallelism", "link" : "zio\/ZIO$.html#Parallelism:zio.FiberRef[Option[Int]]", "kind" : "final lazy val"}, {"label" : "succeedBlocking", "tail" : "(a: => A)(trace: Trace): UIO[A]", "member" : "zio.ZIOCompanionVersionSpecific.succeedBlocking", "link" : "zio\/ZIO$.html#succeedBlocking[A](a:=>A)(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "def"}, {"label" : "succeed", "tail" : "(a: => A)(trace: Trace): ZIO[Any, Nothing, A]", "member" : "zio.ZIOCompanionVersionSpecific.succeed", "link" : "zio\/ZIO$.html#succeed[A](a:=>A)(implicittrace:zio.Trace):zio.ZIO[Any,Nothing,A]", "kind" : "def"}, {"label" : "ignore", "tail" : "(code: => Any)(trace: Trace): UIO[Unit]", "member" : "zio.ZIOCompanionVersionSpecific.ignore", "link" : "zio\/ZIO$.html#ignore(code:=>Any)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "attemptOrDieZIO", "tail" : "(effect: => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIOCompanionVersionSpecific.attemptOrDieZIO", "link" : "zio\/ZIO$.html#attemptOrDieZIO[R,E,A](effect:=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "attemptBlockingIO", "tail" : "(effect: => A)(trace: Trace): IO[IOException, A]", "member" : "zio.ZIOCompanionVersionSpecific.attemptBlockingIO", "link" : "zio\/ZIO$.html#attemptBlockingIO[A](effect:=>A)(implicittrace:zio.Trace):zio.IO[java.io.IOException,A]", "kind" : "def"}, {"label" : "attemptBlockingCancelable", "tail" : "(effect: => A)(cancel: => URIO[R, Any])(trace: Trace): RIO[R, A]", "member" : "zio.ZIOCompanionVersionSpecific.attemptBlockingCancelable", "link" : "zio\/ZIO$.html#attemptBlockingCancelable[R,A](effect:=>A)(cancel:=>zio.URIO[R,Any])(implicittrace:zio.Trace):zio.RIO[R,A]", "kind" : "def"}, {"label" : "attemptBlocking", "tail" : "(effect: => A)(trace: Trace): Task[A]", "member" : "zio.ZIOCompanionVersionSpecific.attemptBlocking", "link" : "zio\/ZIO$.html#attemptBlocking[A](effect:=>A)(implicittrace:zio.Trace):zio.Task[A]", "kind" : "def"}, {"label" : "attempt", "tail" : "(code: => A)(trace: Trace): Task[A]", "member" : "zio.ZIOCompanionVersionSpecific.attempt", "link" : "zio\/ZIO$.html#attempt[A](code:=>A)(implicittrace:zio.Trace):zio.Task[A]", "kind" : "def"}, {"label" : "asyncMaybe", "tail" : "(register: ((ZIO[R, E, A]) => Unit) => Option[ZIO[R, E, A]], blockingOn: => FiberId)(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIOCompanionVersionSpecific.asyncMaybe", "link" : "zio\/ZIO$.html#asyncMaybe[R,E,A](register:(zio.ZIO[R,E,A]=>Unit)=>Option[zio.ZIO[R,E,A]],blockingOn:=>zio.FiberId)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "asyncInterrupt", "tail" : "(register: ((ZIO[R, E, A]) => Unit) => Either[URIO[R, Any], ZIO[R, E, A]], blockingOn: => FiberId)(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIOCompanionVersionSpecific.asyncInterrupt", "link" : "zio\/ZIO$.html#asyncInterrupt[R,E,A](register:(zio.ZIO[R,E,A]=>Unit)=>Either[zio.URIO[R,Any],zio.ZIO[R,E,A]],blockingOn:=>zio.FiberId)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "async", "tail" : "(register: ((ZIO[R, E, A]) => Unit) => Unit, blockingOn: => FiberId)(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIOCompanionVersionSpecific.async", "link" : "zio\/ZIO$.html#async[R,E,A](register:(zio.ZIO[R,E,A]=>Unit)=>Unit,blockingOn:=>zio.FiberId)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "writeFileOutputStream", "tail" : "(path: => Path)(trace: Trace, d: DummyImplicit): ZIO[Scope, IOException, ZOutputStream]", "member" : "zio.ZIOCompanionPlatformSpecific.writeFileOutputStream", "link" : "zio\/ZIO$.html#writeFileOutputStream(path:=>java.nio.file.Path)(implicittrace:zio.Trace,implicitd:DummyImplicit):zio.ZIO[zio.Scope,java.io.IOException,zio.ZOutputStream]", "kind" : "def"}, {"label" : "writeFileOutputStream", "tail" : "(path: => String)(trace: Trace): ZIO[Scope, IOException, ZOutputStream]", "member" : "zio.ZIOCompanionPlatformSpecific.writeFileOutputStream", "link" : "zio\/ZIO$.html#writeFileOutputStream(path:=>String)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,java.io.IOException,zio.ZOutputStream]", "kind" : "def"}, {"label" : "writeFile", "tail" : "(path: => Path, content: => String)(trace: Trace, d: DummyImplicit): ZIO[Any, IOException, Unit]", "member" : "zio.ZIOCompanionPlatformSpecific.writeFile", "link" : "zio\/ZIO$.html#writeFile(path:=>java.nio.file.Path,content:=>String)(implicittrace:zio.Trace,implicitd:DummyImplicit):zio.ZIO[Any,java.io.IOException,Unit]", "kind" : "def"}, {"label" : "writeFile", "tail" : "(path: => String, content: => String)(trace: Trace): ZIO[Any, IOException, Unit]", "member" : "zio.ZIOCompanionPlatformSpecific.writeFile", "link" : "zio\/ZIO$.html#writeFile(path:=>String,content:=>String)(implicittrace:zio.Trace):zio.ZIO[Any,java.io.IOException,Unit]", "kind" : "def"}, {"label" : "readURIInputStream", "tail" : "(uri: => URI)(trace: Trace): ZIO[Scope, IOException, ZInputStream]", "member" : "zio.ZIOCompanionPlatformSpecific.readURIInputStream", "link" : "zio\/ZIO$.html#readURIInputStream(uri:=>java.net.URI)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,java.io.IOException,zio.ZInputStream]", "kind" : "def"}, {"label" : "readURLInputStream", "tail" : "(url: => String)(trace: Trace): ZIO[Scope, IOException, ZInputStream]", "member" : "zio.ZIOCompanionPlatformSpecific.readURLInputStream", "link" : "zio\/ZIO$.html#readURLInputStream(url:=>String)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,java.io.IOException,zio.ZInputStream]", "kind" : "def"}, {"label" : "readURLInputStream", "tail" : "(url: => URL)(trace: Trace, d: DummyImplicit): ZIO[Scope, IOException, ZInputStream]", "member" : "zio.ZIOCompanionPlatformSpecific.readURLInputStream", "link" : "zio\/ZIO$.html#readURLInputStream(url:=>java.net.URL)(implicittrace:zio.Trace,implicitd:DummyImplicit):zio.ZIO[zio.Scope,java.io.IOException,zio.ZInputStream]", "kind" : "def"}, {"label" : "readFileInputStream", "tail" : "(name: => String)(trace: Trace): ZIO[Scope, IOException, ZInputStream]", "member" : "zio.ZIOCompanionPlatformSpecific.readFileInputStream", "link" : "zio\/ZIO$.html#readFileInputStream(name:=>String)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,java.io.IOException,zio.ZInputStream]", "kind" : "def"}, {"label" : "readFileInputStream", "tail" : "(path: => Path)(trace: Trace, d: DummyImplicit): ZIO[Scope, IOException, ZInputStream]", "member" : "zio.ZIOCompanionPlatformSpecific.readFileInputStream", "link" : "zio\/ZIO$.html#readFileInputStream(path:=>java.nio.file.Path)(implicittrace:zio.Trace,implicitd:DummyImplicit):zio.ZIO[zio.Scope,java.io.IOException,zio.ZInputStream]", "kind" : "def"}, {"label" : "readFile", "tail" : "(name: => String)(trace: Trace): ZIO[Any, IOException, String]", "member" : "zio.ZIOCompanionPlatformSpecific.readFile", "link" : "zio\/ZIO$.html#readFile(name:=>String)(implicittrace:zio.Trace):zio.ZIO[Any,java.io.IOException,String]", "kind" : "def"}, {"label" : "readFile", "tail" : "(path: => Path)(trace: Trace, d: DummyImplicit): ZIO[Any, IOException, String]", "member" : "zio.ZIOCompanionPlatformSpecific.readFile", "link" : "zio\/ZIO$.html#readFile(path:=>java.nio.file.Path)(implicittrace:zio.Trace,implicitd:DummyImplicit):zio.ZIO[Any,java.io.IOException,String]", "kind" : "def"}, {"label" : "attemptBlockingInterrupt", "tail" : "(effect: => A)(trace: Trace): Task[A]", "member" : "zio.ZIOCompanionPlatformSpecific.attemptBlockingInterrupt", "link" : "zio\/ZIO$.html#attemptBlockingInterrupt[A](effect:=>A)(implicittrace:zio.Trace):zio.Task[A]", "kind" : "def"}, {"label" : "fromNullable", "tail" : "(v: => A)(trace: Trace): IO[Option[Nothing], A]", "member" : "zio.ZIOPlatformSpecificJVM.fromNullable", "link" : "zio\/ZIO$.html#fromNullable[A](v:=>A)(implicittrace:zio.Trace):zio.IO[Option[Nothing],A]", "kind" : "final def"}, {"label" : "fromFutureJava", "tail" : "(future: => Future[A])(trace: Trace): Task[A]", "member" : "zio.ZIOPlatformSpecificJVM.fromFutureJava", "link" : "zio\/ZIO$.html#fromFutureJava[A](future:=>java.util.concurrent.Future[A])(implicittrace:zio.Trace):zio.Task[A]", "kind" : "def"}, {"label" : "fromCompletableFuture", "tail" : "(cs: => CompletableFuture[A])(trace: Trace): Task[A]", "member" : "zio.ZIOPlatformSpecificJVM.fromCompletableFuture", "link" : "zio\/ZIO$.html#fromCompletableFuture[A](cs:=>java.util.concurrent.CompletableFuture[A])(implicittrace:zio.Trace):zio.Task[A]", "kind" : "def"}, {"label" : "fromCompletionStage", "tail" : "(cs: => CompletionStage[A])(trace: Trace): Task[A]", "member" : "zio.ZIOPlatformSpecificJVM.fromCompletionStage", "link" : "zio\/ZIO$.html#fromCompletionStage[A](cs:=>java.util.concurrent.CompletionStage[A])(implicittrace:zio.Trace):zio.Task[A]", "kind" : "def"}, {"label" : "asyncWithCompletionHandler", "tail" : "(op: (CompletionHandler[T, Any]) => Any)(trace: Trace): Task[T]", "member" : "zio.ZIOPlatformSpecificJVM.asyncWithCompletionHandler", "link" : "zio\/ZIO$.html#asyncWithCompletionHandler[T](op:java.nio.channels.CompletionHandler[T,Any]=>Any)(implicittrace:zio.Trace):zio.Task[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZIO$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZIO$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZIO$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZIO$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZIO$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZIO$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZIO$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZIO$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZIO$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZIO$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZIO$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZIO$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIO$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIO$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIO$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZIO$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZIO$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZIO$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZIO$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/ZIO.html", "kind" : "trait", "members_trait" : [{"label" : "zipWithPar", "tail" : "(that: => ZIO[R1, E1, B])(f: (A, B) => C)(trace: Trace): ZIO[R1, E1, C]", "member" : "zio.ZIO.zipWithPar", "link" : "zio\/ZIO.html#zipWithPar[R1<:R,E1>:E,B,C](that:=>zio.ZIO[R1,E1,B])(f:(A,B)=>C)(implicittrace:zio.Trace):zio.ZIO[R1,E1,C]", "kind" : "final def"}, {"label" : "zipWith", "tail" : "(that: => ZIO[R1, E1, B])(f: (A, B) => C)(trace: Trace): ZIO[R1, E1, C]", "member" : "zio.ZIO.zipWith", "link" : "zio\/ZIO.html#zipWith[R1<:R,E1>:E,B,C](that:=>zio.ZIO[R1,E1,B])(f:(A,B)=>C)(implicittrace:zio.Trace):zio.ZIO[R1,E1,C]", "kind" : "final def"}, {"label" : "zipRight", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, B]", "member" : "zio.ZIO.zipRight", "link" : "zio\/ZIO.html#zipRight[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,B]", "kind" : "final def"}, {"label" : "zipParRight", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, B]", "member" : "zio.ZIO.zipParRight", "link" : "zio\/ZIO.html#zipParRight[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,B]", "kind" : "final def"}, {"label" : "zipParLeft", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.zipParLeft", "link" : "zio\/ZIO.html#zipParLeft[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "zipPar", "tail" : "(that: => ZIO[R1, E1, B])(zippable: Zippable[A, B], trace: Trace): ZIO[R1, E1, Out]", "member" : "zio.ZIO.zipPar", "link" : "zio\/ZIO.html#zipPar[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicitzippable:zio.Zippable[A,B],implicittrace:zio.Trace):zio.ZIO[R1,E1,zippable.Out]", "kind" : "final def"}, {"label" : "zipLeft", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.zipLeft", "link" : "zio\/ZIO.html#zipLeft[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: => ZIO[R1, E1, B])(zippable: Zippable[A, B], trace: Trace): ZIO[R1, E1, Out]", "member" : "zio.ZIO.zip", "link" : "zio\/ZIO.html#zip[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicitzippable:zio.Zippable[A,B],implicittrace:zio.Trace):zio.ZIO[R1,E1,zippable.Out]", "kind" : "final def"}, {"label" : "withSystem", "tail" : "(system: => B)(tag: Tag[B], trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.withSystem", "link" : "zio\/ZIO.html#withSystem[B<:zio.System](system:=>B)(implicittag:zio.Tag[B],implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "withRuntimeFlags", "tail" : "(patch: Patch)(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.withRuntimeFlags", "link" : "zio\/ZIO.html#withRuntimeFlags(patch:zio.RuntimeFlags.Patch)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "withRandom", "tail" : "(random: => B)(tag: Tag[B], trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.withRandom", "link" : "zio\/ZIO.html#withRandom[B<:zio.Random](random:=>B)(implicittag:zio.Tag[B],implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "withParallelismUnbounded", "tail" : "(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.withParallelismUnbounded", "link" : "zio\/ZIO.html#withParallelismUnbounded(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "withParallelism", "tail" : "(n: => Int)(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.withParallelism", "link" : "zio\/ZIO.html#withParallelism(n:=>Int)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "withLogger", "tail" : "(logger: => B)(tag: Tag[B], trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.withLogger", "link" : "zio\/ZIO.html#withLogger[B<:zio.ZLogger[String,Any]](logger:=>B)(implicittag:zio.Tag[B],implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "withFinalizerExit", "tail" : "(finalizer: (A, Exit[Any, Any]) => URIO[R1, Any])(trace: Trace): ZIO[R1 with Scope, E, A]", "member" : "zio.ZIO.withFinalizerExit", "link" : "zio\/ZIO.html#withFinalizerExit[R1<:R](finalizer:(A,zio.Exit[Any,Any])=>zio.URIO[R1,Any])(implicittrace:zio.Trace):zio.ZIO[R1withzio.Scope,E,A]", "kind" : "final def"}, {"label" : "withFinalizer", "tail" : "(finalizer: (A) => URIO[R1, Any])(trace: Trace): ZIO[R1 with Scope, E, A]", "member" : "zio.ZIO.withFinalizer", "link" : "zio\/ZIO.html#withFinalizer[R1<:R](finalizer:A=>zio.URIO[R1,Any])(implicittrace:zio.Trace):zio.ZIO[R1withzio.Scope,E,A]", "kind" : "final def"}, {"label" : "withEarlyRelease", "tail" : "(trace: Trace): ZIO[R with Scope, E, (UIO[Unit], A)]", "member" : "zio.ZIO.withEarlyRelease", "link" : "zio\/ZIO.html#withEarlyRelease(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,E,(zio.UIO[Unit],A)]", "kind" : "final def"}, {"label" : "withConsole", "tail" : "(console: => B)(tag: Tag[B], trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.withConsole", "link" : "zio\/ZIO.html#withConsole[B<:zio.Console](console:=>B)(implicittag:zio.Tag[B],implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "withConfigProvider", "tail" : "(configProvider: => B)(tag: Tag[B], trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.withConfigProvider", "link" : "zio\/ZIO.html#withConfigProvider[B<:zio.ConfigProvider](configProvider:=>B)(implicittag:zio.Tag[B],implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "withClock", "tail" : "(clock: => B)(tag: Tag[B], trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.withClock", "link" : "zio\/ZIO.html#withClock[B<:zio.Clock](clock:=>B)(implicittag:zio.Tag[B],implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "whenZIODiscard", "tail" : "(p: => ZIO[R1, E1, Boolean])(trace: Trace): ZIO[R1, E1, Unit]", "member" : "zio.ZIO.whenZIODiscard", "link" : "zio\/ZIO.html#whenZIODiscard[R1<:R,E1>:E](p:=>zio.ZIO[R1,E1,Boolean])(implicittrace:zio.Trace):zio.ZIO[R1,E1,Unit]", "kind" : "final def"}, {"label" : "whenZIO", "tail" : "(p: => ZIO[R1, E1, Boolean])(trace: Trace): ZIO[R1, E1, Option[A]]", "member" : "zio.ZIO.whenZIO", "link" : "zio\/ZIO.html#whenZIO[R1<:R,E1>:E](p:=>zio.ZIO[R1,E1,Boolean])(implicittrace:zio.Trace):zio.ZIO[R1,E1,Option[A]]", "kind" : "final def"}, {"label" : "whenRef", "tail" : "(ref: => Ref[S])(f: (S) => Boolean)(trace: Trace): ZIO[R, E, (S, Option[A])]", "member" : "zio.ZIO.whenRef", "link" : "zio\/ZIO.html#whenRef[S](ref:=>zio.Ref[S])(f:S=>Boolean)(implicittrace:zio.Trace):zio.ZIO[R,E,(S,Option[A])]", "kind" : "final def"}, {"label" : "whenFiberRef", "tail" : "(ref: => FiberRef[S])(f: (S) => Boolean)(trace: Trace): ZIO[R, E, (S, Option[A])]", "member" : "zio.ZIO.whenFiberRef", "link" : "zio\/ZIO.html#whenFiberRef[S](ref:=>zio.FiberRef[S])(f:S=>Boolean)(implicittrace:zio.Trace):zio.ZIO[R,E,(S,Option[A])]", "kind" : "final def"}, {"label" : "whenDiscard", "tail" : "(p: => Boolean)(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.ZIO.whenDiscard", "link" : "zio\/ZIO.html#whenDiscard(p:=>Boolean)(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "final def"}, {"label" : "when", "tail" : "(p: => Boolean)(trace: Trace): ZIO[R, E, Option[A]]", "member" : "zio.ZIO.when", "link" : "zio\/ZIO.html#when(p:=>Boolean)(implicittrace:zio.Trace):zio.ZIO[R,E,Option[A]]", "kind" : "final def"}, {"label" : "validateWithPar", "tail" : "(that: => ZIO[R1, E1, B])(f: (A, B) => C)(trace: Trace): ZIO[R1, E1, C]", "member" : "zio.ZIO.validateWithPar", "link" : "zio\/ZIO.html#validateWithPar[R1<:R,E1>:E,B,C](that:=>zio.ZIO[R1,E1,B])(f:(A,B)=>C)(implicittrace:zio.Trace):zio.ZIO[R1,E1,C]", "kind" : "final def"}, {"label" : "validateWith", "tail" : "(that: => ZIO[R1, E1, B])(f: (A, B) => C)(trace: Trace): ZIO[R1, E1, C]", "member" : "zio.ZIO.validateWith", "link" : "zio\/ZIO.html#validateWith[R1<:R,E1>:E,B,C](that:=>zio.ZIO[R1,E1,B])(f:(A,B)=>C)(implicittrace:zio.Trace):zio.ZIO[R1,E1,C]", "kind" : "final def"}, {"label" : "validatePar", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, (A, B)]", "member" : "zio.ZIO.validatePar", "link" : "zio\/ZIO.html#validatePar[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,(A,B)]", "kind" : "final def"}, {"label" : "validate", "tail" : "(that: => ZIO[R1, E1, B])(zippable: Zippable[A, B], trace: Trace): ZIO[R1, E1, Out]", "member" : "zio.ZIO.validate", "link" : "zio\/ZIO.html#validate[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicitzippable:zio.Zippable[A,B],implicittrace:zio.Trace):zio.ZIO[R1,E1,zippable.Out]", "kind" : "final def"}, {"label" : "unsandbox", "tail" : "(ev: IsSubtypeOfError[E, Cause[E1]], trace: Trace): ZIO[R, E1, A]", "member" : "zio.ZIO.unsandbox", "link" : "zio\/ZIO.html#unsandbox[E1](implicitev:zio.IsSubtypeOfError[E,zio.Cause[E1]],implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "unexit", "tail" : "(ev: <:<[A, Exit[E1, A2]], trace: Trace): ZIO[R, E1, A2]", "member" : "zio.ZIO.unexit", "link" : "zio\/ZIO.html#unexit[E1>:E,A2](implicitev:A<:<zio.Exit[E1,A2],implicittrace:zio.Trace):zio.ZIO[R,E1,A2]", "kind" : "final def"}, {"label" : "updateServiceAt", "tail" : "(): UpdateServiceAt[R, E, A, Service]", "member" : "zio.ZIO.updateServiceAt", "link" : "zio\/ZIO.html#updateServiceAt[Service]:zio.ZIO.UpdateServiceAt[R,E,A,Service]", "kind" : "final def"}, {"label" : "updateService", "tail" : "(): UpdateService[R, E, A, M]", "member" : "zio.ZIO.updateService", "link" : "zio\/ZIO.html#updateService[M]:zio.ZIO.UpdateService[R,E,A,M]", "kind" : "final def"}, {"label" : "unsome", "tail" : "(ev: IsSubtypeOfError[E, Option[E1]], trace: Trace): ZIO[R, E1, Option[A]]", "member" : "zio.ZIO.unsome", "link" : "zio\/ZIO.html#unsome[E1](implicitev:zio.IsSubtypeOfError[E,Option[E1]],implicittrace:zio.Trace):zio.ZIO[R,E1,Option[A]]", "kind" : "final def"}, {"label" : "unright", "tail" : "(ev: IsSubtypeOfError[E, Either[B, E1]], trace: Trace): ZIO[R, E1, Either[B, A]]", "member" : "zio.ZIO.unright", "link" : "zio\/ZIO.html#unright[E1,B](implicitev:zio.IsSubtypeOfError[E,Either[B,E1]],implicittrace:zio.Trace):zio.ZIO[R,E1,Either[B,A]]", "kind" : "final def"}, {"label" : "unrefineWith", "tail" : "(pf: PartialFunction[Throwable, E1])(f: (E) => E1)(trace: Trace): ZIO[R, E1, A]", "member" : "zio.ZIO.unrefineWith", "link" : "zio\/ZIO.html#unrefineWith[E1](pf:PartialFunction[Throwable,E1])(f:E=>E1)(implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "unrefineTo", "tail" : "(arg0: ClassTag[E1], trace: Trace): ZIO[R, E1, A]", "member" : "zio.ZIO.unrefineTo", "link" : "zio\/ZIO.html#unrefineTo[E1>:E](implicitevidence$1:scala.reflect.ClassTag[E1],implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "unrefine", "tail" : "(pf: PartialFunction[Throwable, E1])(trace: Trace): ZIO[R, E1, A]", "member" : "zio.ZIO.unrefine", "link" : "zio\/ZIO.html#unrefine[E1>:E](pf:PartialFunction[Throwable,E1])(implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "unlessZIODiscard", "tail" : "(p: => ZIO[R1, E1, Boolean])(trace: Trace): ZIO[R1, E1, Unit]", "member" : "zio.ZIO.unlessZIODiscard", "link" : "zio\/ZIO.html#unlessZIODiscard[R1<:R,E1>:E](p:=>zio.ZIO[R1,E1,Boolean])(implicittrace:zio.Trace):zio.ZIO[R1,E1,Unit]", "kind" : "final def"}, {"label" : "unlessZIO", "tail" : "(p: => ZIO[R1, E1, Boolean])(trace: Trace): ZIO[R1, E1, Option[A]]", "member" : "zio.ZIO.unlessZIO", "link" : "zio\/ZIO.html#unlessZIO[R1<:R,E1>:E](p:=>zio.ZIO[R1,E1,Boolean])(implicittrace:zio.Trace):zio.ZIO[R1,E1,Option[A]]", "kind" : "final def"}, {"label" : "unlessDiscard", "tail" : "(p: => Boolean)(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.ZIO.unlessDiscard", "link" : "zio\/ZIO.html#unlessDiscard(p:=>Boolean)(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "final def"}, {"label" : "unless", "tail" : "(p: => Boolean)(trace: Trace): ZIO[R, E, Option[A]]", "member" : "zio.ZIO.unless", "link" : "zio\/ZIO.html#unless(p:=>Boolean)(implicittrace:zio.Trace):zio.ZIO[R,E,Option[A]]", "kind" : "final def"}, {"label" : "unleft", "tail" : "(ev: IsSubtypeOfError[E, Either[E1, B]], trace: Trace): ZIO[R, E1, Either[A, B]]", "member" : "zio.ZIO.unleft", "link" : "zio\/ZIO.html#unleft[E1,B](implicitev:zio.IsSubtypeOfError[E,Either[E1,B]],implicittrace:zio.Trace):zio.ZIO[R,E1,Either[A,B]]", "kind" : "final def"}, {"label" : "unit", "tail" : "(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.ZIO.unit", "link" : "zio\/ZIO.html#unit(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "final def"}, {"label" : "uninterruptible", "tail" : "(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.uninterruptible", "link" : "zio\/ZIO.html#uninterruptible(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "uncause", "tail" : "(ev: IsSubtypeOfOutput[A, Cause[E1]], trace: Trace): ZIO[R, E1, Unit]", "member" : "zio.ZIO.uncause", "link" : "zio\/ZIO.html#uncause[E1>:E](implicitev:zio.IsSubtypeOfOutput[A,zio.Cause[E1]],implicittrace:zio.Trace):zio.ZIO[R,E1,Unit]", "kind" : "final def"}, {"label" : "toFutureWith", "tail" : "(f: (E) => Throwable)(trace: Trace): URIO[R, CancelableFuture[A]]", "member" : "zio.ZIO.toFutureWith", "link" : "zio\/ZIO.html#toFutureWith(f:E=>Throwable)(implicittrace:zio.Trace):zio.URIO[R,zio.CancelableFuture[A]]", "kind" : "final def"}, {"label" : "toFuture", "tail" : "(ev2: IsSubtypeOfError[E, Throwable], trace: Trace): URIO[R, CancelableFuture[A]]", "member" : "zio.ZIO.toFuture", "link" : "zio\/ZIO.html#toFuture(implicitev2:zio.IsSubtypeOfError[E,Throwable],implicittrace:zio.Trace):zio.URIO[R,zio.CancelableFuture[A]]", "kind" : "final def"}, {"label" : "timeoutTo", "tail" : "(b: => B): TimeoutTo[R, E, A, B]", "member" : "zio.ZIO.timeoutTo", "link" : "zio\/ZIO.html#timeoutTo[B](b:=>B):zio.ZIO.TimeoutTo[R,E,A,B]", "kind" : "final def"}, {"label" : "timeoutFailCause", "tail" : "(cause: => Cause[E1])(d: => zio.Duration)(trace: Trace): ZIO[R, E1, A]", "member" : "zio.ZIO.timeoutFailCause", "link" : "zio\/ZIO.html#timeoutFailCause[E1>:E](cause:=>zio.Cause[E1])(d:=>zio.Duration)(implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "timeoutFail", "tail" : "(e: => E1)(d: => zio.Duration)(trace: Trace): ZIO[R, E1, A]", "member" : "zio.ZIO.timeoutFail", "link" : "zio\/ZIO.html#timeoutFail[E1>:E](e:=>E1)(d:=>zio.Duration)(implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "timeout", "tail" : "(d: => zio.Duration)(trace: Trace): ZIO[R, E, Option[A]]", "member" : "zio.ZIO.timeout", "link" : "zio\/ZIO.html#timeout(d:=>zio.Duration)(implicittrace:zio.Trace):zio.ZIO[R,E,Option[A]]", "kind" : "final def"}, {"label" : "timedWith", "tail" : "(nanoTime: => ZIO[R1, E1, Long])(trace: Trace): ZIO[R1, E1, (zio.Duration, A)]", "member" : "zio.ZIO.timedWith", "link" : "zio\/ZIO.html#timedWith[R1<:R,E1>:E](nanoTime:=>zio.ZIO[R1,E1,Long])(implicittrace:zio.Trace):zio.ZIO[R1,E1,(zio.Duration,A)]", "kind" : "final def"}, {"label" : "timed", "tail" : "(trace: Trace): ZIO[R, E, (zio.Duration, A)]", "member" : "zio.ZIO.timed", "link" : "zio\/ZIO.html#timed(implicittrace:zio.Trace):zio.ZIO[R,E,(zio.Duration,A)]", "kind" : "final def"}, {"label" : "tapSomeError", "tail" : "(f: PartialFunction[E, ZIO[R1, E1, Any]])(ev: CanFail[E], trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.tapSomeError", "link" : "zio\/ZIO.html#tapSomeError[R1<:R,E1>:E](f:PartialFunction[E,zio.ZIO[R1,E1,Any]])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "tapSome", "tail" : "(f: PartialFunction[A, ZIO[R1, E1, Any]])(trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.tapSome", "link" : "zio\/ZIO.html#tapSome[R1<:R,E1>:E](f:PartialFunction[A,zio.ZIO[R1,E1,Any]])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "tapErrorTrace", "tail" : "(f: ((E, StackTrace)) => ZIO[R1, E1, Any])(ev: CanFail[E], trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.tapErrorTrace", "link" : "zio\/ZIO.html#tapErrorTrace[R1<:R,E1>:E](f:((E,zio.StackTrace))=>zio.ZIO[R1,E1,Any])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "tapErrorCause", "tail" : "(f: (Cause[E]) => ZIO[R1, E1, Any])(trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.tapErrorCause", "link" : "zio\/ZIO.html#tapErrorCause[R1<:R,E1>:E](f:zio.Cause[E]=>zio.ZIO[R1,E1,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "tapError", "tail" : "(f: (E) => ZIO[R1, E1, Any])(ev: CanFail[E], trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.tapError", "link" : "zio\/ZIO.html#tapError[R1<:R,E1>:E](f:E=>zio.ZIO[R1,E1,Any])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "tapEither", "tail" : "(f: (Either[E, A]) => ZIO[R1, E1, Any])(ev: CanFail[E], trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.tapEither", "link" : "zio\/ZIO.html#tapEither[R1<:R,E1>:E](f:Either[E,A]=>zio.ZIO[R1,E1,Any])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "tapDefect", "tail" : "(f: (Cause[Nothing]) => ZIO[R1, E1, Any])(trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.tapDefect", "link" : "zio\/ZIO.html#tapDefect[R1<:R,E1>:E](f:zio.Cause[Nothing]=>zio.ZIO[R1,E1,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "tapBoth", "tail" : "(f: (E) => ZIO[R1, E1, Any], g: (A) => ZIO[R1, E1, Any])(ev: CanFail[E], trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.tapBoth", "link" : "zio\/ZIO.html#tapBoth[R1<:R,E1>:E](f:E=>zio.ZIO[R1,E1,Any],g:A=>zio.ZIO[R1,E1,Any])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "tap", "tail" : "(f: (A) => ZIO[R1, E1, Any])(trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.tap", "link" : "zio\/ZIO.html#tap[R1<:R,E1>:E](f:A=>zio.ZIO[R1,E1,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "supervised", "tail" : "(supervisor: => Supervisor[Any])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.supervised", "link" : "zio\/ZIO.html#supervised(supervisor:=>zio.Supervisor[Any])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "summarized", "tail" : "(summary0: => ZIO[R1, E1, B])(f: (B, B) => C)(trace: Trace): ZIO[R1, E1, (C, A)]", "member" : "zio.ZIO.summarized", "link" : "zio\/ZIO.html#summarized[R1<:R,E1>:E,B,C](summary0:=>zio.ZIO[R1,E1,B])(f:(B,B)=>C)(implicittrace:zio.Trace):zio.ZIO[R1,E1,(C,A)]", "kind" : "final def"}, {"label" : "sandboxWith", "tail" : "(f: (ZIO[R1, Cause[E], A]) => ZIO[R1, Cause[E2], B])(trace: Trace): ZIO[R1, E2, B]", "member" : "zio.ZIO.sandboxWith", "link" : "zio\/ZIO.html#sandboxWith[R1<:R,E2,B](f:zio.ZIO[R1,zio.Cause[E],A]=>zio.ZIO[R1,zio.Cause[E2],B])(implicittrace:zio.Trace):zio.ZIO[R1,E2,B]", "kind" : "final def"}, {"label" : "someOrFailException", "tail" : "(ev: IsSubtypeOfOutput[A, Option[B]], ev2: <:<[NoSuchElementException, E1], trace: Trace): ZIO[R, E1, B]", "member" : "zio.ZIO.someOrFailException", "link" : "zio\/ZIO.html#someOrFailException[B,E1>:E](implicitev:zio.IsSubtypeOfOutput[A,Option[B]],implicitev2:NoSuchElementException<:<E1,implicittrace:zio.Trace):zio.ZIO[R,E1,B]", "kind" : "final def"}, {"label" : "someOrFail", "tail" : "(e: => E1)(ev: IsSubtypeOfOutput[A, Option[B]], trace: Trace): ZIO[R, E1, B]", "member" : "zio.ZIO.someOrFail", "link" : "zio\/ZIO.html#someOrFail[B,E1>:E](e:=>E1)(implicitev:zio.IsSubtypeOfOutput[A,Option[B]],implicittrace:zio.Trace):zio.ZIO[R,E1,B]", "kind" : "final def"}, {"label" : "someOrElseZIO", "tail" : "(default: => ZIO[R1, E1, C])(ev0: IsSubtypeOfOutput[A, Option[B]], ev1: <:<[C, B], trace: Trace): ZIO[R1, E1, B]", "member" : "zio.ZIO.someOrElseZIO", "link" : "zio\/ZIO.html#someOrElseZIO[B,R1<:R,E1>:E,C](default:=>zio.ZIO[R1,E1,C])(implicitev0:zio.IsSubtypeOfOutput[A,Option[B]],implicitev1:C<:<B,implicittrace:zio.Trace):zio.ZIO[R1,E1,B]", "kind" : "final def"}, {"label" : "someOrElseZIO", "tail" : "(default: => ZIO[R1, E1, B])(ev: IsSubtypeOfOutput[A, Option[B]], trace: Trace): ZIO[R1, E1, B]", "member" : "zio.ZIO.someOrElseZIO", "link" : "zio\/ZIO.html#someOrElseZIO[B,R1<:R,E1>:E](default:=>zio.ZIO[R1,E1,B])(implicitev:zio.IsSubtypeOfOutput[A,Option[B]],implicittrace:zio.Trace):zio.ZIO[R1,E1,B]", "kind" : "final def"}, {"label" : "someOrElse", "tail" : "(default: => C)(ev0: IsSubtypeOfOutput[A, Option[B]], ev1: <:<[C, B], trace: Trace): ZIO[R, E, B]", "member" : "zio.ZIO.someOrElse", "link" : "zio\/ZIO.html#someOrElse[B,C](default:=>C)(implicitev0:zio.IsSubtypeOfOutput[A,Option[B]],implicitev1:C<:<B,implicittrace:zio.Trace):zio.ZIO[R,E,B]", "kind" : "final def"}, {"label" : "someOrElse", "tail" : "(default: => B)(ev: IsSubtypeOfOutput[A, Option[B]], trace: Trace): ZIO[R, E, B]", "member" : "zio.ZIO.someOrElse", "link" : "zio\/ZIO.html#someOrElse[B](default:=>B)(implicitev:zio.IsSubtypeOfOutput[A,Option[B]],implicittrace:zio.Trace):zio.ZIO[R,E,B]", "kind" : "final def"}, {"label" : "someWith", "tail" : "(f: (ZIO[R, Option[E], B]) => ZIO[R1, Option[E1], B1])(ev: IsSubtypeOfOutput[A, Option[B]], trace: Trace): ZIO[R1, E1, Option[B1]]", "member" : "zio.ZIO.someWith", "link" : "zio\/ZIO.html#someWith[R1,E1,A1,B,B1](f:zio.ZIO[R,Option[E],B]=>zio.ZIO[R1,Option[E1],B1])(implicitev:zio.IsSubtypeOfOutput[A,Option[B]],implicittrace:zio.Trace):zio.ZIO[R1,E1,Option[B1]]", "kind" : "final def"}, {"label" : "some", "tail" : "(ev: IsSubtypeOfOutput[A, Option[B]], trace: Trace): ZIO[R, Option[E], B]", "member" : "zio.ZIO.some", "link" : "zio\/ZIO.html#some[B](implicitev:zio.IsSubtypeOfOutput[A,Option[B]],implicittrace:zio.Trace):zio.ZIO[R,Option[E],B]", "kind" : "final def"}, {"label" : "sequentialFinalizers", "tail" : "(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.sequentialFinalizers", "link" : "zio\/ZIO.html#sequentialFinalizers(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "scheduleFork", "tail" : "(schedule: => Schedule[R1, Any, B])(trace: Trace): ZIO[R1 with Scope, Nothing, Fiber.Runtime[E, B]]", "member" : "zio.ZIO.scheduleFork", "link" : "zio\/ZIO.html#scheduleFork[R1<:R,B](schedule:=>zio.Schedule[R1,Any,B])(implicittrace:zio.Trace):zio.ZIO[R1withzio.Scope,Nothing,zio.Fiber.Runtime[E,B]]", "kind" : "final def"}, {"label" : "scheduleFrom", "tail" : "(a: => A1)(schedule0: => Schedule[R1, A1, B])(trace: Trace): ZIO[R1, E, B]", "member" : "zio.ZIO.scheduleFrom", "link" : "zio\/ZIO.html#scheduleFrom[R1<:R,A1>:A,B](a:=>A1)(schedule0:=>zio.Schedule[R1,A1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E,B]", "kind" : "final def"}, {"label" : "schedule", "tail" : "(schedule: => Schedule[R1, Any, B])(trace: Trace): ZIO[R1, E, B]", "member" : "zio.ZIO.schedule", "link" : "zio\/ZIO.html#schedule[R1<:R,B](schedule:=>zio.Schedule[R1,Any,B])(implicittrace:zio.Trace):zio.ZIO[R1,E,B]", "kind" : "final def"}, {"label" : "sandbox", "tail" : "(trace: Trace): ZIO[R, Cause[E], A]", "member" : "zio.ZIO.sandbox", "link" : "zio\/ZIO.html#sandbox(implicittrace:zio.Trace):zio.ZIO[R,zio.Cause[E],A]", "kind" : "final def"}, {"label" : "rightWith", "tail" : "(f: (ZIO[R, Either[B, E], C]) => ZIO[R1, Either[B1, E1], C1])(ev: IsSubtypeOfOutput[A, Either[B, C]], trace: Trace): ZIO[R1, E1, Either[B1, C1]]", "member" : "zio.ZIO.rightWith", "link" : "zio\/ZIO.html#rightWith[R1,E1,A1,B,B1,C,C1](f:zio.ZIO[R,Either[B,E],C]=>zio.ZIO[R1,Either[B1,E1],C1])(implicitev:zio.IsSubtypeOfOutput[A,Either[B,C]],implicittrace:zio.Trace):zio.ZIO[R1,E1,Either[B1,C1]]", "kind" : "final def"}, {"label" : "right", "tail" : "(ev: IsSubtypeOfOutput[A, Either[B, C]], trace: Trace): ZIO[R, Either[B, E], C]", "member" : "zio.ZIO.right", "link" : "zio\/ZIO.html#right[B,C](implicitev:zio.IsSubtypeOfOutput[A,Either[B,C]],implicittrace:zio.Trace):zio.ZIO[R,Either[B,E],C]", "kind" : "final def"}, {"label" : "retryWhileZIO", "tail" : "(f: (E) => URIO[R1, Boolean])(ev: CanFail[E], trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.retryWhileZIO", "link" : "zio\/ZIO.html#retryWhileZIO[R1<:R](f:E=>zio.URIO[R1,Boolean])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "retryWhileEquals", "tail" : "(e: => E1)(ev: CanFail[E1], trace: Trace): ZIO[R, E1, A]", "member" : "zio.ZIO.retryWhileEquals", "link" : "zio\/ZIO.html#retryWhileEquals[E1>:E](e:=>E1)(implicitev:zio.CanFail[E1],implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "retryWhile", "tail" : "(f: (E) => Boolean)(ev: CanFail[E], trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.retryWhile", "link" : "zio\/ZIO.html#retryWhile(f:E=>Boolean)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "retryUntilZIO", "tail" : "(f: (E) => URIO[R1, Boolean])(ev: CanFail[E], trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.retryUntilZIO", "link" : "zio\/ZIO.html#retryUntilZIO[R1<:R](f:E=>zio.URIO[R1,Boolean])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "retryUntilEquals", "tail" : "(e: => E1)(ev: CanFail[E1], trace: Trace): ZIO[R, E1, A]", "member" : "zio.ZIO.retryUntilEquals", "link" : "zio\/ZIO.html#retryUntilEquals[E1>:E](e:=>E1)(implicitev:zio.CanFail[E1],implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "retryUntil", "tail" : "(f: (E) => Boolean)(ev: CanFail[E], trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.retryUntil", "link" : "zio\/ZIO.html#retryUntil(f:E=>Boolean)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "retryOrElseEither", "tail" : "(schedule0: => Schedule[R1, E, Out], orElse: (E, Out) => ZIO[R1, E1, B])(ev: CanFail[E], trace: Trace): ZIO[R1, E1, Either[B, A]]", "member" : "zio.ZIO.retryOrElseEither", "link" : "zio\/ZIO.html#retryOrElseEither[R1<:R,Out,E1,B](schedule0:=>zio.Schedule[R1,E,Out],orElse:(E,Out)=>zio.ZIO[R1,E1,B])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E1,Either[B,A]]", "kind" : "final def"}, {"label" : "retryOrElse", "tail" : "(policy: => Schedule[R1, E, S], orElse: (E, S) => ZIO[R1, E1, A1])(ev: CanFail[E], trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.retryOrElse", "link" : "zio\/ZIO.html#retryOrElse[R1<:R,A1>:A,S,E1](policy:=>zio.Schedule[R1,E,S],orElse:(E,S)=>zio.ZIO[R1,E1,A1])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "retryN", "tail" : "(n: => Int)(ev: CanFail[E], trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.retryN", "link" : "zio\/ZIO.html#retryN(n:=>Int)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "retry", "tail" : "(policy: => Schedule[R1, E, S])(ev: CanFail[E], trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.retry", "link" : "zio\/ZIO.html#retry[R1<:R,S](policy:=>zio.Schedule[R1,E,S])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "replicateZIODiscard", "tail" : "(n: => Int)(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.ZIO.replicateZIODiscard", "link" : "zio\/ZIO.html#replicateZIODiscard(n:=>Int)(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "final def"}, {"label" : "replicateZIO", "tail" : "(n: => Int)(trace: Trace): ZIO[R, E, Iterable[A]]", "member" : "zio.ZIO.replicateZIO", "link" : "zio\/ZIO.html#replicateZIO(n:=>Int)(implicittrace:zio.Trace):zio.ZIO[R,E,Iterable[A]]", "kind" : "final def"}, {"label" : "repeatWhileZIO", "tail" : "(f: (A) => URIO[R1, Boolean])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.repeatWhileZIO", "link" : "zio\/ZIO.html#repeatWhileZIO[R1<:R](f:A=>zio.URIO[R1,Boolean])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "repeatWhileEquals", "tail" : "(a: => A1)(trace: Trace): ZIO[R, E, A1]", "member" : "zio.ZIO.repeatWhileEquals", "link" : "zio\/ZIO.html#repeatWhileEquals[A1>:A](a:=>A1)(implicittrace:zio.Trace):zio.ZIO[R,E,A1]", "kind" : "final def"}, {"label" : "repeatWhile", "tail" : "(p: (A) => Boolean)(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.repeatWhile", "link" : "zio\/ZIO.html#repeatWhile(p:A=>Boolean)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "repeatUntilZIO", "tail" : "(f: (A) => URIO[R1, Boolean])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.repeatUntilZIO", "link" : "zio\/ZIO.html#repeatUntilZIO[R1<:R](f:A=>zio.URIO[R1,Boolean])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "repeatUntilEquals", "tail" : "(a: => A1)(trace: Trace): ZIO[R, E, A1]", "member" : "zio.ZIO.repeatUntilEquals", "link" : "zio\/ZIO.html#repeatUntilEquals[A1>:A](a:=>A1)(implicittrace:zio.Trace):zio.ZIO[R,E,A1]", "kind" : "final def"}, {"label" : "repeatUntil", "tail" : "(p: (A) => Boolean)(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.repeatUntil", "link" : "zio\/ZIO.html#repeatUntil(p:A=>Boolean)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "repeatOrElseEither", "tail" : "(schedule0: => Schedule[R1, A, B], orElse: (E, Option[B]) => ZIO[R1, E2, C])(trace: Trace): ZIO[R1, E2, Either[C, B]]", "member" : "zio.ZIO.repeatOrElseEither", "link" : "zio\/ZIO.html#repeatOrElseEither[R1<:R,B,E2,C](schedule0:=>zio.Schedule[R1,A,B],orElse:(E,Option[B])=>zio.ZIO[R1,E2,C])(implicittrace:zio.Trace):zio.ZIO[R1,E2,Either[C,B]]", "kind" : "final def"}, {"label" : "repeatOrElse", "tail" : "(schedule: => Schedule[R1, A, B], orElse: (E, Option[B]) => ZIO[R1, E2, B])(trace: Trace): ZIO[R1, E2, B]", "member" : "zio.ZIO.repeatOrElse", "link" : "zio\/ZIO.html#repeatOrElse[R1<:R,E2,B](schedule:=>zio.Schedule[R1,A,B],orElse:(E,Option[B])=>zio.ZIO[R1,E2,B])(implicittrace:zio.Trace):zio.ZIO[R1,E2,B]", "kind" : "final def"}, {"label" : "repeatN", "tail" : "(n: => Int)(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.repeatN", "link" : "zio\/ZIO.html#repeatN(n:=>Int)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(schedule: => Schedule[R1, A, B])(trace: Trace): ZIO[R1, E, B]", "member" : "zio.ZIO.repeat", "link" : "zio\/ZIO.html#repeat[R1<:R,B](schedule:=>zio.Schedule[R1,A,B])(implicittrace:zio.Trace):zio.ZIO[R1,E,B]", "kind" : "final def"}, {"label" : "rejectZIO", "tail" : "(pf: PartialFunction[A, ZIO[R1, E1, E1]])(trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.rejectZIO", "link" : "zio\/ZIO.html#rejectZIO[R1<:R,E1>:E](pf:PartialFunction[A,zio.ZIO[R1,E1,E1]])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "reject", "tail" : "(pf: PartialFunction[A, E1])(trace: Trace): ZIO[R, E1, A]", "member" : "zio.ZIO.reject", "link" : "zio\/ZIO.html#reject[E1>:E](pf:PartialFunction[A,E1])(implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "refineOrDieWith", "tail" : "(pf: PartialFunction[E, E1])(f: (E) => Throwable)(ev: CanFail[E], trace: Trace): ZIO[R, E1, A]", "member" : "zio.ZIO.refineOrDieWith", "link" : "zio\/ZIO.html#refineOrDieWith[E1](pf:PartialFunction[E,E1])(f:E=>Throwable)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "refineOrDie", "tail" : "(pf: PartialFunction[E, E1])(ev1: IsSubtypeOfError[E, Throwable], ev2: CanFail[E], trace: Trace): ZIO[R, E1, A]", "member" : "zio.ZIO.refineOrDie", "link" : "zio\/ZIO.html#refineOrDie[E1](pf:PartialFunction[E,E1])(implicitev1:zio.IsSubtypeOfError[E,Throwable],implicitev2:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "raceWith", "tail" : "(that: => ZIO[R1, E1, B])(leftDone: (Exit[E, A], Fiber[E1, B]) => ZIO[R1, E2, C], rightDone: (Exit[E1, B], Fiber[E, A]) => ZIO[R1, E2, C])(trace: Trace): ZIO[R1, E2, C]", "member" : "zio.ZIO.raceWith", "link" : "zio\/ZIO.html#raceWith[R1<:R,E1,E2,B,C](that:=>zio.ZIO[R1,E1,B])(leftDone:(zio.Exit[E,A],zio.Fiber[E1,B])=>zio.ZIO[R1,E2,C],rightDone:(zio.Exit[E1,B],zio.Fiber[E,A])=>zio.ZIO[R1,E2,C])(implicittrace:zio.Trace):zio.ZIO[R1,E2,C]", "kind" : "final def"}, {"label" : "raceEither", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, Either[A, B]]", "member" : "zio.ZIO.raceEither", "link" : "zio\/ZIO.html#raceEither[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,Either[A,B]]", "kind" : "final def"}, {"label" : "raceFirstAwait", "tail" : "(that: => ZIO[R1, E1, A1])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.raceFirstAwait", "link" : "zio\/ZIO.html#raceFirstAwait[R1<:R,E1>:E,A1>:A](that:=>zio.ZIO[R1,E1,A1])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "raceFirst", "tail" : "(that: => ZIO[R1, E1, A1])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.raceFirst", "link" : "zio\/ZIO.html#raceFirst[R1<:R,E1>:E,A1>:A](that:=>zio.ZIO[R1,E1,A1])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "raceAll", "tail" : "(ios0: => Iterable[ZIO[R1, E1, A1]])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.raceAll", "link" : "zio\/ZIO.html#raceAll[R1<:R,E1>:E,A1>:A](ios0:=>Iterable[zio.ZIO[R1,E1,A1]])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "raceAwait", "tail" : "(that: => ZIO[R1, E1, A1])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.raceAwait", "link" : "zio\/ZIO.html#raceAwait[R1<:R,E1>:E,A1>:A](that:=>zio.ZIO[R1,E1,A1])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "race", "tail" : "(that: => ZIO[R1, E1, A1])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.race", "link" : "zio\/ZIO.html#race[R1<:R,E1>:E,A1>:A](that:=>zio.ZIO[R1,E1,A1])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "provideSomeLayer", "tail" : "(): ProvideSomeLayer[R0, R, E, A]", "member" : "zio.ZIO.provideSomeLayer", "link" : "zio\/ZIO.html#provideSomeLayer[R0]:zio.ZIO.ProvideSomeLayer[R0,R,E,A]", "kind" : "final def"}, {"label" : "provideSomeEnvironment", "tail" : "(f: (ZEnvironment[R0]) => ZEnvironment[R])(trace: Trace): ZIO[R0, E, A]", "member" : "zio.ZIO.provideSomeEnvironment", "link" : "zio\/ZIO.html#provideSomeEnvironment[R0](f:zio.ZEnvironment[R0]=>zio.ZEnvironment[R])(implicittrace:zio.Trace):zio.ZIO[R0,E,A]", "kind" : "final def"}, {"label" : "provideLayer", "tail" : "(layer: => ZLayer[R0, E1, R])(trace: Trace): ZIO[R0, E1, A]", "member" : "zio.ZIO.provideLayer", "link" : "zio\/ZIO.html#provideLayer[E1>:E,R0](layer:=>zio.ZLayer[R0,E1,R])(implicittrace:zio.Trace):zio.ZIO[R0,E1,A]", "kind" : "final def"}, {"label" : "provideEnvironment", "tail" : "(r: => ZEnvironment[R])(trace: Trace): IO[E, A]", "member" : "zio.ZIO.provideEnvironment", "link" : "zio\/ZIO.html#provideEnvironment(r:=>zio.ZEnvironment[R])(implicittrace:zio.Trace):zio.IO[E,A]", "kind" : "final def"}, {"label" : "parallelFinalizers", "tail" : "(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.parallelFinalizers", "link" : "zio\/ZIO.html#parallelFinalizers(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "parallelErrors", "tail" : "(trace: Trace): ZIO[R, ::[E1], A]", "member" : "zio.ZIO.parallelErrors", "link" : "zio\/ZIO.html#parallelErrors[E1>:E](implicittrace:zio.Trace):zio.ZIO[R,::[E1],A]", "kind" : "final def"}, {"label" : "orElseSucceed", "tail" : "(a1: => A1)(ev: CanFail[E], trace: Trace): URIO[R, A1]", "member" : "zio.ZIO.orElseSucceed", "link" : "zio\/ZIO.html#orElseSucceed[A1>:A](a1:=>A1)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.URIO[R,A1]", "kind" : "final def"}, {"label" : "orElseOptional", "tail" : "(that: => ZIO[R1, Option[E1], A1])(ev: IsSubtypeOfError[E, Option[E1]], trace: Trace): ZIO[R1, Option[E1], A1]", "member" : "zio.ZIO.orElseOptional", "link" : "zio\/ZIO.html#orElseOptional[R1<:R,E1,A1>:A](that:=>zio.ZIO[R1,Option[E1],A1])(implicitev:zio.IsSubtypeOfError[E,Option[E1]],implicittrace:zio.Trace):zio.ZIO[R1,Option[E1],A1]", "kind" : "final def"}, {"label" : "orElseFail", "tail" : "(e1: => E1)(ev: CanFail[E], trace: Trace): ZIO[R, E1, A]", "member" : "zio.ZIO.orElseFail", "link" : "zio\/ZIO.html#orElseFail[E1](e1:=>E1)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "def"}, {"label" : "orElseEither", "tail" : "(that: => ZIO[R1, E2, B])(ev: CanFail[E], trace: Trace): ZIO[R1, E2, Either[A, B]]", "member" : "zio.ZIO.orElseEither", "link" : "zio\/ZIO.html#orElseEither[R1<:R,E2,B](that:=>zio.ZIO[R1,E2,B])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E2,Either[A,B]]", "kind" : "final def"}, {"label" : "orElse", "tail" : "(that: => ZIO[R1, E2, A1])(ev: CanFail[E], trace: Trace): ZIO[R1, E2, A1]", "member" : "zio.ZIO.orElse", "link" : "zio\/ZIO.html#orElse[R1<:R,E2,A1>:A](that:=>zio.ZIO[R1,E2,A1])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E2,A1]", "kind" : "final def"}, {"label" : "resurrect", "tail" : "(ev1: IsSubtypeOfError[E, Throwable], trace: Trace): RIO[R, A]", "member" : "zio.ZIO.resurrect", "link" : "zio\/ZIO.html#resurrect(implicitev1:zio.IsSubtypeOfError[E,Throwable],implicittrace:zio.Trace):zio.RIO[R,A]", "kind" : "final def"}, {"label" : "orDieWith", "tail" : "(f: (E) => Throwable)(ev: CanFail[E], trace: Trace): URIO[R, A]", "member" : "zio.ZIO.orDieWith", "link" : "zio\/ZIO.html#orDieWith(f:E=>Throwable)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.URIO[R,A]", "kind" : "final def"}, {"label" : "orDie", "tail" : "(ev1: IsSubtypeOfError[E, Throwable], ev2: CanFail[E], trace: Trace): URIO[R, A]", "member" : "zio.ZIO.orDie", "link" : "zio\/ZIO.html#orDie(implicitev1:zio.IsSubtypeOfError[E,Throwable],implicitev2:zio.CanFail[E],implicittrace:zio.Trace):zio.URIO[R,A]", "kind" : "final def"}, {"label" : "option", "tail" : "(ev: CanFail[E], trace: Trace): URIO[R, Option[A]]", "member" : "zio.ZIO.option", "link" : "zio\/ZIO.html#option(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.URIO[R,Option[A]]", "kind" : "final def"}, {"label" : "onTermination", "tail" : "(cleanup: (Cause[Nothing]) => URIO[R1, Any])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.onTermination", "link" : "zio\/ZIO.html#onTermination[R1<:R](cleanup:zio.Cause[Nothing]=>zio.URIO[R1,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "onInterrupt", "tail" : "(cleanup: (Set[FiberId]) => URIO[R1, Any])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.onInterrupt", "link" : "zio\/ZIO.html#onInterrupt[R1<:R](cleanup:Set[zio.FiberId]=>zio.URIO[R1,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "onInterrupt", "tail" : "(cleanup: => URIO[R1, Any])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.onInterrupt", "link" : "zio\/ZIO.html#onInterrupt[R1<:R](cleanup:=>zio.URIO[R1,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "onExit", "tail" : "(cleanup: (Exit[E, A]) => URIO[R1, Any])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.onExit", "link" : "zio\/ZIO.html#onExit[R1<:R](cleanup:zio.Exit[E,A]=>zio.URIO[R1,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "onExecutionContext", "tail" : "(ec: => ExecutionContext)(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.onExecutionContext", "link" : "zio\/ZIO.html#onExecutionContext(ec:=>scala.concurrent.ExecutionContext)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "onExecutor", "tail" : "(executor: => Executor)(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.onExecutor", "link" : "zio\/ZIO.html#onExecutor(executor:=>zio.Executor)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "onError", "tail" : "(cleanup: (Cause[E]) => URIO[R1, Any])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.onError", "link" : "zio\/ZIO.html#onError[R1<:R](cleanup:zio.Cause[E]=>zio.URIO[R1,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "onDoneCause", "tail" : "(error: (Cause[E]) => ZIO[R1, Nothing, Any], success: (A) => ZIO[R1, Nothing, Any])(trace: Trace): ZIO[R1, Nothing, Unit]", "member" : "zio.ZIO.onDoneCause", "link" : "zio\/ZIO.html#onDoneCause[R1<:R](error:zio.Cause[E]=>zio.ZIO[R1,Nothing,Any],success:A=>zio.ZIO[R1,Nothing,Any])(implicittrace:zio.Trace):zio.ZIO[R1,Nothing,Unit]", "kind" : "final def"}, {"label" : "onDone", "tail" : "(error: (E) => ZIO[R1, Nothing, Any], success: (A) => ZIO[R1, Nothing, Any])(trace: Trace): ZIO[R1, Nothing, Unit]", "member" : "zio.ZIO.onDone", "link" : "zio\/ZIO.html#onDone[R1<:R](error:E=>zio.ZIO[R1,Nothing,Any],success:A=>zio.ZIO[R1,Nothing,Any])(implicittrace:zio.Trace):zio.ZIO[R1,Nothing,Unit]", "kind" : "final def"}, {"label" : "once", "tail" : "(trace: Trace): UIO[ZIO[R, E, Unit]]", "member" : "zio.ZIO.once", "link" : "zio\/ZIO.html#once(implicittrace:zio.Trace):zio.UIO[zio.ZIO[R,E,Unit]]", "kind" : "final def"}, {"label" : "none", "tail" : "(ev: IsSubtypeOfOutput[A, Option[B]], trace: Trace): ZIO[R, Option[E], Unit]", "member" : "zio.ZIO.none", "link" : "zio\/ZIO.html#none[B](implicitev:zio.IsSubtypeOfOutput[A,Option[B]],implicittrace:zio.Trace):zio.ZIO[R,Option[E],Unit]", "kind" : "final def"}, {"label" : "negate", "tail" : "(ev: IsSubtypeOfOutput[A, Boolean], trace: Trace): ZIO[R, E, Boolean]", "member" : "zio.ZIO.negate", "link" : "zio\/ZIO.html#negate(implicitev:zio.IsSubtypeOfOutput[A,Boolean],implicittrace:zio.Trace):zio.ZIO[R,E,Boolean]", "kind" : "final def"}, {"label" : "merge", "tail" : "(ev1: IsSubtypeOfError[E, A1], ev2: CanFail[E], trace: Trace): URIO[R, A1]", "member" : "zio.ZIO.merge", "link" : "zio\/ZIO.html#merge[A1>:A](implicitev1:zio.IsSubtypeOfError[E,A1],implicitev2:zio.CanFail[E],implicittrace:zio.Trace):zio.URIO[R,A1]", "kind" : "final def"}, {"label" : "memoize", "tail" : "(trace: Trace): UIO[ZIO[R, E, A]]", "member" : "zio.ZIO.memoize", "link" : "zio\/ZIO.html#memoize(implicittrace:zio.Trace):zio.UIO[zio.ZIO[R,E,A]]", "kind" : "final def"}, {"label" : "mapErrorCause", "tail" : "(h: (Cause[E]) => Cause[E2])(trace: Trace): ZIO[R, E2, A]", "member" : "zio.ZIO.mapErrorCause", "link" : "zio\/ZIO.html#mapErrorCause[E2](h:zio.Cause[E]=>zio.Cause[E2])(implicittrace:zio.Trace):zio.ZIO[R,E2,A]", "kind" : "final def"}, {"label" : "mapError", "tail" : "(f: (E) => E2)(ev: CanFail[E], trace: Trace): ZIO[R, E2, A]", "member" : "zio.ZIO.mapError", "link" : "zio\/ZIO.html#mapError[E2](f:E=>E2)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,E2,A]", "kind" : "final def"}, {"label" : "mapBoth", "tail" : "(f: (E) => E2, g: (A) => B)(ev: CanFail[E], trace: Trace): ZIO[R, E2, B]", "member" : "zio.ZIO.mapBoth", "link" : "zio\/ZIO.html#mapBoth[E2,B](f:E=>E2,g:A=>B)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,E2,B]", "kind" : "final def"}, {"label" : "mapAttempt", "tail" : "(f: (A) => B)(ev: IsSubtypeOfError[E, Throwable], trace: Trace): RIO[R, B]", "member" : "zio.ZIO.mapAttempt", "link" : "zio\/ZIO.html#mapAttempt[B](f:A=>B)(implicitev:zio.IsSubtypeOfError[E,Throwable],implicittrace:zio.Trace):zio.RIO[R,B]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (A) => B)(trace: Trace): ZIO[R, E, B]", "member" : "zio.ZIO.map", "link" : "zio\/ZIO.html#map[B](f:A=>B)(implicittrace:zio.Trace):zio.ZIO[R,E,B]", "kind" : "final def"}, {"label" : "logSpan", "tail" : "(label: => String)(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.logSpan", "link" : "zio\/ZIO.html#logSpan(label:=>String)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "logError", "tail" : "(message: => String)(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.logError", "link" : "zio\/ZIO.html#logError(message:=>String)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "logError", "tail" : "(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.logError", "link" : "zio\/ZIO.html#logError(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "leftWith", "tail" : "(f: (ZIO[R, Either[E, C], B]) => ZIO[R1, Either[E1, C1], B1])(ev: IsSubtypeOfOutput[A, Either[B, C]], trace: Trace): ZIO[R1, E1, Either[B1, C1]]", "member" : "zio.ZIO.leftWith", "link" : "zio\/ZIO.html#leftWith[R1,E1,A1,B,B1,C,C1](f:zio.ZIO[R,Either[E,C],B]=>zio.ZIO[R1,Either[E1,C1],B1])(implicitev:zio.IsSubtypeOfOutput[A,Either[B,C]],implicittrace:zio.Trace):zio.ZIO[R1,E1,Either[B1,C1]]", "kind" : "final def"}, {"label" : "left", "tail" : "(ev: IsSubtypeOfOutput[A, Either[B, C]], trace: Trace): ZIO[R, Either[E, C], B]", "member" : "zio.ZIO.left", "link" : "zio\/ZIO.html#left[B,C](implicitev:zio.IsSubtypeOfOutput[A,Either[B,C]],implicittrace:zio.Trace):zio.ZIO[R,Either[E,C],B]", "kind" : "final def"}, {"label" : "isSuccess", "tail" : "(trace: Trace): URIO[R, Boolean]", "member" : "zio.ZIO.isSuccess", "link" : "zio\/ZIO.html#isSuccess(implicittrace:zio.Trace):zio.URIO[R,Boolean]", "kind" : "final def"}, {"label" : "isFailure", "tail" : "(trace: Trace): URIO[R, Boolean]", "member" : "zio.ZIO.isFailure", "link" : "zio\/ZIO.html#isFailure(implicittrace:zio.Trace):zio.URIO[R,Boolean]", "kind" : "final def"}, {"label" : "intoPromise", "tail" : "(p: => Promise[E1, A1])(trace: Trace): URIO[R, Boolean]", "member" : "zio.ZIO.intoPromise", "link" : "zio\/ZIO.html#intoPromise[E1>:E,A1>:A](p:=>zio.Promise[E1,A1])(implicittrace:zio.Trace):zio.URIO[R,Boolean]", "kind" : "final def"}, {"label" : "interruptStatus", "tail" : "(flag: => InterruptStatus)(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.interruptStatus", "link" : "zio\/ZIO.html#interruptStatus(flag:=>zio.InterruptStatus)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "interruptible", "tail" : "(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.interruptible", "link" : "zio\/ZIO.html#interruptible(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "interruptAllChildren", "tail" : "(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.interruptAllChildren", "link" : "zio\/ZIO.html#interruptAllChildren(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "ignoreLogged", "tail" : "(trace: Trace): URIO[R, Unit]", "member" : "zio.ZIO.ignoreLogged", "link" : "zio\/ZIO.html#ignoreLogged(implicittrace:zio.Trace):zio.URIO[R,Unit]", "kind" : "final def"}, {"label" : "ignore", "tail" : "(trace: Trace): URIO[R, Unit]", "member" : "zio.ZIO.ignore", "link" : "zio\/ZIO.html#ignore(implicittrace:zio.Trace):zio.URIO[R,Unit]", "kind" : "final def"}, {"label" : "head", "tail" : "(ev: IsSubtypeOfOutput[A, Seq[B]], trace: Trace): ZIO[R, Option[E], B]", "member" : "zio.ZIO.head", "link" : "zio\/ZIO.html#head[B](implicitev:zio.IsSubtypeOfOutput[A,Seq[B]],implicittrace:zio.Trace):zio.ZIO[R,Option[E],B]", "kind" : "final def"}, {"label" : "flattenErrorOption", "tail" : "(default: => E2)(ev: IsSubtypeOfError[E, Option[E1]], trace: Trace): ZIO[R, E1, A]", "member" : "zio.ZIO.flattenErrorOption", "link" : "zio\/ZIO.html#flattenErrorOption[E1,E2<:E1](default:=>E2)(implicitev:zio.IsSubtypeOfError[E,Option[E1]],implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "forkWithErrorHandler", "tail" : "(handler: (E) => URIO[R1, Any])(trace: Trace): URIO[R1, Fiber.Runtime[E, A]]", "member" : "zio.ZIO.forkWithErrorHandler", "link" : "zio\/ZIO.html#forkWithErrorHandler[R1<:R](handler:E=>zio.URIO[R1,Any])(implicittrace:zio.Trace):zio.URIO[R1,zio.Fiber.Runtime[E,A]]", "kind" : "final def"}, {"label" : "forkScoped", "tail" : "(trace: Trace): ZIO[R with Scope, Nothing, Fiber.Runtime[E, A]]", "member" : "zio.ZIO.forkScoped", "link" : "zio\/ZIO.html#forkScoped(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,zio.Fiber.Runtime[E,A]]", "kind" : "final def"}, {"label" : "forkDaemon", "tail" : "(trace: Trace): URIO[R, Fiber.Runtime[E, A]]", "member" : "zio.ZIO.forkDaemon", "link" : "zio\/ZIO.html#forkDaemon(implicittrace:zio.Trace):zio.URIO[R,zio.Fiber.Runtime[E,A]]", "kind" : "final def"}, {"label" : "forkIn", "tail" : "(scope: => Scope)(trace: Trace): URIO[R, Fiber.Runtime[E, A]]", "member" : "zio.ZIO.forkIn", "link" : "zio\/ZIO.html#forkIn(scope:=>zio.Scope)(implicittrace:zio.Trace):zio.URIO[R,zio.Fiber.Runtime[E,A]]", "kind" : "final def"}, {"label" : "fork", "tail" : "(trace: Trace): URIO[R, Fiber.Runtime[E, A]]", "member" : "zio.ZIO.fork", "link" : "zio\/ZIO.html#fork(implicittrace:zio.Trace):zio.URIO[R,zio.Fiber.Runtime[E,A]]", "kind" : "final def"}, {"label" : "forever", "tail" : "(trace: Trace): ZIO[R, E, Nothing]", "member" : "zio.ZIO.forever", "link" : "zio\/ZIO.html#forever(implicittrace:zio.Trace):zio.ZIO[R,E,Nothing]", "kind" : "final def"}, {"label" : "forEachZIO", "tail" : "(f: (A) => ZIO[R1, E2, B])(trace: Trace): ZIO[R1, E2, Option[B]]", "member" : "zio.ZIO.forEachZIO", "link" : "zio\/ZIO.html#forEachZIO[R1<:R,E2,B](f:A=>zio.ZIO[R1,E2,B])(implicittrace:zio.Trace):zio.ZIO[R1,E2,Option[B]]", "kind" : "final def"}, {"label" : "foldZIO", "tail" : "(failure: (E) => ZIO[R1, E2, B], success: (A) => ZIO[R1, E2, B])(ev: CanFail[E], trace: Trace): ZIO[R1, E2, B]", "member" : "zio.ZIO.foldZIO", "link" : "zio\/ZIO.html#foldZIO[R1<:R,E2,B](failure:E=>zio.ZIO[R1,E2,B],success:A=>zio.ZIO[R1,E2,B])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E2,B]", "kind" : "final def"}, {"label" : "foldTraceZIO", "tail" : "(failure: ((E, StackTrace)) => ZIO[R1, E2, B], success: (A) => ZIO[R1, E2, B])(ev: CanFail[E], trace: Trace): ZIO[R1, E2, B]", "member" : "zio.ZIO.foldTraceZIO", "link" : "zio\/ZIO.html#foldTraceZIO[R1<:R,E2,B](failure:((E,zio.StackTrace))=>zio.ZIO[R1,E2,B],success:A=>zio.ZIO[R1,E2,B])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E2,B]", "kind" : "final def"}, {"label" : "foldCauseZIO", "tail" : "(failure: (Cause[E]) => ZIO[R1, E2, B], success: (A) => ZIO[R1, E2, B])(trace: Trace): ZIO[R1, E2, B]", "member" : "zio.ZIO.foldCauseZIO", "link" : "zio\/ZIO.html#foldCauseZIO[R1<:R,E2,B](failure:zio.Cause[E]=>zio.ZIO[R1,E2,B],success:A=>zio.ZIO[R1,E2,B])(implicittrace:zio.Trace):zio.ZIO[R1,E2,B]", "kind" : "def"}, {"label" : "foldCause", "tail" : "(failure: (Cause[E]) => B, success: (A) => B)(trace: Trace): URIO[R, B]", "member" : "zio.ZIO.foldCause", "link" : "zio\/ZIO.html#foldCause[B](failure:zio.Cause[E]=>B,success:A=>B)(implicittrace:zio.Trace):zio.URIO[R,B]", "kind" : "final def"}, {"label" : "fold", "tail" : "(failure: (E) => B, success: (A) => B)(ev: CanFail[E], trace: Trace): URIO[R, B]", "member" : "zio.ZIO.fold", "link" : "zio\/ZIO.html#fold[B](failure:E=>B,success:A=>B)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.URIO[R,B]", "kind" : "final def"}, {"label" : "flipWith", "tail" : "(f: (ZIO[R, A, E]) => ZIO[R1, A1, E1])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.flipWith", "link" : "zio\/ZIO.html#flipWith[R1,A1,E1](f:zio.ZIO[R,A,E]=>zio.ZIO[R1,A1,E1])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "flip", "tail" : "(trace: Trace): ZIO[R, A, E]", "member" : "zio.ZIO.flip", "link" : "zio\/ZIO.html#flip(implicittrace:zio.Trace):zio.ZIO[R,A,E]", "kind" : "final def"}, {"label" : "flatten", "tail" : "(ev1: IsSubtypeOfOutput[A, ZIO[R1, E1, B]], trace: Trace): ZIO[R1, E1, B]", "member" : "zio.ZIO.flatten", "link" : "zio\/ZIO.html#flatten[R1<:R,E1>:E,B](implicitev1:zio.IsSubtypeOfOutput[A,zio.ZIO[R1,E1,B]],implicittrace:zio.Trace):zio.ZIO[R1,E1,B]", "kind" : "final def"}, {"label" : "flatMapError", "tail" : "(f: (E) => URIO[R1, E2])(ev: CanFail[E], trace: Trace): ZIO[R1, E2, A]", "member" : "zio.ZIO.flatMapError", "link" : "zio\/ZIO.html#flatMapError[R1<:R,E2](f:E=>zio.URIO[R1,E2])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E2,A]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(k: (A) => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, B]", "member" : "zio.ZIO.flatMap", "link" : "zio\/ZIO.html#flatMap[R1<:R,E1>:E,B](k:A=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,B]", "kind" : "def"}, {"label" : "firstSuccessOf", "tail" : "(rest: => Iterable[ZIO[R1, E1, A1]])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.firstSuccessOf", "link" : "zio\/ZIO.html#firstSuccessOf[R1<:R,E1>:E,A1>:A](rest:=>Iterable[zio.ZIO[R1,E1,A1]])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "filterOrFail", "tail" : "(p: (A) => Boolean)(e: => E1)(trace: Trace): ZIO[R, E1, A]", "member" : "zio.ZIO.filterOrFail", "link" : "zio\/ZIO.html#filterOrFail[E1>:E](p:A=>Boolean)(e:=>E1)(implicittrace:zio.Trace):zio.ZIO[R,E1,A]", "kind" : "final def"}, {"label" : "filterOrElseWith", "tail" : "(p: (A) => Boolean)(f: (A) => ZIO[R1, E1, A1])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.filterOrElseWith", "link" : "zio\/ZIO.html#filterOrElseWith[R1<:R,E1>:E,A1>:A](p:A=>Boolean)(f:A=>zio.ZIO[R1,E1,A1])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "filterOrElse", "tail" : "(p: (A) => Boolean)(zio: => ZIO[R1, E1, A1])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.filterOrElse", "link" : "zio\/ZIO.html#filterOrElse[R1<:R,E1>:E,A1>:A](p:A=>Boolean)(zio:=>zio.ZIO[R1,E1,A1])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "filterOrDieWith", "tail" : "(p: (A) => Boolean)(t: (A) => Throwable)(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.filterOrDieWith", "link" : "zio\/ZIO.html#filterOrDieWith(p:A=>Boolean)(t:A=>Throwable)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "filterOrDieMessage", "tail" : "(p: (A) => Boolean)(message: => String)(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.filterOrDieMessage", "link" : "zio\/ZIO.html#filterOrDieMessage(p:A=>Boolean)(message:=>String)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "filterOrDie", "tail" : "(p: (A) => Boolean)(t: => Throwable)(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.filterOrDie", "link" : "zio\/ZIO.html#filterOrDie(p:A=>Boolean)(t:=>Throwable)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "exitCode", "tail" : "(trace: Trace): URIO[R, ExitCode]", "member" : "zio.ZIO.exitCode", "link" : "zio\/ZIO.html#exitCode(implicittrace:zio.Trace):zio.URIO[R,zio.ExitCode]", "kind" : "final def"}, {"label" : "exitWith", "tail" : "(f: (Exit[E, A]) => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, B]", "member" : "zio.ZIO.exitWith", "link" : "zio\/ZIO.html#exitWith[R1<:R,E1,B](f:zio.Exit[E,A]=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,B]", "kind" : "final def"}, {"label" : "exit", "tail" : "(trace: Trace): URIO[R, Exit[E, A]]", "member" : "zio.ZIO.exit", "link" : "zio\/ZIO.html#exit(implicittrace:zio.Trace):zio.URIO[R,zio.Exit[E,A]]", "kind" : "final def"}, {"label" : "eventually", "tail" : "(ev: CanFail[E], trace: Trace): URIO[R, A]", "member" : "zio.ZIO.eventually", "link" : "zio\/ZIO.html#eventually(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.URIO[R,A]", "kind" : "final def"}, {"label" : "ensuringChildren", "tail" : "(children: (Chunk[Fiber.Runtime[Any, Any]]) => ZIO[R1, Nothing, Any])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.ensuringChildren", "link" : "zio\/ZIO.html#ensuringChildren[R1<:R](children:zio.Chunk[zio.Fiber.Runtime[Any,Any]]=>zio.ZIO[R1,Nothing,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "def"}, {"label" : "ensuringChild", "tail" : "(f: (Fiber[Any, Iterable[Any]]) => ZIO[R1, Nothing, Any])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.ensuringChild", "link" : "zio\/ZIO.html#ensuringChild[R1<:R](f:zio.Fiber[Any,Iterable[Any]]=>zio.ZIO[R1,Nothing,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "ensuring", "tail" : "(finalizer: => URIO[R1, Any])(trace: Trace): ZIO[R1, E, A]", "member" : "zio.ZIO.ensuring", "link" : "zio\/ZIO.html#ensuring[R1<:R](finalizer:=>zio.URIO[R1,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E,A]", "kind" : "final def"}, {"label" : "either", "tail" : "(ev: CanFail[E], trace: Trace): URIO[R, Either[E, A]]", "member" : "zio.ZIO.either", "link" : "zio\/ZIO.html#either(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.URIO[R,Either[E,A]]", "kind" : "final def"}, {"label" : "disconnect", "tail" : "(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.disconnect", "link" : "zio\/ZIO.html#disconnect(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "diffFiberRefs", "tail" : "(trace: Trace): ZIO[R, E, (Patch, A)]", "member" : "zio.ZIO.diffFiberRefs", "link" : "zio\/ZIO.html#diffFiberRefs(implicittrace:zio.Trace):zio.ZIO[R,E,(zio.FiberRefs.Patch,A)]", "kind" : "def"}, {"label" : "delay", "tail" : "(duration: => zio.Duration)(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.delay", "link" : "zio\/ZIO.html#delay(duration:=>zio.Duration)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "debug", "tail" : "(prefix: => String)(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.debug", "link" : "zio\/ZIO.html#debug(prefix:=>String)(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "debug", "tail" : "(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.debug", "link" : "zio\/ZIO.html#debug(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "daemonChildren", "tail" : "(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.daemonChildren", "link" : "zio\/ZIO.html#daemonChildren(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "collectZIO", "tail" : "(e: => E1)(pf: PartialFunction[A, ZIO[R1, E1, B]])(trace: Trace): ZIO[R1, E1, B]", "member" : "zio.ZIO.collectZIO", "link" : "zio\/ZIO.html#collectZIO[R1<:R,E1>:E,B](e:=>E1)(pf:PartialFunction[A,zio.ZIO[R1,E1,B]])(implicittrace:zio.Trace):zio.ZIO[R1,E1,B]", "kind" : "final def"}, {"label" : "collect", "tail" : "(e: => E1)(pf: PartialFunction[A, B])(trace: Trace): ZIO[R, E1, B]", "member" : "zio.ZIO.collect", "link" : "zio\/ZIO.html#collect[E1>:E,B](e:=>E1)(pf:PartialFunction[A,B])(implicittrace:zio.Trace):zio.ZIO[R,E1,B]", "kind" : "final def"}, {"label" : "cause", "tail" : "(trace: Trace): URIO[R, Cause[E]]", "member" : "zio.ZIO.cause", "link" : "zio\/ZIO.html#cause(implicittrace:zio.Trace):zio.URIO[R,zio.Cause[E]]", "kind" : "final def"}, {"label" : "catchSomeDefect", "tail" : "(pf: PartialFunction[Throwable, ZIO[R1, E1, A1]])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.catchSomeDefect", "link" : "zio\/ZIO.html#catchSomeDefect[R1<:R,E1>:E,A1>:A](pf:PartialFunction[Throwable,zio.ZIO[R1,E1,A1]])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "catchSomeCause", "tail" : "(pf: PartialFunction[Cause[E], ZIO[R1, E1, A1]])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.catchSomeCause", "link" : "zio\/ZIO.html#catchSomeCause[R1<:R,E1>:E,A1>:A](pf:PartialFunction[zio.Cause[E],zio.ZIO[R1,E1,A1]])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "catchSomeTrace", "tail" : "(pf: PartialFunction[(E, StackTrace), ZIO[R1, E1, A1]])(ev: CanFail[E], trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.catchSomeTrace", "link" : "zio\/ZIO.html#catchSomeTrace[R1<:R,E1>:E,A1>:A](pf:PartialFunction[(E,zio.StackTrace),zio.ZIO[R1,E1,A1]])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "catchSome", "tail" : "(pf: PartialFunction[E, ZIO[R1, E1, A1]])(ev: CanFail[E], trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.catchSome", "link" : "zio\/ZIO.html#catchSome[R1<:R,E1>:E,A1>:A](pf:PartialFunction[E,zio.ZIO[R1,E1,A1]])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "catchNonFatalOrDie", "tail" : "(h: (E) => ZIO[R1, E2, A1])(ev1: CanFail[E], ev2: <:<[E, Throwable], trace: Trace): ZIO[R1, E2, A1]", "member" : "zio.ZIO.catchNonFatalOrDie", "link" : "zio\/ZIO.html#catchNonFatalOrDie[R1<:R,E2,A1>:A](h:E=>zio.ZIO[R1,E2,A1])(implicitev1:zio.CanFail[E],implicitev2:E<:<Throwable,implicittrace:zio.Trace):zio.ZIO[R1,E2,A1]", "kind" : "final def"}, {"label" : "catchAllDefect", "tail" : "(h: (Throwable) => ZIO[R1, E1, A1])(trace: Trace): ZIO[R1, E1, A1]", "member" : "zio.ZIO.catchAllDefect", "link" : "zio\/ZIO.html#catchAllDefect[R1<:R,E1>:E,A1>:A](h:Throwable=>zio.ZIO[R1,E1,A1])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A1]", "kind" : "final def"}, {"label" : "catchAllCause", "tail" : "(k: (Cause[E]) => ZIO[R1, E2, A1])(trace: Trace): ZIO[R1, E2, A1]", "member" : "zio.ZIO.catchAllCause", "link" : "zio\/ZIO.html#catchAllCause[R1<:R,E2,A1>:A](k:zio.Cause[E]=>zio.ZIO[R1,E2,A1])(implicittrace:zio.Trace):zio.ZIO[R1,E2,A1]", "kind" : "final def"}, {"label" : "catchAllTrace", "tail" : "(h: ((E, StackTrace)) => ZIO[R1, E2, A1])(ev: CanFail[E], trace: Trace): ZIO[R1, E2, A1]", "member" : "zio.ZIO.catchAllTrace", "link" : "zio\/ZIO.html#catchAllTrace[R1<:R,E2,A1>:A](h:((E,zio.StackTrace))=>zio.ZIO[R1,E2,A1])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E2,A1]", "kind" : "final def"}, {"label" : "catchAll", "tail" : "(h: (E) => ZIO[R1, E2, A1])(ev: CanFail[E], trace: Trace): ZIO[R1, E2, A1]", "member" : "zio.ZIO.catchAll", "link" : "zio\/ZIO.html#catchAll[R1<:R,E2,A1>:A](h:E=>zio.ZIO[R1,E2,A1])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E2,A1]", "kind" : "final def"}, {"label" : "cachedInvalidate", "tail" : "(timeToLive0: => zio.Duration)(trace: Trace): ZIO[R, Nothing, (IO[E, A], UIO[Unit])]", "member" : "zio.ZIO.cachedInvalidate", "link" : "zio\/ZIO.html#cachedInvalidate(timeToLive0:=>zio.Duration)(implicittrace:zio.Trace):zio.ZIO[R,Nothing,(zio.IO[E,A],zio.UIO[Unit])]", "kind" : "final def"}, {"label" : "cached", "tail" : "(timeToLive: => zio.Duration)(trace: Trace): ZIO[R, Nothing, IO[E, A]]", "member" : "zio.ZIO.cached", "link" : "zio\/ZIO.html#cached(timeToLive:=>zio.Duration)(implicittrace:zio.Trace):zio.ZIO[R,Nothing,zio.IO[E,A]]", "kind" : "final def"}, {"label" : "awaitAllChildren", "tail" : "(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIO.awaitAllChildren", "link" : "zio\/ZIO.html#awaitAllChildren(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "final def"}, {"label" : "asSomeError", "tail" : "(trace: Trace): ZIO[R, Option[E], A]", "member" : "zio.ZIO.asSomeError", "link" : "zio\/ZIO.html#asSomeError(implicittrace:zio.Trace):zio.ZIO[R,Option[E],A]", "kind" : "final def"}, {"label" : "asSome", "tail" : "(trace: Trace): ZIO[R, E, Option[A]]", "member" : "zio.ZIO.asSome", "link" : "zio\/ZIO.html#asSome(implicittrace:zio.Trace):zio.ZIO[R,E,Option[A]]", "kind" : "final def"}, {"label" : "asRightError", "tail" : "(trace: Trace): ZIO[R, Either[Nothing, E], A]", "member" : "zio.ZIO.asRightError", "link" : "zio\/ZIO.html#asRightError(implicittrace:zio.Trace):zio.ZIO[R,Either[Nothing,E],A]", "kind" : "final def"}, {"label" : "asRight", "tail" : "(trace: Trace): ZIO[R, E, Either[Nothing, A]]", "member" : "zio.ZIO.asRight", "link" : "zio\/ZIO.html#asRight(implicittrace:zio.Trace):zio.ZIO[R,E,Either[Nothing,A]]", "kind" : "final def"}, {"label" : "asLeftError", "tail" : "(trace: Trace): ZIO[R, Either[E, Nothing], A]", "member" : "zio.ZIO.asLeftError", "link" : "zio\/ZIO.html#asLeftError(implicittrace:zio.Trace):zio.ZIO[R,Either[E,Nothing],A]", "kind" : "final def"}, {"label" : "asLeft", "tail" : "(trace: Trace): ZIO[R, E, Either[A, Nothing]]", "member" : "zio.ZIO.asLeft", "link" : "zio\/ZIO.html#asLeft(implicittrace:zio.Trace):zio.ZIO[R,E,Either[A,Nothing]]", "kind" : "final def"}, {"label" : "as", "tail" : "(b: => B)(trace: Trace): ZIO[R, E, B]", "member" : "zio.ZIO.as", "link" : "zio\/ZIO.html#as[B](b:=>B)(implicittrace:zio.Trace):zio.ZIO[R,E,B]", "kind" : "final def"}, {"label" : "absorbWith", "tail" : "(f: (E) => Throwable)(trace: Trace): RIO[R, A]", "member" : "zio.ZIO.absorbWith", "link" : "zio\/ZIO.html#absorbWith(f:E=>Throwable)(implicittrace:zio.Trace):zio.RIO[R,A]", "kind" : "final def"}, {"label" : "absorb", "tail" : "(ev: IsSubtypeOfError[E, Throwable], trace: Trace): RIO[R, A]", "member" : "zio.ZIO.absorb", "link" : "zio\/ZIO.html#absorb(implicitev:zio.IsSubtypeOfError[E,Throwable],implicittrace:zio.Trace):zio.RIO[R,A]", "kind" : "final def"}, {"label" : "absolve", "tail" : "(ev: IsSubtypeOfOutput[A, Either[E1, B]], trace: Trace): ZIO[R, E1, B]", "member" : "zio.ZIO.absolve", "link" : "zio\/ZIO.html#absolve[E1>:E,B](implicitev:zio.IsSubtypeOfOutput[A,Either[E1,B]],implicittrace:zio.Trace):zio.ZIO[R,E1,B]", "kind" : "final def"}, {"label" : "unary_!", "tail" : "(ev: <:<[A, Boolean], trace: Trace): ZIO[R1, E1, Boolean]", "member" : "zio.ZIO.unary_!", "link" : "zio\/ZIO.html#unary_![R1<:R,E1>:E](implicitev:A<:<Boolean,implicittrace:zio.Trace):zio.ZIO[R1,E1,Boolean]", "kind" : "final def"}, {"label" : "<|>", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, Either[A, B]]", "member" : "zio.ZIO.<|>", "link" : "zio\/ZIO.html#<|>[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,Either[A,B]]", "kind" : "final def"}, {"label" : "<>", "tail" : "(that: => ZIO[R1, E2, A1])(ev: CanFail[E], trace: Trace): ZIO[R1, E2, A1]", "member" : "zio.ZIO.<>", "link" : "zio\/ZIO.html#<>[R1<:R,E2,A1>:A](that:=>zio.ZIO[R1,E2,A1])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E2,A1]", "kind" : "final def"}, {"label" : "<+>", "tail" : "(that: => ZIO[R1, E1, B])(ev: CanFail[E], trace: Trace): ZIO[R1, E1, Either[A, B]]", "member" : "zio.ZIO.<+>", "link" : "zio\/ZIO.html#<+>[R1<:R,E1,B](that:=>zio.ZIO[R1,E1,B])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R1,E1,Either[A,B]]", "kind" : "final def"}, {"label" : "<*>", "tail" : "(that: => ZIO[R1, E1, B])(zippable: Zippable[A, B], trace: Trace): ZIO[R1, E1, Out]", "member" : "zio.ZIO.<*>", "link" : "zio\/ZIO.html#<*>[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicitzippable:zio.Zippable[A,B],implicittrace:zio.Trace):zio.ZIO[R1,E1,zippable.Out]", "kind" : "final def"}, {"label" : "<*", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.<*", "link" : "zio\/ZIO.html#<*[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "<&>", "tail" : "(that: => ZIO[R1, E1, B])(zippable: Zippable[A, B], trace: Trace): ZIO[R1, E1, Out]", "member" : "zio.ZIO.<&>", "link" : "zio\/ZIO.html#<&>[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicitzippable:zio.Zippable[A,B],implicittrace:zio.Trace):zio.ZIO[R1,E1,zippable.Out]", "kind" : "final def"}, {"label" : "<&", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, A]", "member" : "zio.ZIO.<&", "link" : "zio\/ZIO.html#<&[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,A]", "kind" : "final def"}, {"label" : "*>", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, B]", "member" : "zio.ZIO.*>", "link" : "zio\/ZIO.html#*>[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,B]", "kind" : "final def"}, {"label" : "&>", "tail" : "(that: => ZIO[R1, E1, B])(trace: Trace): ZIO[R1, E1, B]", "member" : "zio.ZIO.&>", "link" : "zio\/ZIO.html#&>[R1<:R,E1>:E,B](that:=>zio.ZIO[R1,E1,B])(implicittrace:zio.Trace):zio.ZIO[R1,E1,B]", "kind" : "final def"}, {"label" : "!", "tail" : "(ev1: <:<[E, Throwable], ev2: CanFail[E], trace: Trace): ZIO[R, Nothing, A]", "member" : "zio.ZIO.!", "link" : "zio\/ZIO.html#!(implicitev1:E<:<Throwable,implicitev2:zio.CanFail[E],implicittrace:zio.Trace):zio.ZIO[R,Nothing,A]", "kind" : "final def"}, {"label" : "@@", "tail" : "(aspect: => ZIOAspect[LowerR, UpperR, LowerE, UpperE, LowerA, UpperA])(trace: Trace): ZIO[UpperR, LowerE, LowerA]", "member" : "zio.ZIO.@@", "link" : "zio\/ZIO.html#@@[LowerR<:UpperR,UpperR<:R,LowerE>:E,UpperE>:LowerE,LowerA>:A,UpperA>:LowerA](aspect:=>zio.ZIOAspect[LowerR,UpperR,LowerE,UpperE,LowerA,UpperA])(implicittrace:zio.Trace):zio.ZIO[UpperR,LowerE,LowerA]", "kind" : "final def"}, {"label" : "provide", "tail" : "(layer: ZLayer[_, E1, _]*): ZIO[Any, E1, A]", "member" : "zio.ZIOVersionSpecific.provide", "link" : "zio\/ZIO.html#provide[E1>:E](layer:zio.ZLayer[_,E1,_]*):zio.ZIO[Any,E1,A]", "kind" : "macro def"}, {"label" : "provideSome", "tail" : "(): ProvideSomeLayerPartiallyApplied[R0, R, E, A]", "member" : "zio.ZIOVersionSpecific.provideSome", "link" : "zio\/ZIO.html#provideSome[R0]:zio.ProvideSomeLayerPartiallyApplied[R0,R,E,A]", "kind" : "def"}, {"label" : "toCompletableFutureWith", "tail" : "(f: (E) => Throwable)(trace: Trace): URIO[R, CompletableFuture[A1]]", "member" : "zio.ZIOPlatformSpecific.toCompletableFutureWith", "link" : "zio\/ZIO.html#toCompletableFutureWith[A1>:A](f:E=>Throwable)(implicittrace:zio.Trace):zio.URIO[R,java.util.concurrent.CompletableFuture[A1]]", "kind" : "def"}, {"label" : "toCompletableFuture", "tail" : "(ev: IsSubtypeOfError[E, Throwable], trace: Trace): URIO[R, CompletableFuture[A1]]", "member" : "zio.ZIOPlatformSpecific.toCompletableFuture", "link" : "zio\/ZIO.html#toCompletableFuture[A1>:A](implicitev:zio.IsSubtypeOfError[E,Throwable],implicittrace:zio.Trace):zio.URIO[R,java.util.concurrent.CompletableFuture[A1]]", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/ZIO.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "zio\/ZIO.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "zio\/ZIO.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "zio\/ZIO.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZIO.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZIO.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZIO.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZIO.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZIO.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZIO.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZIO.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZIO.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZIO.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZIO.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZIO.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZIO.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIO.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIO.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIO.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZIO.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZIO.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZIO.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZIO.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "zio\/ZIO.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "zio\/ZIO.html#productArity:Int", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "zio\/ZIO.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "A ZIO[R, E, A] value is an immutable value (called an \"effect\") thatdescribes an async, concurrent workflow."}, {"name" : "zio.ZIOApp", "object" : "zio\/ZIOApp$.html", "members_object" : [{"label" : "fromZIO", "tail" : "(run0: ZIO[ZIOAppArgs, Any, Any])(trace: Trace): ZIOApp", "member" : "zio.ZIOApp.fromZIO", "link" : "zio\/ZIOApp$.html#fromZIO(run0:zio.ZIO[zio.ZIOAppArgs,Any,Any])(implicittrace:zio.Trace):zio.ZIOApp", "kind" : "def"}, {"label" : "apply", "tail" : "(run0: ZIO[R with ZIOAppArgs with Scope, Any, Any], bootstrap0: ZLayer[ZIOAppArgs, Any, R])(tagged: zio.EnvironmentTag[R]): ZIOApp", "member" : "zio.ZIOApp.apply", "link" : "zio\/ZIOApp$.html#apply[R](run0:zio.ZIO[Rwithzio.ZIOAppArgswithzio.Scope,Any,Any],bootstrap0:zio.ZLayer[zio.ZIOAppArgs,Any,R])(implicittagged:zio.EnvironmentTag[R]):zio.ZIOApp", "kind" : "def"}, {"label" : "Proxy", "tail" : "", "member" : "zio.ZIOApp.Proxy", "link" : "zio\/ZIOApp$.html#ProxyextendsZIOApp", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZIOApp$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZIOApp$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZIOApp$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZIOApp$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZIOApp$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZIOApp$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZIOApp$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZIOApp$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZIOApp$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZIOApp$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZIOApp$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZIOApp$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOApp$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOApp$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOApp$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZIOApp$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZIOApp$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZIOApp$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZIOApp$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/ZIOApp.html", "kind" : "trait", "members_trait" : [{"label" : "installSignalHandlers", "tail" : "(runtime: Runtime[Any])(trace: Trace): UIO[Any]", "member" : "zio.ZIOApp.installSignalHandlers", "link" : "zio\/ZIOApp.html#installSignalHandlers(runtime:zio.Runtime[Any])(implicittrace:zio.Trace):zio.UIO[Any]", "kind" : "def"}, {"label" : "runtime", "tail" : "(): Runtime[Any]", "member" : "zio.ZIOApp.runtime", "link" : "zio\/ZIOApp.html#runtime:zio.Runtime[Any]", "kind" : "def"}, {"label" : "invoke", "tail" : "(args: Chunk[String])(trace: Trace): ZIO[Any, Any, Any]", "member" : "zio.ZIOApp.invoke", "link" : "zio\/ZIOApp.html#invoke(args:zio.Chunk[String])(implicittrace:zio.Trace):zio.ZIO[Any,Any,Any]", "kind" : "final def"}, {"label" : "exit", "tail" : "(code: ExitCode)(trace: Trace): UIO[Unit]", "member" : "zio.ZIOApp.exit", "link" : "zio\/ZIOApp.html#exit(code:zio.ExitCode)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "final def"}, {"label" : "getArgs", "tail" : "(trace: Trace): ZIO[ZIOAppArgs, Nothing, Chunk[String]]", "member" : "zio.ZIOApp.getArgs", "link" : "zio\/ZIOApp.html#getArgs(implicittrace:zio.Trace):zio.ZIO[zio.ZIOAppArgs,Nothing,zio.Chunk[String]]", "kind" : "final def"}, {"label" : "<>", "tail" : "(that: ZIOApp)(trace: Trace): ZIOApp", "member" : "zio.ZIOApp.<>", "link" : "zio\/ZIOApp.html#<>(that:zio.ZIOApp)(implicittrace:zio.Trace):zio.ZIOApp", "kind" : "final def"}, {"label" : "validateEnv", "tail" : "(zio: ZIO[R, E, A]): ZIO[R1, E, A]", "member" : "zio.ZIOAppVersionSpecific.validateEnv", "link" : "zio\/ZIOApp.html#validateEnv[R1,R,E,A](zio:zio.ZIO[R,E,A]):zio.ZIO[R1,E,A]", "kind" : "implicit macro def"}, {"label" : "main", "tail" : "(args0: Array[String]): Unit", "member" : "zio.ZIOAppPlatformSpecific.main", "link" : "zio\/ZIOApp.html#main(args0:Array[String]):Unit", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZIOApp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZIOApp.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZIOApp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZIOApp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZIOApp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZIOApp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZIOApp.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZIOApp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZIOApp.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZIOApp.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZIOApp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZIOApp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOApp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOApp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOApp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZIOApp.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZIOApp.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZIOApp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZIOApp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "run", "tail" : "(): ZIO[Environment with ZIOAppArgs with Scope, Any, Any]", "member" : "zio.ZIOApp.run", "link" : "zio\/ZIOApp.html#run:zio.ZIO[ZIOApp.this.Environmentwithzio.ZIOAppArgswithzio.Scope,Any,Any]", "kind" : "abstract def"}, {"label" : "bootstrap", "tail" : "(): ZLayer[ZIOAppArgs, Any, Environment]", "member" : "zio.ZIOApp.bootstrap", "link" : "zio\/ZIOApp.html#bootstrap:zio.ZLayer[zio.ZIOAppArgs,Any,ZIOApp.this.Environment]", "kind" : "abstract def"}, {"member" : "zio.ZIOApp.Environment", "error" : "unsupported entity"}, {"label" : "environmentTag", "tail" : "(): zio.EnvironmentTag[Environment]", "member" : "zio.ZIOApp.environmentTag", "link" : "zio\/ZIOApp.html#environmentTag:zio.EnvironmentTag[ZIOApp.this.Environment]", "kind" : "implicit abstract def"}], "shortDescription" : "An entry point for a ZIO application that allows sharing layers betweenapplications."}, {"name" : "zio.ZIOAppArgs", "shortDescription" : "A service that contains command-line arguments of an application.", "object" : "zio\/ZIOAppArgs$.html", "members_object" : [{"label" : "empty", "tail" : ": ULayer[ZIOAppArgs]", "member" : "zio.ZIOAppArgs.empty", "link" : "zio\/ZIOAppArgs$.html#empty:zio.ULayer[zio.ZIOAppArgs]", "kind" : "val"}, {"label" : "getArgs", "tail" : "(trace: Trace): ZIO[ZIOAppArgs, Nothing, Chunk[String]]", "member" : "zio.ZIOAppArgs.getArgs", "link" : "zio\/ZIOAppArgs$.html#getArgs(implicittrace:zio.Trace):zio.ZIO[zio.ZIOAppArgs,Nothing,zio.Chunk[String]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZIOAppArgs$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZIOAppArgs$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZIOAppArgs$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZIOAppArgs$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZIOAppArgs$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZIOAppArgs$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZIOAppArgs$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZIOAppArgs$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZIOAppArgs$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZIOAppArgs$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZIOAppArgs$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZIOAppArgs$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOAppArgs$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOAppArgs$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOAppArgs$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZIOAppArgs$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZIOAppArgs$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZIOAppArgs$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZIOAppArgs$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "zio.ZIOAppArgs#<init>", "error" : "unsupported entity"}, {"label" : "getArgs", "tail" : ": Chunk[String]", "member" : "zio.ZIOAppArgs.getArgs", "link" : "zio\/ZIOAppArgs.html#getArgs:zio.Chunk[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/ZIOAppArgs.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZIOAppArgs.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZIOAppArgs.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZIOAppArgs.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZIOAppArgs.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZIOAppArgs.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZIOAppArgs.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZIOAppArgs.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZIOAppArgs.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZIOAppArgs.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZIOAppArgs.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZIOAppArgs.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOAppArgs.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOAppArgs.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOAppArgs.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZIOAppArgs.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZIOAppArgs.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/ZIOAppArgs.html", "kind" : "case class"}, {"name" : "zio.ZIOAppDefault", "object" : "zio\/ZIOAppDefault$.html", "members_object" : [{"label" : "fromZIO", "tail" : "(run0: ZIO[ZIOAppArgs, Any, Any]): ZIOAppDefault", "member" : "zio.ZIOAppDefault.fromZIO", "link" : "zio\/ZIOAppDefault$.html#fromZIO(run0:zio.ZIO[zio.ZIOAppArgs,Any,Any]):zio.ZIOAppDefault", "kind" : "def"}, {"label" : "apply", "tail" : "(run0: ZIO[ZIOAppArgs, Any, Any]): ZIOAppDefault", "member" : "zio.ZIOAppDefault.apply", "link" : "zio\/ZIOAppDefault$.html#apply(run0:zio.ZIO[zio.ZIOAppArgs,Any,Any]):zio.ZIOAppDefault", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZIOAppDefault$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZIOAppDefault$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZIOAppDefault$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZIOAppDefault$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZIOAppDefault$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZIOAppDefault$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZIOAppDefault$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZIOAppDefault$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZIOAppDefault$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZIOAppDefault$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZIOAppDefault$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZIOAppDefault$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOAppDefault$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOAppDefault$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOAppDefault$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZIOAppDefault$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZIOAppDefault$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZIOAppDefault$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZIOAppDefault$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/ZIOAppDefault.html", "kind" : "trait", "members_trait" : [{"label" : "environmentTag", "tail" : ": zio.EnvironmentTag[Any]", "member" : "zio.ZIOAppDefault.environmentTag", "link" : "zio\/ZIOAppDefault.html#environmentTag:zio.EnvironmentTag[Any]", "kind" : "val"}, {"label" : "bootstrap", "tail" : ": ZLayer[ZIOAppArgs, Any, Any]", "member" : "zio.ZIOAppDefault.bootstrap", "link" : "zio\/ZIOAppDefault.html#bootstrap:zio.ZLayer[zio.ZIOAppArgs,Any,Any]", "kind" : "val"}, {"label" : "Environment", "tail" : "", "member" : "zio.ZIOAppDefault.Environment", "link" : "zio\/ZIOAppDefault.html#Environment=Any", "kind" : "type"}, {"label" : "installSignalHandlers", "tail" : "(runtime: Runtime[Any])(trace: Trace): UIO[Any]", "member" : "zio.ZIOApp.installSignalHandlers", "link" : "zio\/ZIOAppDefault.html#installSignalHandlers(runtime:zio.Runtime[Any])(implicittrace:zio.Trace):zio.UIO[Any]", "kind" : "def"}, {"label" : "runtime", "tail" : "(): Runtime[Any]", "member" : "zio.ZIOApp.runtime", "link" : "zio\/ZIOAppDefault.html#runtime:zio.Runtime[Any]", "kind" : "def"}, {"label" : "invoke", "tail" : "(args: Chunk[String])(trace: Trace): ZIO[Any, Any, Any]", "member" : "zio.ZIOApp.invoke", "link" : "zio\/ZIOAppDefault.html#invoke(args:zio.Chunk[String])(implicittrace:zio.Trace):zio.ZIO[Any,Any,Any]", "kind" : "final def"}, {"label" : "exit", "tail" : "(code: ExitCode)(trace: Trace): UIO[Unit]", "member" : "zio.ZIOApp.exit", "link" : "zio\/ZIOAppDefault.html#exit(code:zio.ExitCode)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "final def"}, {"label" : "getArgs", "tail" : "(trace: Trace): ZIO[ZIOAppArgs, Nothing, Chunk[String]]", "member" : "zio.ZIOApp.getArgs", "link" : "zio\/ZIOAppDefault.html#getArgs(implicittrace:zio.Trace):zio.ZIO[zio.ZIOAppArgs,Nothing,zio.Chunk[String]]", "kind" : "final def"}, {"label" : "<>", "tail" : "(that: ZIOApp)(trace: Trace): ZIOApp", "member" : "zio.ZIOApp.<>", "link" : "zio\/ZIOAppDefault.html#<>(that:zio.ZIOApp)(implicittrace:zio.Trace):zio.ZIOApp", "kind" : "final def"}, {"label" : "validateEnv", "tail" : "(zio: ZIO[R, E, A]): ZIO[R1, E, A]", "member" : "zio.ZIOAppVersionSpecific.validateEnv", "link" : "zio\/ZIOAppDefault.html#validateEnv[R1,R,E,A](zio:zio.ZIO[R,E,A]):zio.ZIO[R1,E,A]", "kind" : "implicit macro def"}, {"label" : "main", "tail" : "(args0: Array[String]): Unit", "member" : "zio.ZIOAppPlatformSpecific.main", "link" : "zio\/ZIOAppDefault.html#main(args0:Array[String]):Unit", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZIOAppDefault.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZIOAppDefault.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZIOAppDefault.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZIOAppDefault.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZIOAppDefault.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZIOAppDefault.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZIOAppDefault.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZIOAppDefault.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZIOAppDefault.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZIOAppDefault.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZIOAppDefault.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZIOAppDefault.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOAppDefault.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOAppDefault.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOAppDefault.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZIOAppDefault.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZIOAppDefault.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZIOAppDefault.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZIOAppDefault.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "run", "tail" : "(): ZIO[ZIOAppArgs with Scope, Any, Any]", "member" : "zio.ZIOApp.run", "link" : "zio\/ZIOAppDefault.html#run:zio.ZIO[ZIOApp.this.Environmentwithzio.ZIOAppArgswithzio.Scope,Any,Any]", "kind" : "abstract def"}], "shortDescription" : "The entry point for a ZIO application."}, {"name" : "zio.ZIOAspect", "object" : "zio\/ZIOAspect$.html", "members_object" : [{"label" : "identity", "tail" : ": ZIOAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.ZIOAspect.identity", "link" : "zio\/ZIOAspect$.html#identity:zio.ZIOAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "val"}, {"label" : "timeoutFail", "tail" : "(e: => E1)(d: zio.Duration): ZIOAspect[Nothing, Any, E1, Any, Nothing, Any]", "member" : "zio.ZIOAspect.timeoutFail", "link" : "zio\/ZIOAspect$.html#timeoutFail[E1](e:=>E1)(d:zio.Duration):zio.ZIOAspect[Nothing,Any,E1,Any,Nothing,Any]", "kind" : "def"}, {"label" : "tagged", "tail" : "(tags: (String, String)*): ZIOAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.ZIOAspect.tagged", "link" : "zio\/ZIOAspect$.html#tagged(tags:(String,String)*):zio.ZIOAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "def"}, {"label" : "retry", "tail" : "(schedule: Schedule[R1, E1, Any]): ZIOAspect[Nothing, R1, Nothing, E1, Nothing, Any]", "member" : "zio.ZIOAspect.retry", "link" : "zio\/ZIOAspect$.html#retry[R1,E1](schedule:zio.Schedule[R1,E1,Any]):zio.ZIOAspect[Nothing,R1,Nothing,E1,Nothing,Any]", "kind" : "def"}, {"label" : "parallelUnbounded", "tail" : "(): ZIOAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.ZIOAspect.parallelUnbounded", "link" : "zio\/ZIOAspect$.html#parallelUnbounded:zio.ZIOAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "def"}, {"label" : "parallel", "tail" : "(n: Int): ZIOAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.ZIOAspect.parallel", "link" : "zio\/ZIOAspect$.html#parallel(n:Int):zio.ZIOAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "def"}, {"label" : "onExecutor", "tail" : "(executor: Executor): ZIOAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.ZIOAspect.onExecutor", "link" : "zio\/ZIOAspect$.html#onExecutor(executor:zio.Executor):zio.ZIOAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "def"}, {"label" : "onExecutionContext", "tail" : "(ec: ExecutionContext): ZIOAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.ZIOAspect.onExecutionContext", "link" : "zio\/ZIOAspect$.html#onExecutionContext(ec:scala.concurrent.ExecutionContext):zio.ZIOAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "def"}, {"label" : "nested", "tail" : "(name: String): ZIOAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.ZIOAspect.nested", "link" : "zio\/ZIOAspect$.html#nested(name:String):zio.ZIOAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "def"}, {"label" : "loggedWith", "tail" : "(f: (A) => String): ZIOAspect[Nothing, Any, Nothing, Any, Nothing, A]", "member" : "zio.ZIOAspect.loggedWith", "link" : "zio\/ZIOAspect$.html#loggedWith[A](f:A=>String):zio.ZIOAspect[Nothing,Any,Nothing,Any,Nothing,A]", "kind" : "def"}, {"label" : "logged", "tail" : "(label: String): ZIOAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.ZIOAspect.logged", "link" : "zio\/ZIOAspect$.html#logged(label:String):zio.ZIOAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "def"}, {"label" : "logged", "tail" : ": ZIOAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.ZIOAspect.logged", "link" : "zio\/ZIOAspect$.html#logged:zio.ZIOAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "val"}, {"label" : "debug", "tail" : "(prefix: => String): ZIOAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.ZIOAspect.debug", "link" : "zio\/ZIOAspect$.html#debug(prefix:=>String):zio.ZIOAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "def"}, {"label" : "debug", "tail" : ": ZIOAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.ZIOAspect.debug", "link" : "zio\/ZIOAspect$.html#debug:zio.ZIOAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "val"}, {"label" : "annotated", "tail" : "(annotations: (String, String)*): ZIOAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.ZIOAspect.annotated", "link" : "zio\/ZIOAspect$.html#annotated(annotations:(String,String)*):zio.ZIOAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "def"}, {"label" : "annotated", "tail" : "(key: String, value: String): ZIOAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.ZIOAspect.annotated", "link" : "zio\/ZIOAspect$.html#annotated(key:String,value:String):zio.ZIOAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZIOAspect$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZIOAspect$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZIOAspect$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZIOAspect$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZIOAspect$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZIOAspect$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZIOAspect$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZIOAspect$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZIOAspect$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZIOAspect$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZIOAspect$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZIOAspect$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOAspect$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOAspect$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOAspect$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZIOAspect$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZIOAspect$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZIOAspect$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZIOAspect$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/ZIOAspect.html", "kind" : "trait", "members_trait" : [{"label" : "flip", "tail" : "(): ZIOAspect[LowerR, UpperR, LowerA, UpperA, LowerE, UpperE]", "member" : "zio.ZIOAspect.flip", "link" : "zio\/ZIOAspect.html#flip:zio.ZIOAspect[LowerR,UpperR,LowerA,UpperA,LowerE,UpperE]", "kind" : "def"}, {"label" : "andThen", "tail" : "(that: ZIOAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]): ZIOAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]", "member" : "zio.ZIOAspect.andThen", "link" : "zio\/ZIOAspect.html#andThen[LowerR1>:LowerR,UpperR1<:UpperR,LowerE1>:LowerE,UpperE1<:UpperE,LowerA1>:LowerA,UpperA1<:UpperA](that:zio.ZIOAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]):zio.ZIOAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]", "kind" : "def"}, {"label" : "@@", "tail" : "(that: ZIOAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]): ZIOAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]", "member" : "zio.ZIOAspect.@@", "link" : "zio\/ZIOAspect.html#@@[LowerR1>:LowerR,UpperR1<:UpperR,LowerE1>:LowerE,UpperE1<:UpperE,LowerA1>:LowerA,UpperA1<:UpperA](that:zio.ZIOAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]):zio.ZIOAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]", "kind" : "def"}, {"label" : ">>>", "tail" : "(that: ZIOAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]): ZIOAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]", "member" : "zio.ZIOAspect.>>>", "link" : "zio\/ZIOAspect.html#>>>[LowerR1>:LowerR,UpperR1<:UpperR,LowerE1>:LowerE,UpperE1<:UpperE,LowerA1>:LowerA,UpperA1<:UpperA](that:zio.ZIOAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]):zio.ZIOAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZIOAspect.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZIOAspect.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZIOAspect.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZIOAspect.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZIOAspect.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZIOAspect.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZIOAspect.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZIOAspect.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZIOAspect.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZIOAspect.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZIOAspect.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZIOAspect.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOAspect.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOAspect.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZIOAspect.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZIOAspect.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZIOAspect.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZIOAspect.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZIOAspect.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.ZIOAspect.apply", "link" : "zio\/ZIOAspect.html#apply[R>:LowerR<:UpperR,E>:LowerE<:UpperE,A>:LowerA<:UpperA](zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.Zippable", "object" : "zio\/Zippable$.html", "members_object" : [{"label" : "ZippableLeftIdentity", "tail" : "(): Out[Unit, A, A]", "member" : "zio.Zippable.ZippableLeftIdentity", "link" : "zio\/Zippable$.html#ZippableLeftIdentity[A]:zio.Zippable.Out[Unit,A,A]", "kind" : "implicit def"}, {"label" : "Out", "tail" : "", "member" : "zio.Zippable.Out", "link" : "zio\/Zippable$.html#Out[-A,-B,C]=zio.Zippable[A,B]{typeOut=C}", "kind" : "type"}, {"label" : "ZippableRightIdentity", "tail" : "(): Out[A, Unit, A]", "member" : "zio.ZippableLowPriority1.ZippableRightIdentity", "link" : "zio\/Zippable$.html#ZippableRightIdentity[A]:zio.Zippable.Out[A,Unit,A]", "kind" : "implicit def"}, {"label" : "Zippable22", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, Z)]", "member" : "zio.ZippableLowPriority2.Zippable22", "link" : "zio\/Zippable$.html#Zippable22[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,Z)]", "kind" : "implicit def"}, {"label" : "Zippable21", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Z)]", "member" : "zio.ZippableLowPriority2.Zippable21", "link" : "zio\/Zippable$.html#Zippable21[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,Z)]", "kind" : "implicit def"}, {"label" : "Zippable20", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Z)]", "member" : "zio.ZippableLowPriority2.Zippable20", "link" : "zio\/Zippable$.html#Zippable20[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,Z)]", "kind" : "implicit def"}, {"label" : "Zippable19", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Z)]", "member" : "zio.ZippableLowPriority2.Zippable19", "link" : "zio\/Zippable$.html#Zippable19[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,Z)]", "kind" : "implicit def"}, {"label" : "Zippable18", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Z)]", "member" : "zio.ZippableLowPriority2.Zippable18", "link" : "zio\/Zippable$.html#Zippable18[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,Z)]", "kind" : "implicit def"}, {"label" : "Zippable17", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Z)]", "member" : "zio.ZippableLowPriority2.Zippable17", "link" : "zio\/Zippable$.html#Zippable17[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Z)]", "kind" : "implicit def"}, {"label" : "Zippable16", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Z)]", "member" : "zio.ZippableLowPriority2.Zippable16", "link" : "zio\/Zippable$.html#Zippable16[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,Z)]", "kind" : "implicit def"}, {"label" : "Zippable15", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, Z)]", "member" : "zio.ZippableLowPriority2.Zippable15", "link" : "zio\/Zippable$.html#Zippable15[A,B,C,D,E,F,G,H,I,J,K,L,M,N,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,Z)]", "kind" : "implicit def"}, {"label" : "Zippable14", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, Z)]", "member" : "zio.ZippableLowPriority2.Zippable14", "link" : "zio\/Zippable$.html#Zippable14[A,B,C,D,E,F,G,H,I,J,K,L,M,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,Z)]", "kind" : "implicit def"}, {"label" : "Zippable13", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L), Z, (A, B, C, D, E, F, G, H, I, J, K, L, Z)]", "member" : "zio.ZippableLowPriority2.Zippable13", "link" : "zio\/Zippable$.html#Zippable13[A,B,C,D,E,F,G,H,I,J,K,L,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L),Z,(A,B,C,D,E,F,G,H,I,J,K,L,Z)]", "kind" : "implicit def"}, {"label" : "Zippable12", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K), Z, (A, B, C, D, E, F, G, H, I, J, K, Z)]", "member" : "zio.ZippableLowPriority2.Zippable12", "link" : "zio\/Zippable$.html#Zippable12[A,B,C,D,E,F,G,H,I,J,K,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K),Z,(A,B,C,D,E,F,G,H,I,J,K,Z)]", "kind" : "implicit def"}, {"label" : "Zippable11", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J), Z, (A, B, C, D, E, F, G, H, I, J, Z)]", "member" : "zio.ZippableLowPriority2.Zippable11", "link" : "zio\/Zippable$.html#Zippable11[A,B,C,D,E,F,G,H,I,J,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J),Z,(A,B,C,D,E,F,G,H,I,J,Z)]", "kind" : "implicit def"}, {"label" : "Zippable10", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I), Z, (A, B, C, D, E, F, G, H, I, Z)]", "member" : "zio.ZippableLowPriority2.Zippable10", "link" : "zio\/Zippable$.html#Zippable10[A,B,C,D,E,F,G,H,I,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I),Z,(A,B,C,D,E,F,G,H,I,Z)]", "kind" : "implicit def"}, {"label" : "Zippable9", "tail" : "(): Out[(A, B, C, D, E, F, G, H), Z, (A, B, C, D, E, F, G, H, Z)]", "member" : "zio.ZippableLowPriority2.Zippable9", "link" : "zio\/Zippable$.html#Zippable9[A,B,C,D,E,F,G,H,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H),Z,(A,B,C,D,E,F,G,H,Z)]", "kind" : "implicit def"}, {"label" : "Zippable8", "tail" : "(): Out[(A, B, C, D, E, F, G), Z, (A, B, C, D, E, F, G, Z)]", "member" : "zio.ZippableLowPriority2.Zippable8", "link" : "zio\/Zippable$.html#Zippable8[A,B,C,D,E,F,G,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G),Z,(A,B,C,D,E,F,G,Z)]", "kind" : "implicit def"}, {"label" : "Zippable7", "tail" : "(): Out[(A, B, C, D, E, F), Z, (A, B, C, D, E, F, Z)]", "member" : "zio.ZippableLowPriority2.Zippable7", "link" : "zio\/Zippable$.html#Zippable7[A,B,C,D,E,F,Z]:zio.Zippable.Out[(A,B,C,D,E,F),Z,(A,B,C,D,E,F,Z)]", "kind" : "implicit def"}, {"label" : "Zippable6", "tail" : "(): Out[(A, B, C, D, E), Z, (A, B, C, D, E, Z)]", "member" : "zio.ZippableLowPriority2.Zippable6", "link" : "zio\/Zippable$.html#Zippable6[A,B,C,D,E,Z]:zio.Zippable.Out[(A,B,C,D,E),Z,(A,B,C,D,E,Z)]", "kind" : "implicit def"}, {"label" : "Zippable5", "tail" : "(): Out[(A, B, C, D), Z, (A, B, C, D, Z)]", "member" : "zio.ZippableLowPriority2.Zippable5", "link" : "zio\/Zippable$.html#Zippable5[A,B,C,D,Z]:zio.Zippable.Out[(A,B,C,D),Z,(A,B,C,D,Z)]", "kind" : "implicit def"}, {"label" : "Zippable4", "tail" : "(): Out[(A, B, C), Z, (A, B, C, Z)]", "member" : "zio.ZippableLowPriority2.Zippable4", "link" : "zio\/Zippable$.html#Zippable4[A,B,C,Z]:zio.Zippable.Out[(A,B,C),Z,(A,B,C,Z)]", "kind" : "implicit def"}, {"label" : "Zippable3", "tail" : "(): Out[(A, B), Z, (A, B, Z)]", "member" : "zio.ZippableLowPriority2.Zippable3", "link" : "zio\/Zippable$.html#Zippable3[A,B,Z]:zio.Zippable.Out[(A,B),Z,(A,B,Z)]", "kind" : "implicit def"}, {"label" : "Zippable2", "tail" : "(): Out[A, B, (A, B)]", "member" : "zio.ZippableLowPriority3.Zippable2", "link" : "zio\/Zippable$.html#Zippable2[A,B]:zio.Zippable.Out[A,B,(A,B)]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Zippable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Zippable$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Zippable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Zippable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Zippable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Zippable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Zippable$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Zippable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Zippable$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Zippable$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Zippable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Zippable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Zippable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Zippable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Zippable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Zippable$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Zippable$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Zippable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Zippable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/Zippable.html", "kind" : "trait", "members_trait" : [{"label" : "discardsRight", "tail" : "(): Boolean", "member" : "zio.Zippable.discardsRight", "link" : "zio\/Zippable.html#discardsRight:Boolean", "kind" : "def"}, {"label" : "discardsLeft", "tail" : "(): Boolean", "member" : "zio.Zippable.discardsLeft", "link" : "zio\/Zippable.html#discardsLeft:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/Zippable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/Zippable.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/Zippable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/Zippable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/Zippable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/Zippable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/Zippable.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/Zippable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/Zippable.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/Zippable.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/Zippable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/Zippable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Zippable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Zippable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/Zippable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/Zippable.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/Zippable.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/Zippable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/Zippable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "zip", "tail" : "(left: A, right: B): Out", "member" : "zio.Zippable.zip", "link" : "zio\/Zippable.html#zip(left:A,right:B):Zippable.this.Out", "kind" : "abstract def"}, {"member" : "zio.Zippable.Out", "error" : "unsupported entity"}], "shortDescription" : ""}, {"name" : "zio.ZippableLowPriority1", "object" : "zio\/ZippableLowPriority1$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZippableLowPriority1$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZippableLowPriority1$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZippableLowPriority1$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZippableLowPriority1$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZippableLowPriority1$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZippableLowPriority1$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZippableLowPriority1$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZippableLowPriority1$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZippableLowPriority1$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZippableLowPriority1$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZippableLowPriority1$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZippableLowPriority1$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZippableLowPriority1$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZippableLowPriority1$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZippableLowPriority1$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZippableLowPriority1$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZippableLowPriority1$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZippableLowPriority1$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZippableLowPriority1$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/ZippableLowPriority1.html", "kind" : "trait", "members_trait" : [{"label" : "ZippableRightIdentity", "tail" : "(): Out[A, Unit, A]", "member" : "zio.ZippableLowPriority1.ZippableRightIdentity", "link" : "zio\/ZippableLowPriority1.html#ZippableRightIdentity[A]:zio.Zippable.Out[A,Unit,A]", "kind" : "implicit def"}, {"label" : "Zippable22", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, Z)]", "member" : "zio.ZippableLowPriority2.Zippable22", "link" : "zio\/ZippableLowPriority1.html#Zippable22[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,Z)]", "kind" : "implicit def"}, {"label" : "Zippable21", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Z)]", "member" : "zio.ZippableLowPriority2.Zippable21", "link" : "zio\/ZippableLowPriority1.html#Zippable21[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,Z)]", "kind" : "implicit def"}, {"label" : "Zippable20", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Z)]", "member" : "zio.ZippableLowPriority2.Zippable20", "link" : "zio\/ZippableLowPriority1.html#Zippable20[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,Z)]", "kind" : "implicit def"}, {"label" : "Zippable19", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Z)]", "member" : "zio.ZippableLowPriority2.Zippable19", "link" : "zio\/ZippableLowPriority1.html#Zippable19[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,Z)]", "kind" : "implicit def"}, {"label" : "Zippable18", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Z)]", "member" : "zio.ZippableLowPriority2.Zippable18", "link" : "zio\/ZippableLowPriority1.html#Zippable18[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,Z)]", "kind" : "implicit def"}, {"label" : "Zippable17", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Z)]", "member" : "zio.ZippableLowPriority2.Zippable17", "link" : "zio\/ZippableLowPriority1.html#Zippable17[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Z)]", "kind" : "implicit def"}, {"label" : "Zippable16", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Z)]", "member" : "zio.ZippableLowPriority2.Zippable16", "link" : "zio\/ZippableLowPriority1.html#Zippable16[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,Z)]", "kind" : "implicit def"}, {"label" : "Zippable15", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, Z)]", "member" : "zio.ZippableLowPriority2.Zippable15", "link" : "zio\/ZippableLowPriority1.html#Zippable15[A,B,C,D,E,F,G,H,I,J,K,L,M,N,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,Z)]", "kind" : "implicit def"}, {"label" : "Zippable14", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, Z)]", "member" : "zio.ZippableLowPriority2.Zippable14", "link" : "zio\/ZippableLowPriority1.html#Zippable14[A,B,C,D,E,F,G,H,I,J,K,L,M,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,Z)]", "kind" : "implicit def"}, {"label" : "Zippable13", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L), Z, (A, B, C, D, E, F, G, H, I, J, K, L, Z)]", "member" : "zio.ZippableLowPriority2.Zippable13", "link" : "zio\/ZippableLowPriority1.html#Zippable13[A,B,C,D,E,F,G,H,I,J,K,L,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L),Z,(A,B,C,D,E,F,G,H,I,J,K,L,Z)]", "kind" : "implicit def"}, {"label" : "Zippable12", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K), Z, (A, B, C, D, E, F, G, H, I, J, K, Z)]", "member" : "zio.ZippableLowPriority2.Zippable12", "link" : "zio\/ZippableLowPriority1.html#Zippable12[A,B,C,D,E,F,G,H,I,J,K,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K),Z,(A,B,C,D,E,F,G,H,I,J,K,Z)]", "kind" : "implicit def"}, {"label" : "Zippable11", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J), Z, (A, B, C, D, E, F, G, H, I, J, Z)]", "member" : "zio.ZippableLowPriority2.Zippable11", "link" : "zio\/ZippableLowPriority1.html#Zippable11[A,B,C,D,E,F,G,H,I,J,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J),Z,(A,B,C,D,E,F,G,H,I,J,Z)]", "kind" : "implicit def"}, {"label" : "Zippable10", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I), Z, (A, B, C, D, E, F, G, H, I, Z)]", "member" : "zio.ZippableLowPriority2.Zippable10", "link" : "zio\/ZippableLowPriority1.html#Zippable10[A,B,C,D,E,F,G,H,I,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I),Z,(A,B,C,D,E,F,G,H,I,Z)]", "kind" : "implicit def"}, {"label" : "Zippable9", "tail" : "(): Out[(A, B, C, D, E, F, G, H), Z, (A, B, C, D, E, F, G, H, Z)]", "member" : "zio.ZippableLowPriority2.Zippable9", "link" : "zio\/ZippableLowPriority1.html#Zippable9[A,B,C,D,E,F,G,H,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H),Z,(A,B,C,D,E,F,G,H,Z)]", "kind" : "implicit def"}, {"label" : "Zippable8", "tail" : "(): Out[(A, B, C, D, E, F, G), Z, (A, B, C, D, E, F, G, Z)]", "member" : "zio.ZippableLowPriority2.Zippable8", "link" : "zio\/ZippableLowPriority1.html#Zippable8[A,B,C,D,E,F,G,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G),Z,(A,B,C,D,E,F,G,Z)]", "kind" : "implicit def"}, {"label" : "Zippable7", "tail" : "(): Out[(A, B, C, D, E, F), Z, (A, B, C, D, E, F, Z)]", "member" : "zio.ZippableLowPriority2.Zippable7", "link" : "zio\/ZippableLowPriority1.html#Zippable7[A,B,C,D,E,F,Z]:zio.Zippable.Out[(A,B,C,D,E,F),Z,(A,B,C,D,E,F,Z)]", "kind" : "implicit def"}, {"label" : "Zippable6", "tail" : "(): Out[(A, B, C, D, E), Z, (A, B, C, D, E, Z)]", "member" : "zio.ZippableLowPriority2.Zippable6", "link" : "zio\/ZippableLowPriority1.html#Zippable6[A,B,C,D,E,Z]:zio.Zippable.Out[(A,B,C,D,E),Z,(A,B,C,D,E,Z)]", "kind" : "implicit def"}, {"label" : "Zippable5", "tail" : "(): Out[(A, B, C, D), Z, (A, B, C, D, Z)]", "member" : "zio.ZippableLowPriority2.Zippable5", "link" : "zio\/ZippableLowPriority1.html#Zippable5[A,B,C,D,Z]:zio.Zippable.Out[(A,B,C,D),Z,(A,B,C,D,Z)]", "kind" : "implicit def"}, {"label" : "Zippable4", "tail" : "(): Out[(A, B, C), Z, (A, B, C, Z)]", "member" : "zio.ZippableLowPriority2.Zippable4", "link" : "zio\/ZippableLowPriority1.html#Zippable4[A,B,C,Z]:zio.Zippable.Out[(A,B,C),Z,(A,B,C,Z)]", "kind" : "implicit def"}, {"label" : "Zippable3", "tail" : "(): Out[(A, B), Z, (A, B, Z)]", "member" : "zio.ZippableLowPriority2.Zippable3", "link" : "zio\/ZippableLowPriority1.html#Zippable3[A,B,Z]:zio.Zippable.Out[(A,B),Z,(A,B,Z)]", "kind" : "implicit def"}, {"label" : "Zippable2", "tail" : "(): Out[A, B, (A, B)]", "member" : "zio.ZippableLowPriority3.Zippable2", "link" : "zio\/ZippableLowPriority1.html#Zippable2[A,B]:zio.Zippable.Out[A,B,(A,B)]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZippableLowPriority1.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZippableLowPriority1.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZippableLowPriority1.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZippableLowPriority1.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZippableLowPriority1.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZippableLowPriority1.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZippableLowPriority1.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZippableLowPriority1.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZippableLowPriority1.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZippableLowPriority1.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZippableLowPriority1.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZippableLowPriority1.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZippableLowPriority1.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZippableLowPriority1.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZippableLowPriority1.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZippableLowPriority1.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZippableLowPriority1.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZippableLowPriority1.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZippableLowPriority1.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.ZippableLowPriority2", "trait" : "zio\/ZippableLowPriority2.html", "kind" : "trait", "members_trait" : [{"label" : "Zippable22", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, Z)]", "member" : "zio.ZippableLowPriority2.Zippable22", "link" : "zio\/ZippableLowPriority2.html#Zippable22[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,Z)]", "kind" : "implicit def"}, {"label" : "Zippable21", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, Z)]", "member" : "zio.ZippableLowPriority2.Zippable21", "link" : "zio\/ZippableLowPriority2.html#Zippable21[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,Z)]", "kind" : "implicit def"}, {"label" : "Zippable20", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, Z)]", "member" : "zio.ZippableLowPriority2.Zippable20", "link" : "zio\/ZippableLowPriority2.html#Zippable20[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,Z)]", "kind" : "implicit def"}, {"label" : "Zippable19", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, Z)]", "member" : "zio.ZippableLowPriority2.Zippable19", "link" : "zio\/ZippableLowPriority2.html#Zippable19[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,Z)]", "kind" : "implicit def"}, {"label" : "Zippable18", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, Z)]", "member" : "zio.ZippableLowPriority2.Zippable18", "link" : "zio\/ZippableLowPriority2.html#Zippable18[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,Z)]", "kind" : "implicit def"}, {"label" : "Zippable17", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Z)]", "member" : "zio.ZippableLowPriority2.Zippable17", "link" : "zio\/ZippableLowPriority2.html#Zippable17[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Z)]", "kind" : "implicit def"}, {"label" : "Zippable16", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, Z)]", "member" : "zio.ZippableLowPriority2.Zippable16", "link" : "zio\/ZippableLowPriority2.html#Zippable16[A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,Z)]", "kind" : "implicit def"}, {"label" : "Zippable15", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M, N), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, N, Z)]", "member" : "zio.ZippableLowPriority2.Zippable15", "link" : "zio\/ZippableLowPriority2.html#Zippable15[A,B,C,D,E,F,G,H,I,J,K,L,M,N,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M,N),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,N,Z)]", "kind" : "implicit def"}, {"label" : "Zippable14", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L, M), Z, (A, B, C, D, E, F, G, H, I, J, K, L, M, Z)]", "member" : "zio.ZippableLowPriority2.Zippable14", "link" : "zio\/ZippableLowPriority2.html#Zippable14[A,B,C,D,E,F,G,H,I,J,K,L,M,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L,M),Z,(A,B,C,D,E,F,G,H,I,J,K,L,M,Z)]", "kind" : "implicit def"}, {"label" : "Zippable13", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K, L), Z, (A, B, C, D, E, F, G, H, I, J, K, L, Z)]", "member" : "zio.ZippableLowPriority2.Zippable13", "link" : "zio\/ZippableLowPriority2.html#Zippable13[A,B,C,D,E,F,G,H,I,J,K,L,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K,L),Z,(A,B,C,D,E,F,G,H,I,J,K,L,Z)]", "kind" : "implicit def"}, {"label" : "Zippable12", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J, K), Z, (A, B, C, D, E, F, G, H, I, J, K, Z)]", "member" : "zio.ZippableLowPriority2.Zippable12", "link" : "zio\/ZippableLowPriority2.html#Zippable12[A,B,C,D,E,F,G,H,I,J,K,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J,K),Z,(A,B,C,D,E,F,G,H,I,J,K,Z)]", "kind" : "implicit def"}, {"label" : "Zippable11", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I, J), Z, (A, B, C, D, E, F, G, H, I, J, Z)]", "member" : "zio.ZippableLowPriority2.Zippable11", "link" : "zio\/ZippableLowPriority2.html#Zippable11[A,B,C,D,E,F,G,H,I,J,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I,J),Z,(A,B,C,D,E,F,G,H,I,J,Z)]", "kind" : "implicit def"}, {"label" : "Zippable10", "tail" : "(): Out[(A, B, C, D, E, F, G, H, I), Z, (A, B, C, D, E, F, G, H, I, Z)]", "member" : "zio.ZippableLowPriority2.Zippable10", "link" : "zio\/ZippableLowPriority2.html#Zippable10[A,B,C,D,E,F,G,H,I,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H,I),Z,(A,B,C,D,E,F,G,H,I,Z)]", "kind" : "implicit def"}, {"label" : "Zippable9", "tail" : "(): Out[(A, B, C, D, E, F, G, H), Z, (A, B, C, D, E, F, G, H, Z)]", "member" : "zio.ZippableLowPriority2.Zippable9", "link" : "zio\/ZippableLowPriority2.html#Zippable9[A,B,C,D,E,F,G,H,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G,H),Z,(A,B,C,D,E,F,G,H,Z)]", "kind" : "implicit def"}, {"label" : "Zippable8", "tail" : "(): Out[(A, B, C, D, E, F, G), Z, (A, B, C, D, E, F, G, Z)]", "member" : "zio.ZippableLowPriority2.Zippable8", "link" : "zio\/ZippableLowPriority2.html#Zippable8[A,B,C,D,E,F,G,Z]:zio.Zippable.Out[(A,B,C,D,E,F,G),Z,(A,B,C,D,E,F,G,Z)]", "kind" : "implicit def"}, {"label" : "Zippable7", "tail" : "(): Out[(A, B, C, D, E, F), Z, (A, B, C, D, E, F, Z)]", "member" : "zio.ZippableLowPriority2.Zippable7", "link" : "zio\/ZippableLowPriority2.html#Zippable7[A,B,C,D,E,F,Z]:zio.Zippable.Out[(A,B,C,D,E,F),Z,(A,B,C,D,E,F,Z)]", "kind" : "implicit def"}, {"label" : "Zippable6", "tail" : "(): Out[(A, B, C, D, E), Z, (A, B, C, D, E, Z)]", "member" : "zio.ZippableLowPriority2.Zippable6", "link" : "zio\/ZippableLowPriority2.html#Zippable6[A,B,C,D,E,Z]:zio.Zippable.Out[(A,B,C,D,E),Z,(A,B,C,D,E,Z)]", "kind" : "implicit def"}, {"label" : "Zippable5", "tail" : "(): Out[(A, B, C, D), Z, (A, B, C, D, Z)]", "member" : "zio.ZippableLowPriority2.Zippable5", "link" : "zio\/ZippableLowPriority2.html#Zippable5[A,B,C,D,Z]:zio.Zippable.Out[(A,B,C,D),Z,(A,B,C,D,Z)]", "kind" : "implicit def"}, {"label" : "Zippable4", "tail" : "(): Out[(A, B, C), Z, (A, B, C, Z)]", "member" : "zio.ZippableLowPriority2.Zippable4", "link" : "zio\/ZippableLowPriority2.html#Zippable4[A,B,C,Z]:zio.Zippable.Out[(A,B,C),Z,(A,B,C,Z)]", "kind" : "implicit def"}, {"label" : "Zippable3", "tail" : "(): Out[(A, B), Z, (A, B, Z)]", "member" : "zio.ZippableLowPriority2.Zippable3", "link" : "zio\/ZippableLowPriority2.html#Zippable3[A,B,Z]:zio.Zippable.Out[(A,B),Z,(A,B,Z)]", "kind" : "implicit def"}, {"label" : "Zippable2", "tail" : "(): Out[A, B, (A, B)]", "member" : "zio.ZippableLowPriority3.Zippable2", "link" : "zio\/ZippableLowPriority2.html#Zippable2[A,B]:zio.Zippable.Out[A,B,(A,B)]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZippableLowPriority2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZippableLowPriority2.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZippableLowPriority2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZippableLowPriority2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZippableLowPriority2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZippableLowPriority2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZippableLowPriority2.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZippableLowPriority2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZippableLowPriority2.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZippableLowPriority2.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZippableLowPriority2.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZippableLowPriority2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZippableLowPriority2.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZippableLowPriority2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZippableLowPriority2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZippableLowPriority2.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZippableLowPriority2.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZippableLowPriority2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZippableLowPriority2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.ZippableLowPriority3", "trait" : "zio\/ZippableLowPriority3.html", "kind" : "trait", "members_trait" : [{"label" : "Zippable2", "tail" : "(): Out[A, B, (A, B)]", "member" : "zio.ZippableLowPriority3.Zippable2", "link" : "zio\/ZippableLowPriority3.html#Zippable2[A,B]:zio.Zippable.Out[A,B,(A,B)]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZippableLowPriority3.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZippableLowPriority3.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZippableLowPriority3.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZippableLowPriority3.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZippableLowPriority3.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZippableLowPriority3.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZippableLowPriority3.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZippableLowPriority3.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZippableLowPriority3.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZippableLowPriority3.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZippableLowPriority3.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZippableLowPriority3.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZippableLowPriority3.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZippableLowPriority3.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZippableLowPriority3.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZippableLowPriority3.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZippableLowPriority3.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZippableLowPriority3.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZippableLowPriority3.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.ZKeyedPool", "object" : "zio\/ZKeyedPool$.html", "members_object" : [{"label" : "make", "tail" : "(get: (Key) => ZIO[Env, Err, Item], range: (Key) => Range, timeToLive: (Key) => zio.Duration)(arg0: zio.EnvironmentTag[Env], trace: Trace): ZIO[Env with Scope, Nothing, ZKeyedPool[Err, Key, Item]]", "member" : "zio.ZKeyedPool.make", "link" : "zio\/ZKeyedPool$.html#make[Key,Env,Err,Item](get:Key=>zio.ZIO[Env,Err,Item],range:Key=>Range,timeToLive:Key=>zio.Duration)(implicitevidence$4:zio.EnvironmentTag[Env],implicittrace:zio.Trace):zio.ZIO[Envwithzio.Scope,Nothing,zio.ZKeyedPool[Err,Key,Item]]", "kind" : "def"}, {"label" : "make", "tail" : "(get: (Key) => ZIO[Env, Err, Item], range: => Range, timeToLive: => zio.Duration)(arg0: zio.EnvironmentTag[Env], trace: Trace): ZIO[Env with Scope, Nothing, ZKeyedPool[Err, Key, Item]]", "member" : "zio.ZKeyedPool.make", "link" : "zio\/ZKeyedPool$.html#make[Key,Env,Err,Item](get:Key=>zio.ZIO[Env,Err,Item],range:=>Range,timeToLive:=>zio.Duration)(implicitevidence$3:zio.EnvironmentTag[Env],implicittrace:zio.Trace):zio.ZIO[Envwithzio.Scope,Nothing,zio.ZKeyedPool[Err,Key,Item]]", "kind" : "def"}, {"label" : "make", "tail" : "(get: (Key) => ZIO[Env, Err, Item], size: (Key) => Int)(arg0: zio.EnvironmentTag[Env], trace: Trace): ZIO[Env with Scope, Nothing, ZKeyedPool[Err, Key, Item]]", "member" : "zio.ZKeyedPool.make", "link" : "zio\/ZKeyedPool$.html#make[Key,Env,Err,Item](get:Key=>zio.ZIO[Env,Err,Item],size:Key=>Int)(implicitevidence$2:zio.EnvironmentTag[Env],implicittrace:zio.Trace):zio.ZIO[Envwithzio.Scope,Nothing,zio.ZKeyedPool[Err,Key,Item]]", "kind" : "def"}, {"label" : "make", "tail" : "(get: (Key) => ZIO[Env, Err, Item], size: => Int)(arg0: zio.EnvironmentTag[Env], trace: Trace): ZIO[Env with Scope, Nothing, ZKeyedPool[Err, Key, Item]]", "member" : "zio.ZKeyedPool.make", "link" : "zio\/ZKeyedPool$.html#make[Key,Env,Err,Item](get:Key=>zio.ZIO[Env,Err,Item],size:=>Int)(implicitevidence$1:zio.EnvironmentTag[Env],implicittrace:zio.Trace):zio.ZIO[Envwithzio.Scope,Nothing,zio.ZKeyedPool[Err,Key,Item]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZKeyedPool$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZKeyedPool$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZKeyedPool$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZKeyedPool$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZKeyedPool$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZKeyedPool$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZKeyedPool$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZKeyedPool$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZKeyedPool$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZKeyedPool$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZKeyedPool$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZKeyedPool$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZKeyedPool$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZKeyedPool$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZKeyedPool$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZKeyedPool$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZKeyedPool$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZKeyedPool$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZKeyedPool$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/ZKeyedPool.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZKeyedPool.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZKeyedPool.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZKeyedPool.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZKeyedPool.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZKeyedPool.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZKeyedPool.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZKeyedPool.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZKeyedPool.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZKeyedPool.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZKeyedPool.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZKeyedPool.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZKeyedPool.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZKeyedPool.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZKeyedPool.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZKeyedPool.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZKeyedPool.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZKeyedPool.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZKeyedPool.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZKeyedPool.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "invalidate", "tail" : "(item: Item)(trace: Trace): UIO[Unit]", "member" : "zio.ZKeyedPool.invalidate", "link" : "zio\/ZKeyedPool.html#invalidate(item:Item)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "get", "tail" : "(key: Key)(trace: Trace): ZIO[Scope, Err, Item]", "member" : "zio.ZKeyedPool.get", "link" : "zio\/ZKeyedPool.html#get(key:Key)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Err,Item]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.ZLayer", "shortDescription" : "A ZLayer[E, A, B] describes how to build one or more services in yourapplication.", "object" : "zio\/ZLayer$.html", "members_class" : [{"label" : "zipWithPar", "tail" : "(that: => ZLayer[RIn2, E1, ROut2])(f: (ZEnvironment[ROut], ZEnvironment[ROut2]) => ZEnvironment[ROut3]): ZLayer[RIn with RIn2, E1, ROut3]", "member" : "zio.ZLayer.zipWithPar", "link" : "zio\/ZLayer.html#zipWithPar[E1>:E,RIn2,ROut1>:ROut,ROut2,ROut3](that:=>zio.ZLayer[RIn2,E1,ROut2])(f:(zio.ZEnvironment[ROut],zio.ZEnvironment[ROut2])=>zio.ZEnvironment[ROut3]):zio.ZLayer[RInwithRIn2,E1,ROut3]", "kind" : "final def"}, {"label" : "update", "tail" : "(f: (A) => A)(arg0: Tag[A], trace: Trace): ZLayer[RIn, E, ROut]", "member" : "zio.ZLayer.update", "link" : "zio\/ZLayer.html#update[A>:ROut](f:A=>A)(implicitevidence$1:zio.Tag[A],implicittrace:zio.Trace):zio.ZLayer[RIn,E,ROut]", "kind" : "final def"}, {"label" : "unit", "tail" : "(trace: Trace): ZLayer[RIn, E, Unit]", "member" : "zio.ZLayer.unit", "link" : "zio\/ZLayer.html#unit(implicittrace:zio.Trace):zio.ZLayer[RIn,E,Unit]", "kind" : "def"}, {"label" : "toRuntime", "tail" : "(ev: <:<[Any, RIn], trace: Trace): ZIO[Scope, E, Runtime[ROut]]", "member" : "zio.ZLayer.toRuntime", "link" : "zio\/ZLayer.html#toRuntime(implicitev:Any<:<RIn,implicittrace:zio.Trace):zio.ZIO[zio.Scope,E,zio.Runtime[ROut]]", "kind" : "final def"}, {"label" : "to", "tail" : "(that: => ZLayer[ROut, E1, ROut2])(trace: Trace): ZLayer[RIn, E1, ROut2]", "member" : "zio.ZLayer.to", "link" : "zio\/ZLayer.html#to[E1>:E,ROut2](that:=>zio.ZLayer[ROut,E1,ROut2])(implicittrace:zio.Trace):zio.ZLayer[RIn,E1,ROut2]", "kind" : "final def"}, {"label" : "tapErrorCause", "tail" : "(f: (Cause[E]) => ZIO[RIn1, E1, Any])(trace: Trace): ZLayer[RIn1, E1, ROut]", "member" : "zio.ZLayer.tapErrorCause", "link" : "zio\/ZLayer.html#tapErrorCause[RIn1<:RIn,E1>:E](f:zio.Cause[E]=>zio.ZIO[RIn1,E1,Any])(implicittrace:zio.Trace):zio.ZLayer[RIn1,E1,ROut]", "kind" : "final def"}, {"label" : "tapError", "tail" : "(f: (E) => ZIO[RIn1, E1, Any])(trace: Trace): ZLayer[RIn1, E1, ROut]", "member" : "zio.ZLayer.tapError", "link" : "zio\/ZLayer.html#tapError[RIn1<:RIn,E1>:E](f:E=>zio.ZIO[RIn1,E1,Any])(implicittrace:zio.Trace):zio.ZLayer[RIn1,E1,ROut]", "kind" : "final def"}, {"label" : "tap", "tail" : "(f: (ZEnvironment[ROut]) => ZIO[RIn1, E1, Any])(trace: Trace): ZLayer[RIn1, E1, ROut]", "member" : "zio.ZLayer.tap", "link" : "zio\/ZLayer.html#tap[RIn1<:RIn,E1>:E](f:zio.ZEnvironment[ROut]=>zio.ZIO[RIn1,E1,Any])(implicittrace:zio.Trace):zio.ZLayer[RIn1,E1,ROut]", "kind" : "final def"}, {"label" : "retry", "tail" : "(schedule0: => Schedule[RIn1, E, Any])(trace: Trace): ZLayer[RIn1, E, ROut]", "member" : "zio.ZLayer.retry", "link" : "zio\/ZLayer.html#retry[RIn1<:RIn](schedule0:=>zio.Schedule[RIn1,E,Any])(implicittrace:zio.Trace):zio.ZLayer[RIn1,E,ROut]", "kind" : "final def"}, {"label" : "orElse", "tail" : "(that: => ZLayer[RIn1, E1, ROut1])(ev: CanFail[E], trace: Trace): ZLayer[RIn1, E1, ROut1]", "member" : "zio.ZLayer.orElse", "link" : "zio\/ZLayer.html#orElse[RIn1<:RIn,E1,ROut1>:ROut](that:=>zio.ZLayer[RIn1,E1,ROut1])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZLayer[RIn1,E1,ROut1]", "kind" : "final def"}, {"label" : "orDie", "tail" : "(ev1: IsSubtypeOfError[E, Throwable], ev2: CanFail[E], trace: Trace): ZLayer[RIn, Nothing, ROut]", "member" : "zio.ZLayer.orDie", "link" : "zio\/ZLayer.html#orDie(implicitev1:zio.IsSubtypeOfError[E,Throwable],implicitev2:zio.CanFail[E],implicittrace:zio.Trace):zio.ZLayer[RIn,Nothing,ROut]", "kind" : "final def"}, {"label" : "memoize", "tail" : "(trace: Trace): ZIO[Scope, Nothing, ZLayer[RIn, E, ROut]]", "member" : "zio.ZLayer.memoize", "link" : "zio\/ZLayer.html#memoize(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,zio.ZLayer[RIn,E,ROut]]", "kind" : "final def"}, {"label" : "mapErrorCause", "tail" : "(h: (Cause[E]) => Cause[E2])(trace: Trace): ZLayer[RIn, E2, ROut]", "member" : "zio.ZLayer.mapErrorCause", "link" : "zio\/ZLayer.html#mapErrorCause[E2](h:zio.Cause[E]=>zio.Cause[E2])(implicittrace:zio.Trace):zio.ZLayer[RIn,E2,ROut]", "kind" : "final def"}, {"label" : "mapError", "tail" : "(f: (E) => E1)(ev: CanFail[E], trace: Trace): ZLayer[RIn, E1, ROut]", "member" : "zio.ZLayer.mapError", "link" : "zio\/ZLayer.html#mapError[E1](f:E=>E1)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZLayer[RIn,E1,ROut]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (ZEnvironment[ROut]) => ZEnvironment[ROut1])(trace: Trace): ZLayer[RIn, E, ROut1]", "member" : "zio.ZLayer.map", "link" : "zio\/ZLayer.html#map[ROut1](f:zio.ZEnvironment[ROut]=>zio.ZEnvironment[ROut1])(implicittrace:zio.Trace):zio.ZLayer[RIn,E,ROut1]", "kind" : "final def"}, {"label" : "launch", "tail" : "(trace: Trace): ZIO[RIn, E, Nothing]", "member" : "zio.ZLayer.launch", "link" : "zio\/ZLayer.html#launch(implicittrace:zio.Trace):zio.ZIO[RIn,E,Nothing]", "kind" : "final def"}, {"label" : "hashCode", "tail" : ": Int", "member" : "zio.ZLayer.hashCode", "link" : "zio\/ZLayer.html#hashCode:Int", "kind" : "final lazy val"}, {"label" : "fresh", "tail" : "(): ZLayer[RIn, E, ROut]", "member" : "zio.ZLayer.fresh", "link" : "zio\/ZLayer.html#fresh:zio.ZLayer[RIn,E,ROut]", "kind" : "final def"}, {"label" : "foldCauseLayer", "tail" : "(failure: (Cause[E]) => ZLayer[RIn1, E1, ROut2], success: (ZEnvironment[ROut]) => ZLayer[RIn1, E1, ROut2])(ev: CanFail[E]): ZLayer[RIn1, E1, ROut2]", "member" : "zio.ZLayer.foldCauseLayer", "link" : "zio\/ZLayer.html#foldCauseLayer[E1,RIn1<:RIn,ROut2](failure:zio.Cause[E]=>zio.ZLayer[RIn1,E1,ROut2],success:zio.ZEnvironment[ROut]=>zio.ZLayer[RIn1,E1,ROut2])(implicitev:zio.CanFail[E]):zio.ZLayer[RIn1,E1,ROut2]", "kind" : "final def"}, {"label" : "foldLayer", "tail" : "(failure: (E) => ZLayer[RIn1, E1, ROut2], success: (ZEnvironment[ROut]) => ZLayer[RIn1, E1, ROut2])(ev: CanFail[E], trace: Trace): ZLayer[RIn1, E1, ROut2]", "member" : "zio.ZLayer.foldLayer", "link" : "zio\/ZLayer.html#foldLayer[E1,RIn1<:RIn,ROut2](failure:E=>zio.ZLayer[RIn1,E1,ROut2],success:zio.ZEnvironment[ROut]=>zio.ZLayer[RIn1,E1,ROut2])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZLayer[RIn1,E1,ROut2]", "kind" : "final def"}, {"label" : "flatten", "tail" : "(tag: Tag[ROut1], ev1: <:<[ROut1, ZLayer[RIn1, E1, ROut2]], trace: Trace): ZLayer[RIn1, E1, ROut2]", "member" : "zio.ZLayer.flatten", "link" : "zio\/ZLayer.html#flatten[RIn1<:RIn,E1>:E,ROut1>:ROut,ROut2](implicittag:zio.Tag[ROut1],implicitev1:ROut1<:<zio.ZLayer[RIn1,E1,ROut2],implicittrace:zio.Trace):zio.ZLayer[RIn1,E1,ROut2]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (ZEnvironment[ROut]) => ZLayer[RIn1, E1, ROut2])(trace: Trace): ZLayer[RIn1, E1, ROut2]", "member" : "zio.ZLayer.flatMap", "link" : "zio\/ZLayer.html#flatMap[RIn1<:RIn,E1>:E,ROut2](f:zio.ZEnvironment[ROut]=>zio.ZLayer[RIn1,E1,ROut2])(implicittrace:zio.Trace):zio.ZLayer[RIn1,E1,ROut2]", "kind" : "final def"}, {"label" : "extendScope", "tail" : "(): ZLayer[RIn with Scope, E, ROut]", "member" : "zio.ZLayer.extendScope", "link" : "zio\/ZLayer.html#extendScope:zio.ZLayer[RInwithzio.Scope,E,ROut]", "kind" : "final def"}, {"label" : "debug", "tail" : "(prefix: => String)(trace: Trace): ZLayer[RIn, E, ROut]", "member" : "zio.ZLayer.debug", "link" : "zio\/ZLayer.html#debug(prefix:=>String)(implicittrace:zio.Trace):zio.ZLayer[RIn,E,ROut]", "kind" : "final def"}, {"label" : "debug", "tail" : "(trace: Trace): ZLayer[RIn, E, ROut]", "member" : "zio.ZLayer.debug", "link" : "zio\/ZLayer.html#debug(implicittrace:zio.Trace):zio.ZLayer[RIn,E,ROut]", "kind" : "final def"}, {"label" : "catchAllCause", "tail" : "(handler: (Cause[E]) => ZLayer[RIn1, E1, ROut1])(trace: Trace): ZLayer[RIn1, E1, ROut1]", "member" : "zio.ZLayer.catchAllCause", "link" : "zio\/ZLayer.html#catchAllCause[RIn1<:RIn,E1,ROut1>:ROut](handler:zio.Cause[E]=>zio.ZLayer[RIn1,E1,ROut1])(implicittrace:zio.Trace):zio.ZLayer[RIn1,E1,ROut1]", "kind" : "final def"}, {"label" : "catchAll", "tail" : "(handler: (E) => ZLayer[RIn1, E1, ROut1])(trace: Trace): ZLayer[RIn1, E1, ROut1]", "member" : "zio.ZLayer.catchAll", "link" : "zio\/ZLayer.html#catchAll[RIn1<:RIn,E1,ROut1>:ROut](handler:E=>zio.ZLayer[RIn1,E1,ROut1])(implicittrace:zio.Trace):zio.ZLayer[RIn1,E1,ROut1]", "kind" : "final def"}, {"label" : "build", "tail" : "(scope: => Scope)(trace: Trace): ZIO[RIn, E, ZEnvironment[ROut]]", "member" : "zio.ZLayer.build", "link" : "zio\/ZLayer.html#build(scope:=>zio.Scope)(implicittrace:zio.Trace):zio.ZIO[RIn,E,zio.ZEnvironment[ROut]]", "kind" : "final def"}, {"label" : "build", "tail" : "(trace: Trace): ZIO[RIn with Scope, E, ZEnvironment[ROut]]", "member" : "zio.ZLayer.build", "link" : "zio\/ZLayer.html#build(implicittrace:zio.Trace):zio.ZIO[RInwithzio.Scope,E,zio.ZEnvironment[ROut]]", "kind" : "final def"}, {"label" : "andTo", "tail" : "(that: => ZLayer[RIn2, E1, ROut2])(tagged: zio.EnvironmentTag[ROut2], trace: Trace): ZLayer[RIn, E1, ROut1 with ROut2]", "member" : "zio.ZLayer.andTo", "link" : "zio\/ZLayer.html#andTo[E1>:E,RIn2>:ROut,ROut1>:ROut,ROut2](that:=>zio.ZLayer[RIn2,E1,ROut2])(implicittagged:zio.EnvironmentTag[ROut2],implicittrace:zio.Trace):zio.ZLayer[RIn,E1,ROut1withROut2]", "kind" : "final def"}, {"label" : "and", "tail" : "(that: => ZLayer[RIn2, E1, ROut2])(tag: zio.EnvironmentTag[ROut2]): ZLayer[RIn with RIn2, E1, ROut1 with ROut2]", "member" : "zio.ZLayer.and", "link" : "zio\/ZLayer.html#and[E1>:E,RIn2,ROut1>:ROut,ROut2](that:=>zio.ZLayer[RIn2,E1,ROut2])(implicittag:zio.EnvironmentTag[ROut2]):zio.ZLayer[RInwithRIn2,E1,ROut1withROut2]", "kind" : "final def"}, {"label" : "@@", "tail" : "(aspect: => ZLayerAspect[LowerRIn, UpperRIn, LowerE, UpperE, LowerROut, UpperROut])(trace: Trace): ZLayer[UpperRIn, LowerE, LowerROut]", "member" : "zio.ZLayer.@@", "link" : "zio\/ZLayer.html#@@[LowerRIn<:UpperRIn,UpperRIn<:RIn,LowerE>:E,UpperE>:LowerE,LowerROut>:ROut,UpperROut>:LowerROut](aspect:=>zio.ZLayerAspect[LowerRIn,UpperRIn,LowerE,UpperE,LowerROut,UpperROut])(implicittrace:zio.Trace):zio.ZLayer[UpperRIn,LowerE,LowerROut]", "kind" : "final def"}, {"label" : "<>", "tail" : "(that: => ZLayer[RIn1, E1, ROut1])(ev: CanFail[E], trace: Trace): ZLayer[RIn1, E1, ROut1]", "member" : "zio.ZLayer.<>", "link" : "zio\/ZLayer.html#<>[RIn1<:RIn,E1,ROut1>:ROut](that:=>zio.ZLayer[RIn1,E1,ROut1])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.ZLayer[RIn1,E1,ROut1]", "kind" : "def"}, {"label" : "++", "tail" : "(that: => ZLayer[RIn2, E1, ROut2])(tag: zio.EnvironmentTag[ROut2]): ZLayer[RIn with RIn2, E1, ROut1 with ROut2]", "member" : "zio.ZLayer.++", "link" : "zio\/ZLayer.html#++[E1>:E,RIn2,ROut1>:ROut,ROut2](that:=>zio.ZLayer[RIn2,E1,ROut2])(implicittag:zio.EnvironmentTag[ROut2]):zio.ZLayer[RInwithRIn2,E1,ROut1withROut2]", "kind" : "final def"}, {"label" : "+!+", "tail" : "(that: => ZLayer[RIn2, E1, ROut2]): ZLayer[RIn with RIn2, E1, ROut1 with ROut2]", "member" : "zio.ZLayer.+!+", "link" : "zio\/ZLayer.html#+!+[E1>:E,RIn2,ROut1>:ROut,ROut2](that:=>zio.ZLayer[RIn2,E1,ROut2]):zio.ZLayer[RInwithRIn2,E1,ROut1withROut2]", "kind" : "final def"}, {"label" : "!", "tail" : "(ev1: <:<[E, Throwable], ev2: CanFail[E], trace: Trace): ZLayer[RIn, Nothing, ROut]", "member" : "zio.ZLayer.!", "link" : "zio\/ZLayer.html#!(implicitev1:E<:<Throwable,implicitev2:zio.CanFail[E],implicittrace:zio.Trace):zio.ZLayer[RIn,Nothing,ROut]", "kind" : "final def"}, {"label" : "runWith", "tail" : "(layers: ZLayer[_, E1, _]*)(ev: IsSubtypeOfOutput[ROut, Unit]): ZIO[Any, E1, Unit]", "member" : "zio.ZLayerVersionSpecific.runWith", "link" : "zio\/ZLayer.html#runWith[E1>:E](layers:zio.ZLayer[_,E1,_]*)(implicitev:zio.IsSubtypeOfOutput[A,Unit]):zio.ZIO[Any,E1,Unit]", "kind" : "macro def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZLayer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZLayer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZLayer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZLayer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZLayer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZLayer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZLayer.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZLayer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZLayer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZLayer.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZLayer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZLayer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZLayer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZLayer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZLayer.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZLayer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZLayer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZLayer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "ZLayerProvideSomeOps", "tail" : "", "member" : "zio.ZLayer.ZLayerProvideSomeOps", "link" : "zio\/ZLayer$.html#ZLayerProvideSomeOps[RIn,E,ROut]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "ScopedEnvironmentPartiallyApplied", "tail" : "", "member" : "zio.ZLayer.ScopedEnvironmentPartiallyApplied", "link" : "zio\/ZLayer$.html#ScopedEnvironmentPartiallyApplied[R]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "ScopedPartiallyApplied", "tail" : "", "member" : "zio.ZLayer.ScopedPartiallyApplied", "link" : "zio\/ZLayer$.html#ScopedPartiallyApplied[R]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "FunctionConstructor", "tail" : "", "member" : "zio.ZLayer.FunctionConstructor", "link" : "zio\/ZLayer$.html#FunctionConstructor", "kind" : "object"}, {"label" : "FunctionConstructor", "tail" : "", "member" : "zio.ZLayer.FunctionConstructor", "link" : "zio\/ZLayer$.html#FunctionConstructor[In]extendsAnyRef", "kind" : "trait"}, {"label" : "ZLayerInvariantOps", "tail" : "", "member" : "zio.ZLayer.ZLayerInvariantOps", "link" : "zio\/ZLayer$.html#ZLayerInvariantOps[RIn,E,ROut]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "suspend", "tail" : "(layer: => ZLayer[RIn, E, ROut]): ZLayer[RIn, E, ROut]", "member" : "zio.ZLayer.suspend", "link" : "zio\/ZLayer$.html#suspend[RIn,E,ROut](layer:=>zio.ZLayer[RIn,E,ROut]):zio.ZLayer[RIn,E,ROut]", "kind" : "def"}, {"label" : "succeedEnvironment", "tail" : "(a: => ZEnvironment[A])(trace: Trace): ULayer[A]", "member" : "zio.ZLayer.succeedEnvironment", "link" : "zio\/ZLayer$.html#succeedEnvironment[A](a:=>zio.ZEnvironment[A])(implicittrace:zio.Trace):zio.ULayer[A]", "kind" : "def"}, {"label" : "succeed", "tail" : "(a: => A)(arg0: Tag[A], trace: Trace): ULayer[A]", "member" : "zio.ZLayer.succeed", "link" : "zio\/ZLayer$.html#succeed[A](a:=>A)(implicitevidence$20:zio.Tag[A],implicittrace:zio.Trace):zio.ULayer[A]", "kind" : "def"}, {"label" : "service", "tail" : "(arg0: Tag[A], trace: Trace): ZLayer[A, Nothing, A]", "member" : "zio.ZLayer.service", "link" : "zio\/ZLayer$.html#service[A](implicitevidence$19:zio.Tag[A],implicittrace:zio.Trace):zio.ZLayer[A,Nothing,A]", "kind" : "def"}, {"label" : "scopedEnvironment", "tail" : "(): ScopedEnvironmentPartiallyApplied[R]", "member" : "zio.ZLayer.scopedEnvironment", "link" : "zio\/ZLayer$.html#scopedEnvironment[R]:zio.ZLayer.ScopedEnvironmentPartiallyApplied[R]", "kind" : "def"}, {"label" : "scoped", "tail" : "(): ScopedPartiallyApplied[R]", "member" : "zio.ZLayer.scoped", "link" : "zio\/ZLayer$.html#scoped[R]:zio.ZLayer.ScopedPartiallyApplied[R]", "kind" : "def"}, {"label" : "refailCause", "tail" : "(cause: Cause[E])(trace: Trace): Layer[E, Nothing]", "member" : "zio.ZLayer.refailCause", "link" : "zio\/ZLayer$.html#refailCause[E](cause:zio.Cause[E])(implicittrace:zio.Trace):zio.Layer[E,Nothing]", "kind" : "def"}, {"label" : "environment", "tail" : "(trace: Trace): ZLayer[A, Nothing, A]", "member" : "zio.ZLayer.environment", "link" : "zio\/ZLayer$.html#environment[A](implicittrace:zio.Trace):zio.ZLayer[A,Nothing,A]", "kind" : "def"}, {"label" : "fromZIOEnvironment", "tail" : "(zio: => ZIO[R, E, ZEnvironment[A]])(trace: Trace): ZLayer[R, E, A]", "member" : "zio.ZLayer.fromZIOEnvironment", "link" : "zio\/ZLayer$.html#fromZIOEnvironment[R,E,A](zio:=>zio.ZIO[R,E,zio.ZEnvironment[A]])(implicittrace:zio.Trace):zio.ZLayer[R,E,A]", "kind" : "def"}, {"label" : "fromZIO", "tail" : "(zio: => ZIO[R, E, A])(arg0: Tag[A], trace: Trace): ZLayer[R, E, A]", "member" : "zio.ZLayer.fromZIO", "link" : "zio\/ZLayer$.html#fromZIO[R,E,A](zio:=>zio.ZIO[R,E,A])(implicitevidence$18:zio.Tag[A],implicittrace:zio.Trace):zio.ZLayer[R,E,A]", "kind" : "def"}, {"label" : "fromFunction", "tail" : "(in: In)(constructor: FunctionConstructor[In], trace: Trace): Out", "member" : "zio.ZLayer.fromFunction", "link" : "zio\/ZLayer$.html#fromFunction[In](in:In)(implicitconstructor:zio.ZLayer.FunctionConstructor[In],implicittrace:zio.Trace):constructor.Out", "kind" : "def"}, {"label" : "foreach", "tail" : "(in: => Collection[A])(f: (A) => ZLayer[R, E, B])(arg0: Tag[B], tag: Tag[Collection[B]], bf: zio.BuildFrom[Collection[A], B, Collection[B]], trace: Trace): ZLayer[R, E, Collection[B]]", "member" : "zio.ZLayer.foreach", "link" : "zio\/ZLayer$.html#foreach[R,E,A,B,Collection[+Element]<:Iterable[Element]](in:=>Collection[A])(f:A=>zio.ZLayer[R,E,B])(implicitevidence$17:zio.Tag[B],implicittag:zio.Tag[Collection[B]],implicitbf:zio.BuildFrom[Collection[A],B,Collection[B]],implicittrace:zio.Trace):zio.ZLayer[R,E,Collection[B]]", "kind" : "def"}, {"label" : "failCause", "tail" : "(cause: => Cause[E])(trace: Trace): Layer[E, Nothing]", "member" : "zio.ZLayer.failCause", "link" : "zio\/ZLayer$.html#failCause[E](cause:=>zio.Cause[E])(implicittrace:zio.Trace):zio.Layer[E,Nothing]", "kind" : "def"}, {"label" : "fail", "tail" : "(e: => E)(trace: Trace): Layer[E, Nothing]", "member" : "zio.ZLayer.fail", "link" : "zio\/ZLayer$.html#fail[E](e:=>E)(implicittrace:zio.Trace):zio.Layer[E,Nothing]", "kind" : "def"}, {"label" : "empty", "tail" : ": ZLayer[Any, Nothing, Any]", "member" : "zio.ZLayer.empty", "link" : "zio\/ZLayer$.html#empty:zio.ZLayer[Any,Nothing,Any]", "kind" : "val"}, {"label" : "die", "tail" : "(t: => Throwable)(trace: Trace): ZLayer[Any, Nothing, Nothing]", "member" : "zio.ZLayer.die", "link" : "zio\/ZLayer$.html#die(t:=>Throwable)(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,Nothing]", "kind" : "final def"}, {"label" : "debug", "tail" : "(value: => Any)(trace: Trace): ZLayer[Any, Nothing, Unit]", "member" : "zio.ZLayer.debug", "link" : "zio\/ZLayer$.html#debug(value:=>Any)(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "collectAll", "tail" : "(in: => Collection[ZLayer[R, E, A]])(arg0: Tag[A], tag: Tag[Collection[A]], bf: zio.BuildFrom[Collection[ZLayer[R, E, A]], A, Collection[A]], trace: Trace): ZLayer[R, E, Collection[A]]", "member" : "zio.ZLayer.collectAll", "link" : "zio\/ZLayer$.html#collectAll[R,E,A,Collection[+Element]<:Iterable[Element]](in:=>Collection[zio.ZLayer[R,E,A]])(implicitevidence$16:zio.Tag[A],implicittag:zio.Tag[Collection[A]],implicitbf:zio.BuildFrom[Collection[zio.ZLayer[R,E,A]],A,Collection[A]],implicittrace:zio.Trace):zio.ZLayer[R,E,Collection[A]]", "kind" : "def"}, {"label" : "Debug", "tail" : "", "member" : "zio.ZLayer.Debug", "link" : "zio\/ZLayer$.html#Debug", "kind" : "object"}, {"label" : "Debug", "tail" : "", "member" : "zio.ZLayer.Debug", "link" : "zio\/ZLayer$.html#DebugextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Derive", "tail" : "", "member" : "zio.ZLayer.Derive", "link" : "zio\/ZLayer$.html#Derive", "kind" : "object"}, {"label" : "unit", "tail" : ": ULayer[Unit]", "member" : "zio.ZLayer.unit", "link" : "zio\/ZLayer$.html#unit:zio.ULayer[Unit]", "kind" : "val"}, {"label" : "apply", "tail" : "(zio: => ZIO[RIn, E, ROut])(arg0: Tag[ROut], trace: Trace): ZLayer[RIn, E, ROut]", "member" : "zio.ZLayer.apply", "link" : "zio\/ZLayer$.html#apply[RIn,E,ROut](zio:=>zio.ZIO[RIn,E,ROut])(implicitevidence$2:zio.Tag[ROut],implicittrace:zio.Trace):zio.ZLayer[RIn,E,ROut]", "kind" : "def"}, {"label" : "derive", "tail" : "(): ZLayer[Nothing, Any, A]", "member" : "zio.ZLayerCompanionVersionSpecific.derive", "link" : "zio\/ZLayer$.html#derive[A]:zio.ZLayer[Nothing,Any,A]", "kind" : "macro def"}, {"label" : "makeSome", "tail" : "(): MakeSomePartiallyApplied[R0, R]", "member" : "zio.ZLayerCompanionVersionSpecific.makeSome", "link" : "zio\/ZLayer$.html#makeSome[R0,R]:zio.MakeSomePartiallyApplied[R0,R]", "kind" : "def"}, {"label" : "make", "tail" : "(): MakePartiallyApplied[R]", "member" : "zio.ZLayerCompanionVersionSpecific.make", "link" : "zio\/ZLayer$.html#make[R]:zio.MakePartiallyApplied[R]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZLayer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZLayer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZLayer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZLayer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZLayer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZLayer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZLayer$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZLayer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZLayer$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZLayer$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZLayer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZLayer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZLayer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZLayer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZLayer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZLayer$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZLayer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZLayer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZLayer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/ZLayer.html", "kind" : "class"}, {"name" : "zio.ZLayerAspect", "object" : "zio\/ZLayerAspect$.html", "members_object" : [{"label" : "retry", "tail" : "(schedule: Schedule[RIn1, E1, Any]): ZLayerAspect[Nothing, RIn1, Nothing, E1, Nothing, Any]", "member" : "zio.ZLayerAspect.retry", "link" : "zio\/ZLayerAspect$.html#retry[RIn1,E1](schedule:zio.Schedule[RIn1,E1,Any]):zio.ZLayerAspect[Nothing,RIn1,Nothing,E1,Nothing,Any]", "kind" : "def"}, {"label" : "identity", "tail" : ": ZLayerAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.ZLayerAspect.identity", "link" : "zio\/ZLayerAspect$.html#identity:zio.ZLayerAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "val"}, {"label" : "debug", "tail" : "(prefix: => String): ZLayerAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.ZLayerAspect.debug", "link" : "zio\/ZLayerAspect$.html#debug(prefix:=>String):zio.ZLayerAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "def"}, {"label" : "debug", "tail" : ": ZLayerAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.ZLayerAspect.debug", "link" : "zio\/ZLayerAspect$.html#debug:zio.ZLayerAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZLayerAspect$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZLayerAspect$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZLayerAspect$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZLayerAspect$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZLayerAspect$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZLayerAspect$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZLayerAspect$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZLayerAspect$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZLayerAspect$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZLayerAspect$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZLayerAspect$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZLayerAspect$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZLayerAspect$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZLayerAspect$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZLayerAspect$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZLayerAspect$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZLayerAspect$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZLayerAspect$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZLayerAspect$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/ZLayerAspect.html", "kind" : "trait", "members_trait" : [{"label" : "andThen", "tail" : "(that: ZLayerAspect[LowerRIn1, UpperRIn1, LowerE1, UpperE1, LowerROut1, UpperROut1]): ZLayerAspect[LowerRIn1, UpperRIn1, LowerE1, UpperE1, LowerROut1, UpperROut1]", "member" : "zio.ZLayerAspect.andThen", "link" : "zio\/ZLayerAspect.html#andThen[LowerRIn1>:LowerRIn,UpperRIn1<:UpperRIn,LowerE1>:LowerE,UpperE1<:UpperE,LowerROut1>:LowerROut,UpperROut1<:UpperROut](that:zio.ZLayerAspect[LowerRIn1,UpperRIn1,LowerE1,UpperE1,LowerROut1,UpperROut1]):zio.ZLayerAspect[LowerRIn1,UpperRIn1,LowerE1,UpperE1,LowerROut1,UpperROut1]", "kind" : "def"}, {"label" : "@@", "tail" : "(that: ZLayerAspect[LowerRIn1, UpperRIn1, LowerE1, UpperE1, LowerROut1, UpperROut1]): ZLayerAspect[LowerRIn1, UpperRIn1, LowerE1, UpperE1, LowerROut1, UpperROut1]", "member" : "zio.ZLayerAspect.@@", "link" : "zio\/ZLayerAspect.html#@@[LowerRIn1>:LowerRIn,UpperRIn1<:UpperRIn,LowerE1>:LowerE,UpperE1<:UpperE,LowerROut1>:LowerROut,UpperROut1<:UpperROut](that:zio.ZLayerAspect[LowerRIn1,UpperRIn1,LowerE1,UpperE1,LowerROut1,UpperROut1]):zio.ZLayerAspect[LowerRIn1,UpperRIn1,LowerE1,UpperE1,LowerROut1,UpperROut1]", "kind" : "def"}, {"label" : ">>>", "tail" : "(that: ZLayerAspect[LowerRIn1, UpperRIn1, LowerE1, UpperE1, LowerROut1, UpperROut1]): ZLayerAspect[LowerRIn1, UpperRIn1, LowerE1, UpperE1, LowerROut1, UpperROut1]", "member" : "zio.ZLayerAspect.>>>", "link" : "zio\/ZLayerAspect.html#>>>[LowerRIn1>:LowerRIn,UpperRIn1<:UpperRIn,LowerE1>:LowerE,UpperE1<:UpperE,LowerROut1>:LowerROut,UpperROut1<:UpperROut](that:zio.ZLayerAspect[LowerRIn1,UpperRIn1,LowerE1,UpperE1,LowerROut1,UpperROut1]):zio.ZLayerAspect[LowerRIn1,UpperRIn1,LowerE1,UpperE1,LowerROut1,UpperROut1]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZLayerAspect.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZLayerAspect.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZLayerAspect.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZLayerAspect.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZLayerAspect.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZLayerAspect.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZLayerAspect.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZLayerAspect.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZLayerAspect.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZLayerAspect.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZLayerAspect.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZLayerAspect.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZLayerAspect.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZLayerAspect.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZLayerAspect.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZLayerAspect.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZLayerAspect.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZLayerAspect.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZLayerAspect.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(layer: ZLayer[RIn, E, ROut])(trace: Trace): ZLayer[RIn, E, ROut]", "member" : "zio.ZLayerAspect.apply", "link" : "zio\/ZLayerAspect.html#apply[RIn>:LowerRIn<:UpperRIn,E>:LowerE<:UpperE,ROut>:LowerROut<:UpperROut](layer:zio.ZLayer[RIn,E,ROut])(implicittrace:zio.Trace):zio.ZLayer[RIn,E,ROut]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.ZLogger", "object" : "zio\/ZLogger$.html", "members_object" : [{"label" : "succeed", "tail" : "(a: => A): ZLogger[Any, A]", "member" : "zio.ZLogger.succeed", "link" : "zio\/ZLogger$.html#succeed[A](a:=>A):zio.ZLogger[Any,A]", "kind" : "def"}, {"label" : "simple", "tail" : "(log: (A) => B): ZLogger[A, B]", "member" : "zio.ZLogger.simple", "link" : "zio\/ZLogger$.html#simple[A,B](log:A=>B):zio.ZLogger[A,B]", "kind" : "def"}, {"label" : "none", "tail" : ": ZLogger[Any, Unit]", "member" : "zio.ZLogger.none", "link" : "zio\/ZLogger$.html#none:zio.ZLogger[Any,Unit]", "kind" : "val"}, {"label" : "default", "tail" : ": ZLogger[String, String]", "member" : "zio.ZLogger.default", "link" : "zio\/ZLogger$.html#default:zio.ZLogger[String,String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZLogger$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZLogger$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZLogger$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZLogger$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZLogger$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZLogger$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZLogger$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZLogger$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZLogger$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZLogger$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZLogger$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZLogger$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZLogger$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZLogger$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZLogger$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZLogger$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZLogger$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZLogger$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZLogger$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/ZLogger.html", "kind" : "trait", "members_trait" : [{"label" : "test", "tail" : "(input: => Message): Output", "member" : "zio.ZLogger.test", "link" : "zio\/ZLogger.html#test(input:=>Message):Output", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Output) => B): ZLogger[Message, B]", "member" : "zio.ZLogger.map", "link" : "zio\/ZLogger.html#map[B](f:Output=>B):zio.ZLogger[Message,B]", "kind" : "final def"}, {"label" : "filterLogLevel", "tail" : "(f: (LogLevel) => Boolean): ZLogger[Message, Option[Output]]", "member" : "zio.ZLogger.filterLogLevel", "link" : "zio\/ZLogger.html#filterLogLevel(f:zio.LogLevel=>Boolean):zio.ZLogger[Message,Option[Output]]", "kind" : "final def"}, {"label" : "contramap", "tail" : "(f: (Message1) => Message): ZLogger[Message1, Output]", "member" : "zio.ZLogger.contramap", "link" : "zio\/ZLogger.html#contramap[Message1](f:Message1=>Message):zio.ZLogger[Message1,Output]", "kind" : "final def"}, {"label" : "<+", "tail" : "(that: ZLogger[M, Any]): ZLogger[M, Output]", "member" : "zio.ZLogger.<+", "link" : "zio\/ZLogger.html#<+[M<:Message](that:zio.ZLogger[M,Any]):zio.ZLogger[M,Output]", "kind" : "def"}, {"label" : "+>", "tail" : "(that: ZLogger[M, O]): ZLogger[M, O]", "member" : "zio.ZLogger.+>", "link" : "zio\/ZLogger.html#+>[M<:Message,O](that:zio.ZLogger[M,O]):zio.ZLogger[M,O]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ZLogger[M, O])(zippable: Zippable[Output, O]): ZLogger[M, Out]", "member" : "zio.ZLogger.++", "link" : "zio\/ZLogger.html#++[M<:Message,O](that:zio.ZLogger[M,O])(implicitzippable:zio.Zippable[Output,O]):zio.ZLogger[M,zippable.Out]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZLogger.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZLogger.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZLogger.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZLogger.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZLogger.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZLogger.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZLogger.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZLogger.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZLogger.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZLogger.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZLogger.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZLogger.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZLogger.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZLogger.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZLogger.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZLogger.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZLogger.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZLogger.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZLogger.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(trace: Trace, fiberId: FiberId, logLevel: LogLevel, message: () => Message, cause: Cause[Any], context: FiberRefs, spans: List[LogSpan], annotations: Map[String, String]): Output", "member" : "zio.ZLogger.apply", "link" : "zio\/ZLogger.html#apply(trace:zio.Trace,fiberId:zio.FiberId,logLevel:zio.LogLevel,message:()=>Message,cause:zio.Cause[Any],context:zio.FiberRefs,spans:List[zio.LogSpan],annotations:Map[String,String]):Output", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.ZOutputStream", "object" : "zio\/ZOutputStream$.html", "members_object" : [{"label" : "fromOutputStream", "tail" : "(os: OutputStream): ZOutputStream", "member" : "zio.ZOutputStream.fromOutputStream", "link" : "zio\/ZOutputStream$.html#fromOutputStream(os:java.io.OutputStream):zio.ZOutputStream", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZOutputStream$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZOutputStream$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZOutputStream$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZOutputStream$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZOutputStream$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZOutputStream$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZOutputStream$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZOutputStream$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZOutputStream$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZOutputStream$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZOutputStream$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZOutputStream$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZOutputStream$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZOutputStream$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZOutputStream$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZOutputStream$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZOutputStream$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZOutputStream$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZOutputStream$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/ZOutputStream.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZOutputStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZOutputStream.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZOutputStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZOutputStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZOutputStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZOutputStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZOutputStream.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZOutputStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZOutputStream.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZOutputStream.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZOutputStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZOutputStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZOutputStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZOutputStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZOutputStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZOutputStream.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZOutputStream.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZOutputStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZOutputStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "write", "tail" : "(chunk: Chunk[Byte])(trace: Trace): IO[IOException, Unit]", "member" : "zio.ZOutputStream.write", "link" : "zio\/ZOutputStream.html#write(chunk:zio.Chunk[Byte])(implicittrace:zio.Trace):zio.IO[java.io.IOException,Unit]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.ZPool", "object" : "zio\/ZPool$.html", "members_object" : [{"label" : "make", "tail" : "(get: => ZIO[R, E, A], range: => Range, timeToLive: => zio.Duration)(trace: Trace): ZIO[R with Scope, Nothing, ZPool[E, A]]", "member" : "zio.ZPool.make", "link" : "zio\/ZPool$.html#make[R,E,A](get:=>zio.ZIO[R,E,A],range:=>Range,timeToLive:=>zio.Duration)(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,zio.ZPool[E,A]]", "kind" : "def"}, {"label" : "make", "tail" : "(get: => ZIO[R, E, A], size: => Int)(trace: Trace): ZIO[R with Scope, Nothing, ZPool[E, A]]", "member" : "zio.ZPool.make", "link" : "zio\/ZPool$.html#make[R,E,A](get:=>zio.ZIO[R,E,A],size:=>Int)(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,zio.ZPool[E,A]]", "kind" : "def"}, {"label" : "fromIterable", "tail" : "(iterable: => Iterable[A])(trace: Trace): ZIO[Scope, Nothing, ZPool[Nothing, A]]", "member" : "zio.ZPool.fromIterable", "link" : "zio\/ZPool$.html#fromIterable[A](iterable:=>Iterable[A])(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,zio.ZPool[Nothing,A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZPool$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZPool$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZPool$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZPool$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZPool$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZPool$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZPool$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZPool$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZPool$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZPool$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZPool$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZPool$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZPool$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZPool$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZPool$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZPool$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZPool$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZPool$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZPool$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/ZPool.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZPool.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZPool.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZPool.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZPool.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZPool.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZPool.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZPool.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZPool.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZPool.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZPool.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZPool.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZPool.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZPool.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZPool.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZPool.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZPool.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZPool.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZPool.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZPool.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "invalidate", "tail" : "(item: Item)(trace: Trace): UIO[Unit]", "member" : "zio.ZPool.invalidate", "link" : "zio\/ZPool.html#invalidate(item:Item)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "get", "tail" : "(trace: Trace): ZIO[Scope, Error, Item]", "member" : "zio.ZPool.get", "link" : "zio\/ZPool.html#get(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Error,Item]", "kind" : "abstract def"}], "shortDescription" : "A ZPool[E, A] is a pool of items of type A, each of which may beassociated with the acquisition and release of resources."}, {"name" : "zio.ZState", "object" : "zio\/ZState$.html", "members_object" : [{"label" : "initialPatch", "tail" : "(state: => State, differ: => Differ[State, Patch])(arg0: zio.EnvironmentTag[State], trace: Trace): ZLayer[Any, Nothing, ZState[State]]", "member" : "zio.ZState.initialPatch", "link" : "zio\/ZState$.html#initialPatch[State,Patch](state:=>State,differ:=>zio.Differ[State,Patch])(implicitevidence$2:zio.EnvironmentTag[State],implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,zio.ZState[State]]", "kind" : "def"}, {"label" : "initial", "tail" : "(s: => S)(arg0: zio.EnvironmentTag[S], trace: Trace): ZLayer[Any, Nothing, ZState[S]]", "member" : "zio.ZState.initial", "link" : "zio\/ZState$.html#initial[S](s:=>S)(implicitevidence$1:zio.EnvironmentTag[S],implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,zio.ZState[S]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZState$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZState$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZState$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZState$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZState$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZState$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZState$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZState$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZState$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZState$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZState$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZState$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZState$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZState$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZState$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZState$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZState$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZState$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZState$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/ZState.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/ZState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/ZState.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/ZState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/ZState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/ZState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/ZState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/ZState.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/ZState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/ZState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/ZState.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/ZState.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/ZState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/ZState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/ZState.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/ZState.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/ZState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/ZState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "update", "tail" : "(f: (S) => S)(trace: Trace): UIO[Unit]", "member" : "zio.ZState.update", "link" : "zio\/ZState.html#update(f:S=>S)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "set", "tail" : "(s: S)(trace: Trace): UIO[Unit]", "member" : "zio.ZState.set", "link" : "zio\/ZState.html#set(s:S)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "get", "tail" : "(trace: Trace): UIO[S]", "member" : "zio.ZState.get", "link" : "zio\/ZState.html#get(implicittrace:zio.Trace):zio.UIO[S]", "kind" : "abstract def"}], "shortDescription" : "ZState[S] models a value of type S that can be read from and written toduring the execution of an effect."}], "zio.stream.compression" : [{"name" : "zio.stream.compression.CompressionException", "shortDescription" : "Signals that exception occurred in compression\/decompression", "object" : "zio\/stream\/compression\/CompressionException$.html", "members_class" : [{"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "zio\/stream\/compression\/CompressionException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "zio\/stream\/compression\/CompressionException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "zio\/stream\/compression\/CompressionException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "zio\/stream\/compression\/CompressionException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "zio\/stream\/compression\/CompressionException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "zio\/stream\/compression\/CompressionException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "zio\/stream\/compression\/CompressionException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "zio\/stream\/compression\/CompressionException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "zio\/stream\/compression\/CompressionException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "zio\/stream\/compression\/CompressionException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "zio\/stream\/compression\/CompressionException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "zio\/stream\/compression\/CompressionException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "zio\/stream\/compression\/CompressionException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/compression\/CompressionException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/compression\/CompressionException.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/compression\/CompressionException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/compression\/CompressionException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/compression\/CompressionException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/compression\/CompressionException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/compression\/CompressionException.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/compression\/CompressionException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/compression\/CompressionException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/compression\/CompressionException.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stream\/compression\/CompressionException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/compression\/CompressionException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/CompressionException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/CompressionException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/CompressionException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/compression\/CompressionException.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/compression\/CompressionException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/compression\/CompressionException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(cause: Exception): CompressionException", "member" : "zio.stream.compression.CompressionException.apply", "link" : "zio\/stream\/compression\/CompressionException$.html#apply(cause:Exception):zio.stream.compression.CompressionException", "kind" : "def"}, {"label" : "apply", "tail" : "(message: String, cause: Option[Exception]): CompressionException", "member" : "zio.stream.compression.CompressionException.apply", "link" : "zio\/stream\/compression\/CompressionException$.html#apply(message:String,cause:Option[Exception]):zio.stream.compression.CompressionException", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/compression\/CompressionException$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/compression\/CompressionException$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/compression\/CompressionException$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/compression\/CompressionException$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/compression\/CompressionException$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/compression\/CompressionException$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/compression\/CompressionException$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/compression\/CompressionException$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/compression\/CompressionException$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/compression\/CompressionException$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stream\/compression\/CompressionException$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/compression\/CompressionException$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/CompressionException$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/CompressionException$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/CompressionException$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stream\/compression\/CompressionException$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/compression\/CompressionException$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/compression\/CompressionException$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/compression\/CompressionException$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/stream\/compression\/CompressionException.html", "kind" : "class"}, {"name" : "zio.stream.compression.CompressionLevel", "shortDescription" : "", "object" : "zio\/stream\/compression\/CompressionLevel$.html", "members_class" : [{"label" : "jValue", "tail" : ": Int", "member" : "zio.stream.compression.CompressionLevel.jValue", "link" : "zio\/stream\/compression\/CompressionLevel.html#jValue:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/compression\/CompressionLevel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/compression\/CompressionLevel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/compression\/CompressionLevel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/compression\/CompressionLevel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/compression\/CompressionLevel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/compression\/CompressionLevel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/compression\/CompressionLevel.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/compression\/CompressionLevel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/compression\/CompressionLevel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/compression\/CompressionLevel.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stream\/compression\/CompressionLevel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/compression\/CompressionLevel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/CompressionLevel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/CompressionLevel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/CompressionLevel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stream\/compression\/CompressionLevel.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/compression\/CompressionLevel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/compression\/CompressionLevel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/compression\/CompressionLevel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "BestCompression", "tail" : "", "member" : "zio.stream.compression.CompressionLevel.BestCompression", "link" : "zio\/stream\/compression\/CompressionLevel$.html#BestCompression", "kind" : "case object"}, {"label" : "CompressionLevel8", "tail" : "", "member" : "zio.stream.compression.CompressionLevel.CompressionLevel8", "link" : "zio\/stream\/compression\/CompressionLevel$.html#CompressionLevel8", "kind" : "case object"}, {"label" : "CompressionLevel7", "tail" : "", "member" : "zio.stream.compression.CompressionLevel.CompressionLevel7", "link" : "zio\/stream\/compression\/CompressionLevel$.html#CompressionLevel7", "kind" : "case object"}, {"label" : "CompressionLevel6", "tail" : "", "member" : "zio.stream.compression.CompressionLevel.CompressionLevel6", "link" : "zio\/stream\/compression\/CompressionLevel$.html#CompressionLevel6", "kind" : "case object"}, {"label" : "CompressionLevel5", "tail" : "", "member" : "zio.stream.compression.CompressionLevel.CompressionLevel5", "link" : "zio\/stream\/compression\/CompressionLevel$.html#CompressionLevel5", "kind" : "case object"}, {"label" : "CompressionLevel4", "tail" : "", "member" : "zio.stream.compression.CompressionLevel.CompressionLevel4", "link" : "zio\/stream\/compression\/CompressionLevel$.html#CompressionLevel4", "kind" : "case object"}, {"label" : "CompressionLevel3", "tail" : "", "member" : "zio.stream.compression.CompressionLevel.CompressionLevel3", "link" : "zio\/stream\/compression\/CompressionLevel$.html#CompressionLevel3", "kind" : "case object"}, {"label" : "CompressionLevel2", "tail" : "", "member" : "zio.stream.compression.CompressionLevel.CompressionLevel2", "link" : "zio\/stream\/compression\/CompressionLevel$.html#CompressionLevel2", "kind" : "case object"}, {"label" : "BestSpeed", "tail" : "", "member" : "zio.stream.compression.CompressionLevel.BestSpeed", "link" : "zio\/stream\/compression\/CompressionLevel$.html#BestSpeed", "kind" : "case object"}, {"label" : "NoCompression", "tail" : "", "member" : "zio.stream.compression.CompressionLevel.NoCompression", "link" : "zio\/stream\/compression\/CompressionLevel$.html#NoCompression", "kind" : "case object"}, {"label" : "DefaultCompression", "tail" : "", "member" : "zio.stream.compression.CompressionLevel.DefaultCompression", "link" : "zio\/stream\/compression\/CompressionLevel$.html#DefaultCompression", "kind" : "case object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/compression\/CompressionLevel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/compression\/CompressionLevel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/compression\/CompressionLevel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/compression\/CompressionLevel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/compression\/CompressionLevel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/compression\/CompressionLevel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/compression\/CompressionLevel$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/compression\/CompressionLevel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/compression\/CompressionLevel$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/compression\/CompressionLevel$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stream\/compression\/CompressionLevel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/compression\/CompressionLevel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/CompressionLevel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/CompressionLevel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/CompressionLevel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stream\/compression\/CompressionLevel$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/compression\/CompressionLevel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/compression\/CompressionLevel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/compression\/CompressionLevel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/stream\/compression\/CompressionLevel.html", "kind" : "class"}, {"name" : "zio.stream.compression.CompressionParameters", "shortDescription" : "", "members_case class" : [{"member" : "zio.stream.compression.CompressionParameters#<init>", "error" : "unsupported entity"}, {"label" : "flushMode", "tail" : ": FlushMode", "member" : "zio.stream.compression.CompressionParameters.flushMode", "link" : "zio\/stream\/compression\/CompressionParameters.html#flushMode:zio.stream.compression.FlushMode", "kind" : "val"}, {"label" : "strategy", "tail" : ": CompressionStrategy", "member" : "zio.stream.compression.CompressionParameters.strategy", "link" : "zio\/stream\/compression\/CompressionParameters.html#strategy:zio.stream.compression.CompressionStrategy", "kind" : "val"}, {"label" : "level", "tail" : ": CompressionLevel", "member" : "zio.stream.compression.CompressionParameters.level", "link" : "zio\/stream\/compression\/CompressionParameters.html#level:zio.stream.compression.CompressionLevel", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/stream\/compression\/CompressionParameters.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/compression\/CompressionParameters.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/compression\/CompressionParameters.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/compression\/CompressionParameters.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/compression\/CompressionParameters.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/compression\/CompressionParameters.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/compression\/CompressionParameters.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/compression\/CompressionParameters.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/compression\/CompressionParameters.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/compression\/CompressionParameters.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/compression\/CompressionParameters.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/compression\/CompressionParameters.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/CompressionParameters.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/CompressionParameters.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/CompressionParameters.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/compression\/CompressionParameters.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/compression\/CompressionParameters.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/stream\/compression\/CompressionParameters.html", "kind" : "case class"}, {"name" : "zio.stream.compression.CompressionStrategy", "shortDescription" : "", "object" : "zio\/stream\/compression\/CompressionStrategy$.html", "members_class" : [{"label" : "jValue", "tail" : ": Int", "member" : "zio.stream.compression.CompressionStrategy.jValue", "link" : "zio\/stream\/compression\/CompressionStrategy.html#jValue:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/compression\/CompressionStrategy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/compression\/CompressionStrategy.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/compression\/CompressionStrategy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/compression\/CompressionStrategy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/compression\/CompressionStrategy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/compression\/CompressionStrategy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/compression\/CompressionStrategy.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/compression\/CompressionStrategy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/compression\/CompressionStrategy.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/compression\/CompressionStrategy.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stream\/compression\/CompressionStrategy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/compression\/CompressionStrategy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/CompressionStrategy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/CompressionStrategy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/CompressionStrategy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stream\/compression\/CompressionStrategy.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/compression\/CompressionStrategy.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/compression\/CompressionStrategy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/compression\/CompressionStrategy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "HuffmanOnly", "tail" : "", "member" : "zio.stream.compression.CompressionStrategy.HuffmanOnly", "link" : "zio\/stream\/compression\/CompressionStrategy$.html#HuffmanOnly", "kind" : "case object"}, {"label" : "Filtered", "tail" : "", "member" : "zio.stream.compression.CompressionStrategy.Filtered", "link" : "zio\/stream\/compression\/CompressionStrategy$.html#Filtered", "kind" : "case object"}, {"label" : "DefaultStrategy", "tail" : "", "member" : "zio.stream.compression.CompressionStrategy.DefaultStrategy", "link" : "zio\/stream\/compression\/CompressionStrategy$.html#DefaultStrategy", "kind" : "case object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/compression\/CompressionStrategy$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/compression\/CompressionStrategy$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/compression\/CompressionStrategy$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/compression\/CompressionStrategy$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/compression\/CompressionStrategy$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/compression\/CompressionStrategy$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/compression\/CompressionStrategy$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/compression\/CompressionStrategy$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/compression\/CompressionStrategy$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/compression\/CompressionStrategy$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stream\/compression\/CompressionStrategy$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/compression\/CompressionStrategy$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/CompressionStrategy$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/CompressionStrategy$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/CompressionStrategy$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stream\/compression\/CompressionStrategy$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/compression\/CompressionStrategy$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/compression\/CompressionStrategy$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/compression\/CompressionStrategy$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/stream\/compression\/CompressionStrategy.html", "kind" : "class"}, {"name" : "zio.stream.compression.FlushMode", "shortDescription" : "", "object" : "zio\/stream\/compression\/FlushMode$.html", "members_class" : [{"label" : "jValue", "tail" : ": Int", "member" : "zio.stream.compression.FlushMode.jValue", "link" : "zio\/stream\/compression\/FlushMode.html#jValue:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/compression\/FlushMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/compression\/FlushMode.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/compression\/FlushMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/compression\/FlushMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/compression\/FlushMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/compression\/FlushMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/compression\/FlushMode.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/compression\/FlushMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/compression\/FlushMode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/compression\/FlushMode.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stream\/compression\/FlushMode.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/compression\/FlushMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/FlushMode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/FlushMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/FlushMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stream\/compression\/FlushMode.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/compression\/FlushMode.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/compression\/FlushMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/compression\/FlushMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "FullFlush", "tail" : "", "member" : "zio.stream.compression.FlushMode.FullFlush", "link" : "zio\/stream\/compression\/FlushMode$.html#FullFlush", "kind" : "case object"}, {"label" : "SyncFlush", "tail" : "", "member" : "zio.stream.compression.FlushMode.SyncFlush", "link" : "zio\/stream\/compression\/FlushMode$.html#SyncFlush", "kind" : "case object"}, {"label" : "NoFlush", "tail" : "", "member" : "zio.stream.compression.FlushMode.NoFlush", "link" : "zio\/stream\/compression\/FlushMode$.html#NoFlush", "kind" : "case object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/compression\/FlushMode$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/compression\/FlushMode$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/compression\/FlushMode$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/compression\/FlushMode$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/compression\/FlushMode$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/compression\/FlushMode$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/compression\/FlushMode$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/compression\/FlushMode$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/compression\/FlushMode$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/compression\/FlushMode$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stream\/compression\/FlushMode$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/compression\/FlushMode$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/FlushMode$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/FlushMode$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/compression\/FlushMode$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stream\/compression\/FlushMode$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/compression\/FlushMode$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/compression\/FlushMode$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/compression\/FlushMode$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/stream\/compression\/FlushMode.html", "kind" : "class"}], "zio.test.scalacheck" : [{"name" : "zio.test.scalacheck.ScalaCheckGenSyntax", "shortDescription" : "", "members_class" : [{"label" : "toGenZIO", "tail" : "(): Gen[Any, A]", "member" : "zio.test.scalacheck.ScalaCheckGenSyntax.toGenZIO", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckGenSyntax.html#toGenZIO:zio.test.Gen[Any,A]", "kind" : "def"}, {"member" : "zio.test.scalacheck.ScalaCheckGenSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckGenSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckGenSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckGenSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckGenSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckGenSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckGenSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckGenSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "zio\/test\/scalacheck\/package$$ScalaCheckGenSyntax.html", "kind" : "class"}, {"name" : "zio.test.scalacheck.ScalaCheckPropertiesSyntax", "shortDescription" : "", "members_class" : [{"label" : "assertZIO", "tail" : "(testParams: Parameters): TestResult", "member" : "zio.test.scalacheck.ScalaCheckPropertiesSyntax.assertZIO", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckPropertiesSyntax.html#assertZIO(testParams:org.scalacheck.Test.Parameters):zio.test.TestResult", "kind" : "def"}, {"member" : "zio.test.scalacheck.ScalaCheckPropertiesSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckPropertiesSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckPropertiesSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckPropertiesSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckPropertiesSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckPropertiesSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckPropertiesSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckPropertiesSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "zio\/test\/scalacheck\/package$$ScalaCheckPropertiesSyntax.html", "kind" : "class"}, {"name" : "zio.test.scalacheck.ScalaCheckPropSyntax", "shortDescription" : "", "members_class" : [{"label" : "assertZIO", "tail" : "(name: String, testParams: Parameters): TestResult", "member" : "zio.test.scalacheck.ScalaCheckPropSyntax.assertZIO", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckPropSyntax.html#assertZIO(name:String,testParams:org.scalacheck.Test.Parameters):zio.test.TestResult", "kind" : "def"}, {"member" : "zio.test.scalacheck.ScalaCheckPropSyntax#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckPropSyntax.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckPropSyntax.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckPropSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckPropSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckPropSyntax.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckPropSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/test\/scalacheck\/package$$ScalaCheckPropSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "zio\/test\/scalacheck\/package$$ScalaCheckPropSyntax.html", "kind" : "class"}], "zio.stream" : [{"name" : "zio.stream.BuildInfo", "case object" : "zio\/stream\/BuildInfo$.html", "shortDescription" : "This object was generated by sbt-buildinfo.", "members_case object" : [{"label" : "toString", "tail" : ": String", "member" : "zio.stream.BuildInfo.toString", "link" : "zio\/stream\/BuildInfo$.html#toString:String", "kind" : "val"}, {"label" : "optimizationsEnabled", "tail" : ": Boolean(false)", "member" : "zio.stream.BuildInfo.optimizationsEnabled", "link" : "zio\/stream\/BuildInfo$.html#optimizationsEnabled:Boolean(false)", "kind" : "final val"}, {"label" : "isSnapshot", "tail" : ": Boolean(true)", "member" : "zio.stream.BuildInfo.isSnapshot", "link" : "zio\/stream\/BuildInfo$.html#isSnapshot:Boolean(true)", "kind" : "final val"}, {"label" : "sbtVersion", "tail" : ": String(\"1.10.7\")", "member" : "zio.stream.BuildInfo.sbtVersion", "link" : "zio\/stream\/BuildInfo$.html#sbtVersion:String(\"1.10.7\")", "kind" : "final val"}, {"label" : "scalaVersion", "tail" : ": String(\"2.13.16\")", "member" : "zio.stream.BuildInfo.scalaVersion", "link" : "zio\/stream\/BuildInfo$.html#scalaVersion:String(\"2.13.16\")", "kind" : "final val"}, {"label" : "version", "tail" : ": String(\"2.1.15+59-823f25cd-SNAPSHOT\")", "member" : "zio.stream.BuildInfo.version", "link" : "zio\/stream\/BuildInfo$.html#version:String(\"2.1.15+59-823f25cd-SNAPSHOT\")", "kind" : "final val"}, {"label" : "name", "tail" : ": String(\"zio-streams\")", "member" : "zio.stream.BuildInfo.name", "link" : "zio\/stream\/BuildInfo$.html#name:String(\"zio-streams\")", "kind" : "final val"}, {"label" : "moduleName", "tail" : ": String(\"zio-streams\")", "member" : "zio.stream.BuildInfo.moduleName", "link" : "zio\/stream\/BuildInfo$.html#moduleName:String(\"zio-streams\")", "kind" : "final val"}, {"label" : "organization", "tail" : ": String(\"dev.zio\")", "member" : "zio.stream.BuildInfo.organization", "link" : "zio\/stream\/BuildInfo$.html#organization:String(\"dev.zio\")", "kind" : "final val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/stream\/BuildInfo$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "zio\/stream\/BuildInfo$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/BuildInfo$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/BuildInfo$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/BuildInfo$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/BuildInfo$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/BuildInfo$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/BuildInfo$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/BuildInfo$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/BuildInfo$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/BuildInfo$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/BuildInfo$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/BuildInfo$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/BuildInfo$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/BuildInfo$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/BuildInfo$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/BuildInfo$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/BuildInfo$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/BuildInfo$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "zio.stream.ProvideSomeLayerStreamPartiallyApplied", "shortDescription" : "", "members_class" : [{"label" : "apply", "tail" : "(layer: ZLayer[_, E1, _]*): ZStream[R0, E1, O]", "member" : "zio.stream.ProvideSomeLayerStreamPartiallyApplied.apply", "link" : "zio\/stream\/ProvideSomeLayerStreamPartiallyApplied.html#apply[E1>:E](layer:zio.ZLayer[_,E1,_]*):zio.stream.ZStream[R0,E1,O]", "kind" : "macro def"}, {"label" : "provideLayer", "tail" : "(layer: ZLayer[R0, E1, R]): ZStream[R0, E1, O]", "member" : "zio.stream.ProvideSomeLayerStreamPartiallyApplied.provideLayer", "link" : "zio\/stream\/ProvideSomeLayerStreamPartiallyApplied.html#provideLayer[E1>:E](layer:zio.ZLayer[R0,E1,R]):zio.stream.ZStream[R0,E1,O]", "kind" : "def"}, {"member" : "zio.stream.ProvideSomeLayerStreamPartiallyApplied#<init>", "error" : "unsupported entity"}, {"label" : "self", "tail" : ": ZStream[R, E, O]", "member" : "zio.stream.ProvideSomeLayerStreamPartiallyApplied.self", "link" : "zio\/stream\/ProvideSomeLayerStreamPartiallyApplied.html#self:zio.stream.ZStream[R,E,O]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/stream\/ProvideSomeLayerStreamPartiallyApplied.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/stream\/ProvideSomeLayerStreamPartiallyApplied.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/ProvideSomeLayerStreamPartiallyApplied.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/ProvideSomeLayerStreamPartiallyApplied.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/stream\/ProvideSomeLayerStreamPartiallyApplied.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/stream\/ProvideSomeLayerStreamPartiallyApplied.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/stream\/ProvideSomeLayerStreamPartiallyApplied.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "zio\/stream\/ProvideSomeLayerStreamPartiallyApplied.html", "kind" : "class"}, {"name" : "zio.stream.SubscriptionRef", "object" : "zio\/stream\/SubscriptionRef$.html", "members_object" : [{"label" : "make", "tail" : "(a: => A)(trace: Trace): UIO[SubscriptionRef[A]]", "member" : "zio.stream.SubscriptionRef.make", "link" : "zio\/stream\/SubscriptionRef$.html#make[A](a:=>A)(implicittrace:zio.Trace):zio.UIO[zio.stream.SubscriptionRef[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/SubscriptionRef$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/SubscriptionRef$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/SubscriptionRef$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/SubscriptionRef$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/SubscriptionRef$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/SubscriptionRef$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/SubscriptionRef$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/SubscriptionRef$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/SubscriptionRef$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/SubscriptionRef$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stream\/SubscriptionRef$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/SubscriptionRef$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/SubscriptionRef$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/SubscriptionRef$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/SubscriptionRef$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stream\/SubscriptionRef$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/SubscriptionRef$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/SubscriptionRef$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/SubscriptionRef$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/stream\/SubscriptionRef.html", "kind" : "trait", "members_trait" : [{"label" : "updateSomeAndGetZIO", "tail" : "(pf: PartialFunction[A, ZIO[R, E, A]])(trace: Trace): ZIO[R, E, A]", "member" : "zio.Ref.Synchronized.updateSomeAndGetZIO", "link" : "zio\/stream\/SubscriptionRef.html#updateSomeAndGetZIO[R,E](pf:PartialFunction[A,zio.ZIO[R,E,A]])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "updateSomeZIO", "tail" : "(pf: PartialFunction[A, ZIO[R, E, A]])(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.Ref.Synchronized.updateSomeZIO", "link" : "zio\/stream\/SubscriptionRef.html#updateSomeZIO[R,E](pf:PartialFunction[A,zio.ZIO[R,E,A]])(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "def"}, {"label" : "updateAndGetZIO", "tail" : "(f: (A) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.Ref.Synchronized.updateAndGetZIO", "link" : "zio\/stream\/SubscriptionRef.html#updateAndGetZIO[R,E](f:A=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "updateZIO", "tail" : "(f: (A) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.Ref.Synchronized.updateZIO", "link" : "zio\/stream\/SubscriptionRef.html#updateZIO[R,E](f:A=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "def"}, {"label" : "modifySomeZIO", "tail" : "(default: B)(pf: PartialFunction[A, ZIO[R, E, (B, A)]])(trace: Trace): ZIO[R, E, B]", "member" : "zio.Ref.Synchronized.modifySomeZIO", "link" : "zio\/stream\/SubscriptionRef.html#modifySomeZIO[R,E,B](default:B)(pf:PartialFunction[A,zio.ZIO[R,E,(B,A)]])(implicittrace:zio.Trace):zio.ZIO[R,E,B]", "kind" : "def"}, {"label" : "modify", "tail" : "(f: (A) => (B, A))(trace: Trace): UIO[B]", "member" : "zio.Ref.Synchronized.modify", "link" : "zio\/stream\/SubscriptionRef.html#modify[B](f:A=>(B,A))(implicittrace:zio.Trace):zio.UIO[B]", "kind" : "final def"}, {"label" : "getAndUpdateSomeZIO", "tail" : "(pf: PartialFunction[A, ZIO[R, E, A]])(trace: Trace): ZIO[R, E, A]", "member" : "zio.Ref.Synchronized.getAndUpdateSomeZIO", "link" : "zio\/stream\/SubscriptionRef.html#getAndUpdateSomeZIO[R,E](pf:PartialFunction[A,zio.ZIO[R,E,A]])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "getAndUpdateZIO", "tail" : "(f: (A) => ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.Ref.Synchronized.getAndUpdateZIO", "link" : "zio\/stream\/SubscriptionRef.html#getAndUpdateZIO[R,E](f:A=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "addAndGet", "tail" : "(delta: A)(num: Numeric[A], trace: Trace): UIO[A]", "member" : "zio.Ref.addAndGet", "link" : "zio\/stream\/SubscriptionRef.html#addAndGet(delta:A)(implicitnum:scala.math.Numeric[A],implicittrace:zio.Trace):zio.UIO[A]", "kind" : "final def"}, {"label" : "decrementAndGet", "tail" : "(num: Numeric[A], trace: Trace): UIO[A]", "member" : "zio.Ref.decrementAndGet", "link" : "zio\/stream\/SubscriptionRef.html#decrementAndGet(implicitnum:scala.math.Numeric[A],implicittrace:zio.Trace):zio.UIO[A]", "kind" : "final def"}, {"label" : "incrementAndGet", "tail" : "(num: Numeric[A], trace: Trace): UIO[A]", "member" : "zio.Ref.incrementAndGet", "link" : "zio\/stream\/SubscriptionRef.html#incrementAndGet(implicitnum:scala.math.Numeric[A],implicittrace:zio.Trace):zio.UIO[A]", "kind" : "final def"}, {"label" : "getAndAdd", "tail" : "(delta: A)(num: Numeric[A], trace: Trace): UIO[A]", "member" : "zio.Ref.getAndAdd", "link" : "zio\/stream\/SubscriptionRef.html#getAndAdd(delta:A)(implicitnum:scala.math.Numeric[A],implicittrace:zio.Trace):zio.UIO[A]", "kind" : "final def"}, {"label" : "getAndDecrement", "tail" : "(num: Numeric[A], trace: Trace): UIO[A]", "member" : "zio.Ref.getAndDecrement", "link" : "zio\/stream\/SubscriptionRef.html#getAndDecrement(implicitnum:scala.math.Numeric[A],implicittrace:zio.Trace):zio.UIO[A]", "kind" : "final def"}, {"label" : "getAndIncrement", "tail" : "(num: Numeric[A], trace: Trace): UIO[A]", "member" : "zio.Ref.getAndIncrement", "link" : "zio\/stream\/SubscriptionRef.html#getAndIncrement(implicitnum:scala.math.Numeric[A],implicittrace:zio.Trace):zio.UIO[A]", "kind" : "final def"}, {"label" : "updateSomeAndGet", "tail" : "(pf: PartialFunction[A, A])(trace: Trace): UIO[A]", "member" : "zio.Ref.updateSomeAndGet", "link" : "zio\/stream\/SubscriptionRef.html#updateSomeAndGet(pf:PartialFunction[A,A])(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "def"}, {"label" : "updateSome", "tail" : "(pf: PartialFunction[A, A])(trace: Trace): UIO[Unit]", "member" : "zio.Ref.updateSome", "link" : "zio\/stream\/SubscriptionRef.html#updateSome(pf:PartialFunction[A,A])(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "updateAndGet", "tail" : "(f: (A) => A)(trace: Trace): UIO[A]", "member" : "zio.Ref.updateAndGet", "link" : "zio\/stream\/SubscriptionRef.html#updateAndGet(f:A=>A)(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "def"}, {"label" : "update", "tail" : "(f: (A) => A)(trace: Trace): UIO[Unit]", "member" : "zio.Ref.update", "link" : "zio\/stream\/SubscriptionRef.html#update(f:A=>A)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "modifySome", "tail" : "(default: B)(pf: PartialFunction[A, (B, A)])(trace: Trace): UIO[B]", "member" : "zio.Ref.modifySome", "link" : "zio\/stream\/SubscriptionRef.html#modifySome[B](default:B)(pf:PartialFunction[A,(B,A)])(implicittrace:zio.Trace):zio.UIO[B]", "kind" : "def"}, {"label" : "getAndUpdateSome", "tail" : "(pf: PartialFunction[A, A])(trace: Trace): UIO[A]", "member" : "zio.Ref.getAndUpdateSome", "link" : "zio\/stream\/SubscriptionRef.html#getAndUpdateSome(pf:PartialFunction[A,A])(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "def"}, {"label" : "getAndUpdate", "tail" : "(f: (A) => A)(trace: Trace): UIO[A]", "member" : "zio.Ref.getAndUpdate", "link" : "zio\/stream\/SubscriptionRef.html#getAndUpdate(f:A=>A)(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "def"}, {"label" : "getAndSet", "tail" : "(a: A)(trace: Trace): UIO[A]", "member" : "zio.Ref.getAndSet", "link" : "zio\/stream\/SubscriptionRef.html#getAndSet(a:A)(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/SubscriptionRef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/SubscriptionRef.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/SubscriptionRef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/SubscriptionRef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/SubscriptionRef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/SubscriptionRef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/SubscriptionRef.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/SubscriptionRef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/SubscriptionRef.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/SubscriptionRef.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stream\/SubscriptionRef.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/SubscriptionRef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/SubscriptionRef.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/SubscriptionRef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/SubscriptionRef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stream\/SubscriptionRef.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/SubscriptionRef.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/SubscriptionRef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/SubscriptionRef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "changes", "tail" : "(): ZStream[Any, Nothing, A]", "member" : "zio.stream.SubscriptionRef.changes", "link" : "zio\/stream\/SubscriptionRef.html#changes:zio.stream.ZStream[Any,Nothing,A]", "kind" : "abstract def"}, {"label" : "setAsync", "tail" : "(a: A)(trace: Trace): UIO[Unit]", "member" : "zio.Ref.Synchronized.setAsync", "link" : "zio\/stream\/SubscriptionRef.html#setAsync(a:A)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "set", "tail" : "(a: A)(trace: Trace): UIO[Unit]", "member" : "zio.Ref.Synchronized.set", "link" : "zio\/stream\/SubscriptionRef.html#set(a:A)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "modifyZIO", "tail" : "(f: (A) => ZIO[R, E, (B, A)])(trace: Trace): ZIO[R, E, B]", "member" : "zio.Ref.Synchronized.modifyZIO", "link" : "zio\/stream\/SubscriptionRef.html#modifyZIO[R,E,B](f:A=>zio.ZIO[R,E,(B,A)])(implicittrace:zio.Trace):zio.ZIO[R,E,B]", "kind" : "abstract def"}, {"label" : "get", "tail" : "(trace: Trace): UIO[A]", "member" : "zio.Ref.Synchronized.get", "link" : "zio\/stream\/SubscriptionRef.html#get(implicittrace:zio.Trace):zio.UIO[A]", "kind" : "abstract def"}], "shortDescription" : "A SubscriptionRef[A] is a Ref that can be subscribed to in order toreceive the current value as well as all changes to the value."}, {"name" : "zio.stream.Take", "shortDescription" : "A Take[E, A] represents a single take from a queue modeling a stream ofvalues.", "object" : "zio\/stream\/Take$.html", "members_object" : [{"label" : "end", "tail" : ": Take[Nothing, Nothing]", "member" : "zio.stream.Take.end", "link" : "zio\/stream\/Take$.html#end:zio.stream.Take[Nothing,Nothing]", "kind" : "val"}, {"label" : "done", "tail" : "(exit: Exit[E, A]): Take[E, A]", "member" : "zio.stream.Take.done", "link" : "zio\/stream\/Take$.html#done[E,A](exit:zio.Exit[E,A]):zio.stream.Take[E,A]", "kind" : "def"}, {"label" : "dieMessage", "tail" : "(msg: String): Take[Nothing, Nothing]", "member" : "zio.stream.Take.dieMessage", "link" : "zio\/stream\/Take$.html#dieMessage(msg:String):zio.stream.Take[Nothing,Nothing]", "kind" : "def"}, {"label" : "die", "tail" : "(t: Throwable): Take[Nothing, Nothing]", "member" : "zio.stream.Take.die", "link" : "zio\/stream\/Take$.html#die(t:Throwable):zio.stream.Take[Nothing,Nothing]", "kind" : "def"}, {"label" : "fromPull", "tail" : "(pull: Pull[R, E, A])(trace: Trace): URIO[R, Take[E, A]]", "member" : "zio.stream.Take.fromPull", "link" : "zio\/stream\/Take$.html#fromPull[R,E,A](pull:zio.stream.ZStream.Pull[R,E,A])(implicittrace:zio.Trace):zio.URIO[R,zio.stream.Take[E,A]]", "kind" : "def"}, {"label" : "fromZIO", "tail" : "(zio: ZIO[R, E, A])(trace: Trace): URIO[R, Take[E, A]]", "member" : "zio.stream.Take.fromZIO", "link" : "zio\/stream\/Take$.html#fromZIO[R,E,A](zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.URIO[R,zio.stream.Take[E,A]]", "kind" : "def"}, {"label" : "failCause", "tail" : "(c: Cause[E]): Take[E, Nothing]", "member" : "zio.stream.Take.failCause", "link" : "zio\/stream\/Take$.html#failCause[E](c:zio.Cause[E]):zio.stream.Take[E,Nothing]", "kind" : "def"}, {"label" : "fail", "tail" : "(e: E): Take[E, Nothing]", "member" : "zio.stream.Take.fail", "link" : "zio\/stream\/Take$.html#fail[E](e:E):zio.stream.Take[E,Nothing]", "kind" : "def"}, {"label" : "chunk", "tail" : "(as: Chunk[A]): Take[Nothing, A]", "member" : "zio.stream.Take.chunk", "link" : "zio\/stream\/Take$.html#chunk[A](as:zio.Chunk[A]):zio.stream.Take[Nothing,A]", "kind" : "def"}, {"label" : "single", "tail" : "(a: A): Take[Nothing, A]", "member" : "zio.stream.Take.single", "link" : "zio\/stream\/Take$.html#single[A](a:A):zio.stream.Take[Nothing,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/Take$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/Take$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/Take$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/Take$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/Take$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/Take$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/Take$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/Take$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/Take$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/Take$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stream\/Take$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/Take$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/Take$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/Take$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/Take$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stream\/Take$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/Take$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/Take$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/Take$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "tap", "tail" : "(f: (Chunk[A]) => ZIO[R, E1, Any])(trace: Trace): ZIO[R, E1, Unit]", "member" : "zio.stream.Take.tap", "link" : "zio\/stream\/Take.html#tap[R,E1](f:zio.Chunk[A]=>zio.ZIO[R,E1,Any])(implicittrace:zio.Trace):zio.ZIO[R,E1,Unit]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B): Take[E, B]", "member" : "zio.stream.Take.map", "link" : "zio\/stream\/Take.html#map[B](f:A=>B):zio.stream.Take[E,B]", "kind" : "def"}, {"label" : "isSuccess", "tail" : "(): Boolean", "member" : "zio.stream.Take.isSuccess", "link" : "zio\/stream\/Take.html#isSuccess:Boolean", "kind" : "def"}, {"label" : "isFailure", "tail" : "(): Boolean", "member" : "zio.stream.Take.isFailure", "link" : "zio\/stream\/Take.html#isFailure:Boolean", "kind" : "def"}, {"label" : "isDone", "tail" : "(): Boolean", "member" : "zio.stream.Take.isDone", "link" : "zio\/stream\/Take.html#isDone:Boolean", "kind" : "def"}, {"label" : "foldZIO", "tail" : "(end: => ZIO[R, E1, Z], error: (Cause[E]) => ZIO[R, E1, Z], value: (Chunk[A]) => ZIO[R, E1, Z])(trace: Trace): ZIO[R, E1, Z]", "member" : "zio.stream.Take.foldZIO", "link" : "zio\/stream\/Take.html#foldZIO[R,E1,Z](end:=>zio.ZIO[R,E1,Z],error:zio.Cause[E]=>zio.ZIO[R,E1,Z],value:zio.Chunk[A]=>zio.ZIO[R,E1,Z])(implicittrace:zio.Trace):zio.ZIO[R,E1,Z]", "kind" : "def"}, {"label" : "fold", "tail" : "(end: => Z, error: (Cause[E]) => Z, value: (Chunk[A]) => Z): Z", "member" : "zio.stream.Take.fold", "link" : "zio\/stream\/Take.html#fold[Z](end:=>Z,error:zio.Cause[E]=>Z,value:zio.Chunk[A]=>Z):Z", "kind" : "def"}, {"label" : "done", "tail" : "(trace: Trace): ZIO[R, Option[E], Chunk[A]]", "member" : "zio.stream.Take.done", "link" : "zio\/stream\/Take.html#done[R](implicittrace:zio.Trace):zio.ZIO[R,Option[E],zio.Chunk[A]]", "kind" : "def"}, {"member" : "zio.stream.Take#<init>", "error" : "unsupported entity"}, {"label" : "exit", "tail" : ": Exit[Option[E], Chunk[A]]", "member" : "zio.stream.Take.exit", "link" : "zio\/stream\/Take.html#exit:zio.Exit[Option[E],zio.Chunk[A]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/stream\/Take.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/stream\/Take.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/stream\/Take.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/Take.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/Take.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/stream\/Take.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/stream\/Take.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "zio\/stream\/Take.html", "kind" : "case class"}, {"name" : "zio.stream.ZChannel", "object" : "zio\/stream\/ZChannel$.html", "members_object" : [{"label" : "UpdateServiceAt", "tail" : "", "member" : "zio.stream.ZChannel.UpdateServiceAt", "link" : "zio\/stream\/ZChannel$.html#UpdateServiceAt[-Env,-InErr,-InElem,-InDone,+OutErr,+OutElem,+OutDone,Service]extendsAnyVal", "kind" : "final class"}, {"label" : "UpdateService", "tail" : "", "member" : "zio.stream.ZChannel.UpdateService", "link" : "zio\/stream\/ZChannel$.html#UpdateService[-Env,-InErr,-InElem,-InDone,+OutErr,+OutElem,+OutDone,Service]extendsAnyVal", "kind" : "final class"}, {"label" : "UnwrapScopedPartiallyApplied", "tail" : "", "member" : "zio.stream.ZChannel.UnwrapScopedPartiallyApplied", "link" : "zio\/stream\/ZChannel$.html#UnwrapScopedPartiallyApplied[Env]extendsAnyVal", "kind" : "final class"}, {"label" : "ServiceWithZIOPartiallyApplied", "tail" : "", "member" : "zio.stream.ZChannel.ServiceWithZIOPartiallyApplied", "link" : "zio\/stream\/ZChannel$.html#ServiceWithZIOPartiallyApplied[Service]extendsAnyVal", "kind" : "final class"}, {"label" : "ServiceWithChannelPartiallyApplied", "tail" : "", "member" : "zio.stream.ZChannel.ServiceWithChannelPartiallyApplied", "link" : "zio\/stream\/ZChannel$.html#ServiceWithChannelPartiallyApplied[Service]extendsAnyVal", "kind" : "final class"}, {"label" : "ServiceWithPartiallyApplied", "tail" : "", "member" : "zio.stream.ZChannel.ServiceWithPartiallyApplied", "link" : "zio\/stream\/ZChannel$.html#ServiceWithPartiallyApplied[Service]extendsAnyVal", "kind" : "final class"}, {"label" : "ServiceAtPartiallyApplied", "tail" : "", "member" : "zio.stream.ZChannel.ServiceAtPartiallyApplied", "link" : "zio\/stream\/ZChannel$.html#ServiceAtPartiallyApplied[Service]extendsAnyVal", "kind" : "final class"}, {"label" : "ScopedPartiallyApplied", "tail" : "", "member" : "zio.stream.ZChannel.ScopedPartiallyApplied", "link" : "zio\/stream\/ZChannel$.html#ScopedPartiallyApplied[R]extendsAnyVal", "kind" : "final class"}, {"label" : "ProvideSomeLayer", "tail" : "", "member" : "zio.stream.ZChannel.ProvideSomeLayer", "link" : "zio\/stream\/ZChannel$.html#ProvideSomeLayer[Env0,-Env,-InErr,-InElem,-InDone,+OutErr,+OutElem,+OutDone]extendsAnyVal", "kind" : "final class"}, {"label" : "EnvironmentWithZIOPartiallyApplied", "tail" : "", "member" : "zio.stream.ZChannel.EnvironmentWithZIOPartiallyApplied", "link" : "zio\/stream\/ZChannel$.html#EnvironmentWithZIOPartiallyApplied[Env]extendsAnyVal", "kind" : "final class"}, {"label" : "EnvironmentWithChannelPartiallyApplied", "tail" : "", "member" : "zio.stream.ZChannel.EnvironmentWithChannelPartiallyApplied", "link" : "zio\/stream\/ZChannel$.html#EnvironmentWithChannelPartiallyApplied[Env]extendsAnyVal", "kind" : "final class"}, {"label" : "EnvironmentWithPartiallyApplied", "tail" : "", "member" : "zio.stream.ZChannel.EnvironmentWithPartiallyApplied", "link" : "zio\/stream\/ZChannel$.html#EnvironmentWithPartiallyApplied[Env]extendsAnyVal", "kind" : "final class"}, {"label" : "MergeStrategy", "tail" : "", "member" : "zio.stream.ZChannel.MergeStrategy", "link" : "zio\/stream\/ZChannel$.html#MergeStrategy", "kind" : "object"}, {"label" : "MergeStrategy", "tail" : "", "member" : "zio.stream.ZChannel.MergeStrategy", "link" : "zio\/stream\/ZChannel$.html#MergeStrategyextendsAnyRef", "kind" : "sealed trait"}, {"label" : "MergeDecision", "tail" : "", "member" : "zio.stream.ZChannel.MergeDecision", "link" : "zio\/stream\/ZChannel$.html#MergeDecision", "kind" : "object"}, {"label" : "MergeDecision", "tail" : "", "member" : "zio.stream.ZChannel.MergeDecision", "link" : "zio\/stream\/ZChannel$.html#MergeDecision[-R,-E0,-Z0,+E,+Z]extendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "toQueue", "tail" : "(queue: => Enqueue[Either[Exit[Err, Done], Elem]])(trace: Trace): ZChannel[Any, Err, Elem, Done, Nothing, Nothing, Any]", "member" : "zio.stream.ZChannel.toQueue", "link" : "zio\/stream\/ZChannel$.html#toQueue[Err,Done,Elem](queue:=>zio.Enqueue[Either[zio.Exit[Err,Done],Elem]])(implicittrace:zio.Trace):zio.stream.ZChannel[Any,Err,Elem,Done,Nothing,Nothing,Any]", "kind" : "def"}, {"label" : "toHub", "tail" : "(hub: => Hub[Either[Exit[Err, Done], Elem]])(trace: Trace): ZChannel[Any, Err, Elem, Done, Nothing, Nothing, Any]", "member" : "zio.stream.ZChannel.toHub", "link" : "zio\/stream\/ZChannel$.html#toHub[Err,Done,Elem](hub:=>zio.Hub[Either[zio.Exit[Err,Done],Elem]])(implicittrace:zio.Trace):zio.stream.ZChannel[Any,Err,Elem,Done,Nothing,Nothing,Any]", "kind" : "def"}, {"label" : "unwrapScopedWith", "tail" : "(f: (Scope) => ZIO[Env, OutErr, ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone]])(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone]", "member" : "zio.stream.ZChannel.unwrapScopedWith", "link" : "zio\/stream\/ZChannel$.html#unwrapScopedWith[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone](f:zio.Scope=>zio.ZIO[Env,OutErr,zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone]])(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone]", "kind" : "def"}, {"label" : "unwrapScoped", "tail" : "(): UnwrapScopedPartiallyApplied[Env]", "member" : "zio.stream.ZChannel.unwrapScoped", "link" : "zio\/stream\/ZChannel$.html#unwrapScoped[Env]:zio.stream.ZChannel.UnwrapScopedPartiallyApplied[Env]", "kind" : "def"}, {"label" : "unwrap", "tail" : "(channel: => ZIO[Env, OutErr, ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone]])(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone]", "member" : "zio.stream.ZChannel.unwrap", "link" : "zio\/stream\/ZChannel$.html#unwrap[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone](channel:=>zio.ZIO[Env,OutErr,zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone]])(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone]", "kind" : "def"}, {"label" : "unit", "tail" : ": ZChannel[Any, Any, Any, Any, Nothing, Nothing, Unit]", "member" : "zio.stream.ZChannel.unit", "link" : "zio\/stream\/ZChannel$.html#unit:zio.stream.ZChannel[Any,Any,Any,Any,Nothing,Nothing,Unit]", "kind" : "val"}, {"label" : "suspend", "tail" : "(channel: => ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone]): ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone]", "member" : "zio.stream.ZChannel.suspend", "link" : "zio\/stream\/ZChannel$.html#suspend[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone](channel:=>zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone]):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone]", "kind" : "def"}, {"label" : "succeed", "tail" : "(z: => Z)(trace: Trace): ZChannel[Any, Any, Any, Any, Nothing, Nothing, Z]", "member" : "zio.stream.ZChannel.succeed", "link" : "zio\/stream\/ZChannel$.html#succeed[Z](z:=>Z)(implicittrace:zio.Trace):zio.stream.ZChannel[Any,Any,Any,Any,Nothing,Nothing,Z]", "kind" : "def"}, {"label" : "serviceWithZIO", "tail" : "(): ServiceWithZIOPartiallyApplied[Service]", "member" : "zio.stream.ZChannel.serviceWithZIO", "link" : "zio\/stream\/ZChannel$.html#serviceWithZIO[Service]:zio.stream.ZChannel.ServiceWithZIOPartiallyApplied[Service]", "kind" : "def"}, {"label" : "serviceWithChannel", "tail" : "(): ServiceWithChannelPartiallyApplied[Service]", "member" : "zio.stream.ZChannel.serviceWithChannel", "link" : "zio\/stream\/ZChannel$.html#serviceWithChannel[Service]:zio.stream.ZChannel.ServiceWithChannelPartiallyApplied[Service]", "kind" : "def"}, {"label" : "serviceWith", "tail" : "(): ServiceWithPartiallyApplied[Service]", "member" : "zio.stream.ZChannel.serviceWith", "link" : "zio\/stream\/ZChannel$.html#serviceWith[Service]:zio.stream.ZChannel.ServiceWithPartiallyApplied[Service]", "kind" : "def"}, {"label" : "serviceAt", "tail" : "(): ServiceAtPartiallyApplied[Service]", "member" : "zio.stream.ZChannel.serviceAt", "link" : "zio\/stream\/ZChannel$.html#serviceAt[Service]:zio.stream.ZChannel.ServiceAtPartiallyApplied[Service]", "kind" : "def"}, {"label" : "service", "tail" : "(arg0: Tag[Service], trace: Trace): ZChannel[Service, Any, Any, Any, Nothing, Nothing, Service]", "member" : "zio.stream.ZChannel.service", "link" : "zio\/stream\/ZChannel$.html#service[Service](implicitevidence$1:zio.Tag[Service],implicittrace:zio.Trace):zio.stream.ZChannel[Service,Any,Any,Any,Nothing,Nothing,Service]", "kind" : "def"}, {"label" : "refailCause", "tail" : "(cause: Cause[E]): ZChannel[Any, Any, Any, Any, E, Nothing, Nothing]", "member" : "zio.stream.ZChannel.refailCause", "link" : "zio\/stream\/ZChannel$.html#refailCause[E](cause:zio.Cause[E]):zio.stream.ZChannel[Any,Any,Any,Any,E,Nothing,Nothing]", "kind" : "def"}, {"label" : "read", "tail" : "(trace: Trace): ZChannel[Any, Any, In, Any, None.type, Nothing, In]", "member" : "zio.stream.ZChannel.read", "link" : "zio\/stream\/ZChannel$.html#read[In](implicittrace:zio.Trace):zio.stream.ZChannel[Any,Any,In,Any,None.type,Nothing,In]", "kind" : "def"}, {"label" : "readOrFail", "tail" : "(e: => E)(trace: Trace): ZChannel[Any, Any, In, Any, E, Nothing, In]", "member" : "zio.stream.ZChannel.readOrFail", "link" : "zio\/stream\/ZChannel$.html#readOrFail[E,In](e:=>E)(implicittrace:zio.Trace):zio.stream.ZChannel[Any,Any,In,Any,E,Nothing,In]", "kind" : "def"}, {"label" : "readWith", "tail" : "(in: (InElem) => ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone], error: (InErr) => ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone], done: (InDone) => ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone])(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone]", "member" : "zio.stream.ZChannel.readWith", "link" : "zio\/stream\/ZChannel$.html#readWith[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone](in:InElem=>zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone],error:InErr=>zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone],done:InDone=>zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone])(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone]", "kind" : "def"}, {"label" : "readWithCause", "tail" : "(in: (InElem) => ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone], halt: (Cause[InErr]) => ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone], done: (InDone) => ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone])(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone]", "member" : "zio.stream.ZChannel.readWithCause", "link" : "zio\/stream\/ZChannel$.html#readWithCause[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone](in:InElem=>zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone],halt:zio.Cause[InErr]=>zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone],done:InDone=>zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone])(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone]", "kind" : "def"}, {"label" : "provideLayer", "tail" : "(layer: ZLayer[Env0, OutErr, Env])(channel: => ZChannel[Env with Env1, InErr, InElem, InDone, OutErr, OutElem, OutDone])(ev: zio.EnvironmentTag[Env], tag: zio.EnvironmentTag[Env1], trace: Trace): ZChannel[Env0 with Env1, InErr, InElem, InDone, OutErr, OutElem, OutDone]", "member" : "zio.stream.ZChannel.provideLayer", "link" : "zio\/stream\/ZChannel$.html#provideLayer[Env0,Env,Env1,InErr,InElem,InDone,OutErr,OutElem,OutDone](layer:zio.ZLayer[Env0,OutErr,Env])(channel:=>zio.stream.ZChannel[EnvwithEnv1,InErr,InElem,InDone,OutErr,OutElem,OutDone])(implicitev:zio.EnvironmentTag[Env],implicittag:zio.EnvironmentTag[Env1],implicittrace:zio.Trace):zio.stream.ZChannel[Env0withEnv1,InErr,InElem,InDone,OutErr,OutElem,OutDone]", "kind" : "def"}, {"label" : "never", "tail" : "(trace: Trace): ZChannel[Any, Any, Any, Any, Nothing, Nothing, Nothing]", "member" : "zio.stream.ZChannel.never", "link" : "zio\/stream\/ZChannel$.html#never(implicittrace:zio.Trace):zio.stream.ZChannel[Any,Any,Any,Any,Nothing,Nothing,Nothing]", "kind" : "final def"}, {"label" : "mergeAllWith", "tail" : "(channels: ZChannel[Env, InErr, InElem, InDone, OutErr, ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone], OutDone], n: => Int, bufferSize: => Int, mergeStrategy: BackPressure.type)(f: (OutDone, OutDone) => OutDone)(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone]", "member" : "zio.stream.ZChannel.mergeAllWith", "link" : "zio\/stream\/ZChannel$.html#mergeAllWith[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone](channels:zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone],OutDone],n:=>Int,bufferSize:=>Int,mergeStrategy:zio.stream.ZChannel.MergeStrategy.BackPressure.type)(f:(OutDone,OutDone)=>OutDone)(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone]", "kind" : "def"}, {"label" : "mergeAllWith", "tail" : "(channels: ZChannel[Env, InErr, InElem, InDone, OutErr, ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone], OutDone], n: => Int, bufferSize: => Int, mergeStrategy: => MergeStrategy)(f: (OutDone, OutDone) => OutDone)(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone]", "member" : "zio.stream.ZChannel.mergeAllWith", "link" : "zio\/stream\/ZChannel$.html#mergeAllWith[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone](channels:zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone],OutDone],n:=>Int,bufferSize:=>Int,mergeStrategy:=>zio.stream.ZChannel.MergeStrategy)(f:(OutDone,OutDone)=>OutDone)(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone]", "kind" : "def"}, {"label" : "mergeAllUnboundedWith", "tail" : "(channels: => ZChannel[Env, InErr, InElem, InDone, OutErr, ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone], OutDone])(f: (OutDone, OutDone) => OutDone)(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone]", "member" : "zio.stream.ZChannel.mergeAllUnboundedWith", "link" : "zio\/stream\/ZChannel$.html#mergeAllUnboundedWith[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone](channels:=>zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone],OutDone])(f:(OutDone,OutDone)=>OutDone)(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone]", "kind" : "def"}, {"label" : "mergeAllUnbounded", "tail" : "(channels: => ZChannel[Env, InErr, InElem, InDone, OutErr, ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, Any], Any])(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, Any]", "member" : "zio.stream.ZChannel.mergeAllUnbounded", "link" : "zio\/stream\/ZChannel$.html#mergeAllUnbounded[Env,InErr,InElem,InDone,OutErr,OutElem](channels:=>zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,Any],Any])(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,Any]", "kind" : "def"}, {"label" : "mergeAll", "tail" : "(channels: => ZChannel[Env, InErr, InElem, InDone, OutErr, ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, Any], Any], n: => Int, bufferSize: => Int, mergeStrategy: => MergeStrategy)(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, Any]", "member" : "zio.stream.ZChannel.mergeAll", "link" : "zio\/stream\/ZChannel$.html#mergeAll[Env,InErr,InElem,InDone,OutErr,OutElem](channels:=>zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,Any],Any],n:=>Int,bufferSize:=>Int,mergeStrategy:=>zio.stream.ZChannel.MergeStrategy)(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,Any]", "kind" : "def"}, {"label" : "scopedWith", "tail" : "(f: (Scope) => ZIO[R, E, A])(trace: Trace): ZChannel[R, Any, Any, Any, E, A, Any]", "member" : "zio.stream.ZChannel.scopedWith", "link" : "zio\/stream\/ZChannel$.html#scopedWith[R,E,A](f:zio.Scope=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.stream.ZChannel[R,Any,Any,Any,E,A,Any]", "kind" : "def"}, {"label" : "scoped", "tail" : "(): ScopedPartiallyApplied[R]", "member" : "zio.stream.ZChannel.scoped", "link" : "zio\/stream\/ZChannel$.html#scoped[R]:zio.stream.ZChannel.ScopedPartiallyApplied[R]", "kind" : "def"}, {"label" : "interruptAs", "tail" : "(fiberId: => FiberId)(trace: Trace): ZChannel[Any, Any, Any, Any, Nothing, Nothing, Nothing]", "member" : "zio.stream.ZChannel.interruptAs", "link" : "zio\/stream\/ZChannel$.html#interruptAs(fiberId:=>zio.FiberId)(implicittrace:zio.Trace):zio.stream.ZChannel[Any,Any,Any,Any,Nothing,Nothing,Nothing]", "kind" : "def"}, {"label" : "identity", "tail" : "(trace: Trace): ZChannel[Any, Err, Elem, Done, Err, Elem, Done]", "member" : "zio.stream.ZChannel.identity", "link" : "zio\/stream\/ZChannel$.html#identity[Err,Elem,Done](implicittrace:zio.Trace):zio.stream.ZChannel[Any,Err,Elem,Done,Err,Elem,Done]", "kind" : "def"}, {"label" : "failCause", "tail" : "(cause: => Cause[E])(trace: Trace): ZChannel[Any, Any, Any, Any, E, Nothing, Nothing]", "member" : "zio.stream.ZChannel.failCause", "link" : "zio\/stream\/ZChannel$.html#failCause[E](cause:=>zio.Cause[E])(implicittrace:zio.Trace):zio.stream.ZChannel[Any,Any,Any,Any,E,Nothing,Nothing]", "kind" : "def"}, {"label" : "fromZIO", "tail" : "(zio: => ZIO[R, E, A])(trace: Trace): ZChannel[R, Any, Any, Any, E, Nothing, A]", "member" : "zio.stream.ZChannel.fromZIO", "link" : "zio\/stream\/ZChannel$.html#fromZIO[R,E,A](zio:=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.stream.ZChannel[R,Any,Any,Any,E,Nothing,A]", "kind" : "def"}, {"label" : "fromQueue", "tail" : "(queue: => Dequeue[Either[Exit[Err, Done], Elem]])(trace: Trace): ZChannel[Any, Any, Any, Any, Err, Elem, Done]", "member" : "zio.stream.ZChannel.fromQueue", "link" : "zio\/stream\/ZChannel$.html#fromQueue[Err,Done,Elem](queue:=>zio.Dequeue[Either[zio.Exit[Err,Done],Elem]])(implicittrace:zio.Trace):zio.stream.ZChannel[Any,Any,Any,Any,Err,Elem,Done]", "kind" : "def"}, {"label" : "fromOption", "tail" : "(option: => Option[A])(trace: Trace): ZChannel[Any, Any, Any, Any, None.type, Nothing, A]", "member" : "zio.stream.ZChannel.fromOption", "link" : "zio\/stream\/ZChannel$.html#fromOption[A](option:=>Option[A])(implicittrace:zio.Trace):zio.stream.ZChannel[Any,Any,Any,Any,None.type,Nothing,A]", "kind" : "def"}, {"label" : "fromHubScoped", "tail" : "(hub: => Hub[Either[Exit[Err, Done], Elem]])(trace: Trace): ZIO[Scope, Nothing, ZChannel[Any, Any, Any, Any, Err, Elem, Done]]", "member" : "zio.stream.ZChannel.fromHubScoped", "link" : "zio\/stream\/ZChannel$.html#fromHubScoped[Err,Done,Elem](hub:=>zio.Hub[Either[zio.Exit[Err,Done],Elem]])(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,zio.stream.ZChannel[Any,Any,Any,Any,Err,Elem,Done]]", "kind" : "def"}, {"label" : "fromHub", "tail" : "(hub: => Hub[Either[Exit[Err, Done], Elem]])(trace: Trace): ZChannel[Any, Any, Any, Any, Err, Elem, Done]", "member" : "zio.stream.ZChannel.fromHub", "link" : "zio\/stream\/ZChannel$.html#fromHub[Err,Done,Elem](hub:=>zio.Hub[Either[zio.Exit[Err,Done],Elem]])(implicittrace:zio.Trace):zio.stream.ZChannel[Any,Any,Any,Any,Err,Elem,Done]", "kind" : "def"}, {"label" : "fromEither", "tail" : "(either: => Either[E, A])(trace: Trace): ZChannel[Any, Any, Any, Any, E, Nothing, A]", "member" : "zio.stream.ZChannel.fromEither", "link" : "zio\/stream\/ZChannel$.html#fromEither[E,A](either:=>Either[E,A])(implicittrace:zio.Trace):zio.stream.ZChannel[Any,Any,Any,Any,E,Nothing,A]", "kind" : "def"}, {"label" : "fail", "tail" : "(e: => E)(trace: Trace): ZChannel[Any, Any, Any, Any, E, Nothing, Nothing]", "member" : "zio.stream.ZChannel.fail", "link" : "zio\/stream\/ZChannel$.html#fail[E](e:=>E)(implicittrace:zio.Trace):zio.stream.ZChannel[Any,Any,Any,Any,E,Nothing,Nothing]", "kind" : "def"}, {"label" : "environmentWithZIO", "tail" : "(): EnvironmentWithZIOPartiallyApplied[Env]", "member" : "zio.stream.ZChannel.environmentWithZIO", "link" : "zio\/stream\/ZChannel$.html#environmentWithZIO[Env]:zio.stream.ZChannel.EnvironmentWithZIOPartiallyApplied[Env]", "kind" : "def"}, {"label" : "environmentWithChannel", "tail" : "(): EnvironmentWithChannelPartiallyApplied[Env]", "member" : "zio.stream.ZChannel.environmentWithChannel", "link" : "zio\/stream\/ZChannel$.html#environmentWithChannel[Env]:zio.stream.ZChannel.EnvironmentWithChannelPartiallyApplied[Env]", "kind" : "def"}, {"label" : "environmentWith", "tail" : "(): EnvironmentWithPartiallyApplied[Env]", "member" : "zio.stream.ZChannel.environmentWith", "link" : "zio\/stream\/ZChannel$.html#environmentWith[Env]:zio.stream.ZChannel.EnvironmentWithPartiallyApplied[Env]", "kind" : "def"}, {"label" : "environment", "tail" : "(trace: Trace): ZChannel[Env, Any, Any, Any, Nothing, Nothing, ZEnvironment[Env]]", "member" : "zio.stream.ZChannel.environment", "link" : "zio\/stream\/ZChannel$.html#environment[Env](implicittrace:zio.Trace):zio.stream.ZChannel[Env,Any,Any,Any,Nothing,Nothing,zio.ZEnvironment[Env]]", "kind" : "def"}, {"label" : "writeChunk", "tail" : "(outs: Chunk[Out])(trace: Trace): ZChannel[Any, Any, Any, Any, Nothing, Out, Unit]", "member" : "zio.stream.ZChannel.writeChunk", "link" : "zio\/stream\/ZChannel$.html#writeChunk[Out](outs:zio.Chunk[Out])(implicittrace:zio.Trace):zio.stream.ZChannel[Any,Any,Any,Any,Nothing,Out,Unit]", "kind" : "def"}, {"label" : "writeAll", "tail" : "(outs: Out*)(trace: Trace): ZChannel[Any, Any, Any, Any, Nothing, Out, Unit]", "member" : "zio.stream.ZChannel.writeAll", "link" : "zio\/stream\/ZChannel$.html#writeAll[Out](outs:Out*)(implicittrace:zio.Trace):zio.stream.ZChannel[Any,Any,Any,Any,Nothing,Out,Unit]", "kind" : "def"}, {"label" : "write", "tail" : "(out: Out)(trace: Trace): ZChannel[Any, Any, Any, Any, Nothing, Out, Unit]", "member" : "zio.stream.ZChannel.write", "link" : "zio\/stream\/ZChannel$.html#write[Out](out:Out)(implicittrace:zio.Trace):zio.stream.ZChannel[Any,Any,Any,Any,Nothing,Out,Unit]", "kind" : "def"}, {"label" : "succeedWith", "tail" : "(f: (ZEnvironment[R]) => Z)(trace: Trace): ZChannel[R, Any, Any, Any, Nothing, Nothing, Z]", "member" : "zio.stream.ZChannel.succeedWith", "link" : "zio\/stream\/ZChannel$.html#succeedWith[R,Z](f:zio.ZEnvironment[R]=>Z)(implicittrace:zio.Trace):zio.stream.ZChannel[R,Any,Any,Any,Nothing,Nothing,Z]", "kind" : "def"}, {"label" : "succeedNow", "tail" : "(result: Z)(trace: Trace): ZChannel[Any, Any, Any, Any, Nothing, Nothing, Z]", "member" : "zio.stream.ZChannel.succeedNow", "link" : "zio\/stream\/ZChannel$.html#succeedNow[Z](result:Z)(implicittrace:zio.Trace):zio.stream.ZChannel[Any,Any,Any,Any,Nothing,Nothing,Z]", "kind" : "def"}, {"label" : "concatAllWith", "tail" : "(channels: => ZChannel[Env, InErr, InElem, InDone, OutErr, ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone], OutDone2])(f: (OutDone, OutDone) => OutDone, g: (OutDone, OutDone2) => OutDone3)(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone3]", "member" : "zio.stream.ZChannel.concatAllWith", "link" : "zio\/stream\/ZChannel$.html#concatAllWith[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone,OutDone2,OutDone3](channels:=>zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone],OutDone2])(f:(OutDone,OutDone)=>OutDone,g:(OutDone,OutDone2)=>OutDone3)(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone3]", "kind" : "def"}, {"label" : "concatAll", "tail" : "(channels: => ZChannel[Env, InErr, InElem, InDone, OutErr, ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, Any], Any])(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, Any]", "member" : "zio.stream.ZChannel.concatAll", "link" : "zio\/stream\/ZChannel$.html#concatAll[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone](channels:=>zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,Any],Any])(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,Any]", "kind" : "def"}, {"label" : "bufferChunk", "tail" : "(ref: => Ref[Chunk[InElem]])(trace: Trace): ZChannel[Any, InErr, Chunk[InElem], InDone, InErr, Chunk[InElem], InDone]", "member" : "zio.stream.ZChannel.bufferChunk", "link" : "zio\/stream\/ZChannel$.html#bufferChunk[InErr,InElem,InDone](ref:=>zio.Ref[zio.Chunk[InElem]])(implicittrace:zio.Trace):zio.stream.ZChannel[Any,InErr,zio.Chunk[InElem],InDone,InErr,zio.Chunk[InElem],InDone]", "kind" : "def"}, {"label" : "buffer", "tail" : "(empty: => InElem, isEmpty: (InElem) => Boolean, ref: => Ref[InElem])(trace: Trace): ZChannel[Any, InErr, InElem, InDone, InErr, InElem, InDone]", "member" : "zio.stream.ZChannel.buffer", "link" : "zio\/stream\/ZChannel$.html#buffer[InErr,InElem,InDone](empty:=>InElem,isEmpty:InElem=>Boolean,ref:=>zio.Ref[InElem])(implicittrace:zio.Trace):zio.stream.ZChannel[Any,InErr,InElem,InDone,InErr,InElem,InDone]", "kind" : "def"}, {"label" : "acquireReleaseExitWith", "tail" : "(acquire: => ZIO[Env, OutErr, Acquired])(release: (Acquired, Exit[OutErr, OutDone]) => URIO[Env, Any])(use: (Acquired) => ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem2, OutDone])(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem2, OutDone]", "member" : "zio.stream.ZChannel.acquireReleaseExitWith", "link" : "zio\/stream\/ZChannel$.html#acquireReleaseExitWith[Env,InErr,InElem,InDone,OutErr,Acquired,OutElem2,OutDone](acquire:=>zio.ZIO[Env,OutErr,Acquired])(release:(Acquired,zio.Exit[OutErr,OutDone])=>zio.URIO[Env,Any])(use:Acquired=>zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem2,OutDone])(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem2,OutDone]", "kind" : "def"}, {"label" : "acquireReleaseWith", "tail" : "(acquire: => ZIO[Env, OutErr, Acquired])(release: (Acquired) => URIO[Env, Any])(use: (Acquired) => ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem2, OutDone])(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem2, OutDone]", "member" : "zio.stream.ZChannel.acquireReleaseWith", "link" : "zio\/stream\/ZChannel$.html#acquireReleaseWith[Env,InErr,InElem,InDone,OutErr,Acquired,OutElem2,OutDone](acquire:=>zio.ZIO[Env,OutErr,Acquired])(release:Acquired=>zio.URIO[Env,Any])(use:Acquired=>zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem2,OutDone])(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem2,OutDone]", "kind" : "def"}, {"label" : "acquireReleaseOutExitWith", "tail" : "(acquire: => ZIO[Env, OutErr, Acquired])(release: (Acquired, Exit[Any, Any]) => URIO[Env, Any])(trace: Trace): ZChannel[Env, Any, Any, Any, OutErr, Acquired, Unit]", "member" : "zio.stream.ZChannel.acquireReleaseOutExitWith", "link" : "zio\/stream\/ZChannel$.html#acquireReleaseOutExitWith[Env,OutErr,Acquired](acquire:=>zio.ZIO[Env,OutErr,Acquired])(release:(Acquired,zio.Exit[Any,Any])=>zio.URIO[Env,Any])(implicittrace:zio.Trace):zio.stream.ZChannel[Env,Any,Any,Any,OutErr,Acquired,Unit]", "kind" : "def"}, {"label" : "acquireReleaseOutWith", "tail" : "(acquire: => ZIO[Env, OutErr, Acquired])(release: (Acquired) => URIO[Env, Any])(trace: Trace): ZChannel[Env, Any, Any, Any, OutErr, Acquired, Unit]", "member" : "zio.stream.ZChannel.acquireReleaseOutWith", "link" : "zio\/stream\/ZChannel$.html#acquireReleaseOutWith[Env,OutErr,Acquired](acquire:=>zio.ZIO[Env,OutErr,Acquired])(release:Acquired=>zio.URIO[Env,Any])(implicittrace:zio.Trace):zio.stream.ZChannel[Env,Any,Any,Any,OutErr,Acquired,Unit]", "kind" : "def"}, {"label" : "Fold", "tail" : "", "member" : "zio.stream.ZChannel.Fold", "link" : "zio\/stream\/ZChannel$.html#Fold", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/ZChannel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/ZChannel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/ZChannel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/ZChannel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/ZChannel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/ZChannel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/ZChannel$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/ZChannel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/ZChannel$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/ZChannel$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stream\/ZChannel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/ZChannel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZChannel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZChannel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZChannel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stream\/ZChannel$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/ZChannel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/ZChannel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/ZChannel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/stream\/ZChannel.html", "kind" : "trait", "members_trait" : [{"label" : "zipRight", "tail" : "(that: => ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone2])(trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone2]", "member" : "zio.stream.ZChannel.zipRight", "link" : "zio\/stream\/ZChannel.html#zipRight[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr1>:OutErr,OutElem1>:OutElem,OutDone2](that:=>zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone2])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone2]", "kind" : "final def"}, {"label" : "zipParRight", "tail" : "(that: => ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone2])(trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone2]", "member" : "zio.stream.ZChannel.zipParRight", "link" : "zio\/stream\/ZChannel.html#zipParRight[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr1>:OutErr,OutElem1>:OutElem,OutDone2](that:=>zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone2])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone2]", "kind" : "def"}, {"label" : "zipParLeft", "tail" : "(that: => ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone2])(trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone]", "member" : "zio.stream.ZChannel.zipParLeft", "link" : "zio\/stream\/ZChannel.html#zipParLeft[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr1>:OutErr,OutElem1>:OutElem,OutDone2](that:=>zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone2])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone]", "kind" : "final def"}, {"label" : "zipPar", "tail" : "(that: => ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone2])(zippable: Zippable[OutDone, OutDone2], trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, Out]", "member" : "zio.stream.ZChannel.zipPar", "link" : "zio\/stream\/ZChannel.html#zipPar[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr1>:OutErr,OutElem1>:OutElem,OutDone2](that:=>zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone2])(implicitzippable:zio.Zippable[OutDone,OutDone2],implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,zippable.Out]", "kind" : "final def"}, {"label" : "zipLeft", "tail" : "(that: => ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone2])(trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone]", "member" : "zio.stream.ZChannel.zipLeft", "link" : "zio\/stream\/ZChannel.html#zipLeft[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr1>:OutErr,OutElem1>:OutElem,OutDone2](that:=>zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone2])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone]", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: => ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone2])(zippable: Zippable[OutDone, OutDone2], trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, Out]", "member" : "zio.stream.ZChannel.zip", "link" : "zio\/stream\/ZChannel.html#zip[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr1>:OutErr,OutElem1>:OutElem,OutDone2](that:=>zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone2])(implicitzippable:zio.Zippable[OutDone,OutDone2],implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,zippable.Out]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(Out: <:<[OutElem, Chunk[Out]], InErr: <:<[Any, InErr], InElem: <:<[Any, InElem], InDone: <:<[Any, InDone], trace: Trace): ZStream[Env, OutErr, Out]", "member" : "zio.stream.ZChannel.toStream", "link" : "zio\/stream\/ZChannel.html#toStream[Out](implicitOut:OutElem<:<zio.Chunk[Out],implicitInErr:Any<:<InErr,implicitInElem:Any<:<InElem,implicitInDone:Any<:<InDone,implicittrace:zio.Trace):zio.stream.ZStream[Env,OutErr,Out]", "kind" : "final def"}, {"label" : "toSink", "tail" : "(In: <:<[Chunk[In], InElem], Out: <:<[OutElem, Chunk[Out]], InDone: <:<[Any, InDone], trace: Trace): ZSink[Env, OutErr, In, Out, OutDone]", "member" : "zio.stream.ZChannel.toSink", "link" : "zio\/stream\/ZChannel.html#toSink[In,Out](implicitIn:zio.Chunk[In]<:<InElem,implicitOut:OutElem<:<zio.Chunk[Out],implicitInDone:Any<:<InDone,implicittrace:zio.Trace):zio.stream.ZSink[Env,OutErr,In,Out,OutDone]", "kind" : "final def"}, {"label" : "toPipeline", "tail" : "(In: <:<[Chunk[In], InElem], Out: <:<[OutElem, Chunk[Out]], InDone: <:<[Any, InDone], trace: Trace): ZPipeline[Env, OutErr, In, Out]", "member" : "zio.stream.ZChannel.toPipeline", "link" : "zio\/stream\/ZChannel.html#toPipeline[In,Out](implicitIn:zio.Chunk[In]<:<InElem,implicitOut:OutElem<:<zio.Chunk[Out],implicitInDone:Any<:<InDone,implicittrace:zio.Trace):zio.stream.ZPipeline[Env,OutErr,In,Out]", "kind" : "final def"}, {"label" : "toPullInAlt", "tail" : "(scope: => Scope)(trace: Trace): ZIO[Env, Nothing, ZIO[Env, Either[OutErr, OutDone], OutElem]]", "member" : "zio.stream.ZChannel.toPullInAlt", "link" : "zio\/stream\/ZChannel.html#toPullInAlt(scope:=>zio.Scope)(implicittrace:zio.Trace):zio.ZIO[Env,Nothing,zio.ZIO[Env,Either[OutErr,OutDone],OutElem]]", "kind" : "final def"}, {"label" : "toPullIn", "tail" : "(scope: => Scope)(trace: Trace): ZIO[Env, Nothing, ZIO[Env, OutErr, Either[OutDone, OutElem]]]", "member" : "zio.stream.ZChannel.toPullIn", "link" : "zio\/stream\/ZChannel.html#toPullIn(scope:=>zio.Scope)(implicittrace:zio.Trace):zio.ZIO[Env,Nothing,zio.ZIO[Env,OutErr,Either[OutDone,OutElem]]]", "kind" : "final def"}, {"label" : "toPull", "tail" : "(trace: Trace): ZIO[Env with Scope, Nothing, ZIO[Env, OutErr, Either[OutDone, OutElem]]]", "member" : "zio.stream.ZChannel.toPull", "link" : "zio\/stream\/ZChannel.html#toPull(implicittrace:zio.Trace):zio.ZIO[Envwithzio.Scope,Nothing,zio.ZIO[Env,OutErr,Either[OutDone,OutElem]]]", "kind" : "final def"}, {"label" : "updateServiceAt", "tail" : "(): UpdateServiceAt[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone, Service]", "member" : "zio.stream.ZChannel.updateServiceAt", "link" : "zio\/stream\/ZChannel.html#updateServiceAt[Service]:zio.stream.ZChannel.UpdateServiceAt[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone,Service]", "kind" : "final def"}, {"label" : "updateService", "tail" : "(): UpdateService[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone, Service]", "member" : "zio.stream.ZChannel.updateService", "link" : "zio\/stream\/ZChannel.html#updateService[Service]:zio.stream.ZChannel.UpdateService[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone,Service]", "kind" : "final def"}, {"label" : "unit", "tail" : "(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, Unit]", "member" : "zio.stream.ZChannel.unit", "link" : "zio\/stream\/ZChannel.html#unit(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,Unit]", "kind" : "final def"}, {"label" : "runScoped", "tail" : "(ev1: <:<[Any, InElem], ev2: <:<[OutElem, Nothing], trace: Trace): ZIO[Env with Scope, OutErr, OutDone]", "member" : "zio.stream.ZChannel.runScoped", "link" : "zio\/stream\/ZChannel.html#runScoped(implicitev1:Any<:<InElem,implicitev2:OutElem<:<Nothing,implicittrace:zio.Trace):zio.ZIO[Envwithzio.Scope,OutErr,OutDone]", "kind" : "final def"}, {"label" : "runIn", "tail" : "(scope: => Scope)(ev1: <:<[Any, InElem], ev2: <:<[OutElem, Nothing], trace: Trace): ZIO[Env, OutErr, OutDone]", "member" : "zio.stream.ZChannel.runIn", "link" : "zio\/stream\/ZChannel.html#runIn(scope:=>zio.Scope)(implicitev1:Any<:<InElem,implicitev2:OutElem<:<Nothing,implicittrace:zio.Trace):zio.ZIO[Env,OutErr,OutDone]", "kind" : "final def"}, {"label" : "runDrain", "tail" : "(ev1: <:<[Any, InElem], trace: Trace): ZIO[Env, OutErr, OutDone]", "member" : "zio.stream.ZChannel.runDrain", "link" : "zio\/stream\/ZChannel.html#runDrain(implicitev1:Any<:<InElem,implicittrace:zio.Trace):zio.ZIO[Env,OutErr,OutDone]", "kind" : "final def"}, {"label" : "runCollect", "tail" : "(ev1: <:<[Any, InElem], trace: Trace): ZIO[Env, OutErr, (Chunk[OutElem], OutDone)]", "member" : "zio.stream.ZChannel.runCollect", "link" : "zio\/stream\/ZChannel.html#runCollect(implicitev1:Any<:<InElem,implicittrace:zio.Trace):zio.ZIO[Env,OutErr,(zio.Chunk[OutElem],OutDone)]", "kind" : "final def"}, {"label" : "run", "tail" : "(ev1: <:<[Any, InElem], ev2: <:<[OutElem, Nothing], trace: Trace): ZIO[Env, OutErr, OutDone]", "member" : "zio.stream.ZChannel.run", "link" : "zio\/stream\/ZChannel.html#run(implicitev1:Any<:<InElem,implicitev2:OutElem<:<Nothing,implicittrace:zio.Trace):zio.ZIO[Env,OutErr,OutDone]", "kind" : "final def"}, {"label" : "repeated", "tail" : "(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, Nothing]", "member" : "zio.stream.ZChannel.repeated", "link" : "zio\/stream\/ZChannel.html#repeated(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,Nothing]", "kind" : "final def"}, {"label" : "provideSomeLayer", "tail" : "(): ProvideSomeLayer[Env0, Env, InErr, InElem, InDone, OutErr, OutElem, OutDone]", "member" : "zio.stream.ZChannel.provideSomeLayer", "link" : "zio\/stream\/ZChannel.html#provideSomeLayer[Env0]:zio.stream.ZChannel.ProvideSomeLayer[Env0,Env,InErr,InElem,InDone,OutErr,OutElem,OutDone]", "kind" : "final def"}, {"label" : "provideSomeEnvironment", "tail" : "(f: (ZEnvironment[Env0]) => ZEnvironment[Env])(trace: Trace): ZChannel[Env0, InErr, InElem, InDone, OutErr, OutElem, OutDone]", "member" : "zio.stream.ZChannel.provideSomeEnvironment", "link" : "zio\/stream\/ZChannel.html#provideSomeEnvironment[Env0](f:zio.ZEnvironment[Env0]=>zio.ZEnvironment[Env])(implicittrace:zio.Trace):zio.stream.ZChannel[Env0,InErr,InElem,InDone,OutErr,OutElem,OutDone]", "kind" : "final def"}, {"label" : "provideLayer", "tail" : "(layer: => ZLayer[Env0, OutErr1, Env])(trace: Trace): ZChannel[Env0, InErr, InElem, InDone, OutErr1, OutElem, OutDone]", "member" : "zio.stream.ZChannel.provideLayer", "link" : "zio\/stream\/ZChannel.html#provideLayer[OutErr1>:OutErr,Env0](layer:=>zio.ZLayer[Env0,OutErr1,Env])(implicittrace:zio.Trace):zio.stream.ZChannel[Env0,InErr,InElem,InDone,OutErr1,OutElem,OutDone]", "kind" : "final def"}, {"label" : "provideEnvironment", "tail" : "(env: => ZEnvironment[Env])(trace: Trace): ZChannel[Any, InErr, InElem, InDone, OutErr, OutElem, OutDone]", "member" : "zio.stream.ZChannel.provideEnvironment", "link" : "zio\/stream\/ZChannel.html#provideEnvironment(env:=>zio.ZEnvironment[Env])(implicittrace:zio.Trace):zio.stream.ZChannel[Any,InErr,InElem,InDone,OutErr,OutElem,OutDone]", "kind" : "final def"}, {"label" : "pipeToOrFail", "tail" : "(that: => ZChannel[Env1, Nothing, OutElem, OutDone, OutErr1, OutElem2, OutDone2])(trace: Trace): ZChannel[Env1, InErr, InElem, InDone, OutErr1, OutElem2, OutDone2]", "member" : "zio.stream.ZChannel.pipeToOrFail", "link" : "zio\/stream\/ZChannel.html#pipeToOrFail[Env1<:Env,OutErr1>:OutErr,OutElem2,OutDone2](that:=>zio.stream.ZChannel[Env1,Nothing,OutElem,OutDone,OutErr1,OutElem2,OutDone2])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr,InElem,InDone,OutErr1,OutElem2,OutDone2]", "kind" : "final def"}, {"label" : "pipeTo", "tail" : "(that: => ZChannel[Env1, OutErr, OutElem, OutDone, OutErr2, OutElem2, OutDone2])(trace: Trace): ZChannel[Env1, InErr, InElem, InDone, OutErr2, OutElem2, OutDone2]", "member" : "zio.stream.ZChannel.pipeTo", "link" : "zio\/stream\/ZChannel.html#pipeTo[Env1<:Env,OutErr2,OutElem2,OutDone2](that:=>zio.stream.ZChannel[Env1,OutErr,OutElem,OutDone,OutErr2,OutElem2,OutDone2])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr,InElem,InDone,OutErr2,OutElem2,OutDone2]", "kind" : "final def"}, {"label" : "orDieWith", "tail" : "(f: (OutErr) => Throwable)(trace: Trace): ZChannel[Env, InErr, InElem, InDone, Nothing, OutElem, OutDone]", "member" : "zio.stream.ZChannel.orDieWith", "link" : "zio\/stream\/ZChannel.html#orDieWith(f:OutErr=>Throwable)(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,Nothing,OutElem,OutDone]", "kind" : "final def"}, {"label" : "orDie", "tail" : "(ev: <:<[OutErr, Throwable], trace: Trace): ZChannel[Env, InErr, InElem, InDone, Nothing, OutElem, OutDone]", "member" : "zio.stream.ZChannel.orDie", "link" : "zio\/stream\/ZChannel.html#orDie(implicitev:OutErr<:<Throwable,implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,Nothing,OutElem,OutDone]", "kind" : "final def"}, {"label" : "never", "tail" : "(trace: Trace): ZChannel[Any, Any, Any, Any, Nothing, Nothing, Nothing]", "member" : "zio.stream.ZChannel.never", "link" : "zio\/stream\/ZChannel.html#never(implicittrace:zio.Trace):zio.stream.ZChannel[Any,Any,Any,Any,Nothing,Nothing,Nothing]", "kind" : "final def"}, {"label" : "mergeWith", "tail" : "(that: ZChannel[Env1, InErr1, InElem1, InDone1, OutErr2, OutElem1, OutDone2])(leftDone: (Exit[OutErr, OutDone]) => MergeDecision[Env1, OutErr2, OutDone2, OutErr3, OutDone3], rightDone: (Exit[OutErr2, OutDone2]) => MergeDecision[Env1, OutErr, OutDone, OutErr3, OutDone3])(trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr3, OutElem1, OutDone3]", "member" : "zio.stream.ZChannel.mergeWith", "link" : "zio\/stream\/ZChannel.html#mergeWith[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr2,OutErr3,OutElem1>:OutElem,OutDone2,OutDone3](that:zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr2,OutElem1,OutDone2])(leftDone:zio.Exit[OutErr,OutDone]=>zio.stream.ZChannel.MergeDecision[Env1,OutErr2,OutDone2,OutErr3,OutDone3],rightDone:zio.Exit[OutErr2,OutDone2]=>zio.stream.ZChannel.MergeDecision[Env1,OutErr,OutDone,OutErr3,OutDone3])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr3,OutElem1,OutDone3]", "kind" : "final def"}, {"label" : "mergeOutWith", "tail" : "(n: => Int)(f: (OutDone1, OutDone1) => OutDone1)(ev: <:<[OutElem, ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem2, OutDone1]], trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem2, OutDone1]", "member" : "zio.stream.ZChannel.mergeOutWith", "link" : "zio\/stream\/ZChannel.html#mergeOutWith[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr1>:OutErr,OutElem2,OutDone1>:OutDone](n:=>Int)(f:(OutDone1,OutDone1)=>OutDone1)(implicitev:OutElem<:<zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem2,OutDone1],implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem2,OutDone1]", "kind" : "final def"}, {"label" : "mergeOut", "tail" : "(n: => Int)(ev: <:<[OutElem, ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem2, Any]], trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem2, Any]", "member" : "zio.stream.ZChannel.mergeOut", "link" : "zio\/stream\/ZChannel.html#mergeOut[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr1>:OutErr,OutElem2](n:=>Int)(implicitev:OutElem<:<zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem2,Any],implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem2,Any]", "kind" : "final def"}, {"label" : "mergeMap", "tail" : "(n: => Int, bufferSize: => Int, mergeStrategy: => MergeStrategy)(f: (OutElem) => ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem2, Any])(trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem2, Any]", "member" : "zio.stream.ZChannel.mergeMap", "link" : "zio\/stream\/ZChannel.html#mergeMap[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr1>:OutErr,OutElem2](n:=>Int,bufferSize:=>Int,mergeStrategy:=>zio.stream.ZChannel.MergeStrategy)(f:OutElem=>zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem2,Any])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem2,Any]", "kind" : "final def"}, {"label" : "mapOutZIOParUnordered", "tail" : "(n: Int, bufferSize: Int)(f: (OutElem) => ZIO[Env1, OutErr1, OutElem2])(trace: Trace): ZChannel[Env1, InErr, InElem, InDone, OutErr1, OutElem2, OutDone]", "member" : "zio.stream.ZChannel.mapOutZIOParUnordered", "link" : "zio\/stream\/ZChannel.html#mapOutZIOParUnordered[Env1<:Env,OutErr1>:OutErr,OutElem2](n:Int,bufferSize:Int)(f:OutElem=>zio.ZIO[Env1,OutErr1,OutElem2])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr,InElem,InDone,OutErr1,OutElem2,OutDone]", "kind" : "final def"}, {"label" : "mapOutZIOPar", "tail" : "(n: Int, bufferSize: Int)(f: (OutElem) => ZIO[Env1, OutErr1, OutElem2])(trace: Trace): ZChannel[Env1, InErr, InElem, InDone, OutErr1, OutElem2, OutDone]", "member" : "zio.stream.ZChannel.mapOutZIOPar", "link" : "zio\/stream\/ZChannel.html#mapOutZIOPar[Env1<:Env,OutErr1>:OutErr,OutElem2](n:Int,bufferSize:Int)(f:OutElem=>zio.ZIO[Env1,OutErr1,OutElem2])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr,InElem,InDone,OutErr1,OutElem2,OutDone]", "kind" : "final def"}, {"label" : "mapOutZIOPar", "tail" : "(n: Int)(f: (OutElem) => ZIO[Env1, OutErr1, OutElem2])(trace: Trace): ZChannel[Env1, InErr, InElem, InDone, OutErr1, OutElem2, OutDone]", "member" : "zio.stream.ZChannel.mapOutZIOPar", "link" : "zio\/stream\/ZChannel.html#mapOutZIOPar[Env1<:Env,OutErr1>:OutErr,OutElem2](n:Int)(f:OutElem=>zio.ZIO[Env1,OutErr1,OutElem2])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr,InElem,InDone,OutErr1,OutElem2,OutDone]", "kind" : "final def"}, {"label" : "mapOutZIO", "tail" : "(f: (OutElem) => ZIO[Env1, OutErr1, OutElem2])(trace: Trace): ZChannel[Env1, InErr, InElem, InDone, OutErr1, OutElem2, OutDone]", "member" : "zio.stream.ZChannel.mapOutZIO", "link" : "zio\/stream\/ZChannel.html#mapOutZIO[Env1<:Env,OutErr1>:OutErr,OutElem2](f:OutElem=>zio.ZIO[Env1,OutErr1,OutElem2])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr,InElem,InDone,OutErr1,OutElem2,OutDone]", "kind" : "final def"}, {"label" : "mapOut", "tail" : "(f: (OutElem) => OutElem2)(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem2, OutDone]", "member" : "zio.stream.ZChannel.mapOut", "link" : "zio\/stream\/ZChannel.html#mapOut[OutElem2](f:OutElem=>OutElem2)(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem2,OutDone]", "kind" : "final def"}, {"label" : "mapZIO", "tail" : "(f: (OutDone) => ZIO[Env1, OutErr1, OutDone2])(trace: Trace): ZChannel[Env1, InErr, InElem, InDone, OutErr1, OutElem, OutDone2]", "member" : "zio.stream.ZChannel.mapZIO", "link" : "zio\/stream\/ZChannel.html#mapZIO[Env1<:Env,OutErr1>:OutErr,OutDone2](f:OutDone=>zio.ZIO[Env1,OutErr1,OutDone2])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr,InElem,InDone,OutErr1,OutElem,OutDone2]", "kind" : "final def"}, {"label" : "mapErrorZIO", "tail" : "(f: (OutErr) => URIO[Env1, OutErr2])(trace: Trace): ZChannel[Env1, InErr, InElem, InDone, OutErr2, OutElem, OutDone]", "member" : "zio.stream.ZChannel.mapErrorZIO", "link" : "zio\/stream\/ZChannel.html#mapErrorZIO[Env1<:Env,OutErr2](f:OutErr=>zio.URIO[Env1,OutErr2])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr,InElem,InDone,OutErr2,OutElem,OutDone]", "kind" : "final def"}, {"label" : "mapErrorCause", "tail" : "(f: (Cause[OutErr]) => Cause[OutErr2])(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr2, OutElem, OutDone]", "member" : "zio.stream.ZChannel.mapErrorCause", "link" : "zio\/stream\/ZChannel.html#mapErrorCause[OutErr2](f:zio.Cause[OutErr]=>zio.Cause[OutErr2])(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr2,OutElem,OutDone]", "kind" : "final def"}, {"label" : "mapError", "tail" : "(f: (OutErr) => OutErr2)(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr2, OutElem, OutDone]", "member" : "zio.stream.ZChannel.mapError", "link" : "zio\/stream\/ZChannel.html#mapError[OutErr2](f:OutErr=>OutErr2)(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr2,OutElem,OutDone]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (OutDone) => OutDone2)(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone2]", "member" : "zio.stream.ZChannel.map", "link" : "zio\/stream\/ZChannel.html#map[OutDone2](f:OutDone=>OutDone2)(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone2]", "kind" : "final def"}, {"label" : "orElse", "tail" : "(that: => ZChannel[Env1, InErr1, InElem1, InDone1, OutErr2, OutElem1, OutDone1])(trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr2, OutElem1, OutDone1]", "member" : "zio.stream.ZChannel.orElse", "link" : "zio\/stream\/ZChannel.html#orElse[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr2,OutElem1>:OutElem,OutDone1>:OutDone](that:=>zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr2,OutElem1,OutDone1])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr2,OutElem1,OutDone1]", "kind" : "final def"}, {"label" : "foldCauseChannel", "tail" : "(onErr: (Cause[OutErr]) => ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone1], onSucc: (OutDone) => ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone1])(trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone1]", "member" : "zio.stream.ZChannel.foldCauseChannel", "link" : "zio\/stream\/ZChannel.html#foldCauseChannel[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr1,OutElem1>:OutElem,OutDone1](onErr:zio.Cause[OutErr]=>zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone1],onSucc:OutDone=>zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone1])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone1]", "kind" : "final def"}, {"label" : "foldChannel", "tail" : "(onErr: (OutErr) => ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone1], onSucc: (OutDone) => ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone1])(trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone1]", "member" : "zio.stream.ZChannel.foldChannel", "link" : "zio\/stream\/ZChannel.html#foldChannel[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr1,OutElem1>:OutElem,OutDone1](onErr:OutErr=>zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone1],onSucc:OutDone=>zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone1])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone1]", "kind" : "final def"}, {"label" : "flatten", "tail" : "(ev: <:<[OutDone, ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone2]], trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone2]", "member" : "zio.stream.ZChannel.flatten", "link" : "zio\/stream\/ZChannel.html#flatten[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr1>:OutErr,OutElem1>:OutElem,OutDone2](implicitev:OutDone<:<zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone2],implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone2]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (OutDone) => ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone2])(trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone2]", "member" : "zio.stream.ZChannel.flatMap", "link" : "zio\/stream\/ZChannel.html#flatMap[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr1>:OutErr,OutElem1>:OutElem,OutDone2](f:OutDone=>zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone2])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone2]", "kind" : "final def"}, {"label" : "ensuring", "tail" : "(finalizer: => URIO[Env1, Any])(trace: Trace): ZChannel[Env1, InErr, InElem, InDone, OutErr, OutElem, OutDone]", "member" : "zio.stream.ZChannel.ensuring", "link" : "zio\/stream\/ZChannel.html#ensuring[Env1<:Env](finalizer:=>zio.URIO[Env1,Any])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr,InElem,InDone,OutErr,OutElem,OutDone]", "kind" : "final def"}, {"label" : "ensuringWith", "tail" : "(finalizer: (Exit[OutErr, OutDone]) => URIO[Env1, Any])(trace: Trace): ZChannel[Env1, InErr, InElem, InDone, OutErr, OutElem, OutDone]", "member" : "zio.stream.ZChannel.ensuringWith", "link" : "zio\/stream\/ZChannel.html#ensuringWith[Env1<:Env](finalizer:zio.Exit[OutErr,OutDone]=>zio.URIO[Env1,Any])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr,InElem,InDone,OutErr,OutElem,OutDone]", "kind" : "final def"}, {"label" : "emitCollect", "tail" : "(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, (Chunk[OutElem], OutDone), Unit]", "member" : "zio.stream.ZChannel.emitCollect", "link" : "zio\/stream\/ZChannel.html#emitCollect(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,(zio.Chunk[OutElem],OutDone),Unit]", "kind" : "final def"}, {"label" : "interruptWhen", "tail" : "(promise: Promise[OutErr1, OutDone1])(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr1, OutElem, OutDone1]", "member" : "zio.stream.ZChannel.interruptWhen", "link" : "zio\/stream\/ZChannel.html#interruptWhen[OutErr1>:OutErr,OutDone1>:OutDone](promise:zio.Promise[OutErr1,OutDone1])(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr1,OutElem,OutDone1]", "kind" : "final def"}, {"label" : "interruptWhen", "tail" : "(io: ZIO[Env1, OutErr1, OutDone1])(trace: Trace): ZChannel[Env1, InErr, InElem, InDone, OutErr1, OutElem, OutDone1]", "member" : "zio.stream.ZChannel.interruptWhen", "link" : "zio\/stream\/ZChannel.html#interruptWhen[Env1<:Env,OutErr1>:OutErr,OutDone1>:OutDone](io:zio.ZIO[Env1,OutErr1,OutDone1])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr,InElem,InDone,OutErr1,OutElem,OutDone1]", "kind" : "final def"}, {"label" : "drain", "tail" : "(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, Nothing, OutDone]", "member" : "zio.stream.ZChannel.drain", "link" : "zio\/stream\/ZChannel.html#drain(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,Nothing,OutDone]", "kind" : "final def"}, {"label" : "collectElements", "tail" : "(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, Nothing, (Chunk[OutElem], OutDone)]", "member" : "zio.stream.ZChannel.collectElements", "link" : "zio\/stream\/ZChannel.html#collectElements(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,Nothing,(zio.Chunk[OutElem],OutDone)]", "kind" : "final def"}, {"label" : "contramapZIO", "tail" : "(f: (InDone0) => ZIO[Env1, InErr, InDone])(trace: Trace): ZChannel[Env1, InErr, InElem, InDone0, OutErr, OutElem, OutDone]", "member" : "zio.stream.ZChannel.contramapZIO", "link" : "zio\/stream\/ZChannel.html#contramapZIO[InDone0,Env1<:Env](f:InDone0=>zio.ZIO[Env1,InErr,InDone])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr,InElem,InDone0,OutErr,OutElem,OutDone]", "kind" : "final def"}, {"label" : "contramapInZIO", "tail" : "(f: (InElem0) => ZIO[Env1, InErr, InElem])(trace: Trace): ZChannel[Env1, InErr, InElem0, InDone, OutErr, OutElem, OutDone]", "member" : "zio.stream.ZChannel.contramapInZIO", "link" : "zio\/stream\/ZChannel.html#contramapInZIO[InElem0,Env1<:Env](f:InElem0=>zio.ZIO[Env1,InErr,InElem])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr,InElem0,InDone,OutErr,OutElem,OutDone]", "kind" : "final def"}, {"label" : "contramapIn", "tail" : "(f: (InElem0) => InElem)(trace: Trace): ZChannel[Env, InErr, InElem0, InDone, OutErr, OutElem, OutDone]", "member" : "zio.stream.ZChannel.contramapIn", "link" : "zio\/stream\/ZChannel.html#contramapIn[InElem0](f:InElem0=>InElem)(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem0,InDone,OutErr,OutElem,OutDone]", "kind" : "final def"}, {"label" : "contramapErrorZIO", "tail" : "(f: (InErr0) => ZIO[Env1, InErr, InDone])(trace: Trace): ZChannel[Env1, InErr0, InElem, InDone, OutErr, OutElem, OutDone]", "member" : "zio.stream.ZChannel.contramapErrorZIO", "link" : "zio\/stream\/ZChannel.html#contramapErrorZIO[InErr0,Env1<:Env](f:InErr0=>zio.ZIO[Env1,InErr,InDone])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr0,InElem,InDone,OutErr,OutElem,OutDone]", "kind" : "final def"}, {"label" : "contramapError", "tail" : "(f: (InErr0) => InErr)(trace: Trace): ZChannel[Env, InErr0, InElem, InDone, OutErr, OutElem, OutDone]", "member" : "zio.stream.ZChannel.contramapError", "link" : "zio\/stream\/ZChannel.html#contramapError[InErr0](f:InErr0=>InErr)(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr0,InElem,InDone,OutErr,OutElem,OutDone]", "kind" : "final def"}, {"label" : "contramap", "tail" : "(f: (InDone0) => InDone)(trace: Trace): ZChannel[Env, InErr, InElem, InDone0, OutErr, OutElem, OutDone]", "member" : "zio.stream.ZChannel.contramap", "link" : "zio\/stream\/ZChannel.html#contramap[InDone0](f:InDone0=>InDone)(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone0,OutErr,OutElem,OutDone]", "kind" : "final def"}, {"label" : "concatOut", "tail" : "(ev: <:<[OutElem, ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem2, Any]], trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem2, Any]", "member" : "zio.stream.ZChannel.concatOut", "link" : "zio\/stream\/ZChannel.html#concatOut[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr1>:OutErr,OutElem2](implicitev:OutElem<:<zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem2,Any],implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem2,Any]", "kind" : "final def"}, {"label" : "collect", "tail" : "(f: PartialFunction[OutElem, OutElem2])(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem2, OutDone]", "member" : "zio.stream.ZChannel.collect", "link" : "zio\/stream\/ZChannel.html#collect[OutElem2](f:PartialFunction[OutElem,OutElem2])(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem2,OutDone]", "kind" : "final def"}, {"label" : "concatMapWith", "tail" : "(f: (OutElem) => ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem2, OutDone2])(g: (OutDone2, OutDone2) => OutDone2, h: (OutDone2, OutDone) => OutDone3)(trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem2, OutDone3]", "member" : "zio.stream.ZChannel.concatMapWith", "link" : "zio\/stream\/ZChannel.html#concatMapWith[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr1>:OutErr,OutElem2,OutDone2,OutDone3](f:OutElem=>zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem2,OutDone2])(g:(OutDone2,OutDone2)=>OutDone2,h:(OutDone2,OutDone)=>OutDone3)(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem2,OutDone3]", "kind" : "final def"}, {"label" : "concatMap", "tail" : "(f: (OutElem) => ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem2, Any])(trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem2, Any]", "member" : "zio.stream.ZChannel.concatMap", "link" : "zio\/stream\/ZChannel.html#concatMap[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr1>:OutErr,OutElem2](f:OutElem=>zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem2,Any])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem2,Any]", "kind" : "final def"}, {"label" : "catchAllCause", "tail" : "(f: (Cause[OutErr]) => ZChannel[Env1, InErr1, InElem1, InDone1, OutErr2, OutElem1, OutDone1])(trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr2, OutElem1, OutDone1]", "member" : "zio.stream.ZChannel.catchAllCause", "link" : "zio\/stream\/ZChannel.html#catchAllCause[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr2,OutElem1>:OutElem,OutDone1>:OutDone](f:zio.Cause[OutErr]=>zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr2,OutElem1,OutDone1])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr2,OutElem1,OutDone1]", "kind" : "final def"}, {"label" : "catchAll", "tail" : "(f: (OutErr) => ZChannel[Env1, InErr1, InElem1, InDone1, OutErr2, OutElem1, OutDone1])(trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr2, OutElem1, OutDone1]", "member" : "zio.stream.ZChannel.catchAll", "link" : "zio\/stream\/ZChannel.html#catchAll[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr2,OutElem1>:OutElem,OutDone1>:OutDone](f:OutErr=>zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr2,OutElem1,OutDone1])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr2,OutElem1,OutDone1]", "kind" : "final def"}, {"label" : "as", "tail" : "(z2: => OutDone2)(trace: Trace): ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone2]", "member" : "zio.stream.ZChannel.as", "link" : "zio\/stream\/ZChannel.html#as[OutDone2](z2:=>OutDone2)(implicittrace:zio.Trace):zio.stream.ZChannel[Env,InErr,InElem,InDone,OutErr,OutElem,OutDone2]", "kind" : "final def"}, {"label" : ">>>", "tail" : "(that: => ZChannel[Env1, OutErr, OutElem, OutDone, OutErr2, OutElem2, OutDone2])(trace: Trace): ZChannel[Env1, InErr, InElem, InDone, OutErr2, OutElem2, OutDone2]", "member" : "zio.stream.ZChannel.>>>", "link" : "zio\/stream\/ZChannel.html#>>>[Env1<:Env,OutErr2,OutElem2,OutDone2](that:=>zio.stream.ZChannel[Env1,OutErr,OutElem,OutDone,OutErr2,OutElem2,OutDone2])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr,InElem,InDone,OutErr2,OutElem2,OutDone2]", "kind" : "final def"}, {"label" : "<*", "tail" : "(that: => ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone2])(trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone]", "member" : "zio.stream.ZChannel.<*", "link" : "zio\/stream\/ZChannel.html#<*[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr1>:OutErr,OutElem1>:OutElem,OutDone2](that:=>zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone2])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone]", "kind" : "final def"}, {"label" : "*>", "tail" : "(that: => ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone2])(trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone2]", "member" : "zio.stream.ZChannel.*>", "link" : "zio\/stream\/ZChannel.html#*>[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr1>:OutErr,OutElem1>:OutElem,OutDone2](that:=>zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone2])(implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone2]", "kind" : "final def"}, {"label" : "<*>", "tail" : "(that: => ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, OutDone2])(zippable: Zippable[OutDone, OutDone2], trace: Trace): ZChannel[Env1, InErr1, InElem1, InDone1, OutErr1, OutElem1, Out]", "member" : "zio.stream.ZChannel.<*>", "link" : "zio\/stream\/ZChannel.html#<*>[Env1<:Env,InErr1<:InErr,InElem1<:InElem,InDone1<:InDone,OutErr1>:OutErr,OutElem1>:OutElem,OutDone2](that:=>zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,OutDone2])(implicitzippable:zio.Zippable[OutDone,OutDone2],implicittrace:zio.Trace):zio.stream.ZChannel[Env1,InErr1,InElem1,InDone1,OutErr1,OutElem1,zippable.Out]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/ZChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/ZChannel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/ZChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/ZChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/ZChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/ZChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/ZChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/ZChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/ZChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/ZChannel.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stream\/ZChannel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/ZChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stream\/ZChannel.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/ZChannel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/ZChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/ZChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A ZChannel[Env, InErr, InElem, InDone, OutErr, OutElem, OutDone] is a nexusof I\/O operations, which supports both reading and writing."}, {"name" : "zio.stream.ZPipeline", "shortDescription" : "A ZPipeline[Env, Err, In, Out] is a polymorphic stream transformer.", "object" : "zio\/stream\/ZPipeline$.html", "members_class" : [{"label" : "zipWithPreviousAndNext", "tail" : "(trace: Trace): ZPipeline[Env, Err, In, (Option[Out], Out, Option[Out])]", "member" : "zio.stream.ZPipeline.zipWithPreviousAndNext", "link" : "zio\/stream\/ZPipeline.html#zipWithPreviousAndNext(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,(Option[Out],Out,Option[Out])]", "kind" : "def"}, {"label" : "zipWithPrevious", "tail" : "(trace: Trace): ZPipeline[Env, Err, In, (Option[Out], Out)]", "member" : "zio.stream.ZPipeline.zipWithPrevious", "link" : "zio\/stream\/ZPipeline.html#zipWithPrevious(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,(Option[Out],Out)]", "kind" : "def"}, {"label" : "zipWithNext", "tail" : "(trace: Trace): ZPipeline[Env, Err, In, (Out, Option[Out])]", "member" : "zio.stream.ZPipeline.zipWithNext", "link" : "zio\/stream\/ZPipeline.html#zipWithNext(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,(Out,Option[Out])]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(trace: Trace): ZPipeline[Env, Err, In, (Out, Long)]", "member" : "zio.stream.ZPipeline.zipWithIndex", "link" : "zio\/stream\/ZPipeline.html#zipWithIndex(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,(Out,Long)]", "kind" : "def"}, {"label" : "toChannel", "tail" : "(): ZChannel[Env, ZNothing, Chunk[In], Any, Err, Chunk[Out], Any]", "member" : "zio.stream.ZPipeline.toChannel", "link" : "zio\/stream\/ZPipeline.html#toChannel:zio.stream.ZChannel[Env,zio.ZNothing,zio.Chunk[In],Any,Err,zio.Chunk[Out],Any]", "kind" : "def"}, {"label" : "throttleShapeZIO", "tail" : "(units: => Long, duration: => zio.Duration, burst: => Long)(costFn: (Chunk[Out]) => ZIO[Env2, Err2, Long])(trace: Trace): ZPipeline[Env2, Err2, In, Out]", "member" : "zio.stream.ZPipeline.throttleShapeZIO", "link" : "zio\/stream\/ZPipeline.html#throttleShapeZIO[Env2<:Env,Err2>:Err](units:=>Long,duration:=>zio.Duration,burst:=>Long)(costFn:zio.Chunk[Out]=>zio.ZIO[Env2,Err2,Long])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env2,Err2,In,Out]", "kind" : "def"}, {"label" : "throttleShape", "tail" : "(units: => Long, duration: => zio.Duration, burst: Long)(costFn: (Chunk[Out]) => Long)(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.throttleShape", "link" : "zio\/stream\/ZPipeline.html#throttleShape(units:=>Long,duration:=>zio.Duration,burst:Long)(costFn:zio.Chunk[Out]=>Long)(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "throttleEnforceZIO", "tail" : "(units: => Long, duration: => zio.Duration, burst: => Long)(costFn: (Chunk[Out]) => ZIO[Env2, Err2, Long])(trace: Trace): ZPipeline[Env2, Err2, In, Out]", "member" : "zio.stream.ZPipeline.throttleEnforceZIO", "link" : "zio\/stream\/ZPipeline.html#throttleEnforceZIO[Env2<:Env,Err2>:Err](units:=>Long,duration:=>zio.Duration,burst:=>Long)(costFn:zio.Chunk[Out]=>zio.ZIO[Env2,Err2,Long])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env2,Err2,In,Out]", "kind" : "def"}, {"label" : "throttleEnforce", "tail" : "(units: Long, duration: => zio.Duration, burst: => Long)(costFn: (Chunk[Out]) => Long)(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.throttleEnforce", "link" : "zio\/stream\/ZPipeline.html#throttleEnforce(units:Long,duration:=>zio.Duration,burst:=>Long)(costFn:zio.Chunk[Out]=>Long)(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "tap", "tail" : "(f: (Out) => ZIO[Env2, Err2, Any])(trace: Trace): ZPipeline[Env2, Err2, In, Out]", "member" : "zio.stream.ZPipeline.tap", "link" : "zio\/stream\/ZPipeline.html#tap[Env2<:Env,Err2>:Err](f:Out=>zio.ZIO[Env2,Err2,Any])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env2,Err2,In,Out]", "kind" : "def"}, {"label" : "takeWhileZIO", "tail" : "(f: (Out) => ZIO[Env1, Err1, Boolean])(trace: Trace): ZPipeline[Env1, Err1, In, Out]", "member" : "zio.stream.ZPipeline.takeWhileZIO", "link" : "zio\/stream\/ZPipeline.html#takeWhileZIO[Env1<:Env,Err1>:Err](f:Out=>zio.ZIO[Env1,Err1,Boolean])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env1,Err1,In,Out]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(f: (Out) => Boolean)(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.takeWhile", "link" : "zio\/stream\/ZPipeline.html#takeWhile(f:Out=>Boolean)(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "takeUntilZIO", "tail" : "(f: (Out) => ZIO[Env1, Err1, Boolean])(trace: Trace): ZPipeline[Env1, Err1, In, Out]", "member" : "zio.stream.ZPipeline.takeUntilZIO", "link" : "zio\/stream\/ZPipeline.html#takeUntilZIO[Env1<:Env,Err1>:Err](f:Out=>zio.ZIO[Env1,Err1,Boolean])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env1,Err1,In,Out]", "kind" : "def"}, {"label" : "takeUntil", "tail" : "(f: (Out) => Boolean)(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.takeUntil", "link" : "zio\/stream\/ZPipeline.html#takeUntil(f:Out=>Boolean)(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "take", "tail" : "(n: => Long)(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.take", "link" : "zio\/stream\/ZPipeline.html#take(n:=>Long)(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "orDieWith", "tail" : "(f: (Err) => Throwable)(trace: Trace): ZPipeline[Env, Nothing, In, Out]", "member" : "zio.stream.ZPipeline.orDieWith", "link" : "zio\/stream\/ZPipeline.html#orDieWith(f:Err=>Throwable)(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Nothing,In,Out]", "kind" : "def"}, {"label" : "orDie", "tail" : "(ev: <:<[Err, Throwable], trace: Trace): ZPipeline[Env, Nothing, In, Out]", "member" : "zio.stream.ZPipeline.orDie", "link" : "zio\/stream\/ZPipeline.html#orDie(implicitev:Err<:<Throwable,implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Nothing,In,Out]", "kind" : "def"}, {"label" : "mapErrorZIO", "tail" : "(f: (Err) => URIO[Env1, Err2])(trace: Trace): ZPipeline[Env1, Err2, In, Out]", "member" : "zio.stream.ZPipeline.mapErrorZIO", "link" : "zio\/stream\/ZPipeline.html#mapErrorZIO[Env1<:Env,Err2](f:Err=>zio.URIO[Env1,Err2])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env1,Err2,In,Out]", "kind" : "def"}, {"label" : "mapErrorCause", "tail" : "(f: (Cause[Err]) => Cause[Err2])(trace: Trace): ZPipeline[Env, Err2, In, Out]", "member" : "zio.stream.ZPipeline.mapErrorCause", "link" : "zio\/stream\/ZPipeline.html#mapErrorCause[Err2](f:zio.Cause[Err]=>zio.Cause[Err2])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err2,In,Out]", "kind" : "def"}, {"label" : "mapError", "tail" : "(f: (Err) => Err2)(trace: Trace): ZPipeline[Env, Err2, In, Out]", "member" : "zio.stream.ZPipeline.mapError", "link" : "zio\/stream\/ZPipeline.html#mapError[Err2](f:Err=>Err2)(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err2,In,Out]", "kind" : "def"}, {"label" : "mapZIOParUnordered", "tail" : "(n: => Int, bufferSize: => Int)(f: (Out) => ZIO[Env2, Err2, Out2])(trace: Trace): ZPipeline[Env2, Err2, In, Out2]", "member" : "zio.stream.ZPipeline.mapZIOParUnordered", "link" : "zio\/stream\/ZPipeline.html#mapZIOParUnordered[Env2<:Env,Err2>:Err,Out2](n:=>Int,bufferSize:=>Int)(f:Out=>zio.ZIO[Env2,Err2,Out2])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env2,Err2,In,Out2]", "kind" : "def"}, {"label" : "mapZIOParUnordered", "tail" : "(n: => Int)(f: (Out) => ZIO[Env2, Err2, Out2])(trace: Trace): ZPipeline[Env2, Err2, In, Out2]", "member" : "zio.stream.ZPipeline.mapZIOParUnordered", "link" : "zio\/stream\/ZPipeline.html#mapZIOParUnordered[Env2<:Env,Err2>:Err,Out2](n:=>Int)(f:Out=>zio.ZIO[Env2,Err2,Out2])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env2,Err2,In,Out2]", "kind" : "def"}, {"label" : "mapZIOPar", "tail" : "(n: => Int, bufferSize: => Int)(f: (Out) => ZIO[Env2, Err2, Out2])(trace: Trace): ZPipeline[Env2, Err2, In, Out2]", "member" : "zio.stream.ZPipeline.mapZIOPar", "link" : "zio\/stream\/ZPipeline.html#mapZIOPar[Env2<:Env,Err2>:Err,Out2](n:=>Int,bufferSize:=>Int)(f:Out=>zio.ZIO[Env2,Err2,Out2])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env2,Err2,In,Out2]", "kind" : "def"}, {"label" : "mapZIOPar", "tail" : "(n: => Int)(f: (Out) => ZIO[Env2, Err2, Out2])(trace: Trace): ZPipeline[Env2, Err2, In, Out2]", "member" : "zio.stream.ZPipeline.mapZIOPar", "link" : "zio\/stream\/ZPipeline.html#mapZIOPar[Env2<:Env,Err2>:Err,Out2](n:=>Int)(f:Out=>zio.ZIO[Env2,Err2,Out2])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env2,Err2,In,Out2]", "kind" : "def"}, {"label" : "mapZIO", "tail" : "(f: (Out) => ZIO[Env2, Err2, Out2])(trace: Trace): ZPipeline[Env2, Err2, In, Out2]", "member" : "zio.stream.ZPipeline.mapZIO", "link" : "zio\/stream\/ZPipeline.html#mapZIO[Env2<:Env,Err2>:Err,Out2](f:Out=>zio.ZIO[Env2,Err2,Out2])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env2,Err2,In,Out2]", "kind" : "def"}, {"label" : "mapStream", "tail" : "(f: (Out) => ZStream[Env2, Err2, Out2])(trace: Trace): ZPipeline[Env2, Err2, In, Out2]", "member" : "zio.stream.ZPipeline.mapStream", "link" : "zio\/stream\/ZPipeline.html#mapStream[Env2<:Env,Err2>:Err,Out2](f:Out=>zio.stream.ZStream[Env2,Err2,Out2])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env2,Err2,In,Out2]", "kind" : "def"}, {"label" : "mapChunksZIO", "tail" : "(f: (Chunk[Out]) => ZIO[Env2, Err2, Chunk[Out2]])(trace: Trace): ZPipeline[Env2, Err2, In, Out2]", "member" : "zio.stream.ZPipeline.mapChunksZIO", "link" : "zio\/stream\/ZPipeline.html#mapChunksZIO[Env2<:Env,Err2>:Err,Out2](f:zio.Chunk[Out]=>zio.ZIO[Env2,Err2,zio.Chunk[Out2]])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env2,Err2,In,Out2]", "kind" : "def"}, {"label" : "mapChunks", "tail" : "(f: (Chunk[Out]) => Chunk[Out2])(trace: Trace): ZPipeline[Env, Err, In, Out2]", "member" : "zio.stream.ZPipeline.mapChunks", "link" : "zio\/stream\/ZPipeline.html#mapChunks[Out2](f:zio.Chunk[Out]=>zio.Chunk[Out2])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out2]", "kind" : "def"}, {"label" : "mapAccumZIO", "tail" : "(s: => State)(f: (State, Out) => ZIO[Env2, Err2, (State, Out2)])(trace: Trace): ZPipeline[Env2, Err2, In, Out2]", "member" : "zio.stream.ZPipeline.mapAccumZIO", "link" : "zio\/stream\/ZPipeline.html#mapAccumZIO[Env2<:Env,Err2>:Err,State,Out2](s:=>State)(f:(State,Out)=>zio.ZIO[Env2,Err2,(State,Out2)])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env2,Err2,In,Out2]", "kind" : "def"}, {"label" : "mapAccum", "tail" : "(s: => State)(f: (State, Out) => (State, Out2))(trace: Trace): ZPipeline[Env, Err, In, Out2]", "member" : "zio.stream.ZPipeline.mapAccum", "link" : "zio\/stream\/ZPipeline.html#mapAccum[State,Out2](s:=>State)(f:(State,Out)=>(State,Out2))(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out2]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Out) => Out2)(trace: Trace): ZPipeline[Env, Err, In, Out2]", "member" : "zio.stream.ZPipeline.map", "link" : "zio\/stream\/ZPipeline.html#map[Out2](f:Out=>Out2)(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out2]", "kind" : "def"}, {"label" : "intersperse", "tail" : "(start: => Out2, middle: => Out2, end: => Out2)(trace: Trace): ZPipeline[Env, Err, In, Out2]", "member" : "zio.stream.ZPipeline.intersperse", "link" : "zio\/stream\/ZPipeline.html#intersperse[Out2>:Out](start:=>Out2,middle:=>Out2,end:=>Out2)(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out2]", "kind" : "def"}, {"label" : "intersperse", "tail" : "(middle: => Out2)(trace: Trace): ZPipeline[Env, Err, In, Out2]", "member" : "zio.stream.ZPipeline.intersperse", "link" : "zio\/stream\/ZPipeline.html#intersperse[Out2>:Out](middle:=>Out2)(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out2]", "kind" : "def"}, {"label" : "groupedWithin", "tail" : "(chunkSize: => Int, within: => zio.Duration)(trace: Trace): ZPipeline[Env, Err, In, Chunk[Out]]", "member" : "zio.stream.ZPipeline.groupedWithin", "link" : "zio\/stream\/ZPipeline.html#groupedWithin(chunkSize:=>Int,within:=>zio.Duration)(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,zio.Chunk[Out]]", "kind" : "def"}, {"label" : "grouped", "tail" : "(chunkSize: => Int)(trace: Trace): ZPipeline[Env, Err, In, Chunk[Out]]", "member" : "zio.stream.ZPipeline.grouped", "link" : "zio\/stream\/ZPipeline.html#grouped(chunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,zio.Chunk[Out]]", "kind" : "def"}, {"label" : "flattenTake", "tail" : "(ev: <:<[Out, Take[Err1, Out2]], trace: Trace): ZPipeline[Env, Err1, In, Out2]", "member" : "zio.stream.ZPipeline.flattenTake", "link" : "zio\/stream\/ZPipeline.html#flattenTake[Err1>:Err,Out2](implicitev:Out<:<zio.stream.Take[Err1,Out2],implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err1,In,Out2]", "kind" : "def"}, {"label" : "flattenIterables", "tail" : "(ev: <:<[Out, Iterable[Out2]], trace: Trace): ZPipeline[Env, Err, In, Out2]", "member" : "zio.stream.ZPipeline.flattenIterables", "link" : "zio\/stream\/ZPipeline.html#flattenIterables[Out2](implicitev:Out<:<Iterable[Out2],implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out2]", "kind" : "def"}, {"label" : "flattenExit", "tail" : "(ev: <:<[Out, Exit[Err2, Out2]], trace: Trace): ZPipeline[Env, Err2, In, Out2]", "member" : "zio.stream.ZPipeline.flattenExit", "link" : "zio\/stream\/ZPipeline.html#flattenExit[Err2,Out2](implicitev:Out<:<zio.Exit[Err2,Out2],implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err2,In,Out2]", "kind" : "def"}, {"label" : "flattenChunks", "tail" : "(ev: <:<[Out, Chunk[Out2]], trace: Trace): ZPipeline[Env, Err, In, Out2]", "member" : "zio.stream.ZPipeline.flattenChunks", "link" : "zio\/stream\/ZPipeline.html#flattenChunks[Out2](implicitev:Out<:<zio.Chunk[Out2],implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out2]", "kind" : "def"}, {"label" : "filterZIO", "tail" : "(f: (Out) => ZIO[Env2, Err2, Boolean])(trace: Trace): ZPipeline[Env2, Err2, In, Out]", "member" : "zio.stream.ZPipeline.filterZIO", "link" : "zio\/stream\/ZPipeline.html#filterZIO[Env2<:Env,Err2>:Err](f:Out=>zio.ZIO[Env2,Err2,Boolean])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env2,Err2,In,Out]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (Out) => Boolean)(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.filter", "link" : "zio\/stream\/ZPipeline.html#filter(f:Out=>Boolean)(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "dropWhileZIO", "tail" : "(f: (Out) => ZIO[Env1, Err1, Boolean])(trace: Trace): ZPipeline[Env1, Err1, In, Out]", "member" : "zio.stream.ZPipeline.dropWhileZIO", "link" : "zio\/stream\/ZPipeline.html#dropWhileZIO[Env1<:Env,Err1>:Err](f:Out=>zio.ZIO[Env1,Err1,Boolean])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env1,Err1,In,Out]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(f: (Out) => Boolean)(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.dropWhile", "link" : "zio\/stream\/ZPipeline.html#dropWhile(f:Out=>Boolean)(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: => Int)(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.dropRight", "link" : "zio\/stream\/ZPipeline.html#dropRight(n:=>Int)(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "dropUntilZIO", "tail" : "(f: (Out) => ZIO[Env1, Err1, Boolean])(trace: Trace): ZPipeline[Env1, Err1, In, Out]", "member" : "zio.stream.ZPipeline.dropUntilZIO", "link" : "zio\/stream\/ZPipeline.html#dropUntilZIO[Env1<:Env,Err1>:Err](f:Out=>zio.ZIO[Env1,Err1,Boolean])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env1,Err1,In,Out]", "kind" : "def"}, {"label" : "dropUntil", "tail" : "(f: (Out) => Boolean)(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.dropUntil", "link" : "zio\/stream\/ZPipeline.html#dropUntil(f:Out=>Boolean)(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: => Int)(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.drop", "link" : "zio\/stream\/ZPipeline.html#drop(n:=>Int)(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "dimap", "tail" : "(f: (In2) => In, g: (Out) => Out2)(trace: Trace): ZPipeline[Env, Err, In2, Out2]", "member" : "zio.stream.ZPipeline.dimap", "link" : "zio\/stream\/ZPipeline.html#dimap[In2,Out2](f:In2=>In,g:Out=>Out2)(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In2,Out2]", "kind" : "def"}, {"label" : "drain", "tail" : "(trace: Trace): ZPipeline[Env, Err, In, Nothing]", "member" : "zio.stream.ZPipeline.drain", "link" : "zio\/stream\/ZPipeline.html#drain(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Nothing]", "kind" : "def"}, {"label" : "contramap", "tail" : "(f: (In2) => In)(trace: Trace): ZPipeline[Env, Err, In2, Out]", "member" : "zio.stream.ZPipeline.contramap", "link" : "zio\/stream\/ZPipeline.html#contramap[In2](f:In2=>In)(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In2,Out]", "kind" : "def"}, {"label" : "compose", "tail" : "(that: => ZPipeline[Env1, Err1, In2, In])(trace: Trace): ZPipeline[Env1, Err1, In2, Out]", "member" : "zio.stream.ZPipeline.compose", "link" : "zio\/stream\/ZPipeline.html#compose[Env1<:Env,Err1>:Err,In2](that:=>zio.stream.ZPipeline[Env1,Err1,In2,In])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env1,Err1,In2,Out]", "kind" : "def"}, {"label" : "collectWhileZIO", "tail" : "(pf: PartialFunction[Out, ZIO[Env2, Err2, Out2]])(trace: Trace): ZPipeline[Env2, Err2, In, Out2]", "member" : "zio.stream.ZPipeline.collectWhileZIO", "link" : "zio\/stream\/ZPipeline.html#collectWhileZIO[Env2<:Env,Err2>:Err,Out2](pf:PartialFunction[Out,zio.ZIO[Env2,Err2,Out2]])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env2,Err2,In,Out2]", "kind" : "def"}, {"label" : "collectWhileSuccess", "tail" : "(ev: <:<[Out, Exit[Err2, Out2]], trace: Trace): ZPipeline[Env, Err, In, Out2]", "member" : "zio.stream.ZPipeline.collectWhileSuccess", "link" : "zio\/stream\/ZPipeline.html#collectWhileSuccess[Err2,Out2](implicitev:Out<:<zio.Exit[Err2,Out2],implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out2]", "kind" : "def"}, {"label" : "collectWhileSome", "tail" : "(ev: <:<[Out, Option[Out2]], trace: Trace): ZPipeline[Env, Err, In, Out2]", "member" : "zio.stream.ZPipeline.collectWhileSome", "link" : "zio\/stream\/ZPipeline.html#collectWhileSome[Out2](implicitev:Out<:<Option[Out2],implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out2]", "kind" : "def"}, {"label" : "collectWhileRight", "tail" : "(ev: <:<[Out, Either[A, B]], trace: Trace): ZPipeline[Env, Err, In, B]", "member" : "zio.stream.ZPipeline.collectWhileRight", "link" : "zio\/stream\/ZPipeline.html#collectWhileRight[A,B](implicitev:Out<:<Either[A,B],implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,B]", "kind" : "def"}, {"label" : "collectWhileLeft", "tail" : "(ev: <:<[Out, Either[A, B]], trace: Trace): ZPipeline[Env, Err, In, A]", "member" : "zio.stream.ZPipeline.collectWhileLeft", "link" : "zio\/stream\/ZPipeline.html#collectWhileLeft[A,B](implicitev:Out<:<Either[A,B],implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,A]", "kind" : "def"}, {"label" : "collectWhile", "tail" : "(pf: PartialFunction[Out, Out2])(trace: Trace): ZPipeline[Env, Err, In, Out2]", "member" : "zio.stream.ZPipeline.collectWhile", "link" : "zio\/stream\/ZPipeline.html#collectWhile[Out2](pf:PartialFunction[Out,Out2])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out2]", "kind" : "def"}, {"label" : "collectRight", "tail" : "(ev: <:<[Out, Either[A, B]], trace: Trace): ZPipeline[Env, Err, In, B]", "member" : "zio.stream.ZPipeline.collectRight", "link" : "zio\/stream\/ZPipeline.html#collectRight[A,B](implicitev:Out<:<Either[A,B],implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,B]", "kind" : "def"}, {"label" : "collectSuccess", "tail" : "(ev: <:<[Out, Exit[L1, Out2]], trace: Trace): ZPipeline[Env, Err, In, Out2]", "member" : "zio.stream.ZPipeline.collectSuccess", "link" : "zio\/stream\/ZPipeline.html#collectSuccess[Out2,L1](implicitev:Out<:<zio.Exit[L1,Out2],implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out2]", "kind" : "def"}, {"label" : "collectSome", "tail" : "(ev: <:<[Out, Option[Out2]], trace: Trace): ZPipeline[Env, Err, In, Out2]", "member" : "zio.stream.ZPipeline.collectSome", "link" : "zio\/stream\/ZPipeline.html#collectSome[Out2](implicitev:Out<:<Option[Out2],implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out2]", "kind" : "def"}, {"label" : "collectLeft", "tail" : "(ev: <:<[Out, Either[A, B]], trace: Trace): ZPipeline[Env, Err, In, A]", "member" : "zio.stream.ZPipeline.collectLeft", "link" : "zio\/stream\/ZPipeline.html#collectLeft[A,B](implicitev:Out<:<Either[A,B],implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,A]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Out, Out2])(trace: Trace): ZPipeline[Env, Err, In, Out2]", "member" : "zio.stream.ZPipeline.collect", "link" : "zio\/stream\/ZPipeline.html#collect[Out2](pf:PartialFunction[Out,Out2])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out2]", "kind" : "def"}, {"label" : "chunks", "tail" : "(trace: Trace): ZPipeline[Env, Err, In, Chunk[Out]]", "member" : "zio.stream.ZPipeline.chunks", "link" : "zio\/stream\/ZPipeline.html#chunks(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,zio.Chunk[Out]]", "kind" : "def"}, {"label" : "changesWithZIO", "tail" : "(f: (Out, Out) => UIO[Boolean])(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.changesWithZIO", "link" : "zio\/stream\/ZPipeline.html#changesWithZIO(f:(Out,Out)=>zio.UIO[Boolean])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "changesWith", "tail" : "(f: (Out, Out) => Boolean)(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.changesWith", "link" : "zio\/stream\/ZPipeline.html#changesWith(f:(Out,Out)=>Boolean)(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "changes", "tail" : "(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.changes", "link" : "zio\/stream\/ZPipeline.html#changes(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "andThen", "tail" : "(that: => ZPipeline[Env1, Err1, Out, Out2])(trace: Trace): ZPipeline[Env1, Err1, In, Out2]", "member" : "zio.stream.ZPipeline.andThen", "link" : "zio\/stream\/ZPipeline.html#andThen[Env1<:Env,Err1>:Err,Out2](that:=>zio.stream.ZPipeline[Env1,Err1,Out,Out2])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env1,Err1,In,Out2]", "kind" : "def"}, {"label" : "aggregateAsyncWithinEither", "tail" : "(sink: ZSink[Env1, Err1, Out1, Out1, Out2], schedule: Schedule[Env1, Option[Out2], Out3])(trace: Trace): ZPipeline[Env1, Err1, In, Either[Out3, Out2]]", "member" : "zio.stream.ZPipeline.aggregateAsyncWithinEither", "link" : "zio\/stream\/ZPipeline.html#aggregateAsyncWithinEither[Env1<:Env,Err1>:Err,Out1>:Out,Out2,Out3](sink:zio.stream.ZSink[Env1,Err1,Out1,Out1,Out2],schedule:zio.Schedule[Env1,Option[Out2],Out3])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env1,Err1,In,Either[Out3,Out2]]", "kind" : "def"}, {"label" : "aggregateAsyncWithin", "tail" : "(sink: ZSink[Env1, Err1, Out1, Out1, Out2], schedule: Schedule[Env1, Option[Out2], Any])(trace: Trace): ZPipeline[Env1, Err1, In, Out2]", "member" : "zio.stream.ZPipeline.aggregateAsyncWithin", "link" : "zio\/stream\/ZPipeline.html#aggregateAsyncWithin[Env1<:Env,Err1>:Err,Out1>:Out,Out2](sink:zio.stream.ZSink[Env1,Err1,Out1,Out1,Out2],schedule:zio.Schedule[Env1,Option[Out2],Any])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env1,Err1,In,Out2]", "kind" : "def"}, {"label" : "aggregateAsync", "tail" : "(sink: ZSink[Env1, Err1, Out1, Out1, Out2])(trace: Trace): ZPipeline[Env1, Err1, In, Out2]", "member" : "zio.stream.ZPipeline.aggregateAsync", "link" : "zio\/stream\/ZPipeline.html#aggregateAsync[Env1<:Env,Err1>:Err,Out1>:Out,Out2](sink:zio.stream.ZSink[Env1,Err1,Out1,Out1,Out2])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env1,Err1,In,Out2]", "kind" : "def"}, {"label" : "<<<", "tail" : "(that: => ZPipeline[Env1, Err1, In2, In])(trace: Trace): ZPipeline[Env1, Err1, In2, Out]", "member" : "zio.stream.ZPipeline.<<<", "link" : "zio\/stream\/ZPipeline.html#<<<[Env1<:Env,Err1>:Err,In2](that:=>zio.stream.ZPipeline[Env1,Err1,In2,In])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env1,Err1,In2,Out]", "kind" : "def"}, {"label" : ">>>", "tail" : "(that: => ZSink[Env1, Err1, Out, Leftover, Out2])(trace: Trace): ZSink[Env1, Err1, In, Leftover, Out2]", "member" : "zio.stream.ZPipeline.>>>", "link" : "zio\/stream\/ZPipeline.html#>>>[Env1<:Env,Err1>:Err,Leftover,Out2](that:=>zio.stream.ZSink[Env1,Err1,Out,Leftover,Out2])(implicittrace:zio.Trace):zio.stream.ZSink[Env1,Err1,In,Leftover,Out2]", "kind" : "def"}, {"label" : ">>>", "tail" : "(that: => ZPipeline[Env1, Err1, Out, Out2])(trace: Trace): ZPipeline[Env1, Err1, In, Out2]", "member" : "zio.stream.ZPipeline.>>>", "link" : "zio\/stream\/ZPipeline.html#>>>[Env1<:Env,Err1>:Err,Out2](that:=>zio.stream.ZPipeline[Env1,Err1,Out,Out2])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env1,Err1,In,Out2]", "kind" : "def"}, {"label" : "apply", "tail" : "(stream: => ZStream[Env1, Err1, In])(trace: Trace): ZStream[Env1, Err1, Out]", "member" : "zio.stream.ZPipeline.apply", "link" : "zio\/stream\/ZPipeline.html#apply[Env1<:Env,Err1>:Err](stream:=>zio.stream.ZStream[Env1,Err1,In])(implicittrace:zio.Trace):zio.stream.ZStream[Env1,Err1,Out]", "kind" : "def"}, {"label" : "channel", "tail" : ": ZChannel[Env, ZNothing, Chunk[In], Any, Err, Chunk[Out], Any]", "member" : "zio.stream.ZPipeline.channel", "link" : "zio\/stream\/ZPipeline.html#channel:zio.stream.ZChannel[Env,zio.ZNothing,zio.Chunk[In],Any,Err,zio.Chunk[Out],Any]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/ZPipeline.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/ZPipeline.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/ZPipeline.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/ZPipeline.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/ZPipeline.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/ZPipeline.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/ZPipeline.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/ZPipeline.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/ZPipeline.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/ZPipeline.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stream\/ZPipeline.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/ZPipeline.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZPipeline.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZPipeline.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZPipeline.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stream\/ZPipeline.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/ZPipeline.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/ZPipeline.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/ZPipeline.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "UnwrapScopedPartiallyApplied", "tail" : "", "member" : "zio.stream.ZPipeline.UnwrapScopedPartiallyApplied", "link" : "zio\/stream\/ZPipeline$.html#UnwrapScopedPartiallyApplied[Env]extendsAnyVal", "kind" : "final class"}, {"label" : "ServiceWithPipelinePartiallyApplied", "tail" : "", "member" : "zio.stream.ZPipeline.ServiceWithPipelinePartiallyApplied", "link" : "zio\/stream\/ZPipeline$.html#ServiceWithPipelinePartiallyApplied[Service]extendsAnyVal", "kind" : "final class"}, {"label" : "EnvironmentWithPipelinePartiallyApplied", "tail" : "", "member" : "zio.stream.ZPipeline.EnvironmentWithPipelinePartiallyApplied", "link" : "zio\/stream\/ZPipeline$.html#EnvironmentWithPipelinePartiallyApplied[Env]extendsAnyVal", "kind" : "final class"}, {"label" : "zipWithPreviousAndNext", "tail" : "(trace: Trace): ZPipeline[Any, Nothing, In, (Option[In], In, Option[In])]", "member" : "zio.stream.ZPipeline.zipWithPreviousAndNext", "link" : "zio\/stream\/ZPipeline$.html#zipWithPreviousAndNext[In](implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,(Option[In],In,Option[In])]", "kind" : "def"}, {"label" : "zipWithPrevious", "tail" : "(trace: Trace): ZPipeline[Any, Nothing, In, (Option[In], In)]", "member" : "zio.stream.ZPipeline.zipWithPrevious", "link" : "zio\/stream\/ZPipeline$.html#zipWithPrevious[In](implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,(Option[In],In)]", "kind" : "def"}, {"label" : "zipWithNext", "tail" : "(trace: Trace): ZPipeline[Any, Nothing, In, (In, Option[In])]", "member" : "zio.stream.ZPipeline.zipWithNext", "link" : "zio\/stream\/ZPipeline$.html#zipWithNext[In](implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,(In,Option[In])]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(trace: Trace): ZPipeline[Any, Nothing, In, (In, Long)]", "member" : "zio.stream.ZPipeline.zipWithIndex", "link" : "zio\/stream\/ZPipeline$.html#zipWithIndex[In](implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,(In,Long)]", "kind" : "def"}, {"label" : "utf32WithBomEncode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, String, Byte]", "member" : "zio.stream.ZPipeline.utf32WithBomEncode", "link" : "zio\/stream\/ZPipeline$.html#utf32WithBomEncode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,String,Byte]", "kind" : "def"}, {"label" : "utf32Encode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, String, Byte]", "member" : "zio.stream.ZPipeline.utf32Encode", "link" : "zio\/stream\/ZPipeline$.html#utf32Encode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,String,Byte]", "kind" : "def"}, {"label" : "utf32LEWithBomEncode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, String, Byte]", "member" : "zio.stream.ZPipeline.utf32LEWithBomEncode", "link" : "zio\/stream\/ZPipeline$.html#utf32LEWithBomEncode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,String,Byte]", "kind" : "def"}, {"label" : "utf32LEEncode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, String, Byte]", "member" : "zio.stream.ZPipeline.utf32LEEncode", "link" : "zio\/stream\/ZPipeline$.html#utf32LEEncode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,String,Byte]", "kind" : "def"}, {"label" : "utf32BEWithBomEncode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, String, Byte]", "member" : "zio.stream.ZPipeline.utf32BEWithBomEncode", "link" : "zio\/stream\/ZPipeline$.html#utf32BEWithBomEncode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,String,Byte]", "kind" : "def"}, {"label" : "utf32BEEncode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, String, Byte]", "member" : "zio.stream.ZPipeline.utf32BEEncode", "link" : "zio\/stream\/ZPipeline$.html#utf32BEEncode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,String,Byte]", "kind" : "def"}, {"label" : "utf16WithBomEncode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, String, Byte]", "member" : "zio.stream.ZPipeline.utf16WithBomEncode", "link" : "zio\/stream\/ZPipeline$.html#utf16WithBomEncode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,String,Byte]", "kind" : "def"}, {"label" : "utf16Encode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, String, Byte]", "member" : "zio.stream.ZPipeline.utf16Encode", "link" : "zio\/stream\/ZPipeline$.html#utf16Encode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,String,Byte]", "kind" : "def"}, {"label" : "utf16LEWithBomEncode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, String, Byte]", "member" : "zio.stream.ZPipeline.utf16LEWithBomEncode", "link" : "zio\/stream\/ZPipeline$.html#utf16LEWithBomEncode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,String,Byte]", "kind" : "def"}, {"label" : "utf16LEEncode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, String, Byte]", "member" : "zio.stream.ZPipeline.utf16LEEncode", "link" : "zio\/stream\/ZPipeline$.html#utf16LEEncode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,String,Byte]", "kind" : "def"}, {"label" : "utf16BEWithBomEncode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, String, Byte]", "member" : "zio.stream.ZPipeline.utf16BEWithBomEncode", "link" : "zio\/stream\/ZPipeline$.html#utf16BEWithBomEncode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,String,Byte]", "kind" : "def"}, {"label" : "utf16BEEncode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, String, Byte]", "member" : "zio.stream.ZPipeline.utf16BEEncode", "link" : "zio\/stream\/ZPipeline$.html#utf16BEEncode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,String,Byte]", "kind" : "def"}, {"label" : "utf8WithBomEncode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, String, Byte]", "member" : "zio.stream.ZPipeline.utf8WithBomEncode", "link" : "zio\/stream\/ZPipeline$.html#utf8WithBomEncode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,String,Byte]", "kind" : "def"}, {"label" : "utf8Encode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, String, Byte]", "member" : "zio.stream.ZPipeline.utf8Encode", "link" : "zio\/stream\/ZPipeline$.html#utf8Encode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,String,Byte]", "kind" : "def"}, {"label" : "usASCIIEncode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, String, Byte]", "member" : "zio.stream.ZPipeline.usASCIIEncode", "link" : "zio\/stream\/ZPipeline$.html#usASCIIEncode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,String,Byte]", "kind" : "def"}, {"label" : "utf32LEDecode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, Byte, String]", "member" : "zio.stream.ZPipeline.utf32LEDecode", "link" : "zio\/stream\/ZPipeline$.html#utf32LEDecode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,Byte,String]", "kind" : "def"}, {"label" : "utf32BEDecode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, Byte, String]", "member" : "zio.stream.ZPipeline.utf32BEDecode", "link" : "zio\/stream\/ZPipeline$.html#utf32BEDecode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,Byte,String]", "kind" : "def"}, {"label" : "utf32Decode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, Byte, String]", "member" : "zio.stream.ZPipeline.utf32Decode", "link" : "zio\/stream\/ZPipeline$.html#utf32Decode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,Byte,String]", "kind" : "def"}, {"label" : "utf16LEDecode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, Byte, String]", "member" : "zio.stream.ZPipeline.utf16LEDecode", "link" : "zio\/stream\/ZPipeline$.html#utf16LEDecode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,Byte,String]", "kind" : "def"}, {"label" : "utf16BEDecode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, Byte, String]", "member" : "zio.stream.ZPipeline.utf16BEDecode", "link" : "zio\/stream\/ZPipeline$.html#utf16BEDecode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,Byte,String]", "kind" : "def"}, {"label" : "utf16Decode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, Byte, String]", "member" : "zio.stream.ZPipeline.utf16Decode", "link" : "zio\/stream\/ZPipeline$.html#utf16Decode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,Byte,String]", "kind" : "def"}, {"label" : "utf8Decode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, Byte, String]", "member" : "zio.stream.ZPipeline.utf8Decode", "link" : "zio\/stream\/ZPipeline$.html#utf8Decode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,Byte,String]", "kind" : "def"}, {"label" : "utfDecode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, Byte, String]", "member" : "zio.stream.ZPipeline.utfDecode", "link" : "zio\/stream\/ZPipeline$.html#utfDecode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,Byte,String]", "kind" : "def"}, {"label" : "usASCIIDecode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, Byte, String]", "member" : "zio.stream.ZPipeline.usASCIIDecode", "link" : "zio\/stream\/ZPipeline$.html#usASCIIDecode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,Byte,String]", "kind" : "def"}, {"label" : "unwrapScoped", "tail" : "(): UnwrapScopedPartiallyApplied[Env]", "member" : "zio.stream.ZPipeline.unwrapScoped", "link" : "zio\/stream\/ZPipeline$.html#unwrapScoped[Env]:zio.stream.ZPipeline.UnwrapScopedPartiallyApplied[Env]", "kind" : "def"}, {"label" : "unwrap", "tail" : "(zio: ZIO[Env, Err, ZPipeline[Env, Err, In, Out]])(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.unwrap", "link" : "zio\/stream\/ZPipeline$.html#unwrap[Env,Err,In,Out](zio:zio.ZIO[Env,Err,zio.stream.ZPipeline[Env,Err,In,Out]])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "throttleShapeZIO", "tail" : "(units: => Long, duration: => zio.Duration, burst: => Long)(costFn: (Chunk[In]) => ZIO[Env, Err, Long])(trace: Trace): ZPipeline[Env, Err, In, In]", "member" : "zio.stream.ZPipeline.throttleShapeZIO", "link" : "zio\/stream\/ZPipeline$.html#throttleShapeZIO[Env,Err,In](units:=>Long,duration:=>zio.Duration,burst:=>Long)(costFn:zio.Chunk[In]=>zio.ZIO[Env,Err,Long])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,In]", "kind" : "def"}, {"label" : "throttleShape", "tail" : "(units: => Long, duration: => zio.Duration, burst: Long)(costFn: (Chunk[In]) => Long)(trace: Trace): ZPipeline[Any, Nothing, In, In]", "member" : "zio.stream.ZPipeline.throttleShape", "link" : "zio\/stream\/ZPipeline$.html#throttleShape[In](units:=>Long,duration:=>zio.Duration,burst:Long)(costFn:zio.Chunk[In]=>Long)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,In]", "kind" : "def"}, {"label" : "throttleEnforceZIO", "tail" : "(units: => Long, duration: => zio.Duration, burst: => Long)(costFn: (Chunk[In]) => ZIO[Env, Err, Long])(trace: Trace): ZPipeline[Env, Err, In, In]", "member" : "zio.stream.ZPipeline.throttleEnforceZIO", "link" : "zio\/stream\/ZPipeline$.html#throttleEnforceZIO[Env,Err,In](units:=>Long,duration:=>zio.Duration,burst:=>Long)(costFn:zio.Chunk[In]=>zio.ZIO[Env,Err,Long])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,In]", "kind" : "def"}, {"label" : "throttleEnforce", "tail" : "(units: Long, duration: => zio.Duration, burst: => Long)(costFn: (Chunk[In]) => Long)(trace: Trace): ZPipeline[Any, Nothing, In, In]", "member" : "zio.stream.ZPipeline.throttleEnforce", "link" : "zio\/stream\/ZPipeline$.html#throttleEnforce[In](units:Long,duration:=>zio.Duration,burst:=>Long)(costFn:zio.Chunk[In]=>Long)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,In]", "kind" : "def"}, {"label" : "tap", "tail" : "(f: (In) => ZIO[Env, Err, Any])(trace: Trace): ZPipeline[Env, Err, In, In]", "member" : "zio.stream.ZPipeline.tap", "link" : "zio\/stream\/ZPipeline$.html#tap[Env,Err,In](f:In=>zio.ZIO[Env,Err,Any])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,In]", "kind" : "def"}, {"label" : "takeWhileZIO", "tail" : "(f: (In) => ZIO[Env, Err, Boolean])(trace: Trace): ZPipeline[Env, Err, In, In]", "member" : "zio.stream.ZPipeline.takeWhileZIO", "link" : "zio\/stream\/ZPipeline$.html#takeWhileZIO[Env,Err,In](f:In=>zio.ZIO[Env,Err,Boolean])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,In]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(f: (In) => Boolean)(trace: Trace): ZPipeline[Any, Nothing, In, In]", "member" : "zio.stream.ZPipeline.takeWhile", "link" : "zio\/stream\/ZPipeline$.html#takeWhile[In](f:In=>Boolean)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,In]", "kind" : "def"}, {"label" : "takeUntilZIO", "tail" : "(f: (In) => ZIO[Env, Err, Boolean])(trace: Trace): ZPipeline[Env, Err, In, In]", "member" : "zio.stream.ZPipeline.takeUntilZIO", "link" : "zio\/stream\/ZPipeline$.html#takeUntilZIO[Env,Err,In](f:In=>zio.ZIO[Env,Err,Boolean])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,In]", "kind" : "def"}, {"label" : "takeUntil", "tail" : "(f: (In) => Boolean)(trace: Trace): ZPipeline[Any, Nothing, In, In]", "member" : "zio.stream.ZPipeline.takeUntil", "link" : "zio\/stream\/ZPipeline$.html#takeUntil[In](f:In=>Boolean)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,In]", "kind" : "def"}, {"label" : "take", "tail" : "(n: => Long)(trace: Trace): ZPipeline[Any, Nothing, In, In]", "member" : "zio.stream.ZPipeline.take", "link" : "zio\/stream\/ZPipeline$.html#take[In](n:=>Long)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,In]", "kind" : "def"}, {"label" : "suspend", "tail" : "(pipeline: => ZPipeline[Env, Err, In, Out]): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.suspend", "link" : "zio\/stream\/ZPipeline$.html#suspend[Env,Err,In,Out](pipeline:=>zio.stream.ZPipeline[Env,Err,In,Out]):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "splitLines", "tail" : "(trace: Trace): ZPipeline[Any, Nothing, String, String]", "member" : "zio.stream.ZPipeline.splitLines", "link" : "zio\/stream\/ZPipeline$.html#splitLines(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,String,String]", "kind" : "def"}, {"label" : "splitOnChunk", "tail" : "(delimiter: => Chunk[In])(trace: Trace): ZPipeline[Any, Nothing, In, In]", "member" : "zio.stream.ZPipeline.splitOnChunk", "link" : "zio\/stream\/ZPipeline$.html#splitOnChunk[In](delimiter:=>zio.Chunk[In])(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,In]", "kind" : "def"}, {"label" : "splitOn", "tail" : "(delimiter: => String)(trace: Trace): ZPipeline[Any, Nothing, String, String]", "member" : "zio.stream.ZPipeline.splitOn", "link" : "zio\/stream\/ZPipeline$.html#splitOn(delimiter:=>String)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,String,String]", "kind" : "def"}, {"label" : "serviceWithPipeline", "tail" : "(): ServiceWithPipelinePartiallyApplied[Service]", "member" : "zio.stream.ZPipeline.serviceWithPipeline", "link" : "zio\/stream\/ZPipeline$.html#serviceWithPipeline[Service]:zio.stream.ZPipeline.ServiceWithPipelinePartiallyApplied[Service]", "kind" : "def"}, {"label" : "scanZIO", "tail" : "(s: => Out)(f: (Out, In) => ZIO[Env, Err, Out])(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.scanZIO", "link" : "zio\/stream\/ZPipeline$.html#scanZIO[Env,Err,In,Out](s:=>Out)(f:(Out,In)=>zio.ZIO[Env,Err,Out])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "scan", "tail" : "(s: => Out)(f: (Out, In) => Out)(trace: Trace): ZPipeline[Any, Nothing, In, Out]", "member" : "zio.stream.ZPipeline.scan", "link" : "zio\/stream\/ZPipeline$.html#scan[In,Out](s:=>Out)(f:(Out,In)=>Out)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,Out]", "kind" : "def"}, {"label" : "sample", "tail" : "(p: => Double)(trace: Trace): ZPipeline[Any, Nothing, In, In]", "member" : "zio.stream.ZPipeline.sample", "link" : "zio\/stream\/ZPipeline$.html#sample[In](p:=>Double)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,In]", "kind" : "def"}, {"label" : "rechunk", "tail" : "(n: => Int)(trace: Trace): ZPipeline[Any, Nothing, In, In]", "member" : "zio.stream.ZPipeline.rechunk", "link" : "zio\/stream\/ZPipeline$.html#rechunk[In](n:=>Int)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,In]", "kind" : "def"}, {"label" : "prepend", "tail" : "(values: => Chunk[In])(trace: Trace): ZPipeline[Any, Nothing, In, In]", "member" : "zio.stream.ZPipeline.prepend", "link" : "zio\/stream\/ZPipeline$.html#prepend[In](values:=>zio.Chunk[In])(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,In]", "kind" : "def"}, {"label" : "mapZIOParUnordered", "tail" : "(n: => Int, bufferSize: => Int)(f: (In) => ZIO[Env, Err, Out])(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.mapZIOParUnordered", "link" : "zio\/stream\/ZPipeline$.html#mapZIOParUnordered[Env,Err,In,Out](n:=>Int,bufferSize:=>Int)(f:In=>zio.ZIO[Env,Err,Out])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "mapZIOParUnordered", "tail" : "(n: => Int)(f: (In) => ZIO[Env, Err, Out])(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.mapZIOParUnordered", "link" : "zio\/stream\/ZPipeline$.html#mapZIOParUnordered[Env,Err,In,Out](n:=>Int)(f:In=>zio.ZIO[Env,Err,Out])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "mapZIOPar", "tail" : "(n: => Int, bufferSize: => Int)(f: (In) => ZIO[Env, Err, Out])(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.mapZIOPar", "link" : "zio\/stream\/ZPipeline$.html#mapZIOPar[Env,Err,In,Out](n:=>Int,bufferSize:=>Int)(f:In=>zio.ZIO[Env,Err,Out])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "mapZIOPar", "tail" : "(n: => Int)(f: (In) => ZIO[Env, Err, Out])(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.mapZIOPar", "link" : "zio\/stream\/ZPipeline$.html#mapZIOPar[Env,Err,In,Out](n:=>Int)(f:In=>zio.ZIO[Env,Err,Out])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "mapZIO", "tail" : "(f: (In) => ZIO[Env, Err, Out])(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.mapZIO", "link" : "zio\/stream\/ZPipeline$.html#mapZIO[Env,Err,In,Out](f:In=>zio.ZIO[Env,Err,Out])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "mapStream", "tail" : "(f: (In) => ZStream[Env, Err, Out])(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.mapStream", "link" : "zio\/stream\/ZPipeline$.html#mapStream[Env,Err,In,Out](f:In=>zio.stream.ZStream[Env,Err,Out])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "mapChunksZIO", "tail" : "(f: (Chunk[In]) => ZIO[Env, Err, Chunk[Out]])(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.mapChunksZIO", "link" : "zio\/stream\/ZPipeline$.html#mapChunksZIO[Env,Err,In,Out](f:zio.Chunk[In]=>zio.ZIO[Env,Err,zio.Chunk[Out]])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "mapChunks", "tail" : "(f: (Chunk[In]) => Chunk[Out])(trace: Trace): ZPipeline[Any, Nothing, In, Out]", "member" : "zio.stream.ZPipeline.mapChunks", "link" : "zio\/stream\/ZPipeline$.html#mapChunks[In,Out](f:zio.Chunk[In]=>zio.Chunk[Out])(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,Out]", "kind" : "def"}, {"label" : "mapAccumZIO", "tail" : "(s: => State)(f: (State, In) => ZIO[Env, Err, (State, Out)])(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.mapAccumZIO", "link" : "zio\/stream\/ZPipeline$.html#mapAccumZIO[Env,Err,In,State,Out](s:=>State)(f:(State,In)=>zio.ZIO[Env,Err,(State,Out)])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "mapAccum", "tail" : "(s: => State)(f: (State, In) => (State, Out))(trace: Trace): ZPipeline[Any, Nothing, In, Out]", "member" : "zio.stream.ZPipeline.mapAccum", "link" : "zio\/stream\/ZPipeline$.html#mapAccum[In,State,Out](s:=>State)(f:(State,In)=>(State,Out))(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,Out]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (In) => Out)(trace: Trace): ZPipeline[Any, Nothing, In, Out]", "member" : "zio.stream.ZPipeline.map", "link" : "zio\/stream\/ZPipeline$.html#map[In,Out](f:In=>Out)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,Out]", "kind" : "def"}, {"label" : "iso_8859_1Encode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, String, Byte]", "member" : "zio.stream.ZPipeline.iso_8859_1Encode", "link" : "zio\/stream\/ZPipeline$.html#iso_8859_1Encode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,String,Byte]", "kind" : "def"}, {"label" : "iso_8859_1Decode", "tail" : "(trace: Trace): ZPipeline[Any, CharacterCodingException, Byte, String]", "member" : "zio.stream.ZPipeline.iso_8859_1Decode", "link" : "zio\/stream\/ZPipeline$.html#iso_8859_1Decode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,Byte,String]", "kind" : "def"}, {"label" : "intersperse", "tail" : "(start: => In, middle: => In, end: => In)(trace: Trace): ZPipeline[Any, Nothing, In, In]", "member" : "zio.stream.ZPipeline.intersperse", "link" : "zio\/stream\/ZPipeline$.html#intersperse[In](start:=>In,middle:=>In,end:=>In)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,In]", "kind" : "def"}, {"label" : "intersperse", "tail" : "(middle: => In)(trace: Trace): ZPipeline[Any, Err, In, In]", "member" : "zio.stream.ZPipeline.intersperse", "link" : "zio\/stream\/ZPipeline$.html#intersperse[Err,In](middle:=>In)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Err,In,In]", "kind" : "def"}, {"label" : "identity", "tail" : "(trace: Trace): ZPipeline[Any, Nothing, In, In]", "member" : "zio.stream.ZPipeline.identity", "link" : "zio\/stream\/ZPipeline$.html#identity[In](implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,In]", "kind" : "def"}, {"label" : "hexEncode", "tail" : "(trace: Trace): ZPipeline[Any, Nothing, Byte, Char]", "member" : "zio.stream.ZPipeline.hexEncode", "link" : "zio\/stream\/ZPipeline$.html#hexEncode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,Byte,Char]", "kind" : "def"}, {"label" : "hexDecode", "tail" : "(trace: Trace): ZPipeline[Any, EncodingException, Char, Byte]", "member" : "zio.stream.ZPipeline.hexDecode", "link" : "zio\/stream\/ZPipeline$.html#hexDecode(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,zio.stream.encoding.EncodingException,Char,Byte]", "kind" : "def"}, {"label" : "fromSink", "tail" : "(sink: => ZSink[Env, Err, In, In, Out])(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.fromSink", "link" : "zio\/stream\/ZPipeline$.html#fromSink[Env,Err,In,Out](sink:=>zio.stream.ZSink[Env,Err,In,In,Out])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "fromPush", "tail" : "(push: => ZIO[Scope with Env, Nothing, (Option[Chunk[In]]) => ZIO[Env, Err, Chunk[Out]]])(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.fromPush", "link" : "zio\/stream\/ZPipeline$.html#fromPush[Env,Err,In,Out](push:=>zio.ZIO[zio.ScopewithEnv,Nothing,Option[zio.Chunk[In]]=>zio.ZIO[Env,Err,zio.Chunk[Out]]])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "fromFunction", "tail" : "(f: (ZStream[Any, Nothing, In]) => ZStream[Env, Err, Out])(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.fromFunction", "link" : "zio\/stream\/ZPipeline$.html#fromFunction[Env,Err,In,Out](f:zio.stream.ZStream[Any,Nothing,In]=>zio.stream.ZStream[Env,Err,Out])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "fromChannel", "tail" : "(channel: => ZChannel[Env, Nothing, Chunk[In], Any, Err, Chunk[Out], Any]): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.fromChannel", "link" : "zio\/stream\/ZPipeline$.html#fromChannel[Env,Err,In,Out](channel:=>zio.stream.ZChannel[Env,Nothing,zio.Chunk[In],Any,Err,zio.Chunk[Out],Any]):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "groupedWithin", "tail" : "(chunkSize: => Int, within: => zio.Duration)(trace: Trace): ZPipeline[Any, Nothing, In, Chunk[In]]", "member" : "zio.stream.ZPipeline.groupedWithin", "link" : "zio\/stream\/ZPipeline$.html#groupedWithin[In](chunkSize:=>Int,within:=>zio.Duration)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,zio.Chunk[In]]", "kind" : "def"}, {"label" : "grouped", "tail" : "(chunkSize: => Int)(trace: Trace): ZPipeline[Any, Nothing, In, Chunk[In]]", "member" : "zio.stream.ZPipeline.grouped", "link" : "zio\/stream\/ZPipeline$.html#grouped[In](chunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,zio.Chunk[In]]", "kind" : "def"}, {"label" : "groupAdjacentBy", "tail" : "(f: (In) => Key)(trace: Trace): ZPipeline[Any, Nothing, In, (Key, NonEmptyChunk[In])]", "member" : "zio.stream.ZPipeline.groupAdjacentBy", "link" : "zio\/stream\/ZPipeline$.html#groupAdjacentBy[In,Key](f:In=>Key)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,(Key,zio.NonEmptyChunk[In])]", "kind" : "def"}, {"label" : "flattenTake", "tail" : "(trace: Trace): ZPipeline[Any, Err, Take[Err, Out], Out]", "member" : "zio.stream.ZPipeline.flattenTake", "link" : "zio\/stream\/ZPipeline$.html#flattenTake[Err,Out](implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Err,zio.stream.Take[Err,Out],Out]", "kind" : "def"}, {"label" : "flattenStreamsPar", "tail" : "(n: => Int, outputBuffer: => Int)(trace: Trace): ZPipeline[Env, Err, ZStream[Env, Err, Out], Out]", "member" : "zio.stream.ZPipeline.flattenStreamsPar", "link" : "zio\/stream\/ZPipeline$.html#flattenStreamsPar[Env,Err,Out](n:=>Int,outputBuffer:=>Int)(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,zio.stream.ZStream[Env,Err,Out],Out]", "kind" : "def"}, {"label" : "flattenIterables", "tail" : "(trace: Trace): ZPipeline[Any, Nothing, Iterable[Out], Out]", "member" : "zio.stream.ZPipeline.flattenIterables", "link" : "zio\/stream\/ZPipeline$.html#flattenIterables[Out](implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,Iterable[Out],Out]", "kind" : "def"}, {"label" : "flattenExit", "tail" : "(trace: Trace): ZPipeline[Any, Err, Exit[Err, Out], Out]", "member" : "zio.stream.ZPipeline.flattenExit", "link" : "zio\/stream\/ZPipeline$.html#flattenExit[Err,Out](implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Err,zio.Exit[Err,Out],Out]", "kind" : "def"}, {"label" : "flattenChunks", "tail" : "(trace: Trace): ZPipeline[Any, Nothing, Chunk[In], In]", "member" : "zio.stream.ZPipeline.flattenChunks", "link" : "zio\/stream\/ZPipeline$.html#flattenChunks[In](implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,zio.Chunk[In],In]", "kind" : "def"}, {"label" : "filterZIO", "tail" : "(f: (In) => ZIO[Env, Err, Boolean])(trace: Trace): ZPipeline[Env, Err, In, In]", "member" : "zio.stream.ZPipeline.filterZIO", "link" : "zio\/stream\/ZPipeline$.html#filterZIO[Env,Err,In](f:In=>zio.ZIO[Env,Err,Boolean])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,In]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (In) => Boolean)(trace: Trace): ZPipeline[Any, Nothing, In, In]", "member" : "zio.stream.ZPipeline.filter", "link" : "zio\/stream\/ZPipeline$.html#filter[In](f:In=>Boolean)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,In]", "kind" : "def"}, {"label" : "environmentWithPipeline", "tail" : "(): EnvironmentWithPipelinePartiallyApplied[Env]", "member" : "zio.stream.ZPipeline.environmentWithPipeline", "link" : "zio\/stream\/ZPipeline$.html#environmentWithPipeline[Env]:zio.stream.ZPipeline.EnvironmentWithPipelinePartiallyApplied[Env]", "kind" : "def"}, {"label" : "encodeCharsWith", "tail" : "(charset: => Charset, bufferSize: => Int)(trace: Trace): ZPipeline[Any, CharacterCodingException, Char, Byte]", "member" : "zio.stream.ZPipeline.encodeCharsWith", "link" : "zio\/stream\/ZPipeline$.html#encodeCharsWith(charset:=>java.nio.charset.Charset,bufferSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,Char,Byte]", "kind" : "def"}, {"label" : "encodeStringWith", "tail" : "(charset: => Charset, bom: => Chunk[Byte])(trace: Trace): ZPipeline[Any, CharacterCodingException, String, Byte]", "member" : "zio.stream.ZPipeline.encodeStringWith", "link" : "zio\/stream\/ZPipeline$.html#encodeStringWith(charset:=>java.nio.charset.Charset,bom:=>zio.Chunk[Byte])(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,String,Byte]", "kind" : "def"}, {"label" : "dropWhileZIO", "tail" : "(p: (In) => ZIO[Env, Err, Boolean])(trace: Trace): ZPipeline[Env, Err, In, In]", "member" : "zio.stream.ZPipeline.dropWhileZIO", "link" : "zio\/stream\/ZPipeline$.html#dropWhileZIO[Env,Err,In,Out](p:In=>zio.ZIO[Env,Err,Boolean])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,In]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(f: (In) => Boolean)(trace: Trace): ZPipeline[Any, Nothing, In, In]", "member" : "zio.stream.ZPipeline.dropWhile", "link" : "zio\/stream\/ZPipeline$.html#dropWhile[In](f:In=>Boolean)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,In]", "kind" : "def"}, {"label" : "dropUntilZIO", "tail" : "(p: (In) => ZIO[Env, Err, Boolean])(trace: Trace): ZPipeline[Env, Err, In, In]", "member" : "zio.stream.ZPipeline.dropUntilZIO", "link" : "zio\/stream\/ZPipeline$.html#dropUntilZIO[Env,Err,In](p:In=>zio.ZIO[Env,Err,Boolean])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,In]", "kind" : "def"}, {"label" : "dropUntil", "tail" : "(f: (In) => Boolean)(trace: Trace): ZPipeline[Any, Nothing, In, In]", "member" : "zio.stream.ZPipeline.dropUntil", "link" : "zio\/stream\/ZPipeline$.html#dropUntil[In](f:In=>Boolean)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,In]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: => Int)(trace: Trace): ZPipeline[Any, Nothing, In, In]", "member" : "zio.stream.ZPipeline.drop", "link" : "zio\/stream\/ZPipeline$.html#drop[In](n:=>Int)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,In]", "kind" : "def"}, {"label" : "decodeCharsWithDecoder", "tail" : "(charsetDecoder: => CharsetDecoder, bufSize: => Int)(trace: Trace): ZPipeline[Any, CharacterCodingException, Byte, Char]", "member" : "zio.stream.ZPipeline.decodeCharsWithDecoder", "link" : "zio\/stream\/ZPipeline$.html#decodeCharsWithDecoder(charsetDecoder:=>java.nio.charset.CharsetDecoder,bufSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,Byte,Char]", "kind" : "def"}, {"label" : "decodeCharsWith", "tail" : "(charset: => Charset, bufSize: => Int)(trace: Trace): ZPipeline[Any, CharacterCodingException, Byte, Char]", "member" : "zio.stream.ZPipeline.decodeCharsWith", "link" : "zio\/stream\/ZPipeline$.html#decodeCharsWith(charset:=>java.nio.charset.Charset,bufSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,Byte,Char]", "kind" : "def"}, {"label" : "decodeStringWith", "tail" : "(charset: => Charset)(trace: Trace): ZPipeline[Any, CharacterCodingException, Byte, String]", "member" : "zio.stream.ZPipeline.decodeStringWith", "link" : "zio\/stream\/ZPipeline$.html#decodeStringWith(charset:=>java.nio.charset.Charset)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,java.nio.charset.CharacterCodingException,Byte,String]", "kind" : "def"}, {"label" : "debounce", "tail" : "(d: => zio.Duration)(trace: Trace): ZPipeline[Any, Nothing, In, In]", "member" : "zio.stream.ZPipeline.debounce", "link" : "zio\/stream\/ZPipeline$.html#debounce[In](d:=>zio.Duration)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,In]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: => Int)(trace: Trace): ZPipeline[Any, Err, In, In]", "member" : "zio.stream.ZPipeline.dropRight", "link" : "zio\/stream\/ZPipeline$.html#dropRight[Err,In](n:=>Int)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Err,In,In]", "kind" : "def"}, {"label" : "drain", "tail" : "(trace: Trace): ZPipeline[Any, Err, Any, Nothing]", "member" : "zio.stream.ZPipeline.drain", "link" : "zio\/stream\/ZPipeline$.html#drain[Err](implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Err,Any,Nothing]", "kind" : "def"}, {"label" : "collectWhileZIO", "tail" : "(pf: PartialFunction[In, ZIO[Env, Err, Out]])(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.collectWhileZIO", "link" : "zio\/stream\/ZPipeline$.html#collectWhileZIO[Env,Err,In,Out](pf:PartialFunction[In,zio.ZIO[Env,Err,Out]])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "collectWhileSuccess", "tail" : "(trace: Trace): ZPipeline[Any, Nothing, Exit[Err, A], A]", "member" : "zio.stream.ZPipeline.collectWhileSuccess", "link" : "zio\/stream\/ZPipeline$.html#collectWhileSuccess[Err,A](implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,zio.Exit[Err,A],A]", "kind" : "def"}, {"label" : "collectWhileSome", "tail" : "(trace: Trace): ZPipeline[Any, Err, Option[A], A]", "member" : "zio.stream.ZPipeline.collectWhileSome", "link" : "zio\/stream\/ZPipeline$.html#collectWhileSome[Err,A](implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Err,Option[A],A]", "kind" : "def"}, {"label" : "collectWhileRight", "tail" : "(trace: Trace): ZPipeline[Any, Err, Either[A, B], B]", "member" : "zio.stream.ZPipeline.collectWhileRight", "link" : "zio\/stream\/ZPipeline$.html#collectWhileRight[Err,A,B](implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Err,Either[A,B],B]", "kind" : "def"}, {"label" : "collectWhileLeft", "tail" : "(trace: Trace): ZPipeline[Any, Err, Either[A, B], A]", "member" : "zio.stream.ZPipeline.collectWhileLeft", "link" : "zio\/stream\/ZPipeline$.html#collectWhileLeft[Err,A,B](implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Err,Either[A,B],A]", "kind" : "def"}, {"label" : "collectWhile", "tail" : "(pf: PartialFunction[In, Out])(trace: Trace): ZPipeline[Any, Err, In, Out]", "member" : "zio.stream.ZPipeline.collectWhile", "link" : "zio\/stream\/ZPipeline$.html#collectWhile[Err,In,Out](pf:PartialFunction[In,Out])(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Err,In,Out]", "kind" : "def"}, {"label" : "collectRight", "tail" : "(trace: Trace): ZPipeline[Any, Err, Either[A, B], B]", "member" : "zio.stream.ZPipeline.collectRight", "link" : "zio\/stream\/ZPipeline$.html#collectRight[Err,A,B](implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Err,Either[A,B],B]", "kind" : "def"}, {"label" : "collectSuccess", "tail" : "(trace: Trace): ZPipeline[Any, Nothing, Exit[B, A], A]", "member" : "zio.stream.ZPipeline.collectSuccess", "link" : "zio\/stream\/ZPipeline$.html#collectSuccess[A,B](implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,zio.Exit[B,A],A]", "kind" : "def"}, {"label" : "collectSome", "tail" : "(trace: Trace): ZPipeline[Any, Err, Option[A], A]", "member" : "zio.stream.ZPipeline.collectSome", "link" : "zio\/stream\/ZPipeline$.html#collectSome[Err,A](implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Err,Option[A],A]", "kind" : "def"}, {"label" : "collectLeft", "tail" : "(trace: Trace): ZPipeline[Any, Err, Either[A, B], A]", "member" : "zio.stream.ZPipeline.collectLeft", "link" : "zio\/stream\/ZPipeline$.html#collectLeft[Err,A,B](implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Err,Either[A,B],A]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[In, Out])(trace: Trace): ZPipeline[Any, Nothing, In, Out]", "member" : "zio.stream.ZPipeline.collect", "link" : "zio\/stream\/ZPipeline$.html#collect[In,Out](f:PartialFunction[In,Out])(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,Out]", "kind" : "def"}, {"label" : "chunks", "tail" : "(trace: Trace): ZPipeline[Any, Nothing, In, Chunk[In]]", "member" : "zio.stream.ZPipeline.chunks", "link" : "zio\/stream\/ZPipeline$.html#chunks[In](implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,zio.Chunk[In]]", "kind" : "def"}, {"label" : "changesWithZIO", "tail" : "(f: (In, In) => ZIO[Env, Err, Boolean])(trace: Trace): ZPipeline[Env, Err, In, In]", "member" : "zio.stream.ZPipeline.changesWithZIO", "link" : "zio\/stream\/ZPipeline$.html#changesWithZIO[Env,Err,In](f:(In,In)=>zio.ZIO[Env,Err,Boolean])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,In]", "kind" : "def"}, {"label" : "changesWith", "tail" : "(f: (In, In) => Boolean)(trace: Trace): ZPipeline[Any, Err, In, In]", "member" : "zio.stream.ZPipeline.changesWith", "link" : "zio\/stream\/ZPipeline$.html#changesWith[Err,In](f:(In,In)=>Boolean)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Err,In,In]", "kind" : "def"}, {"label" : "changes", "tail" : "(trace: Trace): ZPipeline[Any, Err, In, In]", "member" : "zio.stream.ZPipeline.changes", "link" : "zio\/stream\/ZPipeline$.html#changes[Err,In](implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Err,In,In]", "kind" : "def"}, {"label" : "branchAfter", "tail" : "(n: => Int)(f: (Chunk[In]) => ZPipeline[Env, Err, In, Out])(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.branchAfter", "link" : "zio\/stream\/ZPipeline$.html#branchAfter[Env,Err,In,Out](n:=>Int)(f:zio.Chunk[In]=>zio.stream.ZPipeline[Env,Err,In,Out])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "append", "tail" : "(values: => Chunk[In])(trace: Trace): ZPipeline[Any, Nothing, In, In]", "member" : "zio.stream.ZPipeline.append", "link" : "zio\/stream\/ZPipeline$.html#append[In](values:=>zio.Chunk[In])(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,In]", "kind" : "def"}, {"label" : "apply", "tail" : "(trace: Trace): ZPipeline[Any, Nothing, In, In]", "member" : "zio.stream.ZPipeline.apply", "link" : "zio\/stream\/ZPipeline$.html#apply[In](implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,In,In]", "kind" : "def"}, {"label" : "aggregateAsyncWithinEither", "tail" : "(sink: => ZSink[Env, Err, In, In, Out], schedule: => Schedule[Env, Option[Out], Out2])(trace: Trace): ZPipeline[Env, Err, In, Either[Out2, Out]]", "member" : "zio.stream.ZPipeline.aggregateAsyncWithinEither", "link" : "zio\/stream\/ZPipeline$.html#aggregateAsyncWithinEither[Env,Err,In,Out,Out2](sink:=>zio.stream.ZSink[Env,Err,In,In,Out],schedule:=>zio.Schedule[Env,Option[Out],Out2])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Either[Out2,Out]]", "kind" : "def"}, {"label" : "aggregateAsyncWithin", "tail" : "(sink: => ZSink[Env, Err, In, In, Out], schedule: => Schedule[Env, Option[Out], Any])(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.aggregateAsyncWithin", "link" : "zio\/stream\/ZPipeline$.html#aggregateAsyncWithin[Env,Err,In,Out](sink:=>zio.stream.ZSink[Env,Err,In,In,Out],schedule:=>zio.Schedule[Env,Option[Out],Any])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "aggregateAsync", "tail" : "(sink: => ZSink[Env, Err, In, In, Out])(trace: Trace): ZPipeline[Env, Err, In, Out]", "member" : "zio.stream.ZPipeline.aggregateAsync", "link" : "zio\/stream\/ZPipeline$.html#aggregateAsync[Env,Err,In,Out](sink:=>zio.stream.ZSink[Env,Err,In,In,Out])(implicittrace:zio.Trace):zio.stream.ZPipeline[Env,Err,In,Out]", "kind" : "def"}, {"label" : "gunzipAuto", "tail" : "(bufferSize: => Int)(trace: Trace): ZPipeline[Any, CompressionException, Byte, Byte]", "member" : "zio.stream.ZPipelinePlatformSpecificConstructors.gunzipAuto", "link" : "zio\/stream\/ZPipeline$.html#gunzipAuto[Env](bufferSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,zio.stream.compression.CompressionException,Byte,Byte]", "kind" : "def"}, {"label" : "gunzip", "tail" : "(bufferSize: => Int)(trace: Trace): ZPipeline[Any, CompressionException, Byte, Byte]", "member" : "zio.stream.ZPipelinePlatformSpecificConstructors.gunzip", "link" : "zio\/stream\/ZPipeline$.html#gunzip[Env](bufferSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,zio.stream.compression.CompressionException,Byte,Byte]", "kind" : "def"}, {"label" : "gzip", "tail" : "(bufferSize: => Int, level: => CompressionLevel, strategy: => CompressionStrategy, flushMode: => FlushMode)(trace: Trace): ZPipeline[Any, Nothing, Byte, Byte]", "member" : "zio.stream.ZPipelinePlatformSpecificConstructors.gzip", "link" : "zio\/stream\/ZPipeline$.html#gzip(bufferSize:=>Int,level:=>zio.stream.compression.CompressionLevel,strategy:=>zio.stream.compression.CompressionStrategy,flushMode:=>zio.stream.compression.FlushMode)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,Byte,Byte]", "kind" : "def"}, {"label" : "inflate", "tail" : "(bufferSize: => Int, noWrap: => Boolean)(trace: Trace): ZPipeline[Any, CompressionException, Byte, Byte]", "member" : "zio.stream.ZPipelinePlatformSpecificConstructors.inflate", "link" : "zio\/stream\/ZPipeline$.html#inflate(bufferSize:=>Int,noWrap:=>Boolean)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,zio.stream.compression.CompressionException,Byte,Byte]", "kind" : "def"}, {"label" : "deflate", "tail" : "(bufferSize: => Int, noWrap: => Boolean, level: => CompressionLevel, strategy: => CompressionStrategy, flushMode: => FlushMode)(trace: Trace): ZPipeline[Any, Nothing, Byte, Byte]", "member" : "zio.stream.ZPipelinePlatformSpecificConstructors.deflate", "link" : "zio\/stream\/ZPipeline$.html#deflate(bufferSize:=>Int,noWrap:=>Boolean,level:=>zio.stream.compression.CompressionLevel,strategy:=>zio.stream.compression.CompressionStrategy,flushMode:=>zio.stream.compression.FlushMode)(implicittrace:zio.Trace):zio.stream.ZPipeline[Any,Nothing,Byte,Byte]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/ZPipeline$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/ZPipeline$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/ZPipeline$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/ZPipeline$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/ZPipeline$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/ZPipeline$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/ZPipeline$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/ZPipeline$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/ZPipeline$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/ZPipeline$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stream\/ZPipeline$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/ZPipeline$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZPipeline$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZPipeline$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZPipeline$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stream\/ZPipeline$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/ZPipeline$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/ZPipeline$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/ZPipeline$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/stream\/ZPipeline.html", "kind" : "class"}, {"name" : "zio.stream.ZSink", "shortDescription" : "", "object" : "zio\/stream\/ZSink$.html", "members_class" : [{"label" : "zipWithPar", "tail" : "(that: => ZSink[R1, E1, In1, L1, Z1])(f: (Z, Z1) => Z2)(trace: Trace): ZSink[R1, E1, In1, L1, Z2]", "member" : "zio.stream.ZSink.zipWithPar", "link" : "zio\/stream\/ZSink.html#zipWithPar[R1<:R,E1>:E,In1<:In,L1>:L<:In1,Z1,Z2](that:=>zio.stream.ZSink[R1,E1,In1,L1,Z1])(f:(Z,Z1)=>Z2)(implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L1,Z2]", "kind" : "def"}, {"label" : "zipWith", "tail" : "(that: => ZSink[R1, E1, In1, L1, Z1])(f: (Z, Z1) => Z2)(ev: <:<[L, In1], trace: Trace): ZSink[R1, E1, In1, L1, Z2]", "member" : "zio.stream.ZSink.zipWith", "link" : "zio\/stream\/ZSink.html#zipWith[R1<:R,E1>:E,In1<:In,L1>:L<:In1,Z1,Z2](that:=>zio.stream.ZSink[R1,E1,In1,L1,Z1])(f:(Z,Z1)=>Z2)(implicitev:L<:<In1,implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L1,Z2]", "kind" : "def"}, {"label" : "zipRight", "tail" : "(that: => ZSink[R1, E1, In1, L1, Z1])(ev: <:<[L, In1], trace: Trace): ZSink[R1, E1, In1, L1, Z1]", "member" : "zio.stream.ZSink.zipRight", "link" : "zio\/stream\/ZSink.html#zipRight[R1<:R,In1<:In,E1>:E,L1>:L<:In1,Z1](that:=>zio.stream.ZSink[R1,E1,In1,L1,Z1])(implicitev:L<:<In1,implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L1,Z1]", "kind" : "def"}, {"label" : "zipParRight", "tail" : "(that: => ZSink[R1, E1, In1, L1, Z1])(trace: Trace): ZSink[R1, E1, In1, L1, Z1]", "member" : "zio.stream.ZSink.zipParRight", "link" : "zio\/stream\/ZSink.html#zipParRight[R1<:R,In1<:In,E1>:E,L1>:L<:In1,Z1](that:=>zio.stream.ZSink[R1,E1,In1,L1,Z1])(implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L1,Z1]", "kind" : "def"}, {"label" : "zipParLeft", "tail" : "(that: => ZSink[R1, E1, In1, L1, Z1])(trace: Trace): ZSink[R1, E1, In1, L1, Z]", "member" : "zio.stream.ZSink.zipParLeft", "link" : "zio\/stream\/ZSink.html#zipParLeft[R1<:R,In1<:In,E1>:E,L1>:L<:In1,Z1](that:=>zio.stream.ZSink[R1,E1,In1,L1,Z1])(implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L1,Z]", "kind" : "def"}, {"label" : "zipPar", "tail" : "(that: => ZSink[R1, E1, In1, L1, Z1])(zippable: Zippable[Z, Z1], trace: Trace): ZSink[R1, E1, In1, L1, Out]", "member" : "zio.stream.ZSink.zipPar", "link" : "zio\/stream\/ZSink.html#zipPar[R1<:R,In1<:In,E1>:E,L1>:L<:In1,Z1](that:=>zio.stream.ZSink[R1,E1,In1,L1,Z1])(implicitzippable:zio.Zippable[Z,Z1],implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L1,zippable.Out]", "kind" : "def"}, {"label" : "zipLeft", "tail" : "(that: => ZSink[R1, E1, In1, L1, Z1])(ev: <:<[L, In1], trace: Trace): ZSink[R1, E1, In1, L1, Z]", "member" : "zio.stream.ZSink.zipLeft", "link" : "zio\/stream\/ZSink.html#zipLeft[R1<:R,In1<:In,E1>:E,L1>:L<:In1,Z1](that:=>zio.stream.ZSink[R1,E1,In1,L1,Z1])(implicitev:L<:<In1,implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L1,Z]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: => ZSink[R1, E1, In1, L1, Z1])(zippable: Zippable[Z, Z1], ev: <:<[L, In1], trace: Trace): ZSink[R1, E1, In1, L1, Out]", "member" : "zio.stream.ZSink.zip", "link" : "zio\/stream\/ZSink.html#zip[R1<:R,In1<:In,E1>:E,L1>:L<:In1,Z1](that:=>zio.stream.ZSink[R1,E1,In1,L1,Z1])(implicitzippable:zio.Zippable[Z,Z1],implicitev:L<:<In1,implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L1,zippable.Out]", "kind" : "def"}, {"label" : "toChannel", "tail" : "(): ZChannel[R, ZNothing, Chunk[In], Any, E, Chunk[L], Z]", "member" : "zio.stream.ZSink.toChannel", "link" : "zio\/stream\/ZSink.html#toChannel:zio.stream.ZChannel[R,zio.ZNothing,zio.Chunk[In],Any,E,zio.Chunk[L],Z]", "kind" : "def"}, {"label" : "summarized", "tail" : "(summary: => ZIO[R1, E1, B])(f: (B, B) => C)(trace: Trace): ZSink[R1, E1, In, L, (Z, C)]", "member" : "zio.stream.ZSink.summarized", "link" : "zio\/stream\/ZSink.html#summarized[R1<:R,E1>:E,B,C](summary:=>zio.ZIO[R1,E1,B])(f:(B,B)=>C)(implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In,L,(Z,C)]", "kind" : "def"}, {"label" : "splitWhere", "tail" : "(f: (In1) => Boolean)(ev: <:<[L, In1], trace: Trace): ZSink[R, E, In1, In1, Z]", "member" : "zio.stream.ZSink.splitWhere", "link" : "zio\/stream\/ZSink.html#splitWhere[In1<:In](f:In1=>Boolean)(implicitev:L<:<In1,implicittrace:zio.Trace):zio.stream.ZSink[R,E,In1,In1,Z]", "kind" : "def"}, {"label" : "timed", "tail" : "(trace: Trace): ZSink[R, E, In, L, (Z, zio.Duration)]", "member" : "zio.stream.ZSink.timed", "link" : "zio\/stream\/ZSink.html#timed(implicittrace:zio.Trace):zio.stream.ZSink[R,E,In,L,(Z,zio.Duration)]", "kind" : "def"}, {"label" : "refineOrDieWith", "tail" : "(pf: PartialFunction[E, E1])(f: (E) => Throwable)(ev: CanFail[E], trace: Trace): ZSink[R, E1, In, L, Z]", "member" : "zio.stream.ZSink.refineOrDieWith", "link" : "zio\/stream\/ZSink.html#refineOrDieWith[E1](pf:PartialFunction[E,E1])(f:E=>Throwable)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.stream.ZSink[R,E1,In,L,Z]", "kind" : "def"}, {"label" : "refineOrDie", "tail" : "(pf: PartialFunction[E, E1])(ev1: IsSubtypeOfError[E, Throwable], ev2: CanFail[E], trace: Trace): ZSink[R, E1, In, L, Z]", "member" : "zio.stream.ZSink.refineOrDie", "link" : "zio\/stream\/ZSink.html#refineOrDie[E1](pf:PartialFunction[E,E1])(implicitev1:zio.IsSubtypeOfError[E,Throwable],implicitev2:zio.CanFail[E],implicittrace:zio.Trace):zio.stream.ZSink[R,E1,In,L,Z]", "kind" : "def"}, {"label" : "raceWith", "tail" : "(that: => ZSink[R1, E1, In1, L1, Z1], capacity: => Int)(leftDone: (Exit[E, Z]) => MergeDecision[R1, E1, Z1, E1, Z2], rightDone: (Exit[E1, Z1]) => MergeDecision[R1, E, Z, E1, Z2])(trace: Trace): ZSink[R1, E1, In1, L1, Z2]", "member" : "zio.stream.ZSink.raceWith", "link" : "zio\/stream\/ZSink.html#raceWith[R1<:R,E1>:E,A0,In1<:In,L1>:L,Z1,Z2](that:=>zio.stream.ZSink[R1,E1,In1,L1,Z1],capacity:=>Int)(leftDone:zio.Exit[E,Z]=>zio.stream.ZChannel.MergeDecision[R1,E1,Z1,E1,Z2],rightDone:zio.Exit[E1,Z1]=>zio.stream.ZChannel.MergeDecision[R1,E,Z,E1,Z2])(implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L1,Z2]", "kind" : "def"}, {"label" : "raceBoth", "tail" : "(that: => ZSink[R1, E1, In1, L1, Z2], capacity: => Int)(trace: Trace): ZSink[R1, E1, In1, L1, Either[Z, Z2]]", "member" : "zio.stream.ZSink.raceBoth", "link" : "zio\/stream\/ZSink.html#raceBoth[R1<:R,E1>:E,A0,In1<:In,L1>:L,Z2](that:=>zio.stream.ZSink[R1,E1,In1,L1,Z2],capacity:=>Int)(implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L1,Either[Z,Z2]]", "kind" : "def"}, {"label" : "race", "tail" : "(that: => ZSink[R1, E1, In1, L1, Z1])(trace: Trace): ZSink[R1, E1, In1, L1, Z1]", "member" : "zio.stream.ZSink.race", "link" : "zio\/stream\/ZSink.html#race[R1<:R,E1>:E,A0,In1<:In,L1>:L,Z1>:Z](that:=>zio.stream.ZSink[R1,E1,In1,L1,Z1])(implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L1,Z1]", "kind" : "def"}, {"label" : "provideSomeLayer", "tail" : "(): ProvideSomeLayer[R0, R, E, In, L, Z]", "member" : "zio.stream.ZSink.provideSomeLayer", "link" : "zio\/stream\/ZSink.html#provideSomeLayer[R0]:zio.stream.ZSink.ProvideSomeLayer[R0,R,E,In,L,Z]", "kind" : "def"}, {"label" : "provideLayer", "tail" : "(layer: => ZLayer[R0, E1, R])(trace: Trace): ZSink[R0, E1, In, L, Z]", "member" : "zio.stream.ZSink.provideLayer", "link" : "zio\/stream\/ZSink.html#provideLayer[E1>:E,R0](layer:=>zio.ZLayer[R0,E1,R])(implicittrace:zio.Trace):zio.stream.ZSink[R0,E1,In,L,Z]", "kind" : "def"}, {"label" : "provideSomeEnvironment", "tail" : "(f: (ZEnvironment[R0]) => ZEnvironment[R])(trace: Trace): ZSink[R0, E, In, L, Z]", "member" : "zio.stream.ZSink.provideSomeEnvironment", "link" : "zio\/stream\/ZSink.html#provideSomeEnvironment[R0](f:zio.ZEnvironment[R0]=>zio.ZEnvironment[R])(implicittrace:zio.Trace):zio.stream.ZSink[R0,E,In,L,Z]", "kind" : "def"}, {"label" : "provideEnvironment", "tail" : "(r: => ZEnvironment[R])(trace: Trace): ZSink[Any, E, In, L, Z]", "member" : "zio.stream.ZSink.provideEnvironment", "link" : "zio\/stream\/ZSink.html#provideEnvironment(r:=>zio.ZEnvironment[R])(implicittrace:zio.Trace):zio.stream.ZSink[Any,E,In,L,Z]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: => ZSink[R1, E2, In1, L1, Z1])(trace: Trace): ZSink[R1, E2, In1, L1, Z1]", "member" : "zio.stream.ZSink.orElse", "link" : "zio\/stream\/ZSink.html#orElse[R1<:R,In1<:In,E2,L1>:L,Z1>:Z](that:=>zio.stream.ZSink[R1,E2,In1,L1,Z1])(implicittrace:zio.Trace):zio.stream.ZSink[R1,E2,In1,L1,Z1]", "kind" : "def"}, {"label" : "mapZIO", "tail" : "(f: (Z) => ZIO[R1, E1, Z1])(trace: Trace): ZSink[R1, E1, In, L, Z1]", "member" : "zio.stream.ZSink.mapZIO", "link" : "zio\/stream\/ZSink.html#mapZIO[R1<:R,E1>:E,Z1](f:Z=>zio.ZIO[R1,E1,Z1])(implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In,L,Z1]", "kind" : "def"}, {"label" : "mapLeftover", "tail" : "(f: (L) => L2)(trace: Trace): ZSink[R, E, In, L2, Z]", "member" : "zio.stream.ZSink.mapLeftover", "link" : "zio\/stream\/ZSink.html#mapLeftover[L2](f:L=>L2)(implicittrace:zio.Trace):zio.stream.ZSink[R,E,In,L2,Z]", "kind" : "def"}, {"label" : "mapErrorZIO", "tail" : "(f: (E) => URIO[R1, E2])(trace: Trace): ZSink[R1, E2, In, L, Z]", "member" : "zio.stream.ZSink.mapErrorZIO", "link" : "zio\/stream\/ZSink.html#mapErrorZIO[R1<:R,E2](f:E=>zio.URIO[R1,E2])(implicittrace:zio.Trace):zio.stream.ZSink[R1,E2,In,L,Z]", "kind" : "def"}, {"label" : "mapErrorCause", "tail" : "(f: (Cause[E]) => Cause[E2])(trace: Trace): ZSink[R, E2, In, L, Z]", "member" : "zio.stream.ZSink.mapErrorCause", "link" : "zio\/stream\/ZSink.html#mapErrorCause[E2](f:zio.Cause[E]=>zio.Cause[E2])(implicittrace:zio.Trace):zio.stream.ZSink[R,E2,In,L,Z]", "kind" : "def"}, {"label" : "mapError", "tail" : "(f: (E) => E2)(trace: Trace): ZSink[R, E2, In, L, Z]", "member" : "zio.stream.ZSink.mapError", "link" : "zio\/stream\/ZSink.html#mapError[E2](f:E=>E2)(implicittrace:zio.Trace):zio.stream.ZSink[R,E2,In,L,Z]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Z) => Z2)(trace: Trace): ZSink[R, E, In, L, Z2]", "member" : "zio.stream.ZSink.map", "link" : "zio\/stream\/ZSink.html#map[Z2](f:Z=>Z2)(implicittrace:zio.Trace):zio.stream.ZSink[R,E,In,L,Z2]", "kind" : "def"}, {"label" : "ignoreLeftover", "tail" : "(trace: Trace): ZSink[R, E, In, Nothing, Z]", "member" : "zio.stream.ZSink.ignoreLeftover", "link" : "zio\/stream\/ZSink.html#ignoreLeftover(implicittrace:zio.Trace):zio.stream.ZSink[R,E,In,Nothing,Z]", "kind" : "def"}, {"label" : "foldCauseSink", "tail" : "(failure: (Cause[E]) => ZSink[R1, E2, In1, L1, Z1], success: (Z) => ZSink[R1, E2, In1, L1, Z1])(ev: <:<[L, In1], trace: Trace): ZSink[R1, E2, In1, L1, Z1]", "member" : "zio.stream.ZSink.foldCauseSink", "link" : "zio\/stream\/ZSink.html#foldCauseSink[R1<:R,E2,In1<:In,L1>:L<:In1,Z1](failure:zio.Cause[E]=>zio.stream.ZSink[R1,E2,In1,L1,Z1],success:Z=>zio.stream.ZSink[R1,E2,In1,L1,Z1])(implicitev:L<:<In1,implicittrace:zio.Trace):zio.stream.ZSink[R1,E2,In1,L1,Z1]", "kind" : "def"}, {"label" : "foldSink", "tail" : "(failure: (E) => ZSink[R1, E2, In1, L1, Z1], success: (Z) => ZSink[R1, E2, In1, L1, Z1])(ev: <:<[L, In1], trace: Trace): ZSink[R1, E2, In1, L1, Z1]", "member" : "zio.stream.ZSink.foldSink", "link" : "zio\/stream\/ZSink.html#foldSink[R1<:R,E2,In1<:In,L1>:L<:In1,Z1](failure:E=>zio.stream.ZSink[R1,E2,In1,L1,Z1],success:Z=>zio.stream.ZSink[R1,E2,In1,L1,Z1])(implicitev:L<:<In1,implicittrace:zio.Trace):zio.stream.ZSink[R1,E2,In1,L1,Z1]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Z) => ZSink[R1, E1, In1, L1, Z1])(ev: <:<[L, In1], trace: Trace): ZSink[R1, E1, In1, L1, Z1]", "member" : "zio.stream.ZSink.flatMap", "link" : "zio\/stream\/ZSink.html#flatMap[R1<:R,E1>:E,In1<:In,L1>:L<:In1,Z1](f:Z=>zio.stream.ZSink[R1,E1,In1,L1,Z1])(implicitev:L<:<In1,implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L1,Z1]", "kind" : "def"}, {"label" : "findZIO", "tail" : "(f: (Z) => ZIO[R1, E1, Boolean])(ev: <:<[L, In], trace: Trace): ZSink[R1, E1, In, L, Option[Z]]", "member" : "zio.stream.ZSink.findZIO", "link" : "zio\/stream\/ZSink.html#findZIO[R1<:R,E1>:E](f:Z=>zio.ZIO[R1,E1,Boolean])(implicitev:L<:<In,implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In,L,Option[Z]]", "kind" : "def"}, {"label" : "filterInputZIO", "tail" : "(p: (In1) => ZIO[R1, E1, Boolean])(trace: Trace): ZSink[R1, E1, In1, L, Z]", "member" : "zio.stream.ZSink.filterInputZIO", "link" : "zio\/stream\/ZSink.html#filterInputZIO[R1<:R,E1>:E,In1<:In](p:In1=>zio.ZIO[R1,E1,Boolean])(implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L,Z]", "kind" : "def"}, {"label" : "filterInput", "tail" : "(p: (In1) => Boolean)(trace: Trace): ZSink[R, E, In1, L, Z]", "member" : "zio.stream.ZSink.filterInput", "link" : "zio\/stream\/ZSink.html#filterInput[In1<:In](p:In1=>Boolean)(implicittrace:zio.Trace):zio.stream.ZSink[R,E,In1,L,Z]", "kind" : "def"}, {"label" : "ensuring", "tail" : "(finalizer: => URIO[R1, Any])(trace: Trace): ZSink[R1, E, In, L, Z]", "member" : "zio.stream.ZSink.ensuring", "link" : "zio\/stream\/ZSink.html#ensuring[R1<:R](finalizer:=>zio.URIO[R1,Any])(implicittrace:zio.Trace):zio.stream.ZSink[R1,E,In,L,Z]", "kind" : "final def"}, {"label" : "ensuringWith", "tail" : "(finalizer: (Exit[E, Z]) => URIO[R1, Any])(trace: Trace): ZSink[R1, E, In, L, Z]", "member" : "zio.stream.ZSink.ensuringWith", "link" : "zio\/stream\/ZSink.html#ensuringWith[R1<:R](finalizer:zio.Exit[E,Z]=>zio.URIO[R1,Any])(implicittrace:zio.Trace):zio.stream.ZSink[R1,E,In,L,Z]", "kind" : "final def"}, {"label" : "dimapZIO", "tail" : "(f: (In1) => ZIO[R1, E1, In], g: (Z) => ZIO[R1, E1, Z1])(trace: Trace): ZSink[R1, E1, In1, L, Z1]", "member" : "zio.stream.ZSink.dimapZIO", "link" : "zio\/stream\/ZSink.html#dimapZIO[R1<:R,E1>:E,In1,Z1](f:In1=>zio.ZIO[R1,E1,In],g:Z=>zio.ZIO[R1,E1,Z1])(implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L,Z1]", "kind" : "def"}, {"label" : "dimapChunksZIO", "tail" : "(f: (Chunk[In1]) => ZIO[R1, E1, Chunk[In]], g: (Z) => ZIO[R1, E1, Z1])(trace: Trace): ZSink[R1, E1, In1, L, Z1]", "member" : "zio.stream.ZSink.dimapChunksZIO", "link" : "zio\/stream\/ZSink.html#dimapChunksZIO[R1<:R,E1>:E,In1,Z1](f:zio.Chunk[In1]=>zio.ZIO[R1,E1,zio.Chunk[In]],g:Z=>zio.ZIO[R1,E1,Z1])(implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L,Z1]", "kind" : "def"}, {"label" : "dimapChunks", "tail" : "(f: (Chunk[In1]) => Chunk[In], g: (Z) => Z1)(trace: Trace): ZSink[R, E, In1, L, Z1]", "member" : "zio.stream.ZSink.dimapChunks", "link" : "zio\/stream\/ZSink.html#dimapChunks[In1,Z1](f:zio.Chunk[In1]=>zio.Chunk[In],g:Z=>Z1)(implicittrace:zio.Trace):zio.stream.ZSink[R,E,In1,L,Z1]", "kind" : "def"}, {"label" : "dimap", "tail" : "(f: (In1) => In, g: (Z) => Z1)(trace: Trace): ZSink[R, E, In1, L, Z1]", "member" : "zio.stream.ZSink.dimap", "link" : "zio\/stream\/ZSink.html#dimap[In1,Z1](f:In1=>In,g:Z=>Z1)(implicittrace:zio.Trace):zio.stream.ZSink[R,E,In1,L,Z1]", "kind" : "def"}, {"label" : "contramapZIO", "tail" : "(f: (In1) => ZIO[R1, E1, In])(trace: Trace): ZSink[R1, E1, In1, L, Z]", "member" : "zio.stream.ZSink.contramapZIO", "link" : "zio\/stream\/ZSink.html#contramapZIO[R1<:R,E1>:E,In1](f:In1=>zio.ZIO[R1,E1,In])(implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L,Z]", "kind" : "def"}, {"label" : "contramapChunksZIO", "tail" : "(f: (Chunk[In1]) => ZIO[R1, E1, Chunk[In]])(trace: Trace): ZSink[R1, E1, In1, L, Z]", "member" : "zio.stream.ZSink.contramapChunksZIO", "link" : "zio\/stream\/ZSink.html#contramapChunksZIO[R1<:R,E1>:E,In1](f:zio.Chunk[In1]=>zio.ZIO[R1,E1,zio.Chunk[In]])(implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L,Z]", "kind" : "def"}, {"label" : "contramapChunks", "tail" : "(f: (Chunk[In1]) => Chunk[In])(trace: Trace): ZSink[R, E, In1, L, Z]", "member" : "zio.stream.ZSink.contramapChunks", "link" : "zio\/stream\/ZSink.html#contramapChunks[In1](f:zio.Chunk[In1]=>zio.Chunk[In])(implicittrace:zio.Trace):zio.stream.ZSink[R,E,In1,L,Z]", "kind" : "def"}, {"label" : "contramap", "tail" : "(f: (In1) => In)(trace: Trace): ZSink[R, E, In1, L, Z]", "member" : "zio.stream.ZSink.contramap", "link" : "zio\/stream\/ZSink.html#contramap[In1](f:In1=>In)(implicittrace:zio.Trace):zio.stream.ZSink[R,E,In1,L,Z]", "kind" : "def"}, {"label" : "collectLeftover", "tail" : "(trace: Trace): ZSink[R, E, In, Nothing, (Z, Chunk[L])]", "member" : "zio.stream.ZSink.collectLeftover", "link" : "zio\/stream\/ZSink.html#collectLeftover(implicittrace:zio.Trace):zio.stream.ZSink[R,E,In,Nothing,(Z,zio.Chunk[L])]", "kind" : "def"}, {"label" : "collectAllWhileWith", "tail" : "(z: => S)(p: (Z) => Boolean)(f: (S, Z) => S)(ev: <:<[L, In], trace: Trace): ZSink[R, E, In, L, S]", "member" : "zio.stream.ZSink.collectAllWhileWith", "link" : "zio\/stream\/ZSink.html#collectAllWhileWith[S](z:=>S)(p:Z=>Boolean)(f:(S,Z)=>S)(implicitev:L<:<In,implicittrace:zio.Trace):zio.stream.ZSink[R,E,In,L,S]", "kind" : "def"}, {"label" : "collectAll", "tail" : "(ev: <:<[L, In], trace: Trace): ZSink[R, E, In, L, Chunk[Z]]", "member" : "zio.stream.ZSink.collectAll", "link" : "zio\/stream\/ZSink.html#collectAll(implicitev:L<:<In,implicittrace:zio.Trace):zio.stream.ZSink[R,E,In,L,zio.Chunk[Z]]", "kind" : "def"}, {"label" : "as", "tail" : "(z: => Z2)(trace: Trace): ZSink[R, E, In, L, Z2]", "member" : "zio.stream.ZSink.as", "link" : "zio\/stream\/ZSink.html#as[Z2](z:=>Z2)(implicittrace:zio.Trace):zio.stream.ZSink[R,E,In,L,Z2]", "kind" : "def"}, {"label" : "<&", "tail" : "(that: => ZSink[R1, E1, In1, L1, Z1])(ev: <:<[L, In1], trace: Trace): ZSink[R1, E1, In1, L1, Z]", "member" : "zio.stream.ZSink.<&", "link" : "zio\/stream\/ZSink.html#<&[R1<:R,E1>:E,A0,In1<:In,L1>:L<:In1,Z1](that:=>zio.stream.ZSink[R1,E1,In1,L1,Z1])(implicitev:L<:<In1,implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L1,Z]", "kind" : "def"}, {"label" : "<*", "tail" : "(that: => ZSink[R1, E1, In1, L1, Z1])(ev: <:<[L, In1], trace: Trace): ZSink[R1, E1, In1, L1, Z]", "member" : "zio.stream.ZSink.<*", "link" : "zio\/stream\/ZSink.html#<*[R1<:R,E1>:E,A0,In1<:In,L1>:L<:In1,Z1](that:=>zio.stream.ZSink[R1,E1,In1,L1,Z1])(implicitev:L<:<In1,implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L1,Z]", "kind" : "def"}, {"label" : "&>", "tail" : "(that: => ZSink[R1, E1, In1, L1, Z1])(ev: <:<[L, In1], trace: Trace): ZSink[R1, E1, In1, L1, Z1]", "member" : "zio.stream.ZSink.&>", "link" : "zio\/stream\/ZSink.html#&>[R1<:R,E1>:E,A0,In1<:In,L1>:L<:In1,Z1](that:=>zio.stream.ZSink[R1,E1,In1,L1,Z1])(implicitev:L<:<In1,implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L1,Z1]", "kind" : "def"}, {"label" : "*>", "tail" : "(that: => ZSink[R1, E1, In1, L1, Z1])(ev: <:<[L, In1], trace: Trace): ZSink[R1, E1, In1, L1, Z1]", "member" : "zio.stream.ZSink.*>", "link" : "zio\/stream\/ZSink.html#*>[R1<:R,E1>:E,A0,In1<:In,L1>:L<:In1,Z1](that:=>zio.stream.ZSink[R1,E1,In1,L1,Z1])(implicitev:L<:<In1,implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L1,Z1]", "kind" : "def"}, {"label" : "<&>", "tail" : "(that: => ZSink[R1, E1, In1, L1, Z1])(zippable: Zippable[Z, Z1], trace: Trace): ZSink[R1, E1, In1, L1, Out]", "member" : "zio.stream.ZSink.<&>", "link" : "zio\/stream\/ZSink.html#<&>[R1<:R,E1>:E,A0,In1<:In,L1>:L<:In1,Z1](that:=>zio.stream.ZSink[R1,E1,In1,L1,Z1])(implicitzippable:zio.Zippable[Z,Z1],implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L1,zippable.Out]", "kind" : "def"}, {"label" : "<*>", "tail" : "(that: => ZSink[R1, E1, In1, L1, Z1])(zippable: Zippable[Z, Z1], ev: <:<[L, In1], trace: Trace): ZSink[R1, E1, In1, L1, Out]", "member" : "zio.stream.ZSink.<*>", "link" : "zio\/stream\/ZSink.html#<*>[R1<:R,E1>:E,A0,In1<:In,L1>:L<:In1,Z1](that:=>zio.stream.ZSink[R1,E1,In1,L1,Z1])(implicitzippable:zio.Zippable[Z,Z1],implicitev:L<:<In1,implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L1,zippable.Out]", "kind" : "def"}, {"label" : "|", "tail" : "(that: => ZSink[R1, E1, In1, L1, Z1])(trace: Trace): ZSink[R1, E1, In1, L1, Z1]", "member" : "zio.stream.ZSink.|", "link" : "zio\/stream\/ZSink.html#|[R1<:R,E1>:E,In1<:In,L1>:L,Z1>:Z](that:=>zio.stream.ZSink[R1,E1,In1,L1,Z1])(implicittrace:zio.Trace):zio.stream.ZSink[R1,E1,In1,L1,Z1]", "kind" : "def"}, {"label" : "channel", "tail" : ": ZChannel[R, ZNothing, Chunk[In], Any, E, Chunk[L], Z]", "member" : "zio.stream.ZSink.channel", "link" : "zio\/stream\/ZSink.html#channel:zio.stream.ZChannel[R,zio.ZNothing,zio.Chunk[In],Any,E,zio.Chunk[L],Z]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/stream\/ZSink.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/stream\/ZSink.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/ZSink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/ZSink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/stream\/ZSink.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/stream\/ZSink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/stream\/ZSink.html#==(x$1:Any):Boolean", "kind" : "final def"}], "members_object" : [{"label" : "ProvideSomeLayer", "tail" : "", "member" : "zio.stream.ZSink.ProvideSomeLayer", "link" : "zio\/stream\/ZSink$.html#ProvideSomeLayer[R0,-R,+E,-In,+L,+Z]extendsAnyVal", "kind" : "final class"}, {"label" : "UnwrapScopedPartiallyApplied", "tail" : "", "member" : "zio.stream.ZSink.UnwrapScopedPartiallyApplied", "link" : "zio\/stream\/ZSink$.html#UnwrapScopedPartiallyApplied[R]extendsAnyVal", "kind" : "final class"}, {"label" : "ServiceWithSinkPartiallyApplied", "tail" : "", "member" : "zio.stream.ZSink.ServiceWithSinkPartiallyApplied", "link" : "zio\/stream\/ZSink$.html#ServiceWithSinkPartiallyApplied[Service]extendsAnyVal", "kind" : "final class"}, {"label" : "ServiceWithZIOPartiallyApplied", "tail" : "", "member" : "zio.stream.ZSink.ServiceWithZIOPartiallyApplied", "link" : "zio\/stream\/ZSink$.html#ServiceWithZIOPartiallyApplied[Service]extendsAnyVal", "kind" : "final class"}, {"label" : "ServiceWithPartiallyApplied", "tail" : "", "member" : "zio.stream.ZSink.ServiceWithPartiallyApplied", "link" : "zio\/stream\/ZSink$.html#ServiceWithPartiallyApplied[Service]extendsAnyVal", "kind" : "final class"}, {"label" : "ServiceAtPartiallyApplied", "tail" : "", "member" : "zio.stream.ZSink.ServiceAtPartiallyApplied", "link" : "zio\/stream\/ZSink$.html#ServiceAtPartiallyApplied[Service]extendsAnyVal", "kind" : "final class"}, {"label" : "EnvironmentWithSinkPartiallyApplied", "tail" : "", "member" : "zio.stream.ZSink.EnvironmentWithSinkPartiallyApplied", "link" : "zio\/stream\/ZSink$.html#EnvironmentWithSinkPartiallyApplied[R]extendsAnyVal", "kind" : "final class"}, {"label" : "EnvironmentWithZIOPartiallyApplied", "tail" : "", "member" : "zio.stream.ZSink.EnvironmentWithZIOPartiallyApplied", "link" : "zio\/stream\/ZSink$.html#EnvironmentWithZIOPartiallyApplied[R]extendsAnyVal", "kind" : "final class"}, {"label" : "EnvironmentWithPartiallyApplied", "tail" : "", "member" : "zio.stream.ZSink.EnvironmentWithPartiallyApplied", "link" : "zio\/stream\/ZSink$.html#EnvironmentWithPartiallyApplied[R]extendsAnyVal", "kind" : "final class"}, {"label" : "unwrapScopedWith", "tail" : "(f: (Scope) => ZIO[R, E, ZSink[R, E, In, L, Z]])(trace: Trace): ZSink[R, E, In, L, Z]", "member" : "zio.stream.ZSink.unwrapScopedWith", "link" : "zio\/stream\/ZSink$.html#unwrapScopedWith[R,E,In,L,Z](f:zio.Scope=>zio.ZIO[R,E,zio.stream.ZSink[R,E,In,L,Z]])(implicittrace:zio.Trace):zio.stream.ZSink[R,E,In,L,Z]", "kind" : "def"}, {"label" : "unwrapScoped", "tail" : "(): UnwrapScopedPartiallyApplied[R]", "member" : "zio.stream.ZSink.unwrapScoped", "link" : "zio\/stream\/ZSink$.html#unwrapScoped[R]:zio.stream.ZSink.UnwrapScopedPartiallyApplied[R]", "kind" : "def"}, {"label" : "unwrap", "tail" : "(zio: => ZIO[R, E, ZSink[R, E, In, L, Z]])(trace: Trace): ZSink[R, E, In, L, Z]", "member" : "zio.stream.ZSink.unwrap", "link" : "zio\/stream\/ZSink$.html#unwrap[R,E,In,L,Z](zio:=>zio.ZIO[R,E,zio.stream.ZSink[R,E,In,L,Z]])(implicittrace:zio.Trace):zio.stream.ZSink[R,E,In,L,Z]", "kind" : "def"}, {"label" : "timed", "tail" : "(trace: Trace): ZSink[Any, Nothing, Any, Nothing, zio.Duration]", "member" : "zio.stream.ZSink.timed", "link" : "zio\/stream\/ZSink$.html#timed(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,Any,Nothing,zio.Duration]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int)(trace: Trace): ZSink[Any, Nothing, In, In, Chunk[In]]", "member" : "zio.stream.ZSink.take", "link" : "zio\/stream\/ZSink$.html#take[In](n:Int)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,In,zio.Chunk[In]]", "kind" : "def"}, {"label" : "tags", "tail" : "(trace: Trace): ZSink[Any, Nothing, Any, Nothing, Set[MetricLabel]]", "member" : "zio.stream.ZSink.tags", "link" : "zio\/stream\/ZSink$.html#tags(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,Any,Nothing,Set[zio.metrics.MetricLabel]]", "kind" : "def"}, {"label" : "tagged", "tail" : "(tags: => Set[MetricLabel])(sink: ZSink[R, E, In, L, Z])(trace: Trace): ZSink[R, E, In, L, Z]", "member" : "zio.stream.ZSink.tagged", "link" : "zio\/stream\/ZSink$.html#tagged[R,E,In,L,Z](tags:=>Set[zio.metrics.MetricLabel])(sink:zio.stream.ZSink[R,E,In,L,Z])(implicittrace:zio.Trace):zio.stream.ZSink[R,E,In,L,Z]", "kind" : "def"}, {"label" : "tagged", "tail" : "(tag: => MetricLabel, tags: MetricLabel*)(sink: ZSink[R, E, In, L, Z])(trace: Trace): ZSink[R, E, In, L, Z]", "member" : "zio.stream.ZSink.tagged", "link" : "zio\/stream\/ZSink$.html#tagged[R,E,In,L,Z](tag:=>zio.metrics.MetricLabel,tags:zio.metrics.MetricLabel*)(sink:zio.stream.ZSink[R,E,In,L,Z])(implicittrace:zio.Trace):zio.stream.ZSink[R,E,In,L,Z]", "kind" : "def"}, {"label" : "tagged", "tail" : "(key: => String, value: => String)(sink: ZSink[R, E, In, L, Z])(trace: Trace): ZSink[R, E, In, L, Z]", "member" : "zio.stream.ZSink.tagged", "link" : "zio\/stream\/ZSink$.html#tagged[R,E,In,L,Z](key:=>String,value:=>String)(sink:zio.stream.ZSink[R,E,In,L,Z])(implicittrace:zio.Trace):zio.stream.ZSink[R,E,In,L,Z]", "kind" : "def"}, {"label" : "sum", "tail" : "(A: Numeric[A], trace: Trace): ZSink[Any, Nothing, A, Nothing, A]", "member" : "zio.stream.ZSink.sum", "link" : "zio\/stream\/ZSink$.html#sum[A](implicitA:Numeric[A],implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,A,Nothing,A]", "kind" : "def"}, {"label" : "suspend", "tail" : "(sink: => ZSink[Env, E, In, Leftover, Done])(trace: Trace): ZSink[Env, E, In, Leftover, Done]", "member" : "zio.stream.ZSink.suspend", "link" : "zio\/stream\/ZSink$.html#suspend[Env,E,In,Leftover,Done](sink:=>zio.stream.ZSink[Env,E,In,Leftover,Done])(implicittrace:zio.Trace):zio.stream.ZSink[Env,E,In,Leftover,Done]", "kind" : "def"}, {"label" : "succeed", "tail" : "(z: => Z)(trace: Trace): ZSink[Any, Nothing, Any, Nothing, Z]", "member" : "zio.stream.ZSink.succeed", "link" : "zio\/stream\/ZSink$.html#succeed[Z](z:=>Z)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,Any,Nothing,Z]", "kind" : "def"}, {"label" : "serviceWithSink", "tail" : "(): ServiceWithSinkPartiallyApplied[Service]", "member" : "zio.stream.ZSink.serviceWithSink", "link" : "zio\/stream\/ZSink$.html#serviceWithSink[Service]:zio.stream.ZSink.ServiceWithSinkPartiallyApplied[Service]", "kind" : "def"}, {"label" : "serviceWithZIO", "tail" : "(): ServiceWithZIOPartiallyApplied[Service]", "member" : "zio.stream.ZSink.serviceWithZIO", "link" : "zio\/stream\/ZSink$.html#serviceWithZIO[Service]:zio.stream.ZSink.ServiceWithZIOPartiallyApplied[Service]", "kind" : "def"}, {"label" : "serviceWith", "tail" : "(): ServiceWithPartiallyApplied[Service]", "member" : "zio.stream.ZSink.serviceWith", "link" : "zio\/stream\/ZSink$.html#serviceWith[Service]:zio.stream.ZSink.ServiceWithPartiallyApplied[Service]", "kind" : "def"}, {"label" : "serviceAt", "tail" : "(): ZStream.ServiceAtPartiallyApplied[Service]", "member" : "zio.stream.ZSink.serviceAt", "link" : "zio\/stream\/ZSink$.html#serviceAt[Service]:zio.stream.ZStream.ServiceAtPartiallyApplied[Service]", "kind" : "def"}, {"label" : "service", "tail" : "(arg0: Tag[Z], trace: Trace): ZSink[Z, Nothing, Any, Nothing, Z]", "member" : "zio.stream.ZSink.service", "link" : "zio\/stream\/ZSink$.html#service[Z](implicitevidence$1:zio.Tag[Z],implicittrace:zio.Trace):zio.stream.ZSink[Z,Nothing,Any,Nothing,Z]", "kind" : "def"}, {"label" : "never", "tail" : "(trace: Trace): ZSink[Any, Nothing, Any, Nothing, Nothing]", "member" : "zio.stream.ZSink.never", "link" : "zio\/stream\/ZSink$.html#never(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,Any,Nothing,Nothing]", "kind" : "def"}, {"label" : "mkString", "tail" : "(trace: Trace): ZSink[Any, Nothing, Any, Nothing, String]", "member" : "zio.stream.ZSink.mkString", "link" : "zio\/stream\/ZSink$.html#mkString(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,Any,Nothing,String]", "kind" : "def"}, {"label" : "logWarning", "tail" : "(message: => String)(trace: Trace): ZSink[Any, Nothing, Any, Nothing, Unit]", "member" : "zio.stream.ZSink.logWarning", "link" : "zio\/stream\/ZSink$.html#logWarning(message:=>String)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,Any,Nothing,Unit]", "kind" : "def"}, {"label" : "logTrace", "tail" : "(message: => String)(trace: Trace): ZSink[Any, Nothing, Any, Nothing, Unit]", "member" : "zio.stream.ZSink.logTrace", "link" : "zio\/stream\/ZSink$.html#logTrace(message:=>String)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,Any,Nothing,Unit]", "kind" : "def"}, {"label" : "logSpan", "tail" : "(label: => String)(sink: ZSink[R, E, In, L, Z])(trace: Trace): ZSink[R, E, In, L, Z]", "member" : "zio.stream.ZSink.logSpan", "link" : "zio\/stream\/ZSink$.html#logSpan[R,E,In,L,Z](label:=>String)(sink:zio.stream.ZSink[R,E,In,L,Z])(implicittrace:zio.Trace):zio.stream.ZSink[R,E,In,L,Z]", "kind" : "def"}, {"label" : "logLevel", "tail" : "(level: LogLevel)(sink: ZSink[R, E, In, L, Z])(trace: Trace): ZSink[R, E, In, L, Z]", "member" : "zio.stream.ZSink.logLevel", "link" : "zio\/stream\/ZSink$.html#logLevel[R,E,In,L,Z](level:zio.LogLevel)(sink:zio.stream.ZSink[R,E,In,L,Z])(implicittrace:zio.Trace):zio.stream.ZSink[R,E,In,L,Z]", "kind" : "def"}, {"label" : "logInfo", "tail" : "(message: => String)(trace: Trace): ZSink[Any, Nothing, Any, Nothing, Unit]", "member" : "zio.stream.ZSink.logInfo", "link" : "zio\/stream\/ZSink$.html#logInfo(message:=>String)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,Any,Nothing,Unit]", "kind" : "def"}, {"label" : "logFatal", "tail" : "(message: => String)(trace: Trace): ZSink[Any, Nothing, Any, Nothing, Unit]", "member" : "zio.stream.ZSink.logFatal", "link" : "zio\/stream\/ZSink$.html#logFatal(message:=>String)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,Any,Nothing,Unit]", "kind" : "def"}, {"label" : "logErrorCause", "tail" : "(cause: => Cause[Any])(trace: Trace): ZSink[Any, Nothing, Any, Nothing, Unit]", "member" : "zio.stream.ZSink.logErrorCause", "link" : "zio\/stream\/ZSink$.html#logErrorCause(cause:=>zio.Cause[Any])(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,Any,Nothing,Unit]", "kind" : "def"}, {"label" : "logError", "tail" : "(message: => String)(trace: Trace): ZSink[Any, Nothing, Any, Nothing, Unit]", "member" : "zio.stream.ZSink.logError", "link" : "zio\/stream\/ZSink$.html#logError(message:=>String)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,Any,Nothing,Unit]", "kind" : "def"}, {"label" : "logDebug", "tail" : "(message: => String)(trace: Trace): ZSink[Any, Nothing, Any, Nothing, Unit]", "member" : "zio.stream.ZSink.logDebug", "link" : "zio\/stream\/ZSink$.html#logDebug(message:=>String)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,Any,Nothing,Unit]", "kind" : "def"}, {"label" : "logAnnotations", "tail" : "(trace: Trace): ZSink[Any, Nothing, Any, Nothing, Map[String, String]]", "member" : "zio.stream.ZSink.logAnnotations", "link" : "zio\/stream\/ZSink$.html#logAnnotations(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,Any,Nothing,Map[String,String]]", "kind" : "def"}, {"label" : "logAnnotate", "tail" : "(annotations: => Set[LogAnnotation])(sink: ZSink[R, E, In, L, Z])(trace: Trace): ZSink[R, E, In, L, Z]", "member" : "zio.stream.ZSink.logAnnotate", "link" : "zio\/stream\/ZSink$.html#logAnnotate[R,E,In,L,Z](annotations:=>Set[zio.LogAnnotation])(sink:zio.stream.ZSink[R,E,In,L,Z])(implicittrace:zio.Trace):zio.stream.ZSink[R,E,In,L,Z]", "kind" : "def"}, {"label" : "logAnnotate", "tail" : "(annotation: => LogAnnotation, annotations: LogAnnotation*)(sink: ZSink[R, E, In, L, Z])(trace: Trace): ZSink[R, E, In, L, Z]", "member" : "zio.stream.ZSink.logAnnotate", "link" : "zio\/stream\/ZSink$.html#logAnnotate[R,E,In,L,Z](annotation:=>zio.LogAnnotation,annotations:zio.LogAnnotation*)(sink:zio.stream.ZSink[R,E,In,L,Z])(implicittrace:zio.Trace):zio.stream.ZSink[R,E,In,L,Z]", "kind" : "def"}, {"label" : "logAnnotate", "tail" : "(key: => String, value: => String)(sink: ZSink[R, E, In, L, Z])(trace: Trace): ZSink[R, E, In, L, Z]", "member" : "zio.stream.ZSink.logAnnotate", "link" : "zio\/stream\/ZSink$.html#logAnnotate[R,E,In,L,Z](key:=>String,value:=>String)(sink:zio.stream.ZSink[R,E,In,L,Z])(implicittrace:zio.Trace):zio.stream.ZSink[R,E,In,L,Z]", "kind" : "def"}, {"label" : "log", "tail" : "(message: => String)(trace: Trace): ZSink[Any, Nothing, Any, Nothing, Unit]", "member" : "zio.stream.ZSink.log", "link" : "zio\/stream\/ZSink$.html#log(message:=>String)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,Any,Nothing,Unit]", "kind" : "def"}, {"label" : "leftover", "tail" : "(c: => Chunk[L])(trace: Trace): ZSink[Any, Nothing, Any, L, Unit]", "member" : "zio.stream.ZSink.leftover", "link" : "zio\/stream\/ZSink$.html#leftover[L](c:=>zio.Chunk[L])(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,Any,L,Unit]", "kind" : "def"}, {"label" : "last", "tail" : "(trace: Trace): ZSink[Any, Nothing, In, Nothing, Option[In]]", "member" : "zio.stream.ZSink.last", "link" : "zio\/stream\/ZSink$.html#last[In](implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,Nothing,Option[In]]", "kind" : "def"}, {"label" : "head", "tail" : "(trace: Trace): ZSink[Any, Nothing, In, In, Option[In]]", "member" : "zio.stream.ZSink.head", "link" : "zio\/stream\/ZSink$.html#head[In](implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,In,Option[In]]", "kind" : "def"}, {"label" : "fromHubWithShutdown", "tail" : "(hub: => Hub[I])(trace: Trace): ZSink[Any, Nothing, I, Nothing, Unit]", "member" : "zio.stream.ZSink.fromHubWithShutdown", "link" : "zio\/stream\/ZSink$.html#fromHubWithShutdown[I](hub:=>zio.Hub[I])(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,I,Nothing,Unit]", "kind" : "def"}, {"label" : "fromHub", "tail" : "(hub: => Hub[I])(trace: Trace): ZSink[Any, Nothing, I, Nothing, Unit]", "member" : "zio.stream.ZSink.fromHub", "link" : "zio\/stream\/ZSink$.html#fromHub[I](hub:=>zio.Hub[I])(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,I,Nothing,Unit]", "kind" : "def"}, {"label" : "fromQueueWithShutdown", "tail" : "(queue: => Enqueue[I])(trace: Trace): ZSink[Any, Nothing, I, Nothing, Unit]", "member" : "zio.stream.ZSink.fromQueueWithShutdown", "link" : "zio\/stream\/ZSink$.html#fromQueueWithShutdown[I](queue:=>zio.Enqueue[I])(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,I,Nothing,Unit]", "kind" : "def"}, {"label" : "fromQueue", "tail" : "(queue: => Enqueue[I])(trace: Trace): ZSink[Any, Nothing, I, Nothing, Unit]", "member" : "zio.stream.ZSink.fromQueue", "link" : "zio\/stream\/ZSink$.html#fromQueue[I](queue:=>zio.Enqueue[I])(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,I,Nothing,Unit]", "kind" : "def"}, {"label" : "fromZIO", "tail" : "(b: => ZIO[R, E, Z])(trace: Trace): ZSink[R, E, Any, Nothing, Z]", "member" : "zio.stream.ZSink.fromZIO", "link" : "zio\/stream\/ZSink$.html#fromZIO[R,E,Z](b:=>zio.ZIO[R,E,Z])(implicittrace:zio.Trace):zio.stream.ZSink[R,E,Any,Nothing,Z]", "kind" : "def"}, {"label" : "fromPush", "tail" : "(push: ZIO[Scope with R, Nothing, (Option[Chunk[I]]) => ZIO[R, (Either[E, Z], Chunk[L]), Unit]])(trace: Trace): ZSink[R, E, I, L, Z]", "member" : "zio.stream.ZSink.fromPush", "link" : "zio\/stream\/ZSink$.html#fromPush[R,E,I,L,Z](push:zio.ZIO[zio.ScopewithR,Nothing,Option[zio.Chunk[I]]=>zio.ZIO[R,(Either[E,Z],zio.Chunk[L]),Unit]])(implicittrace:zio.Trace):zio.stream.ZSink[R,E,I,L,Z]", "kind" : "def"}, {"label" : "fromChannel", "tail" : "(channel: ZChannel[R, ZNothing, Chunk[In], Any, E, Chunk[L], Z]): ZSink[R, E, In, L, Z]", "member" : "zio.stream.ZSink.fromChannel", "link" : "zio\/stream\/ZSink$.html#fromChannel[R,E,In,L,Z](channel:zio.stream.ZChannel[R,zio.ZNothing,zio.Chunk[In],Any,E,zio.Chunk[L],Z]):zio.stream.ZSink[R,E,In,L,Z]", "kind" : "def"}, {"label" : "foreachChunkWhile", "tail" : "(f: (Chunk[In]) => ZIO[R, Err, Boolean])(trace: Trace): ZSink[R, Err, In, In, Unit]", "member" : "zio.stream.ZSink.foreachChunkWhile", "link" : "zio\/stream\/ZSink$.html#foreachChunkWhile[R,Err,In](f:zio.Chunk[In]=>zio.ZIO[R,Err,Boolean])(implicittrace:zio.Trace):zio.stream.ZSink[R,Err,In,In,Unit]", "kind" : "def"}, {"label" : "foreachWhile", "tail" : "(f: (In) => ZIO[R, Err, Boolean])(trace: Trace): ZSink[R, Err, In, In, Unit]", "member" : "zio.stream.ZSink.foreachWhile", "link" : "zio\/stream\/ZSink$.html#foreachWhile[R,Err,In](f:In=>zio.ZIO[R,Err,Boolean])(implicittrace:zio.Trace):zio.stream.ZSink[R,Err,In,In,Unit]", "kind" : "def"}, {"label" : "foreachChunk", "tail" : "(f: (Chunk[In]) => ZIO[R, Err, Any])(trace: Trace): ZSink[R, Err, In, Nothing, Unit]", "member" : "zio.stream.ZSink.foreachChunk", "link" : "zio\/stream\/ZSink$.html#foreachChunk[R,Err,In](f:zio.Chunk[In]=>zio.ZIO[R,Err,Any])(implicittrace:zio.Trace):zio.stream.ZSink[R,Err,In,Nothing,Unit]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (In) => ZIO[R, Err, Any])(trace: Trace): ZSink[R, Err, In, Nothing, Unit]", "member" : "zio.stream.ZSink.foreach", "link" : "zio\/stream\/ZSink$.html#foreach[R,Err,In](f:In=>zio.ZIO[R,Err,Any])(implicittrace:zio.Trace):zio.stream.ZSink[R,Err,In,Nothing,Unit]", "kind" : "def"}, {"label" : "forall", "tail" : "(f: (In) => Boolean)(trace: Trace): ZSink[Any, Nothing, In, In, Boolean]", "member" : "zio.stream.ZSink.forall", "link" : "zio\/stream\/ZSink$.html#forall[In](f:In=>Boolean)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,In,Boolean]", "kind" : "def"}, {"label" : "foldZIO", "tail" : "(z: => S)(contFn: (S) => Boolean)(f: (S, In) => ZIO[Env, Err, S])(trace: Trace): ZSink[Env, Err, In, In, S]", "member" : "zio.stream.ZSink.foldZIO", "link" : "zio\/stream\/ZSink$.html#foldZIO[Env,Err,In,S](z:=>S)(contFn:S=>Boolean)(f:(S,In)=>zio.ZIO[Env,Err,S])(implicittrace:zio.Trace):zio.stream.ZSink[Env,Err,In,In,S]", "kind" : "def"}, {"label" : "foldWeightedZIO", "tail" : "(z: => S)(costFn: (S, In) => ZIO[Env, Err, Long], max: Long)(f: (S, In) => ZIO[Env, Err, S])(trace: Trace): ZSink[Env, Err, In, In, S]", "member" : "zio.stream.ZSink.foldWeightedZIO", "link" : "zio\/stream\/ZSink$.html#foldWeightedZIO[Env,Err,In,S](z:=>S)(costFn:(S,In)=>zio.ZIO[Env,Err,Long],max:Long)(f:(S,In)=>zio.ZIO[Env,Err,S])(implicittrace:zio.Trace):zio.stream.ZSink[Env,Err,In,In,S]", "kind" : "def"}, {"label" : "foldWeightedDecomposeZIO", "tail" : "(z: => S)(costFn: (S, In) => ZIO[Env, Err, Long], max: => Long, decompose: (In) => ZIO[Env, Err, Chunk[In]])(f: (S, In) => ZIO[Env, Err, S])(trace: Trace): ZSink[Env, Err, In, In, S]", "member" : "zio.stream.ZSink.foldWeightedDecomposeZIO", "link" : "zio\/stream\/ZSink$.html#foldWeightedDecomposeZIO[Env,Err,In,S](z:=>S)(costFn:(S,In)=>zio.ZIO[Env,Err,Long],max:=>Long,decompose:In=>zio.ZIO[Env,Err,zio.Chunk[In]])(f:(S,In)=>zio.ZIO[Env,Err,S])(implicittrace:zio.Trace):zio.stream.ZSink[Env,Err,In,In,S]", "kind" : "def"}, {"label" : "foldWeightedDecompose", "tail" : "(z: => S)(costFn: (S, In) => Long, max: => Long, decompose: (In) => Chunk[In])(f: (S, In) => S)(trace: Trace): ZSink[Any, Nothing, In, In, S]", "member" : "zio.stream.ZSink.foldWeightedDecompose", "link" : "zio\/stream\/ZSink$.html#foldWeightedDecompose[In,S](z:=>S)(costFn:(S,In)=>Long,max:=>Long,decompose:In=>zio.Chunk[In])(f:(S,In)=>S)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,In,S]", "kind" : "def"}, {"label" : "foldWeighted", "tail" : "(z: => S)(costFn: (S, In) => Long, max: => Long)(f: (S, In) => S)(trace: Trace): ZSink[Any, Nothing, In, In, S]", "member" : "zio.stream.ZSink.foldWeighted", "link" : "zio\/stream\/ZSink$.html#foldWeighted[In,S](z:=>S)(costFn:(S,In)=>Long,max:=>Long)(f:(S,In)=>S)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,In,S]", "kind" : "def"}, {"label" : "foldUntilZIO", "tail" : "(z: => S, max: => Long)(f: (S, In) => ZIO[Env, Err, S])(trace: Trace): ZSink[Env, Err, In, In, S]", "member" : "zio.stream.ZSink.foldUntilZIO", "link" : "zio\/stream\/ZSink$.html#foldUntilZIO[Env,Err,In,S](z:=>S,max:=>Long)(f:(S,In)=>zio.ZIO[Env,Err,S])(implicittrace:zio.Trace):zio.stream.ZSink[Env,Err,In,In,S]", "kind" : "def"}, {"label" : "foldUntil", "tail" : "(z: => S, max: => Long)(f: (S, In) => S)(trace: Trace): ZSink[Any, Nothing, In, In, S]", "member" : "zio.stream.ZSink.foldUntil", "link" : "zio\/stream\/ZSink$.html#foldUntil[In,S](z:=>S,max:=>Long)(f:(S,In)=>S)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,In,S]", "kind" : "def"}, {"label" : "foldLeftZIO", "tail" : "(z: => S)(f: (S, In) => ZIO[R, Err, S])(trace: Trace): ZSink[R, Err, In, Nothing, S]", "member" : "zio.stream.ZSink.foldLeftZIO", "link" : "zio\/stream\/ZSink$.html#foldLeftZIO[R,Err,In,S](z:=>S)(f:(S,In)=>zio.ZIO[R,Err,S])(implicittrace:zio.Trace):zio.stream.ZSink[R,Err,In,Nothing,S]", "kind" : "def"}, {"label" : "foldLeftChunksZIO", "tail" : "(z: => S)(f: (S, Chunk[In]) => ZIO[R, Err, S])(trace: Trace): ZSink[R, Err, In, Nothing, S]", "member" : "zio.stream.ZSink.foldLeftChunksZIO", "link" : "zio\/stream\/ZSink$.html#foldLeftChunksZIO[R,Err,In,S](z:=>S)(f:(S,zio.Chunk[In])=>zio.ZIO[R,Err,S])(implicittrace:zio.Trace):zio.stream.ZSink[R,Err,In,Nothing,S]", "kind" : "def"}, {"label" : "foldLeftChunks", "tail" : "(z: => S)(f: (S, Chunk[In]) => S)(trace: Trace): ZSink[Any, Nothing, In, Nothing, S]", "member" : "zio.stream.ZSink.foldLeftChunks", "link" : "zio\/stream\/ZSink$.html#foldLeftChunks[In,S](z:=>S)(f:(S,zio.Chunk[In])=>S)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,Nothing,S]", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: => S)(f: (S, In) => S)(trace: Trace): ZSink[Any, Nothing, In, Nothing, S]", "member" : "zio.stream.ZSink.foldLeft", "link" : "zio\/stream\/ZSink$.html#foldLeft[In,S](z:=>S)(f:(S,In)=>S)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,Nothing,S]", "kind" : "def"}, {"label" : "foldChunksZIO", "tail" : "(z: => S)(contFn: (S) => Boolean)(f: (S, Chunk[In]) => ZIO[Env, Err, S])(trace: Trace): ZSink[Env, Err, In, In, S]", "member" : "zio.stream.ZSink.foldChunksZIO", "link" : "zio\/stream\/ZSink$.html#foldChunksZIO[Env,Err,In,S](z:=>S)(contFn:S=>Boolean)(f:(S,zio.Chunk[In])=>zio.ZIO[Env,Err,S])(implicittrace:zio.Trace):zio.stream.ZSink[Env,Err,In,In,S]", "kind" : "def"}, {"label" : "foldChunks", "tail" : "(z: => S)(contFn: (S) => Boolean)(f: (S, Chunk[In]) => S)(trace: Trace): ZSink[Any, Nothing, In, Nothing, S]", "member" : "zio.stream.ZSink.foldChunks", "link" : "zio\/stream\/ZSink$.html#foldChunks[In,S](z:=>S)(contFn:S=>Boolean)(f:(S,zio.Chunk[In])=>S)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,Nothing,S]", "kind" : "def"}, {"label" : "fold", "tail" : "(z: => S)(contFn: (S) => Boolean)(f: (S, In) => S)(trace: Trace): ZSink[Any, Nothing, In, In, S]", "member" : "zio.stream.ZSink.fold", "link" : "zio\/stream\/ZSink$.html#fold[In,S](z:=>S)(contFn:S=>Boolean)(f:(S,In)=>S)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,In,S]", "kind" : "def"}, {"label" : "failCause", "tail" : "(e: => Cause[E])(trace: Trace): ZSink[Any, E, Any, Nothing, Nothing]", "member" : "zio.stream.ZSink.failCause", "link" : "zio\/stream\/ZSink$.html#failCause[E](e:=>zio.Cause[E])(implicittrace:zio.Trace):zio.stream.ZSink[Any,E,Any,Nothing,Nothing]", "kind" : "def"}, {"label" : "fail", "tail" : "(e: => E)(trace: Trace): ZSink[Any, E, Any, Nothing, Nothing]", "member" : "zio.stream.ZSink.fail", "link" : "zio\/stream\/ZSink$.html#fail[E](e:=>E)(implicittrace:zio.Trace):zio.stream.ZSink[Any,E,Any,Nothing,Nothing]", "kind" : "def"}, {"label" : "exists", "tail" : "(f: (In) => Boolean)(trace: Trace): ZSink[Any, Nothing, In, In, Boolean]", "member" : "zio.stream.ZSink.exists", "link" : "zio\/stream\/ZSink$.html#exists[In](f:In=>Boolean)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,In,Boolean]", "kind" : "def"}, {"label" : "environmentWithSink", "tail" : "(): EnvironmentWithSinkPartiallyApplied[R]", "member" : "zio.stream.ZSink.environmentWithSink", "link" : "zio\/stream\/ZSink$.html#environmentWithSink[R]:zio.stream.ZSink.EnvironmentWithSinkPartiallyApplied[R]", "kind" : "def"}, {"label" : "environmentWithZIO", "tail" : "(): EnvironmentWithZIOPartiallyApplied[R]", "member" : "zio.stream.ZSink.environmentWithZIO", "link" : "zio\/stream\/ZSink$.html#environmentWithZIO[R]:zio.stream.ZSink.EnvironmentWithZIOPartiallyApplied[R]", "kind" : "def"}, {"label" : "environmentWith", "tail" : "(): EnvironmentWithPartiallyApplied[R]", "member" : "zio.stream.ZSink.environmentWith", "link" : "zio\/stream\/ZSink$.html#environmentWith[R]:zio.stream.ZSink.EnvironmentWithPartiallyApplied[R]", "kind" : "def"}, {"label" : "environment", "tail" : "(trace: Trace): ZSink[R, Nothing, Any, Nothing, ZEnvironment[R]]", "member" : "zio.stream.ZSink.environment", "link" : "zio\/stream\/ZSink$.html#environment[R](implicittrace:zio.Trace):zio.stream.ZSink[R,Nothing,Any,Nothing,zio.ZEnvironment[R]]", "kind" : "def"}, {"label" : "dropWhileZIO", "tail" : "(p: (In) => ZIO[R, InErr, Boolean])(trace: Trace): ZSink[R, InErr, In, In, Any]", "member" : "zio.stream.ZSink.dropWhileZIO", "link" : "zio\/stream\/ZSink$.html#dropWhileZIO[R,InErr,In](p:In=>zio.ZIO[R,InErr,Boolean])(implicittrace:zio.Trace):zio.stream.ZSink[R,InErr,In,In,Any]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (In) => Boolean)(trace: Trace): ZSink[Any, Nothing, In, In, Any]", "member" : "zio.stream.ZSink.dropWhile", "link" : "zio\/stream\/ZSink$.html#dropWhile[In](p:In=>Boolean)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,In,Any]", "kind" : "def"}, {"label" : "dropUntilZIO", "tail" : "(p: (In) => ZIO[R, InErr, Boolean])(trace: Trace): ZSink[R, InErr, In, In, Any]", "member" : "zio.stream.ZSink.dropUntilZIO", "link" : "zio\/stream\/ZSink$.html#dropUntilZIO[R,InErr,In](p:In=>zio.ZIO[R,InErr,Boolean])(implicittrace:zio.Trace):zio.stream.ZSink[R,InErr,In,In,Any]", "kind" : "def"}, {"label" : "dropUntil", "tail" : "(p: (In) => Boolean)(trace: Trace): ZSink[Any, Nothing, In, In, Any]", "member" : "zio.stream.ZSink.dropUntil", "link" : "zio\/stream\/ZSink$.html#dropUntil[In](p:In=>Boolean)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,In,Any]", "kind" : "def"}, {"label" : "drain", "tail" : "(trace: Trace): ZSink[Any, Nothing, Any, Nothing, Unit]", "member" : "zio.stream.ZSink.drain", "link" : "zio\/stream\/ZSink$.html#drain(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,Any,Nothing,Unit]", "kind" : "def"}, {"label" : "dieMessage", "tail" : "(m: => String)(trace: Trace): ZSink[Any, Nothing, Any, Nothing, Nothing]", "member" : "zio.stream.ZSink.dieMessage", "link" : "zio\/stream\/ZSink$.html#dieMessage(m:=>String)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,Any,Nothing,Nothing]", "kind" : "def"}, {"label" : "die", "tail" : "(e: => Throwable)(trace: Trace): ZSink[Any, Nothing, Any, Nothing, Nothing]", "member" : "zio.stream.ZSink.die", "link" : "zio\/stream\/ZSink$.html#die(e:=>Throwable)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,Any,Nothing,Nothing]", "kind" : "def"}, {"label" : "count", "tail" : "(trace: Trace): ZSink[Any, Nothing, Any, Nothing, Long]", "member" : "zio.stream.ZSink.count", "link" : "zio\/stream\/ZSink$.html#count(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,Any,Nothing,Long]", "kind" : "def"}, {"label" : "collectAllWhileZIO", "tail" : "(p: (In) => ZIO[Env, Err, Boolean])(trace: Trace): ZSink[Env, Err, In, In, Chunk[In]]", "member" : "zio.stream.ZSink.collectAllWhileZIO", "link" : "zio\/stream\/ZSink$.html#collectAllWhileZIO[Env,Err,In](p:In=>zio.ZIO[Env,Err,Boolean])(implicittrace:zio.Trace):zio.stream.ZSink[Env,Err,In,In,zio.Chunk[In]]", "kind" : "def"}, {"label" : "collectAllWhile", "tail" : "(p: (In) => Boolean)(trace: Trace): ZSink[Any, Nothing, In, In, Chunk[In]]", "member" : "zio.stream.ZSink.collectAllWhile", "link" : "zio\/stream\/ZSink$.html#collectAllWhile[In](p:In=>Boolean)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,In,zio.Chunk[In]]", "kind" : "def"}, {"label" : "collectAllUntilZIO", "tail" : "(p: (In) => ZIO[Env, Err, Boolean])(trace: Trace): ZSink[Env, Err, In, In, Chunk[In]]", "member" : "zio.stream.ZSink.collectAllUntilZIO", "link" : "zio\/stream\/ZSink$.html#collectAllUntilZIO[Env,Err,In](p:In=>zio.ZIO[Env,Err,Boolean])(implicittrace:zio.Trace):zio.stream.ZSink[Env,Err,In,In,zio.Chunk[In]]", "kind" : "def"}, {"label" : "collectAllUntil", "tail" : "(p: (In) => Boolean)(trace: Trace): ZSink[Any, Nothing, In, In, Chunk[In]]", "member" : "zio.stream.ZSink.collectAllUntil", "link" : "zio\/stream\/ZSink$.html#collectAllUntil[In](p:In=>Boolean)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,In,zio.Chunk[In]]", "kind" : "def"}, {"label" : "collectAllToSetN", "tail" : "(n: => Long)(trace: Trace): ZSink[Any, Nothing, In, In, Set[In]]", "member" : "zio.stream.ZSink.collectAllToSetN", "link" : "zio\/stream\/ZSink$.html#collectAllToSetN[In](n:=>Long)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,In,Set[In]]", "kind" : "def"}, {"label" : "collectAllToSet", "tail" : "(trace: Trace): ZSink[Any, Nothing, In, Nothing, Set[In]]", "member" : "zio.stream.ZSink.collectAllToSet", "link" : "zio\/stream\/ZSink$.html#collectAllToSet[In](implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,Nothing,Set[In]]", "kind" : "def"}, {"label" : "collectAllToMapValueN", "tail" : "(n: => Long)(key: (In) => K)(value: (In) => V)(f: (V, V) => V)(trace: Trace): ZSink[Any, Err, In, In, Map[K, V]]", "member" : "zio.stream.ZSink.collectAllToMapValueN", "link" : "zio\/stream\/ZSink$.html#collectAllToMapValueN[Err,In,K,V](n:=>Long)(key:In=>K)(value:In=>V)(f:(V,V)=>V)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Err,In,In,Map[K,V]]", "kind" : "def"}, {"label" : "collectAllToMapValue", "tail" : "(key: (In) => K)(value: (In) => V)(f: (V, V) => V)(trace: Trace): ZSink[Any, Nothing, In, Nothing, Map[K, V]]", "member" : "zio.stream.ZSink.collectAllToMapValue", "link" : "zio\/stream\/ZSink$.html#collectAllToMapValue[In,K,V](key:In=>K)(value:In=>V)(f:(V,V)=>V)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,Nothing,Map[K,V]]", "kind" : "def"}, {"label" : "collectAllToMapN", "tail" : "(n: => Long)(key: (In) => K)(f: (In, In) => In)(trace: Trace): ZSink[Any, Err, In, In, Map[K, In]]", "member" : "zio.stream.ZSink.collectAllToMapN", "link" : "zio\/stream\/ZSink$.html#collectAllToMapN[Err,In,K](n:=>Long)(key:In=>K)(f:(In,In)=>In)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Err,In,In,Map[K,In]]", "kind" : "def"}, {"label" : "collectAllToMap", "tail" : "(key: (In) => K)(f: (In, In) => In)(trace: Trace): ZSink[Any, Nothing, In, Nothing, Map[K, In]]", "member" : "zio.stream.ZSink.collectAllToMap", "link" : "zio\/stream\/ZSink$.html#collectAllToMap[In,K](key:In=>K)(f:(In,In)=>In)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,Nothing,Map[K,In]]", "kind" : "def"}, {"label" : "collectAllN", "tail" : "(n: => Int)(trace: Trace): ZSink[Any, Nothing, In, In, Chunk[In]]", "member" : "zio.stream.ZSink.collectAllN", "link" : "zio\/stream\/ZSink$.html#collectAllN[In](n:=>Int)(implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,In,zio.Chunk[In]]", "kind" : "def"}, {"label" : "collectAll", "tail" : "(trace: Trace): ZSink[Any, Nothing, In, Nothing, Chunk[In]]", "member" : "zio.stream.ZSink.collectAll", "link" : "zio\/stream\/ZSink$.html#collectAll[In](implicittrace:zio.Trace):zio.stream.ZSink[Any,Nothing,In,Nothing,zio.Chunk[In]]", "kind" : "def"}, {"label" : "fromOutputStreamScoped", "tail" : "(os: => ZIO[Scope, IOException, OutputStream])(trace: Trace): ZSink[Any, IOException, Byte, Byte, Long]", "member" : "zio.stream.ZSinkPlatformSpecificConstructors.fromOutputStreamScoped", "link" : "zio\/stream\/ZSink$.html#fromOutputStreamScoped(os:=>zio.ZIO[zio.Scope,java.io.IOException,java.io.OutputStream])(implicittrace:zio.Trace):zio.stream.ZSink[Any,java.io.IOException,Byte,Byte,Long]", "kind" : "final def"}, {"label" : "fromOutputStream", "tail" : "(os: => OutputStream)(trace: Trace): ZSink[Any, IOException, Byte, Byte, Long]", "member" : "zio.stream.ZSinkPlatformSpecificConstructors.fromOutputStream", "link" : "zio\/stream\/ZSink$.html#fromOutputStream(os:=>java.io.OutputStream)(implicittrace:zio.Trace):zio.stream.ZSink[Any,java.io.IOException,Byte,Byte,Long]", "kind" : "final def"}, {"label" : "fromPath", "tail" : "(path: => Path, position: => Long, options: => Set[OpenOption])(trace: Trace): ZSink[Any, Throwable, Byte, Byte, Long]", "member" : "zio.stream.ZSinkPlatformSpecificConstructors.fromPath", "link" : "zio\/stream\/ZSink$.html#fromPath(path:=>java.nio.file.Path,position:=>Long,options:=>Set[java.nio.file.OpenOption])(implicittrace:zio.Trace):zio.stream.ZSink[Any,Throwable,Byte,Byte,Long]", "kind" : "final def"}, {"label" : "fromFileURI", "tail" : "(uri: => URI, position: => Long, options: => Set[OpenOption])(trace: Trace): ZSink[Any, Throwable, Byte, Byte, Long]", "member" : "zio.stream.ZSinkPlatformSpecificConstructors.fromFileURI", "link" : "zio\/stream\/ZSink$.html#fromFileURI(uri:=>java.net.URI,position:=>Long,options:=>Set[java.nio.file.OpenOption])(implicittrace:zio.Trace):zio.stream.ZSink[Any,Throwable,Byte,Byte,Long]", "kind" : "final def"}, {"label" : "fromFileName", "tail" : "(name: => String, position: => Long, options: => Set[OpenOption])(trace: Trace): ZSink[Any, Throwable, Byte, Byte, Long]", "member" : "zio.stream.ZSinkPlatformSpecificConstructors.fromFileName", "link" : "zio\/stream\/ZSink$.html#fromFileName(name:=>String,position:=>Long,options:=>Set[java.nio.file.OpenOption])(implicittrace:zio.Trace):zio.stream.ZSink[Any,Throwable,Byte,Byte,Long]", "kind" : "final def"}, {"label" : "fromFile", "tail" : "(file: => File, position: => Long, options: => Set[OpenOption])(trace: Trace): ZSink[Any, Throwable, Byte, Byte, Long]", "member" : "zio.stream.ZSinkPlatformSpecificConstructors.fromFile", "link" : "zio\/stream\/ZSink$.html#fromFile(file:=>java.io.File,position:=>Long,options:=>Set[java.nio.file.OpenOption])(implicittrace:zio.Trace):zio.stream.ZSink[Any,Throwable,Byte,Byte,Long]", "kind" : "final def"}, {"label" : "digest", "tail" : "(digest: => MessageDigest): ZSink[Any, Nothing, Byte, Nothing, Chunk[Byte]]", "member" : "zio.stream.ZSinkPlatformSpecificConstructors.digest", "link" : "zio\/stream\/ZSink$.html#digest(digest:=>java.security.MessageDigest):zio.stream.ZSink[Any,Nothing,Byte,Nothing,zio.Chunk[Byte]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/ZSink$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/ZSink$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/ZSink$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/ZSink$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/ZSink$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/ZSink$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/ZSink$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/ZSink$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/ZSink$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/ZSink$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stream\/ZSink$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/ZSink$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZSink$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZSink$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZSink$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stream\/ZSink$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/ZSink$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/ZSink$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/ZSink$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/stream\/ZSink.html", "kind" : "class"}, {"name" : "zio.stream.ZStream", "shortDescription" : "", "object" : "zio\/stream\/ZStream$.html", "members_class" : [{"label" : "zipWithPreviousAndNext", "tail" : "(trace: Trace): ZStream[R, E, (Option[A], A, Option[A])]", "member" : "zio.stream.ZStream.zipWithPreviousAndNext", "link" : "zio\/stream\/ZStream.html#zipWithPreviousAndNext(implicittrace:zio.Trace):zio.stream.ZStream[R,E,(Option[A],A,Option[A])]", "kind" : "def"}, {"label" : "zipWithPrevious", "tail" : "(trace: Trace): ZStream[R, E, (Option[A], A)]", "member" : "zio.stream.ZStream.zipWithPrevious", "link" : "zio\/stream\/ZStream.html#zipWithPrevious(implicittrace:zio.Trace):zio.stream.ZStream[R,E,(Option[A],A)]", "kind" : "def"}, {"label" : "zipWithNext", "tail" : "(trace: Trace): ZStream[R, E, (A, Option[A])]", "member" : "zio.stream.ZStream.zipWithNext", "link" : "zio\/stream\/ZStream.html#zipWithNext(implicittrace:zio.Trace):zio.stream.ZStream[R,E,(A,Option[A])]", "kind" : "def"}, {"label" : "zipWithLatest", "tail" : "(that: => ZStream[R1, E1, A2])(f: (A, A2) => A3)(trace: Trace): ZStream[R1, E1, A3]", "member" : "zio.stream.ZStream.zipWithLatest", "link" : "zio\/stream\/ZStream.html#zipWithLatest[R1<:R,E1>:E,A2,A3](that:=>zio.stream.ZStream[R1,E1,A2])(f:(A,A2)=>A3)(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A3]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(trace: Trace): ZStream[R, E, (A, Long)]", "member" : "zio.stream.ZStream.zipWithIndex", "link" : "zio\/stream\/ZStream.html#zipWithIndex(implicittrace:zio.Trace):zio.stream.ZStream[R,E,(A,Long)]", "kind" : "def"}, {"label" : "zipWithChunks", "tail" : "(that: => ZStream[R1, E1, A2])(f: (Chunk[A1], Chunk[A2]) => (Chunk[A3], Either[Chunk[A1], Chunk[A2]]))(trace: Trace): ZStream[R1, E1, A3]", "member" : "zio.stream.ZStream.zipWithChunks", "link" : "zio\/stream\/ZStream.html#zipWithChunks[R1<:R,E1>:E,A1>:A,A2,A3](that:=>zio.stream.ZStream[R1,E1,A2])(f:(zio.Chunk[A1],zio.Chunk[A2])=>(zio.Chunk[A3],Either[zio.Chunk[A1],zio.Chunk[A2]]))(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A3]", "kind" : "def"}, {"label" : "zipWith", "tail" : "(that: => ZStream[R1, E1, A2])(f: (A, A2) => A3)(trace: Trace): ZStream[R1, E1, A3]", "member" : "zio.stream.ZStream.zipWith", "link" : "zio\/stream\/ZStream.html#zipWith[R1<:R,E1>:E,A2,A3](that:=>zio.stream.ZStream[R1,E1,A2])(f:(A,A2)=>A3)(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A3]", "kind" : "def"}, {"label" : "zipRight", "tail" : "(that: => ZStream[R1, E1, A2])(trace: Trace): ZStream[R1, E1, A2]", "member" : "zio.stream.ZStream.zipRight", "link" : "zio\/stream\/ZStream.html#zipRight[R1<:R,E1>:E,A2](that:=>zio.stream.ZStream[R1,E1,A2])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A2]", "kind" : "def"}, {"label" : "zipLeft", "tail" : "(that: => ZStream[R1, E1, A2])(trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.zipLeft", "link" : "zio\/stream\/ZStream.html#zipLeft[R1<:R,E1>:E,A2](that:=>zio.stream.ZStream[R1,E1,A2])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "zipLatestWith", "tail" : "(that: => ZStream[R1, E1, A2])(f: (A, A2) => A3)(trace: Trace): ZStream[R1, E1, A3]", "member" : "zio.stream.ZStream.zipLatestWith", "link" : "zio\/stream\/ZStream.html#zipLatestWith[R1<:R,E1>:E,A2,A3](that:=>zio.stream.ZStream[R1,E1,A2])(f:(A,A2)=>A3)(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A3]", "kind" : "def"}, {"label" : "zipLatest", "tail" : "(that: => ZStream[R1, E1, A2])(zippable: Zippable[A, A2], trace: Trace): ZStream[R1, E1, Out]", "member" : "zio.stream.ZStream.zipLatest", "link" : "zio\/stream\/ZStream.html#zipLatest[R1<:R,E1>:E,A2,A3](that:=>zio.stream.ZStream[R1,E1,A2])(implicitzippable:zio.Zippable[A,A2],implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,zippable.Out]", "kind" : "def"}, {"label" : "zipAllWith", "tail" : "(that: => ZStream[R1, E1, A2])(left: (A) => A3, right: (A2) => A3)(both: (A, A2) => A3)(trace: Trace): ZStream[R1, E1, A3]", "member" : "zio.stream.ZStream.zipAllWith", "link" : "zio\/stream\/ZStream.html#zipAllWith[R1<:R,E1>:E,A2,A3](that:=>zio.stream.ZStream[R1,E1,A2])(left:A=>A3,right:A2=>A3)(both:(A,A2)=>A3)(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A3]", "kind" : "def"}, {"label" : "zipAllRight", "tail" : "(that: => ZStream[R1, E1, A2])(default: => A2)(trace: Trace): ZStream[R1, E1, A2]", "member" : "zio.stream.ZStream.zipAllRight", "link" : "zio\/stream\/ZStream.html#zipAllRight[R1<:R,E1>:E,A2](that:=>zio.stream.ZStream[R1,E1,A2])(default:=>A2)(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A2]", "kind" : "def"}, {"label" : "zipAllLeft", "tail" : "(that: => ZStream[R1, E1, A2])(default: => A1)(trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.zipAllLeft", "link" : "zio\/stream\/ZStream.html#zipAllLeft[R1<:R,E1>:E,A1>:A,A2](that:=>zio.stream.ZStream[R1,E1,A2])(default:=>A1)(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: => ZStream[R1, E1, A2])(defaultLeft: => A1, defaultRight: => A2)(trace: Trace): ZStream[R1, E1, (A1, A2)]", "member" : "zio.stream.ZStream.zipAll", "link" : "zio\/stream\/ZStream.html#zipAll[R1<:R,E1>:E,A1>:A,A2](that:=>zio.stream.ZStream[R1,E1,A2])(defaultLeft:=>A1,defaultRight:=>A2)(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,(A1,A2)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: => ZStream[R1, E1, A2])(zippable: Zippable[A, A2], trace: Trace): ZStream[R1, E1, Out]", "member" : "zio.stream.ZStream.zip", "link" : "zio\/stream\/ZStream.html#zip[R1<:R,E1>:E,A2](that:=>zio.stream.ZStream[R1,E1,A2])(implicitzippable:zio.Zippable[A,A2],implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,zippable.Out]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(predicate: (A) => Boolean)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.withFilter", "link" : "zio\/stream\/ZStream.html#withFilter(predicate:A=>Boolean)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "whenZIO", "tail" : "(b: => ZIO[R1, E1, Boolean])(trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.whenZIO", "link" : "zio\/stream\/ZStream.html#whenZIO[R1<:R,E1>:E](b:=>zio.ZIO[R1,E1,Boolean])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "when", "tail" : "(b: => Boolean)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.when", "link" : "zio\/stream\/ZStream.html#when(b:=>Boolean)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "viaFunction", "tail" : "(f: (ZStream[R, E, A]) => ZStream[R2, E2, B])(trace: Trace): ZStream[R2, E2, B]", "member" : "zio.stream.ZStream.viaFunction", "link" : "zio\/stream\/ZStream.html#viaFunction[R2,E2,B](f:zio.stream.ZStream[R,E,A]=>zio.stream.ZStream[R2,E2,B])(implicittrace:zio.Trace):zio.stream.ZStream[R2,E2,B]", "kind" : "def"}, {"label" : "via", "tail" : "(pipeline: => ZPipeline[R1, E1, A, B])(trace: Trace): ZStream[R1, E1, B]", "member" : "zio.stream.ZStream.via", "link" : "zio\/stream\/ZStream.html#via[R1<:R,E1>:E,B](pipeline:=>zio.stream.ZPipeline[R1,E1,A,B])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,B]", "kind" : "def"}, {"label" : "updateServiceAt", "tail" : "(): UpdateServiceAt[R, E, A, Service]", "member" : "zio.stream.ZStream.updateServiceAt", "link" : "zio\/stream\/ZStream.html#updateServiceAt[Service]:zio.stream.ZStream.UpdateServiceAt[R,E,A,Service]", "kind" : "def"}, {"label" : "updateService", "tail" : "(): UpdateService[R, E, A, M]", "member" : "zio.stream.ZStream.updateService", "link" : "zio\/stream\/ZStream.html#updateService[M]:zio.stream.ZStream.UpdateService[R,E,A,M]", "kind" : "def"}, {"label" : "transduce", "tail" : "(sink: => ZSink[R1, E1, A1, A1, Z])(trace: Trace): ZStream[R1, E1, Z]", "member" : "zio.stream.ZStream.transduce", "link" : "zio\/stream\/ZStream.html#transduce[R1<:R,E1>:E,A1>:A,Z](sink:=>zio.stream.ZSink[R1,E1,A1,A1,Z])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,Z]", "kind" : "def"}, {"label" : "toQueueUnbounded", "tail" : "(trace: Trace): ZIO[R with Scope, Nothing, Dequeue[Take[E, A]]]", "member" : "zio.stream.ZStream.toQueueUnbounded", "link" : "zio\/stream\/ZStream.html#toQueueUnbounded(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,zio.Dequeue[zio.stream.Take[E,A]]]", "kind" : "def"}, {"label" : "toQueueSliding", "tail" : "(capacity: => Int)(trace: Trace): ZIO[R with Scope, Nothing, Dequeue[Take[E, A]]]", "member" : "zio.stream.ZStream.toQueueSliding", "link" : "zio\/stream\/ZStream.html#toQueueSliding(capacity:=>Int)(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,zio.Dequeue[zio.stream.Take[E,A]]]", "kind" : "def"}, {"label" : "toQueueOfElements", "tail" : "(capacity: => Int)(trace: Trace): ZIO[R with Scope, Nothing, Dequeue[Exit[Option[E], A]]]", "member" : "zio.stream.ZStream.toQueueOfElements", "link" : "zio\/stream\/ZStream.html#toQueueOfElements(capacity:=>Int)(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,zio.Dequeue[zio.Exit[Option[E],A]]]", "kind" : "def"}, {"label" : "toQueueDropping", "tail" : "(capacity: => Int)(trace: Trace): ZIO[R with Scope, Nothing, Dequeue[Take[E, A]]]", "member" : "zio.stream.ZStream.toQueueDropping", "link" : "zio\/stream\/ZStream.html#toQueueDropping(capacity:=>Int)(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,zio.Dequeue[zio.stream.Take[E,A]]]", "kind" : "def"}, {"label" : "toQueue", "tail" : "(capacity: => Int)(trace: Trace): ZIO[R with Scope, Nothing, Dequeue[Take[E, A]]]", "member" : "zio.stream.ZStream.toQueue", "link" : "zio\/stream\/ZStream.html#toQueue(capacity:=>Int)(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,zio.Dequeue[zio.stream.Take[E,A]]]", "kind" : "def"}, {"label" : "toReader", "tail" : "(ev0: <:<[E, Throwable], ev1: <:<[A, Char], trace: Trace): ZIO[R with Scope, E, Reader]", "member" : "zio.stream.ZStream.toReader", "link" : "zio\/stream\/ZStream.html#toReader(implicitev0:E<:<Throwable,implicitev1:A<:<Char,implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,E,java.io.Reader]", "kind" : "def"}, {"label" : "toPull", "tail" : "(trace: Trace): ZIO[R with Scope, Nothing, ZIO[R, Option[E], Chunk[A]]]", "member" : "zio.stream.ZStream.toPull", "link" : "zio\/stream\/ZStream.html#toPull(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,zio.ZIO[R,Option[E],zio.Chunk[A]]]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(trace: Trace): ZIO[R with Scope, Nothing, Iterator[Either[E, A]]]", "member" : "zio.stream.ZStream.toIterator", "link" : "zio\/stream\/ZStream.html#toIterator(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,Iterator[Either[E,A]]]", "kind" : "def"}, {"label" : "toInputStream", "tail" : "(ev0: <:<[E, Throwable], ev1: <:<[A, Byte], trace: Trace): ZIO[R with Scope, E, InputStream]", "member" : "zio.stream.ZStream.toInputStream", "link" : "zio\/stream\/ZStream.html#toInputStream(implicitev0:E<:<Throwable,implicitev1:A<:<Byte,implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,E,java.io.InputStream]", "kind" : "def"}, {"label" : "toHub", "tail" : "(capacity: => Int)(trace: Trace): ZIO[R with Scope, Nothing, Hub[Take[E1, A1]]]", "member" : "zio.stream.ZStream.toHub", "link" : "zio\/stream\/ZStream.html#toHub[E1>:E,A1>:A](capacity:=>Int)(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,zio.Hub[zio.stream.Take[E1,A1]]]", "kind" : "def"}, {"label" : "toChannel", "tail" : "(): ZChannel[R, Any, Any, Any, E, Chunk[A], Any]", "member" : "zio.stream.ZStream.toChannel", "link" : "zio\/stream\/ZStream.html#toChannel:zio.stream.ZChannel[R,Any,Any,Any,E,zio.Chunk[A],Any]", "kind" : "def"}, {"label" : "timeoutTo", "tail" : "(d: => zio.Duration)(that: => ZStream[R1, E1, A2])(trace: Trace): ZStream[R1, E1, A2]", "member" : "zio.stream.ZStream.timeoutTo", "link" : "zio\/stream\/ZStream.html#timeoutTo[R1<:R,E1>:E,A2>:A](d:=>zio.Duration)(that:=>zio.stream.ZStream[R1,E1,A2])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A2]", "kind" : "def"}, {"label" : "timeoutFailCause", "tail" : "(cause: => Cause[E1])(d: => zio.Duration)(trace: Trace): ZStream[R, E1, A]", "member" : "zio.stream.ZStream.timeoutFailCause", "link" : "zio\/stream\/ZStream.html#timeoutFailCause[E1>:E](cause:=>zio.Cause[E1])(d:=>zio.Duration)(implicittrace:zio.Trace):zio.stream.ZStream[R,E1,A]", "kind" : "def"}, {"label" : "timeoutFail", "tail" : "(e: => E1)(d: zio.Duration)(trace: Trace): ZStream[R, E1, A]", "member" : "zio.stream.ZStream.timeoutFail", "link" : "zio\/stream\/ZStream.html#timeoutFail[E1>:E](e:=>E1)(d:zio.Duration)(implicittrace:zio.Trace):zio.stream.ZStream[R,E1,A]", "kind" : "def"}, {"label" : "timeout", "tail" : "(d: => zio.Duration)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.timeout", "link" : "zio\/stream\/ZStream.html#timeout(d:=>zio.Duration)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "throttleShapeZIO", "tail" : "(units: => Long, duration: => zio.Duration, burst: => Long)(costFn: (Chunk[A]) => ZIO[R1, E1, Long])(trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.throttleShapeZIO", "link" : "zio\/stream\/ZStream.html#throttleShapeZIO[R1<:R,E1>:E](units:=>Long,duration:=>zio.Duration,burst:=>Long)(costFn:zio.Chunk[A]=>zio.ZIO[R1,E1,Long])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "throttleShape", "tail" : "(units: => Long, duration: => zio.Duration, burst: => Long)(costFn: (Chunk[A]) => Long)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.throttleShape", "link" : "zio\/stream\/ZStream.html#throttleShape(units:=>Long,duration:=>zio.Duration,burst:=>Long)(costFn:zio.Chunk[A]=>Long)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "throttleEnforceZIO", "tail" : "(units: => Long, duration: => zio.Duration, burst: => Long)(costFn: (Chunk[A]) => ZIO[R1, E1, Long])(trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.throttleEnforceZIO", "link" : "zio\/stream\/ZStream.html#throttleEnforceZIO[R1<:R,E1>:E](units:=>Long,duration:=>zio.Duration,burst:=>Long)(costFn:zio.Chunk[A]=>zio.ZIO[R1,E1,Long])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "throttleEnforce", "tail" : "(units: => Long, duration: => zio.Duration, burst: => Long)(costFn: (Chunk[A]) => Long)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.throttleEnforce", "link" : "zio\/stream\/ZStream.html#throttleEnforce(units:=>Long,duration:=>zio.Duration,burst:=>Long)(costFn:zio.Chunk[A]=>Long)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "tapSink", "tail" : "(sink: => ZSink[R1, E1, A, Any, Any])(trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.tapSink", "link" : "zio\/stream\/ZStream.html#tapSink[R1<:R,E1>:E](sink:=>zio.stream.ZSink[R1,E1,A,Any,Any])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "tapErrorCause", "tail" : "(f: (Cause[E]) => ZIO[R1, E1, Any])(ev: CanFail[E], trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.tapErrorCause", "link" : "zio\/stream\/ZStream.html#tapErrorCause[R1<:R,E1>:E](f:zio.Cause[E]=>zio.ZIO[R1,E1,Any])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "tapError", "tail" : "(f: (E) => ZIO[R1, E1, Any])(ev: CanFail[E], trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.tapError", "link" : "zio\/stream\/ZStream.html#tapError[R1<:R,E1>:E](f:E=>zio.ZIO[R1,E1,Any])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "tapBoth", "tail" : "(f: (E) => ZIO[R1, E1, Any], g: (A) => ZIO[R1, E1, Any])(ev: CanFail[E], trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.tapBoth", "link" : "zio\/stream\/ZStream.html#tapBoth[R1<:R,E1>:E](f:E=>zio.ZIO[R1,E1,Any],g:A=>zio.ZIO[R1,E1,Any])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "tap", "tail" : "(f: (A) => ZIO[R1, E1, Any])(trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.tap", "link" : "zio\/stream\/ZStream.html#tap[R1<:R,E1>:E](f:A=>zio.ZIO[R1,E1,Any])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "takeWhileZIO", "tail" : "(f: (A) => ZIO[R1, E1, Boolean])(trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.takeWhileZIO", "link" : "zio\/stream\/ZStream.html#takeWhileZIO[R1<:R,E1>:E](f:A=>zio.ZIO[R1,E1,Boolean])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(f: (A) => Boolean)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.takeWhile", "link" : "zio\/stream\/ZStream.html#takeWhile(f:A=>Boolean)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "takeUntilZIO", "tail" : "(f: (A) => ZIO[R1, E1, Boolean])(trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.takeUntilZIO", "link" : "zio\/stream\/ZStream.html#takeUntilZIO[R1<:R,E1>:E](f:A=>zio.ZIO[R1,E1,Boolean])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "takeUntil", "tail" : "(f: (A) => Boolean)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.takeUntil", "link" : "zio\/stream\/ZStream.html#takeUntil(f:A=>Boolean)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: => Int)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.takeRight", "link" : "zio\/stream\/ZStream.html#takeRight(n:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: => Long)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.take", "link" : "zio\/stream\/ZStream.html#take(n:=>Long)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "splitOnChunk", "tail" : "(delimiter: => Chunk[A1])(trace: Trace): ZStream[R, E, Chunk[A]]", "member" : "zio.stream.ZStream.splitOnChunk", "link" : "zio\/stream\/ZStream.html#splitOnChunk[A1>:A](delimiter:=>zio.Chunk[A1])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,zio.Chunk[A]]", "kind" : "def"}, {"label" : "split", "tail" : "(f: (A) => Boolean)(trace: Trace): ZStream[R, E, Chunk[A]]", "member" : "zio.stream.ZStream.split", "link" : "zio\/stream\/ZStream.html#split(f:A=>Boolean)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,zio.Chunk[A]]", "kind" : "def"}, {"label" : "sliding", "tail" : "(chunkSize0: => Int, stepSize0: Int)(trace: Trace): ZStream[R, E, Chunk[A]]", "member" : "zio.stream.ZStream.sliding", "link" : "zio\/stream\/ZStream.html#sliding(chunkSize0:=>Int,stepSize0:Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,zio.Chunk[A]]", "kind" : "def"}, {"label" : "someOrFail", "tail" : "(e: => E1)(ev: <:<[A, Option[A2]], trace: Trace): ZStream[R, E1, A2]", "member" : "zio.stream.ZStream.someOrFail", "link" : "zio\/stream\/ZStream.html#someOrFail[A2,E1>:E](e:=>E1)(implicitev:A<:<Option[A2],implicittrace:zio.Trace):zio.stream.ZStream[R,E1,A2]", "kind" : "def"}, {"label" : "someOrElse", "tail" : "(default: => C)(ev0: <:<[A, Option[A2]], ev1: <:<[C, A2], trace: Trace): ZStream[R, E, A2]", "member" : "zio.stream.ZStream.someOrElse", "link" : "zio\/stream\/ZStream.html#someOrElse[A2,C](default:=>C)(implicitev0:A<:<Option[A2],implicitev1:C<:<A2,implicittrace:zio.Trace):zio.stream.ZStream[R,E,A2]", "kind" : "def"}, {"label" : "someOrElse", "tail" : "(default: => A2)(ev: <:<[A, Option[A2]], trace: Trace): ZStream[R, E, A2]", "member" : "zio.stream.ZStream.someOrElse", "link" : "zio\/stream\/ZStream.html#someOrElse[A2](default:=>A2)(implicitev:A<:<Option[A2],implicittrace:zio.Trace):zio.stream.ZStream[R,E,A2]", "kind" : "def"}, {"label" : "some", "tail" : "(ev: <:<[A, Option[A2]], trace: Trace): ZStream[R, Option[E], A2]", "member" : "zio.stream.ZStream.some", "link" : "zio\/stream\/ZStream.html#some[A2](implicitev:A<:<Option[A2],implicittrace:zio.Trace):zio.stream.ZStream[R,Option[E],A2]", "kind" : "def"}, {"label" : "scheduleWith", "tail" : "(schedule: => Schedule[R1, A, B])(f: (A) => C, g: (B) => C)(trace: Trace): ZStream[R1, E1, C]", "member" : "zio.stream.ZStream.scheduleWith", "link" : "zio\/stream\/ZStream.html#scheduleWith[R1<:R,E1>:E,B,C](schedule:=>zio.Schedule[R1,A,B])(f:A=>C,g:B=>C)(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,C]", "kind" : "def"}, {"label" : "schedule", "tail" : "(schedule: => Schedule[R1, A, Any])(trace: Trace): ZStream[R1, E, A]", "member" : "zio.stream.ZStream.schedule", "link" : "zio\/stream\/ZStream.html#schedule[R1<:R](schedule:=>zio.Schedule[R1,A,Any])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E,A]", "kind" : "def"}, {"label" : "scheduleEither", "tail" : "(schedule: => Schedule[R1, A, B])(trace: Trace): ZStream[R1, E1, Either[B, A]]", "member" : "zio.stream.ZStream.scheduleEither", "link" : "zio\/stream\/ZStream.html#scheduleEither[R1<:R,E1>:E,B](schedule:=>zio.Schedule[R1,A,B])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,Either[B,A]]", "kind" : "def"}, {"label" : "scanZIO", "tail" : "(s: => S)(f: (S, A) => ZIO[R1, E1, S])(trace: Trace): ZStream[R1, E1, S]", "member" : "zio.stream.ZStream.scanZIO", "link" : "zio\/stream\/ZStream.html#scanZIO[R1<:R,E1>:E,S](s:=>S)(f:(S,A)=>zio.ZIO[R1,E1,S])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,S]", "kind" : "def"}, {"label" : "scanReduceZIO", "tail" : "(f: (A1, A) => ZIO[R1, E1, A1])(trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.scanReduceZIO", "link" : "zio\/stream\/ZStream.html#scanReduceZIO[R1<:R,E1>:E,A1>:A](f:(A1,A)=>zio.ZIO[R1,E1,A1])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "scanReduce", "tail" : "(f: (A1, A) => A1)(trace: Trace): ZStream[R, E, A1]", "member" : "zio.stream.ZStream.scanReduce", "link" : "zio\/stream\/ZStream.html#scanReduce[A1>:A](f:(A1,A)=>A1)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A1]", "kind" : "def"}, {"label" : "scan", "tail" : "(s: => S)(f: (S, A) => S)(trace: Trace): ZStream[R, E, S]", "member" : "zio.stream.ZStream.scan", "link" : "zio\/stream\/ZStream.html#scan[S](s:=>S)(f:(S,A)=>S)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,S]", "kind" : "def"}, {"label" : "runSum", "tail" : "(ev: Numeric[A1], trace: Trace): ZIO[R, E, A1]", "member" : "zio.stream.ZStream.runSum", "link" : "zio\/stream\/ZStream.html#runSum[A1>:A](implicitev:Numeric[A1],implicittrace:zio.Trace):zio.ZIO[R,E,A1]", "kind" : "def"}, {"label" : "runLast", "tail" : "(trace: Trace): ZIO[R, E, Option[A]]", "member" : "zio.stream.ZStream.runLast", "link" : "zio\/stream\/ZStream.html#runLast(implicittrace:zio.Trace):zio.ZIO[R,E,Option[A]]", "kind" : "def"}, {"label" : "runIntoQueueElementsScoped", "tail" : "(queue: => Enqueue[Exit[Option[E], A]])(trace: Trace): ZIO[R with Scope, Nothing, Unit]", "member" : "zio.stream.ZStream.runIntoQueueElementsScoped", "link" : "zio\/stream\/ZStream.html#runIntoQueueElementsScoped(queue:=>zio.Enqueue[zio.Exit[Option[E],A]])(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "runIntoQueueScoped", "tail" : "(queue: => Enqueue[Take[E, A]])(trace: Trace): ZIO[R with Scope, Nothing, Unit]", "member" : "zio.stream.ZStream.runIntoQueueScoped", "link" : "zio\/stream\/ZStream.html#runIntoQueueScoped(queue:=>zio.Enqueue[zio.stream.Take[E,A]])(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "runIntoQueue", "tail" : "(queue: => Enqueue[Take[E, A]])(trace: Trace): ZIO[R, Nothing, Unit]", "member" : "zio.stream.ZStream.runIntoQueue", "link" : "zio\/stream\/ZStream.html#runIntoQueue(queue:=>zio.Enqueue[zio.stream.Take[E,A]])(implicittrace:zio.Trace):zio.ZIO[R,Nothing,Unit]", "kind" : "def"}, {"label" : "runIntoHubScoped", "tail" : "(hub: => Hub[Take[E1, A1]])(trace: Trace): ZIO[R with Scope, Nothing, Unit]", "member" : "zio.stream.ZStream.runIntoHubScoped", "link" : "zio\/stream\/ZStream.html#runIntoHubScoped[E1>:E,A1>:A](hub:=>zio.Hub[zio.stream.Take[E1,A1]])(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,Unit]", "kind" : "def"}, {"label" : "runIntoHub", "tail" : "(hub: => Hub[Take[E1, A1]])(trace: Trace): ZIO[R, Nothing, Unit]", "member" : "zio.stream.ZStream.runIntoHub", "link" : "zio\/stream\/ZStream.html#runIntoHub[E1>:E,A1>:A](hub:=>zio.Hub[zio.stream.Take[E1,A1]])(implicittrace:zio.Trace):zio.ZIO[R,Nothing,Unit]", "kind" : "def"}, {"label" : "runHead", "tail" : "(trace: Trace): ZIO[R, E, Option[A]]", "member" : "zio.stream.ZStream.runHead", "link" : "zio\/stream\/ZStream.html#runHead(implicittrace:zio.Trace):zio.ZIO[R,E,Option[A]]", "kind" : "def"}, {"label" : "runForeachWhileScoped", "tail" : "(f: (A) => ZIO[R1, E1, Boolean])(trace: Trace): ZIO[R1 with Scope, E1, Unit]", "member" : "zio.stream.ZStream.runForeachWhileScoped", "link" : "zio\/stream\/ZStream.html#runForeachWhileScoped[R1<:R,E1>:E](f:A=>zio.ZIO[R1,E1,Boolean])(implicittrace:zio.Trace):zio.ZIO[R1withzio.Scope,E1,Unit]", "kind" : "def"}, {"label" : "runForeachWhile", "tail" : "(f: (A) => ZIO[R1, E1, Boolean])(trace: Trace): ZIO[R1, E1, Unit]", "member" : "zio.stream.ZStream.runForeachWhile", "link" : "zio\/stream\/ZStream.html#runForeachWhile[R1<:R,E1>:E](f:A=>zio.ZIO[R1,E1,Boolean])(implicittrace:zio.Trace):zio.ZIO[R1,E1,Unit]", "kind" : "def"}, {"label" : "runForeachScoped", "tail" : "(f: (A) => ZIO[R1, E1, Any])(trace: Trace): ZIO[R1 with Scope, E1, Unit]", "member" : "zio.stream.ZStream.runForeachScoped", "link" : "zio\/stream\/ZStream.html#runForeachScoped[R1<:R,E1>:E](f:A=>zio.ZIO[R1,E1,Any])(implicittrace:zio.Trace):zio.ZIO[R1withzio.Scope,E1,Unit]", "kind" : "def"}, {"label" : "runForeachChunkScoped", "tail" : "(f: (Chunk[A]) => ZIO[R1, E1, Any])(trace: Trace): ZIO[R1 with Scope, E1, Unit]", "member" : "zio.stream.ZStream.runForeachChunkScoped", "link" : "zio\/stream\/ZStream.html#runForeachChunkScoped[R1<:R,E1>:E](f:zio.Chunk[A]=>zio.ZIO[R1,E1,Any])(implicittrace:zio.Trace):zio.ZIO[R1withzio.Scope,E1,Unit]", "kind" : "def"}, {"label" : "runForeachChunk", "tail" : "(f: (Chunk[A]) => ZIO[R1, E1, Any])(trace: Trace): ZIO[R1, E1, Unit]", "member" : "zio.stream.ZStream.runForeachChunk", "link" : "zio\/stream\/ZStream.html#runForeachChunk[R1<:R,E1>:E](f:zio.Chunk[A]=>zio.ZIO[R1,E1,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E1,Unit]", "kind" : "def"}, {"label" : "runForeach", "tail" : "(f: (A) => ZIO[R1, E1, Any])(trace: Trace): ZIO[R1, E1, Unit]", "member" : "zio.stream.ZStream.runForeach", "link" : "zio\/stream\/ZStream.html#runForeach[R1<:R,E1>:E](f:A=>zio.ZIO[R1,E1,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E1,Unit]", "kind" : "def"}, {"label" : "runFoldZIO", "tail" : "(s: => S)(f: (S, A) => ZIO[R1, E1, S])(trace: Trace): ZIO[R1, E1, S]", "member" : "zio.stream.ZStream.runFoldZIO", "link" : "zio\/stream\/ZStream.html#runFoldZIO[R1<:R,E1>:E,S](s:=>S)(f:(S,A)=>zio.ZIO[R1,E1,S])(implicittrace:zio.Trace):zio.ZIO[R1,E1,S]", "kind" : "def"}, {"label" : "runFoldWhileScoped", "tail" : "(s: => S)(cont: (S) => Boolean)(f: (S, A) => S)(trace: Trace): ZIO[R with Scope, E, S]", "member" : "zio.stream.ZStream.runFoldWhileScoped", "link" : "zio\/stream\/ZStream.html#runFoldWhileScoped[S](s:=>S)(cont:S=>Boolean)(f:(S,A)=>S)(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,E,S]", "kind" : "def"}, {"label" : "runFoldWhileZIO", "tail" : "(s: => S)(cont: (S) => Boolean)(f: (S, A) => ZIO[R1, E1, S])(trace: Trace): ZIO[R1, E1, S]", "member" : "zio.stream.ZStream.runFoldWhileZIO", "link" : "zio\/stream\/ZStream.html#runFoldWhileZIO[R1<:R,E1>:E,S](s:=>S)(cont:S=>Boolean)(f:(S,A)=>zio.ZIO[R1,E1,S])(implicittrace:zio.Trace):zio.ZIO[R1,E1,S]", "kind" : "def"}, {"label" : "runFoldWhileScopedZIO", "tail" : "(s: => S)(cont: (S) => Boolean)(f: (S, A) => ZIO[R1, E1, S])(trace: Trace): ZIO[R1 with Scope, E1, S]", "member" : "zio.stream.ZStream.runFoldWhileScopedZIO", "link" : "zio\/stream\/ZStream.html#runFoldWhileScopedZIO[R1<:R,E1>:E,S](s:=>S)(cont:S=>Boolean)(f:(S,A)=>zio.ZIO[R1,E1,S])(implicittrace:zio.Trace):zio.ZIO[R1withzio.Scope,E1,S]", "kind" : "def"}, {"label" : "runFoldWhile", "tail" : "(s: => S)(cont: (S) => Boolean)(f: (S, A) => S)(trace: Trace): ZIO[R, E, S]", "member" : "zio.stream.ZStream.runFoldWhile", "link" : "zio\/stream\/ZStream.html#runFoldWhile[S](s:=>S)(cont:S=>Boolean)(f:(S,A)=>S)(implicittrace:zio.Trace):zio.ZIO[R,E,S]", "kind" : "def"}, {"label" : "runFoldScopedZIO", "tail" : "(s: => S)(f: (S, A) => ZIO[R1, E1, S])(trace: Trace): ZIO[R1 with Scope, E1, S]", "member" : "zio.stream.ZStream.runFoldScopedZIO", "link" : "zio\/stream\/ZStream.html#runFoldScopedZIO[R1<:R,E1>:E,S](s:=>S)(f:(S,A)=>zio.ZIO[R1,E1,S])(implicittrace:zio.Trace):zio.ZIO[R1withzio.Scope,E1,S]", "kind" : "def"}, {"label" : "runFoldScoped", "tail" : "(s: => S)(f: (S, A) => S)(trace: Trace): ZIO[R with Scope, E, S]", "member" : "zio.stream.ZStream.runFoldScoped", "link" : "zio\/stream\/ZStream.html#runFoldScoped[S](s:=>S)(f:(S,A)=>S)(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,E,S]", "kind" : "def"}, {"label" : "runFold", "tail" : "(s: => S)(f: (S, A) => S)(trace: Trace): ZIO[R, E, S]", "member" : "zio.stream.ZStream.runFold", "link" : "zio\/stream\/ZStream.html#runFold[S](s:=>S)(f:(S,A)=>S)(implicittrace:zio.Trace):zio.ZIO[R,E,S]", "kind" : "def"}, {"label" : "runDrain", "tail" : "(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.stream.ZStream.runDrain", "link" : "zio\/stream\/ZStream.html#runDrain(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "def"}, {"label" : "runCount", "tail" : "(trace: Trace): ZIO[R, E, Long]", "member" : "zio.stream.ZStream.runCount", "link" : "zio\/stream\/ZStream.html#runCount(implicittrace:zio.Trace):zio.ZIO[R,E,Long]", "kind" : "def"}, {"label" : "runCollect", "tail" : "(trace: Trace): ZIO[R, E, Chunk[A]]", "member" : "zio.stream.ZStream.runCollect", "link" : "zio\/stream\/ZStream.html#runCollect(implicittrace:zio.Trace):zio.ZIO[R,E,zio.Chunk[A]]", "kind" : "def"}, {"label" : "runScoped", "tail" : "(sink: => ZSink[R1, E1, A, Any, B])(trace: Trace): ZIO[R1 with Scope, E1, B]", "member" : "zio.stream.ZStream.runScoped", "link" : "zio\/stream\/ZStream.html#runScoped[R1<:R,E1>:E,B](sink:=>zio.stream.ZSink[R1,E1,A,Any,B])(implicittrace:zio.Trace):zio.ZIO[R1withzio.Scope,E1,B]", "kind" : "def"}, {"label" : "run", "tail" : "(sink: => ZSink[R1, E1, A, Any, Z])(trace: Trace): ZIO[R1, E1, Z]", "member" : "zio.stream.ZStream.run", "link" : "zio\/stream\/ZStream.html#run[R1<:R,E1>:E,Z](sink:=>zio.stream.ZSink[R1,E1,A,Any,Z])(implicittrace:zio.Trace):zio.ZIO[R1,E1,Z]", "kind" : "def"}, {"label" : "rightOrFail", "tail" : "(e: => E1)(ev: <:<[A, Either[A1, A2]], trace: Trace): ZStream[R, E1, A2]", "member" : "zio.stream.ZStream.rightOrFail", "link" : "zio\/stream\/ZStream.html#rightOrFail[A1,A2,E1>:E](e:=>E1)(implicitev:A<:<Either[A1,A2],implicittrace:zio.Trace):zio.stream.ZStream[R,E1,A2]", "kind" : "def"}, {"label" : "right", "tail" : "(ev: <:<[A, Either[A1, A2]], trace: Trace): ZStream[R, Option[E], A2]", "member" : "zio.stream.ZStream.right", "link" : "zio\/stream\/ZStream.html#right[A1,A2](implicitev:A<:<Either[A1,A2],implicittrace:zio.Trace):zio.stream.ZStream[R,Option[E],A2]", "kind" : "def"}, {"label" : "retry", "tail" : "(schedule: => Schedule[R1, E, _])(trace: Trace): ZStream[R1, E, A]", "member" : "zio.stream.ZStream.retry", "link" : "zio\/stream\/ZStream.html#retry[R1<:R](schedule:=>zio.Schedule[R1,E,_])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E,A]", "kind" : "def"}, {"label" : "repeatWith", "tail" : "(schedule: => Schedule[R1, Any, B])(f: (A) => C, g: (B) => C)(trace: Trace): ZStream[R1, E, C]", "member" : "zio.stream.ZStream.repeatWith", "link" : "zio\/stream\/ZStream.html#repeatWith[R1<:R,B,C](schedule:=>zio.Schedule[R1,Any,B])(f:A=>C,g:B=>C)(implicittrace:zio.Trace):zio.stream.ZStream[R1,E,C]", "kind" : "def"}, {"label" : "repeatElementsWith", "tail" : "(schedule: => Schedule[R1, A, B])(f: (A) => C, g: (B) => C)(trace: Trace): ZStream[R1, E1, C]", "member" : "zio.stream.ZStream.repeatElementsWith", "link" : "zio\/stream\/ZStream.html#repeatElementsWith[R1<:R,E1>:E,B,C](schedule:=>zio.Schedule[R1,A,B])(f:A=>C,g:B=>C)(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,C]", "kind" : "def"}, {"label" : "repeatElementsEither", "tail" : "(schedule: => Schedule[R1, A, B])(trace: Trace): ZStream[R1, E1, Either[B, A]]", "member" : "zio.stream.ZStream.repeatElementsEither", "link" : "zio\/stream\/ZStream.html#repeatElementsEither[R1<:R,E1>:E,B](schedule:=>zio.Schedule[R1,A,B])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,Either[B,A]]", "kind" : "def"}, {"label" : "repeatElements", "tail" : "(schedule: => Schedule[R1, A, Any])(trace: Trace): ZStream[R1, E, A]", "member" : "zio.stream.ZStream.repeatElements", "link" : "zio\/stream\/ZStream.html#repeatElements[R1<:R](schedule:=>zio.Schedule[R1,A,Any])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E,A]", "kind" : "def"}, {"label" : "repeatEither", "tail" : "(schedule: => Schedule[R1, Any, B])(trace: Trace): ZStream[R1, E, Either[B, A]]", "member" : "zio.stream.ZStream.repeatEither", "link" : "zio\/stream\/ZStream.html#repeatEither[R1<:R,B](schedule:=>zio.Schedule[R1,Any,B])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E,Either[B,A]]", "kind" : "def"}, {"label" : "repeat", "tail" : "(schedule: => Schedule[R1, Any, B])(trace: Trace): ZStream[R1, E, A]", "member" : "zio.stream.ZStream.repeat", "link" : "zio\/stream\/ZStream.html#repeat[R1<:R,B](schedule:=>zio.Schedule[R1,Any,B])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E,A]", "kind" : "def"}, {"label" : "refineOrDieWith", "tail" : "(pf: PartialFunction[E, E1])(f: (E) => Throwable)(ev: CanFail[E], trace: Trace): ZStream[R, E1, A]", "member" : "zio.stream.ZStream.refineOrDieWith", "link" : "zio\/stream\/ZStream.html#refineOrDieWith[E1](pf:PartialFunction[E,E1])(f:E=>Throwable)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.stream.ZStream[R,E1,A]", "kind" : "def"}, {"label" : "refineOrDie", "tail" : "(pf: PartialFunction[E, E1])(ev1: <:<[E, Throwable], ev2: CanFail[E], trace: Trace): ZStream[R, E1, A]", "member" : "zio.stream.ZStream.refineOrDie", "link" : "zio\/stream\/ZStream.html#refineOrDie[E1](pf:PartialFunction[E,E1])(implicitev1:E<:<Throwable,implicitev2:zio.CanFail[E],implicittrace:zio.Trace):zio.stream.ZStream[R,E1,A]", "kind" : "def"}, {"label" : "rechunk", "tail" : "(n: => Int)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.rechunk", "link" : "zio\/stream\/ZStream.html#rechunk(n:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "provideSomeLayer", "tail" : "(): ProvideSomeLayer[R0, R, E, A]", "member" : "zio.stream.ZStream.provideSomeLayer", "link" : "zio\/stream\/ZStream.html#provideSomeLayer[R0]:zio.stream.ZStream.ProvideSomeLayer[R0,R,E,A]", "kind" : "def"}, {"label" : "provideSomeEnvironment", "tail" : "(env: (ZEnvironment[R0]) => ZEnvironment[R])(trace: Trace): ZStream[R0, E, A]", "member" : "zio.stream.ZStream.provideSomeEnvironment", "link" : "zio\/stream\/ZStream.html#provideSomeEnvironment[R0](env:zio.ZEnvironment[R0]=>zio.ZEnvironment[R])(implicittrace:zio.Trace):zio.stream.ZStream[R0,E,A]", "kind" : "def"}, {"label" : "provideLayer", "tail" : "(layer: => ZLayer[R0, E1, R])(trace: Trace): ZStream[R0, E1, A]", "member" : "zio.stream.ZStream.provideLayer", "link" : "zio\/stream\/ZStream.html#provideLayer[E1>:E,R0](layer:=>zio.ZLayer[R0,E1,R])(implicittrace:zio.Trace):zio.stream.ZStream[R0,E1,A]", "kind" : "def"}, {"label" : "provideEnvironment", "tail" : "(r: => ZEnvironment[R])(trace: Trace): ZStream[Any, E, A]", "member" : "zio.stream.ZStream.provideEnvironment", "link" : "zio\/stream\/ZStream.html#provideEnvironment(r:=>zio.ZEnvironment[R])(implicittrace:zio.Trace):zio.stream.ZStream[Any,E,A]", "kind" : "def"}, {"label" : "pipeThroughChannelOrFail", "tail" : "(channel: ZChannel[R1, Nothing, Chunk[A], Any, E1, Chunk[A2], Any])(trace: Trace): ZStream[R1, E1, A2]", "member" : "zio.stream.ZStream.pipeThroughChannelOrFail", "link" : "zio\/stream\/ZStream.html#pipeThroughChannelOrFail[R1<:R,E1>:E,A2](channel:zio.stream.ZChannel[R1,Nothing,zio.Chunk[A],Any,E1,zio.Chunk[A2],Any])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A2]", "kind" : "def"}, {"label" : "pipeThroughChannel", "tail" : "(channel: => ZChannel[R1, E, Chunk[A], Any, E2, Chunk[A2], Any])(trace: Trace): ZStream[R1, E2, A2]", "member" : "zio.stream.ZStream.pipeThroughChannel", "link" : "zio\/stream\/ZStream.html#pipeThroughChannel[R1<:R,E2,A2](channel:=>zio.stream.ZChannel[R1,E,zio.Chunk[A],Any,E2,zio.Chunk[A2],Any])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E2,A2]", "kind" : "def"}, {"label" : "pipeThrough", "tail" : "(sink: => ZSink[R1, E1, A, L, Z])(trace: Trace): ZStream[R1, E1, L]", "member" : "zio.stream.ZStream.pipeThrough", "link" : "zio\/stream\/ZStream.html#pipeThrough[R1<:R,E1>:E,L,Z](sink:=>zio.stream.ZSink[R1,E1,A,L,Z])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,L]", "kind" : "def"}, {"label" : "peel", "tail" : "(sink: => ZSink[R1, E1, A1, A1, Z])(trace: Trace): ZIO[R1 with Scope, E1, (Z, ZStream[Any, E, A1])]", "member" : "zio.stream.ZStream.peel", "link" : "zio\/stream\/ZStream.html#peel[R1<:R,E1>:E,A1>:A,Z](sink:=>zio.stream.ZSink[R1,E1,A1,A1,Z])(implicittrace:zio.Trace):zio.ZIO[R1withzio.Scope,E1,(Z,zio.stream.ZStream[Any,E,A1])]", "kind" : "def"}, {"label" : "partitionEither", "tail" : "(p: (A) => ZIO[R1, E1, Either[A2, A3]], buffer: => Int)(trace: Trace): ZIO[R1 with Scope, Nothing, (ZStream[Any, E1, A2], ZStream[Any, E1, A3])]", "member" : "zio.stream.ZStream.partitionEither", "link" : "zio\/stream\/ZStream.html#partitionEither[R1<:R,E1>:E,A2,A3](p:A=>zio.ZIO[R1,E1,Either[A2,A3]],buffer:=>Int)(implicittrace:zio.Trace):zio.ZIO[R1withzio.Scope,Nothing,(zio.stream.ZStream[Any,E1,A2],zio.stream.ZStream[Any,E1,A3])]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (A) => Boolean, buffer: => Int)(trace: Trace): ZIO[R with Scope, Nothing, (ZStream[Any, E, A], ZStream[Any, E, A])]", "member" : "zio.stream.ZStream.partition", "link" : "zio\/stream\/ZStream.html#partition(p:A=>Boolean,buffer:=>Int)(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,(zio.stream.ZStream[Any,E,A],zio.stream.ZStream[Any,E,A])]", "kind" : "def"}, {"label" : "orElseSucceed", "tail" : "(A1: => A1)(ev: CanFail[E], trace: Trace): ZStream[R, Nothing, A1]", "member" : "zio.stream.ZStream.orElseSucceed", "link" : "zio\/stream\/ZStream.html#orElseSucceed[A1>:A](A1:=>A1)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.stream.ZStream[R,Nothing,A1]", "kind" : "def"}, {"label" : "orElseOptional", "tail" : "(that: => ZStream[R1, Option[E1], A1])(ev: <:<[E, Option[E1]], trace: Trace): ZStream[R1, Option[E1], A1]", "member" : "zio.stream.ZStream.orElseOptional", "link" : "zio\/stream\/ZStream.html#orElseOptional[R1<:R,E1,A1>:A](that:=>zio.stream.ZStream[R1,Option[E1],A1])(implicitev:E<:<Option[E1],implicittrace:zio.Trace):zio.stream.ZStream[R1,Option[E1],A1]", "kind" : "def"}, {"label" : "orElseIfEmpty", "tail" : "(stream: ZStream[R1, E1, A1])(trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.orElseIfEmpty", "link" : "zio\/stream\/ZStream.html#orElseIfEmpty[R1<:R,E1>:E,A1>:A](stream:zio.stream.ZStream[R1,E1,A1])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "orElseIfEmpty", "tail" : "(chunk: Chunk[A1])(trace: Trace): ZStream[R, E, A1]", "member" : "zio.stream.ZStream.orElseIfEmpty", "link" : "zio\/stream\/ZStream.html#orElseIfEmpty[A1>:A](chunk:zio.Chunk[A1])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A1]", "kind" : "def"}, {"label" : "orElseIfEmpty", "tail" : "(a: A1)(trace: Trace): ZStream[R, E, A1]", "member" : "zio.stream.ZStream.orElseIfEmpty", "link" : "zio\/stream\/ZStream.html#orElseIfEmpty[A1>:A](a:A1)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A1]", "kind" : "def"}, {"label" : "orElseFail", "tail" : "(e1: => E1)(ev: CanFail[E], trace: Trace): ZStream[R, E1, A]", "member" : "zio.stream.ZStream.orElseFail", "link" : "zio\/stream\/ZStream.html#orElseFail[E1](e1:=>E1)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.stream.ZStream[R,E1,A]", "kind" : "def"}, {"label" : "orElseEither", "tail" : "(that: => ZStream[R1, E2, A2])(ev: CanFail[E], trace: Trace): ZStream[R1, E2, Either[A, A2]]", "member" : "zio.stream.ZStream.orElseEither", "link" : "zio\/stream\/ZStream.html#orElseEither[R1<:R,E2,A2](that:=>zio.stream.ZStream[R1,E2,A2])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.stream.ZStream[R1,E2,Either[A,A2]]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: => ZStream[R1, E1, A1])(ev: CanFail[E], trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.orElse", "link" : "zio\/stream\/ZStream.html#orElse[R1<:R,E1,A1>:A](that:=>zio.stream.ZStream[R1,E1,A1])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "orDieWith", "tail" : "(f: (E) => Throwable)(ev: CanFail[E], trace: Trace): ZStream[R, Nothing, A]", "member" : "zio.stream.ZStream.orDieWith", "link" : "zio\/stream\/ZStream.html#orDieWith(f:E=>Throwable)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.stream.ZStream[R,Nothing,A]", "kind" : "def"}, {"label" : "orDie", "tail" : "(ev1: IsSubtypeOfError[E, Throwable], ev2: CanFail[E], trace: Trace): ZStream[R, Nothing, A]", "member" : "zio.stream.ZStream.orDie", "link" : "zio\/stream\/ZStream.html#orDie(implicitev1:zio.IsSubtypeOfError[E,Throwable],implicitev2:zio.CanFail[E],implicittrace:zio.Trace):zio.stream.ZStream[R,Nothing,A]", "kind" : "def"}, {"label" : "onExecutor", "tail" : "(executor: => Executor)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.onExecutor", "link" : "zio\/stream\/ZStream.html#onExecutor(executor:=>zio.Executor)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "onError", "tail" : "(cleanup: (Cause[E]) => URIO[R1, Any])(trace: Trace): ZStream[R1, E, A]", "member" : "zio.stream.ZStream.onError", "link" : "zio\/stream\/ZStream.html#onError[R1<:R](cleanup:zio.Cause[E]=>zio.URIO[R1,Any])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E,A]", "kind" : "def"}, {"label" : "mergeWith", "tail" : "(that: => ZStream[R1, E1, A2], strategy: => HaltStrategy)(l: (A) => A3, r: (A2) => A3)(trace: Trace): ZStream[R1, E1, A3]", "member" : "zio.stream.ZStream.mergeWith", "link" : "zio\/stream\/ZStream.html#mergeWith[R1<:R,E1>:E,A2,A3](that:=>zio.stream.ZStream[R1,E1,A2],strategy:=>zio.stream.ZStream.HaltStrategy)(l:A=>A3,r:A2=>A3)(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A3]", "kind" : "def"}, {"label" : "mergeSorted", "tail" : "(that: => ZStream[R1, E1, A1])(ord: Ordering[A1], trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.mergeSorted", "link" : "zio\/stream\/ZStream.html#mergeSorted[R1<:R,E1>:E,A1>:A](that:=>zio.stream.ZStream[R1,E1,A1])(implicitord:Ordering[A1],implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "mergeRight", "tail" : "(that: => ZStream[R1, E1, A2], strategy: HaltStrategy)(trace: Trace): ZStream[R1, E1, A2]", "member" : "zio.stream.ZStream.mergeRight", "link" : "zio\/stream\/ZStream.html#mergeRight[R1<:R,E1>:E,A2](that:=>zio.stream.ZStream[R1,E1,A2],strategy:zio.stream.ZStream.HaltStrategy)(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A2]", "kind" : "def"}, {"label" : "mergeLeft", "tail" : "(that: => ZStream[R1, E1, A2], strategy: HaltStrategy)(trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.mergeLeft", "link" : "zio\/stream\/ZStream.html#mergeLeft[R1<:R,E1>:E,A2](that:=>zio.stream.ZStream[R1,E1,A2],strategy:zio.stream.ZStream.HaltStrategy)(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "mergeEither", "tail" : "(that: => ZStream[R1, E1, A2])(trace: Trace): ZStream[R1, E1, Either[A, A2]]", "member" : "zio.stream.ZStream.mergeEither", "link" : "zio\/stream\/ZStream.html#mergeEither[R1<:R,E1>:E,A2](that:=>zio.stream.ZStream[R1,E1,A2])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,Either[A,A2]]", "kind" : "def"}, {"label" : "mergeHaltRight", "tail" : "(that: => ZStream[R1, E1, A1])(trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.mergeHaltRight", "link" : "zio\/stream\/ZStream.html#mergeHaltRight[R1<:R,E1>:E,A1>:A](that:=>zio.stream.ZStream[R1,E1,A1])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "mergeHaltLeft", "tail" : "(that: => ZStream[R1, E1, A1])(trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.mergeHaltLeft", "link" : "zio\/stream\/ZStream.html#mergeHaltLeft[R1<:R,E1>:E,A1>:A](that:=>zio.stream.ZStream[R1,E1,A1])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "mergeHaltEither", "tail" : "(that: => ZStream[R1, E1, A1])(trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.mergeHaltEither", "link" : "zio\/stream\/ZStream.html#mergeHaltEither[R1<:R,E1>:E,A1>:A](that:=>zio.stream.ZStream[R1,E1,A1])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "merge", "tail" : "(that: => ZStream[R1, E1, A1], strategy: => HaltStrategy)(trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.merge", "link" : "zio\/stream\/ZStream.html#merge[R1<:R,E1>:E,A1>:A](that:=>zio.stream.ZStream[R1,E1,A1],strategy:=>zio.stream.ZStream.HaltStrategy)(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "mapZIOParUnordered", "tail" : "(n: => Int, bufferSize: => Int)(f: (A) => ZIO[R1, E1, A2])(trace: Trace): ZStream[R1, E1, A2]", "member" : "zio.stream.ZStream.mapZIOParUnordered", "link" : "zio\/stream\/ZStream.html#mapZIOParUnordered[R1<:R,E1>:E,A2](n:=>Int,bufferSize:=>Int)(f:A=>zio.ZIO[R1,E1,A2])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A2]", "kind" : "def"}, {"label" : "mapZIOParUnordered", "tail" : "(n: => Int)(f: (A) => ZIO[R1, E1, A2])(trace: Trace): ZStream[R1, E1, A2]", "member" : "zio.stream.ZStream.mapZIOParUnordered", "link" : "zio\/stream\/ZStream.html#mapZIOParUnordered[R1<:R,E1>:E,A2](n:=>Int)(f:A=>zio.ZIO[R1,E1,A2])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A2]", "kind" : "def"}, {"label" : "mapZIOParByKey", "tail" : "(keyBy: (A) => K, buffer: => Int)(f: (A) => ZIO[R1, E1, A2])(trace: Trace): ZStream[R1, E1, A2]", "member" : "zio.stream.ZStream.mapZIOParByKey", "link" : "zio\/stream\/ZStream.html#mapZIOParByKey[R1<:R,E1>:E,A2,K](keyBy:A=>K,buffer:=>Int)(f:A=>zio.ZIO[R1,E1,A2])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A2]", "kind" : "def"}, {"label" : "mapZIOPar", "tail" : "(n: => Int, bufferSize: Int)(f: (A) => ZIO[R1, E1, A2])(trace: Trace): ZStream[R1, E1, A2]", "member" : "zio.stream.ZStream.mapZIOPar", "link" : "zio\/stream\/ZStream.html#mapZIOPar[R1<:R,E1>:E,A2](n:=>Int,bufferSize:Int)(f:A=>zio.ZIO[R1,E1,A2])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A2]", "kind" : "def"}, {"label" : "mapZIOPar", "tail" : "(n: => Int)(f: (A) => ZIO[R1, E1, A2])(trace: Trace): ZStream[R1, E1, A2]", "member" : "zio.stream.ZStream.mapZIOPar", "link" : "zio\/stream\/ZStream.html#mapZIOPar[R1<:R,E1>:E,A2](n:=>Int)(f:A=>zio.ZIO[R1,E1,A2])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A2]", "kind" : "def"}, {"label" : "mapZIO", "tail" : "(f: (A) => ZIO[R1, E1, A1])(trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.mapZIO", "link" : "zio\/stream\/ZStream.html#mapZIO[R1<:R,E1>:E,A1](f:A=>zio.ZIO[R1,E1,A1])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "mapErrorZIO", "tail" : "(f: (E) => URIO[R1, E2])(trace: Trace): ZStream[R1, E2, A]", "member" : "zio.stream.ZStream.mapErrorZIO", "link" : "zio\/stream\/ZStream.html#mapErrorZIO[R1<:R,E2](f:E=>zio.URIO[R1,E2])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E2,A]", "kind" : "def"}, {"label" : "mapErrorCause", "tail" : "(f: (Cause[E]) => Cause[E2])(trace: Trace): ZStream[R, E2, A]", "member" : "zio.stream.ZStream.mapErrorCause", "link" : "zio\/stream\/ZStream.html#mapErrorCause[E2](f:zio.Cause[E]=>zio.Cause[E2])(implicittrace:zio.Trace):zio.stream.ZStream[R,E2,A]", "kind" : "def"}, {"label" : "mapError", "tail" : "(f: (E) => E2)(trace: Trace): ZStream[R, E2, A]", "member" : "zio.stream.ZStream.mapError", "link" : "zio\/stream\/ZStream.html#mapError[E2](f:E=>E2)(implicittrace:zio.Trace):zio.stream.ZStream[R,E2,A]", "kind" : "def"}, {"label" : "mapConcatZIO", "tail" : "(f: (A) => ZIO[R1, E1, Iterable[A2]])(trace: Trace): ZStream[R1, E1, A2]", "member" : "zio.stream.ZStream.mapConcatZIO", "link" : "zio\/stream\/ZStream.html#mapConcatZIO[R1<:R,E1>:E,A2](f:A=>zio.ZIO[R1,E1,Iterable[A2]])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A2]", "kind" : "def"}, {"label" : "mapConcatChunkZIO", "tail" : "(f: (A) => ZIO[R1, E1, Chunk[A2]])(trace: Trace): ZStream[R1, E1, A2]", "member" : "zio.stream.ZStream.mapConcatChunkZIO", "link" : "zio\/stream\/ZStream.html#mapConcatChunkZIO[R1<:R,E1>:E,A2](f:A=>zio.ZIO[R1,E1,zio.Chunk[A2]])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A2]", "kind" : "def"}, {"label" : "mapConcatChunk", "tail" : "(f: (A) => Chunk[A2])(trace: Trace): ZStream[R, E, A2]", "member" : "zio.stream.ZStream.mapConcatChunk", "link" : "zio\/stream\/ZStream.html#mapConcatChunk[A2](f:A=>zio.Chunk[A2])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A2]", "kind" : "def"}, {"label" : "mapConcat", "tail" : "(f: (A) => Iterable[A2])(trace: Trace): ZStream[R, E, A2]", "member" : "zio.stream.ZStream.mapConcat", "link" : "zio\/stream\/ZStream.html#mapConcat[A2](f:A=>Iterable[A2])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A2]", "kind" : "def"}, {"label" : "mapChunksZIO", "tail" : "(f: (Chunk[A]) => ZIO[R1, E1, Chunk[A2]])(trace: Trace): ZStream[R1, E1, A2]", "member" : "zio.stream.ZStream.mapChunksZIO", "link" : "zio\/stream\/ZStream.html#mapChunksZIO[R1<:R,E1>:E,A2](f:zio.Chunk[A]=>zio.ZIO[R1,E1,zio.Chunk[A2]])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A2]", "kind" : "def"}, {"label" : "mapChunks", "tail" : "(f: (Chunk[A]) => Chunk[A2])(trace: Trace): ZStream[R, E, A2]", "member" : "zio.stream.ZStream.mapChunks", "link" : "zio\/stream\/ZStream.html#mapChunks[A2](f:zio.Chunk[A]=>zio.Chunk[A2])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A2]", "kind" : "def"}, {"label" : "mapBoth", "tail" : "(f: (E) => E1, g: (A) => A1)(ev: CanFail[E], trace: Trace): ZStream[R, E1, A1]", "member" : "zio.stream.ZStream.mapBoth", "link" : "zio\/stream\/ZStream.html#mapBoth[E1,A1](f:E=>E1,g:A=>A1)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.stream.ZStream[R,E1,A1]", "kind" : "def"}, {"label" : "mapAccumZIO", "tail" : "(s: => S)(f: (S, A) => ZIO[R1, E1, (S, A1)])(trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.mapAccumZIO", "link" : "zio\/stream\/ZStream.html#mapAccumZIO[R1<:R,E1>:E,S,A1](s:=>S)(f:(S,A)=>zio.ZIO[R1,E1,(S,A1)])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "mapAccum", "tail" : "(s: => S)(f: (S, A) => (S, A1))(trace: Trace): ZStream[R, E, A1]", "member" : "zio.stream.ZStream.mapAccum", "link" : "zio\/stream\/ZStream.html#mapAccum[S,A1](s:=>S)(f:(S,A)=>(S,A1))(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A1]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B)(trace: Trace): ZStream[R, E, B]", "member" : "zio.stream.ZStream.map", "link" : "zio\/stream\/ZStream.html#map[B](f:A=>B)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,B]", "kind" : "def"}, {"label" : "mkString", "tail" : "(before: => String, middle: => String, after: => String)(trace: Trace): ZIO[R, E, String]", "member" : "zio.stream.ZStream.mkString", "link" : "zio\/stream\/ZStream.html#mkString(before:=>String,middle:=>String,after:=>String)(implicittrace:zio.Trace):zio.ZIO[R,E,String]", "kind" : "def"}, {"label" : "mkString", "tail" : "(trace: Trace): ZIO[R, E, String]", "member" : "zio.stream.ZStream.mkString", "link" : "zio\/stream\/ZStream.html#mkString(implicittrace:zio.Trace):zio.ZIO[R,E,String]", "kind" : "def"}, {"label" : "interruptAfter", "tail" : "(duration: => zio.Duration)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.interruptAfter", "link" : "zio\/stream\/ZStream.html#interruptAfter(duration:=>zio.Duration)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "interruptWhen", "tail" : "(p: Promise[E1, _])(trace: Trace): ZStream[R, E1, A]", "member" : "zio.stream.ZStream.interruptWhen", "link" : "zio\/stream\/ZStream.html#interruptWhen[E1>:E](p:zio.Promise[E1,_])(implicittrace:zio.Trace):zio.stream.ZStream[R,E1,A]", "kind" : "def"}, {"label" : "interruptWhen", "tail" : "(io: ZIO[R1, E1, Any])(trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.interruptWhen", "link" : "zio\/stream\/ZStream.html#interruptWhen[R1<:R,E1>:E](io:zio.ZIO[R1,E1,Any])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "intersperse", "tail" : "(start: => A1, middle: => A1, end: => A1)(trace: Trace): ZStream[R, E, A1]", "member" : "zio.stream.ZStream.intersperse", "link" : "zio\/stream\/ZStream.html#intersperse[A1>:A](start:=>A1,middle:=>A1,end:=>A1)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A1]", "kind" : "def"}, {"label" : "intersperse", "tail" : "(middle: => A1)(trace: Trace): ZStream[R, E, A1]", "member" : "zio.stream.ZStream.intersperse", "link" : "zio\/stream\/ZStream.html#intersperse[A1>:A](middle:=>A1)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A1]", "kind" : "def"}, {"label" : "interleaveWith", "tail" : "(that: => ZStream[R1, E1, A1])(b: => ZStream[R1, E1, Boolean])(trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.interleaveWith", "link" : "zio\/stream\/ZStream.html#interleaveWith[R1<:R,E1>:E,A1>:A](that:=>zio.stream.ZStream[R1,E1,A1])(b:=>zio.stream.ZStream[R1,E1,Boolean])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "interleave", "tail" : "(that: => ZStream[R1, E1, A1])(trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.interleave", "link" : "zio\/stream\/ZStream.html#interleave[R1<:R,E1>:E,A1>:A](that:=>zio.stream.ZStream[R1,E1,A1])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "haltWhen", "tail" : "(p: Promise[E1, _])(trace: Trace): ZStream[R, E1, A]", "member" : "zio.stream.ZStream.haltWhen", "link" : "zio\/stream\/ZStream.html#haltWhen[E1>:E](p:zio.Promise[E1,_])(implicittrace:zio.Trace):zio.stream.ZStream[R,E1,A]", "kind" : "def"}, {"label" : "haltAfter", "tail" : "(duration: => zio.Duration)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.haltAfter", "link" : "zio\/stream\/ZStream.html#haltAfter(duration:=>zio.Duration)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "haltWhen", "tail" : "(io: ZIO[R1, E1, Any])(trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.haltWhen", "link" : "zio\/stream\/ZStream.html#haltWhen[R1<:R,E1>:E](io:zio.ZIO[R1,E1,Any])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "groupedWithin", "tail" : "(chunkSize: => Int, within: => zio.Duration)(trace: Trace): ZStream[R, E, Chunk[A]]", "member" : "zio.stream.ZStream.groupedWithin", "link" : "zio\/stream\/ZStream.html#groupedWithin(chunkSize:=>Int,within:=>zio.Duration)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,zio.Chunk[A]]", "kind" : "def"}, {"label" : "grouped", "tail" : "(chunkSize: => Int)(trace: Trace): ZStream[R, E, Chunk[A]]", "member" : "zio.stream.ZStream.grouped", "link" : "zio\/stream\/ZStream.html#grouped(chunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,zio.Chunk[A]]", "kind" : "def"}, {"label" : "groupByKey", "tail" : "(f: (A) => K, buffer: => Int): GroupBy[R, E, K, A]", "member" : "zio.stream.ZStream.groupByKey", "link" : "zio\/stream\/ZStream.html#groupByKey[K](f:A=>K,buffer:=>Int):zio.stream.ZStream.GroupBy[R,E,K,A]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (A) => ZIO[R1, E1, (K, V)], buffer: => Int): GroupBy[R1, E1, K, V]", "member" : "zio.stream.ZStream.groupBy", "link" : "zio\/stream\/ZStream.html#groupBy[R1<:R,E1>:E,K,V](f:A=>zio.ZIO[R1,E1,(K,V)],buffer:=>Int):zio.stream.ZStream.GroupBy[R1,E1,K,V]", "kind" : "def"}, {"label" : "flattenZIO", "tail" : "(ev: <:<[A, ZIO[R1, E1, A1]], trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.flattenZIO", "link" : "zio\/stream\/ZStream.html#flattenZIO[R1<:R,E1>:E,A1](implicitev:A<:<zio.ZIO[R1,E1,A1],implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "flattenTake", "tail" : "(ev: <:<[A, Take[E1, A1]], trace: Trace): ZStream[R, E1, A1]", "member" : "zio.stream.ZStream.flattenTake", "link" : "zio\/stream\/ZStream.html#flattenTake[E1>:E,A1](implicitev:A<:<zio.stream.Take[E1,A1],implicittrace:zio.Trace):zio.stream.ZStream[R,E1,A1]", "kind" : "def"}, {"label" : "flattenParUnbounded", "tail" : "(outputBuffer: => Int)(ev: <:<[A, ZStream[R1, E1, A1]], trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.flattenParUnbounded", "link" : "zio\/stream\/ZStream.html#flattenParUnbounded[R1<:R,E1>:E,A1](outputBuffer:=>Int)(implicitev:A<:<zio.stream.ZStream[R1,E1,A1],implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "flattenPar", "tail" : "(n: => Int, outputBuffer: => Int)(ev: <:<[A, ZStream[R1, E1, A1]], trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.flattenPar", "link" : "zio\/stream\/ZStream.html#flattenPar[R1<:R,E1>:E,A1](n:=>Int,outputBuffer:=>Int)(implicitev:A<:<zio.stream.ZStream[R1,E1,A1],implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "flattenIterables", "tail" : "(ev: <:<[A, Iterable[A1]], trace: Trace): ZStream[R, E, A1]", "member" : "zio.stream.ZStream.flattenIterables", "link" : "zio\/stream\/ZStream.html#flattenIterables[A1](implicitev:A<:<Iterable[A1],implicittrace:zio.Trace):zio.stream.ZStream[R,E,A1]", "kind" : "def"}, {"label" : "flattenExitOption", "tail" : "(ev: <:<[A, Exit[Option[E1], A1]], trace: Trace): ZStream[R, E1, A1]", "member" : "zio.stream.ZStream.flattenExitOption", "link" : "zio\/stream\/ZStream.html#flattenExitOption[E1>:E,A1](implicitev:A<:<zio.Exit[Option[E1],A1],implicittrace:zio.Trace):zio.stream.ZStream[R,E1,A1]", "kind" : "def"}, {"label" : "flattenExit", "tail" : "(ev: <:<[A, Exit[E1, A1]], trace: Trace): ZStream[R, E1, A1]", "member" : "zio.stream.ZStream.flattenExit", "link" : "zio\/stream\/ZStream.html#flattenExit[E1>:E,A1](implicitev:A<:<zio.Exit[E1,A1],implicittrace:zio.Trace):zio.stream.ZStream[R,E1,A1]", "kind" : "def"}, {"label" : "flattenChunks", "tail" : "(ev: <:<[A, Chunk[A1]], trace: Trace): ZStream[R, E, A1]", "member" : "zio.stream.ZStream.flattenChunks", "link" : "zio\/stream\/ZStream.html#flattenChunks[A1](implicitev:A<:<zio.Chunk[A1],implicittrace:zio.Trace):zio.stream.ZStream[R,E,A1]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[A, ZStream[R1, E1, A1]], trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.flatten", "link" : "zio\/stream\/ZStream.html#flatten[R1<:R,E1>:E,A1](implicitev:A<:<zio.stream.ZStream[R1,E1,A1],implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "flatMapParSwitch", "tail" : "(n: => Int, bufferSize: => Int)(f: (A) => ZStream[R1, E1, B])(trace: Trace): ZStream[R1, E1, B]", "member" : "zio.stream.ZStream.flatMapParSwitch", "link" : "zio\/stream\/ZStream.html#flatMapParSwitch[R1<:R,E1>:E,B](n:=>Int,bufferSize:=>Int)(f:A=>zio.stream.ZStream[R1,E1,B])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,B]", "kind" : "def"}, {"label" : "flatMapPar", "tail" : "(n: => Int, bufferSize: => Int)(f: (A) => ZStream[R1, E1, B])(trace: Trace): ZStream[R1, E1, B]", "member" : "zio.stream.ZStream.flatMapPar", "link" : "zio\/stream\/ZStream.html#flatMapPar[R1<:R,E1>:E,B](n:=>Int,bufferSize:=>Int)(f:A=>zio.stream.ZStream[R1,E1,B])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) => ZStream[R1, E1, B])(trace: Trace): ZStream[R1, E1, B]", "member" : "zio.stream.ZStream.flatMap", "link" : "zio\/stream\/ZStream.html#flatMap[R1<:R,E1>:E,B](f:A=>zio.stream.ZStream[R1,E1,B])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,B]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (A) => Boolean)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.filterNot", "link" : "zio\/stream\/ZStream.html#filterNot(pred:A=>Boolean)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "filterZIO", "tail" : "(f: (A) => ZIO[R1, E1, Boolean])(trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.filterZIO", "link" : "zio\/stream\/ZStream.html#filterZIO[R1<:R,E1>:E](f:A=>zio.ZIO[R1,E1,Boolean])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "forever", "tail" : "(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.forever", "link" : "zio\/stream\/ZStream.html#forever(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) => ZIO[R1, E1, Any])(trace: Trace): ZIO[R1, E1, Unit]", "member" : "zio.stream.ZStream.foreach", "link" : "zio\/stream\/ZStream.html#foreach[R1<:R,E1>:E](f:A=>zio.ZIO[R1,E1,Any])(implicittrace:zio.Trace):zio.ZIO[R1,E1,Unit]", "kind" : "def"}, {"label" : "findZIO", "tail" : "(f: (A) => ZIO[R1, E1, Boolean])(trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.findZIO", "link" : "zio\/stream\/ZStream.html#findZIO[R1<:R,E1>:E,S](f:A=>zio.ZIO[R1,E1,Boolean])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "find", "tail" : "(f: (A) => Boolean)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.find", "link" : "zio\/stream\/ZStream.html#find(f:A=>Boolean)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (A) => Boolean)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.filter", "link" : "zio\/stream\/ZStream.html#filter(f:A=>Boolean)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "ensuringWith", "tail" : "(fin: (Exit[E, Any]) => ZIO[R1, Nothing, Any])(trace: Trace): ZStream[R1, E, A]", "member" : "zio.stream.ZStream.ensuringWith", "link" : "zio\/stream\/ZStream.html#ensuringWith[R1<:R](fin:zio.Exit[E,Any]=>zio.ZIO[R1,Nothing,Any])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E,A]", "kind" : "def"}, {"label" : "ensuring", "tail" : "(fin: => ZIO[R1, Nothing, Any])(trace: Trace): ZStream[R1, E, A]", "member" : "zio.stream.ZStream.ensuring", "link" : "zio\/stream\/ZStream.html#ensuring[R1<:R](fin:=>zio.ZIO[R1,Nothing,Any])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E,A]", "kind" : "def"}, {"label" : "either", "tail" : "(ev: CanFail[E], trace: Trace): ZStream[R, Nothing, Either[E, A]]", "member" : "zio.stream.ZStream.either", "link" : "zio\/stream\/ZStream.html#either(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.stream.ZStream[R,Nothing,Either[E,A]]", "kind" : "def"}, {"label" : "dropWhileZIO", "tail" : "(f: (A) => ZIO[R1, E1, Boolean])(trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.dropWhileZIO", "link" : "zio\/stream\/ZStream.html#dropWhileZIO[R1<:R,E1>:E](f:A=>zio.ZIO[R1,E1,Boolean])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "dropUntil", "tail" : "(pred: (A) => Boolean)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.dropUntil", "link" : "zio\/stream\/ZStream.html#dropUntil(pred:A=>Boolean)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(f: (A) => Boolean)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.dropWhile", "link" : "zio\/stream\/ZStream.html#dropWhile(f:A=>Boolean)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: => Int)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.dropRight", "link" : "zio\/stream\/ZStream.html#dropRight(n:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: => Int)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.drop", "link" : "zio\/stream\/ZStream.html#drop(n:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "drainFork", "tail" : "(other: => ZStream[R1, E1, Any])(trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.drainFork", "link" : "zio\/stream\/ZStream.html#drainFork[R1<:R,E1>:E](other:=>zio.stream.ZStream[R1,E1,Any])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "drain", "tail" : "(trace: Trace): ZStream[R, E, Nothing]", "member" : "zio.stream.ZStream.drain", "link" : "zio\/stream\/ZStream.html#drain(implicittrace:zio.Trace):zio.stream.ZStream[R,E,Nothing]", "kind" : "def"}, {"label" : "distributedWithDynamic", "tail" : "(maximumLag: => Int, decide: (A) => UIO[(UniqueKey) => Boolean], done: (Exit[Option[E], Nothing]) => UIO[Any])(trace: Trace): ZIO[R with Scope, Nothing, UIO[(UniqueKey, Dequeue[Exit[Option[E], A]])]]", "member" : "zio.stream.ZStream.distributedWithDynamic", "link" : "zio\/stream\/ZStream.html#distributedWithDynamic(maximumLag:=>Int,decide:A=>zio.UIO[zio.internal.UniqueKey=>Boolean],done:zio.Exit[Option[E],Nothing]=>zio.UIO[Any])(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,zio.UIO[(zio.internal.UniqueKey,zio.Dequeue[zio.Exit[Option[E],A]])]]", "kind" : "def"}, {"label" : "distributedWith", "tail" : "(n: => Int, maximumLag: => Int, decide: (A) => UIO[(Int) => Boolean])(trace: Trace): ZIO[R with Scope, Nothing, List[Dequeue[Exit[Option[E1], A]]]]", "member" : "zio.stream.ZStream.distributedWith", "link" : "zio\/stream\/ZStream.html#distributedWith[E1>:E](n:=>Int,maximumLag:=>Int,decide:A=>zio.UIO[Int=>Boolean])(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,List[zio.Dequeue[zio.Exit[Option[E1],A]]]]", "kind" : "def"}, {"label" : "crossWith", "tail" : "(that: => ZStream[R1, E1, A2])(f: (A, A2) => C)(trace: Trace): ZStream[R1, E1, C]", "member" : "zio.stream.ZStream.crossWith", "link" : "zio\/stream\/ZStream.html#crossWith[R1<:R,E1>:E,A2,C](that:=>zio.stream.ZStream[R1,E1,A2])(f:(A,A2)=>C)(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,C]", "kind" : "def"}, {"label" : "crossRight", "tail" : "(that: => ZStream[R1, E1, B])(trace: Trace): ZStream[R1, E1, B]", "member" : "zio.stream.ZStream.crossRight", "link" : "zio\/stream\/ZStream.html#crossRight[R1<:R,E1>:E,B](that:=>zio.stream.ZStream[R1,E1,B])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,B]", "kind" : "def"}, {"label" : "crossLeft", "tail" : "(that: => ZStream[R1, E1, B])(trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.crossLeft", "link" : "zio\/stream\/ZStream.html#crossLeft[R1<:R,E1>:E,B](that:=>zio.stream.ZStream[R1,E1,B])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "cross", "tail" : "(that: => ZStream[R1, E1, B])(zippable: Zippable[A, B], trace: Trace): ZStream[R1, E1, Out]", "member" : "zio.stream.ZStream.cross", "link" : "zio\/stream\/ZStream.html#cross[R1<:R,E1>:E,B](that:=>zio.stream.ZStream[R1,E1,B])(implicitzippable:zio.Zippable[A,B],implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,zippable.Out]", "kind" : "def"}, {"label" : "concat", "tail" : "(that: => ZStream[R1, E1, A1])(trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.concat", "link" : "zio\/stream\/ZStream.html#concat[R1<:R,E1>:E,A1>:A](that:=>zio.stream.ZStream[R1,E1,A1])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "combineChunks", "tail" : "(that: => ZStream[R1, E1, A2])(s: => S)(f: (S, ZIO[R, Option[E], Chunk[A]], ZIO[R1, Option[E1], Chunk[A2]]) => ZIO[R1, Nothing, Exit[Option[E1], (Chunk[A3], S)]])(trace: Trace): ZStream[R1, E1, A3]", "member" : "zio.stream.ZStream.combineChunks", "link" : "zio\/stream\/ZStream.html#combineChunks[R1<:R,E1>:E,S,A2,A3](that:=>zio.stream.ZStream[R1,E1,A2])(s:=>S)(f:(S,zio.ZIO[R,Option[E],zio.Chunk[A]],zio.ZIO[R1,Option[E1],zio.Chunk[A2]])=>zio.ZIO[R1,Nothing,zio.Exit[Option[E1],(zio.Chunk[A3],S)]])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A3]", "kind" : "def"}, {"label" : "combine", "tail" : "(that: => ZStream[R1, E1, A2])(s: => S)(f: (S, ZIO[R, Option[E], A], ZIO[R1, Option[E1], A2]) => ZIO[R1, Nothing, Exit[Option[E1], (A3, S)]])(trace: Trace): ZStream[R1, E1, A3]", "member" : "zio.stream.ZStream.combine", "link" : "zio\/stream\/ZStream.html#combine[R1<:R,E1>:E,S,A2,A3](that:=>zio.stream.ZStream[R1,E1,A2])(s:=>S)(f:(S,zio.ZIO[R,Option[E],A],zio.ZIO[R1,Option[E1],A2])=>zio.ZIO[R1,Nothing,zio.Exit[Option[E1],(A3,S)]])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A3]", "kind" : "def"}, {"label" : "collectWhileZIO", "tail" : "(pf: PartialFunction[A, ZIO[R1, E1, A1]])(trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.collectWhileZIO", "link" : "zio\/stream\/ZStream.html#collectWhileZIO[R1<:R,E1>:E,A1](pf:PartialFunction[A,zio.ZIO[R1,E1,A1]])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "collectWhileSuccess", "tail" : "(ev: <:<[A, Exit[L1, A1]], trace: Trace): ZStream[R, E, A1]", "member" : "zio.stream.ZStream.collectWhileSuccess", "link" : "zio\/stream\/ZStream.html#collectWhileSuccess[L1,A1](implicitev:A<:<zio.Exit[L1,A1],implicittrace:zio.Trace):zio.stream.ZStream[R,E,A1]", "kind" : "def"}, {"label" : "collectWhileRight", "tail" : "(ev: <:<[A, Either[L1, A1]], trace: Trace): ZStream[R, E, A1]", "member" : "zio.stream.ZStream.collectWhileRight", "link" : "zio\/stream\/ZStream.html#collectWhileRight[L1,A1](implicitev:A<:<Either[L1,A1],implicittrace:zio.Trace):zio.stream.ZStream[R,E,A1]", "kind" : "def"}, {"label" : "collectWhileSome", "tail" : "(ev: <:<[A, Option[A1]], trace: Trace): ZStream[R, E, A1]", "member" : "zio.stream.ZStream.collectWhileSome", "link" : "zio\/stream\/ZStream.html#collectWhileSome[A1](implicitev:A<:<Option[A1],implicittrace:zio.Trace):zio.stream.ZStream[R,E,A1]", "kind" : "def"}, {"label" : "collectWhileLeft", "tail" : "(ev: <:<[A, Either[L1, A1]], trace: Trace): ZStream[R, E, L1]", "member" : "zio.stream.ZStream.collectWhileLeft", "link" : "zio\/stream\/ZStream.html#collectWhileLeft[L1,A1](implicitev:A<:<Either[L1,A1],implicittrace:zio.Trace):zio.stream.ZStream[R,E,L1]", "kind" : "def"}, {"label" : "collectWhile", "tail" : "(pf: PartialFunction[A, A1])(trace: Trace): ZStream[R, E, A1]", "member" : "zio.stream.ZStream.collectWhile", "link" : "zio\/stream\/ZStream.html#collectWhile[A1](pf:PartialFunction[A,A1])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A1]", "kind" : "def"}, {"label" : "collectZIO", "tail" : "(pf: PartialFunction[A, ZIO[R1, E1, A1]])(trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.collectZIO", "link" : "zio\/stream\/ZStream.html#collectZIO[R1<:R,E1>:E,A1](pf:PartialFunction[A,zio.ZIO[R1,E1,A1]])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "groupAdjacentBy", "tail" : "(f: (A) => K)(trace: Trace): ZStream[R, E, (K, NonEmptyChunk[A])]", "member" : "zio.stream.ZStream.groupAdjacentBy", "link" : "zio\/stream\/ZStream.html#groupAdjacentBy[K](f:A=>K)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,(K,zio.NonEmptyChunk[A])]", "kind" : "def"}, {"label" : "debug", "tail" : "(label: String)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.debug", "link" : "zio\/stream\/ZStream.html#debug(label:String)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "debug", "tail" : "(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.debug", "link" : "zio\/stream\/ZStream.html#debug(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "debounce", "tail" : "(d: => zio.Duration)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.debounce", "link" : "zio\/stream\/ZStream.html#debounce(d:=>zio.Duration)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "collectRight", "tail" : "(ev: <:<[A, Either[L1, A1]], trace: Trace): ZStream[R, E, A1]", "member" : "zio.stream.ZStream.collectRight", "link" : "zio\/stream\/ZStream.html#collectRight[L1,A1](implicitev:A<:<Either[L1,A1],implicittrace:zio.Trace):zio.stream.ZStream[R,E,A1]", "kind" : "def"}, {"label" : "collectSuccess", "tail" : "(ev: <:<[A, Exit[L1, A1]], trace: Trace): ZStream[R, E, A1]", "member" : "zio.stream.ZStream.collectSuccess", "link" : "zio\/stream\/ZStream.html#collectSuccess[L1,A1](implicitev:A<:<zio.Exit[L1,A1],implicittrace:zio.Trace):zio.stream.ZStream[R,E,A1]", "kind" : "def"}, {"label" : "collectSome", "tail" : "(ev: <:<[A, Option[A1]], trace: Trace): ZStream[R, E, A1]", "member" : "zio.stream.ZStream.collectSome", "link" : "zio\/stream\/ZStream.html#collectSome[A1](implicitev:A<:<Option[A1],implicittrace:zio.Trace):zio.stream.ZStream[R,E,A1]", "kind" : "def"}, {"label" : "collectLeft", "tail" : "(ev: <:<[A, Either[L1, A1]], trace: Trace): ZStream[R, E, L1]", "member" : "zio.stream.ZStream.collectLeft", "link" : "zio\/stream\/ZStream.html#collectLeft[L1,A1](implicitev:A<:<Either[L1,A1],implicittrace:zio.Trace):zio.stream.ZStream[R,E,L1]", "kind" : "def"}, {"label" : "collect", "tail" : "(f: PartialFunction[A, B])(trace: Trace): ZStream[R, E, B]", "member" : "zio.stream.ZStream.collect", "link" : "zio\/stream\/ZStream.html#collect[B](f:PartialFunction[A,B])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,B]", "kind" : "def"}, {"label" : "chunksWith", "tail" : "(f: (ZStream[R, E, Chunk[A]]) => ZStream[R1, E1, Chunk[A1]])(trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.chunksWith", "link" : "zio\/stream\/ZStream.html#chunksWith[R1,E1,A1](f:zio.stream.ZStream[R,E,zio.Chunk[A]]=>zio.stream.ZStream[R1,E1,zio.Chunk[A1]])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "chunks", "tail" : "(trace: Trace): ZStream[R, E, Chunk[A]]", "member" : "zio.stream.ZStream.chunks", "link" : "zio\/stream\/ZStream.html#chunks(implicittrace:zio.Trace):zio.stream.ZStream[R,E,zio.Chunk[A]]", "kind" : "def"}, {"label" : "changesWithZIO", "tail" : "(f: (A, A) => ZIO[R1, E1, Boolean])(trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.changesWithZIO", "link" : "zio\/stream\/ZStream.html#changesWithZIO[R1<:R,E1>:E](f:(A,A)=>zio.ZIO[R1,E1,Boolean])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "changesWith", "tail" : "(f: (A, A) => Boolean)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.changesWith", "link" : "zio\/stream\/ZStream.html#changesWith(f:(A,A)=>Boolean)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "changes", "tail" : "(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.changes", "link" : "zio\/stream\/ZStream.html#changes(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "catchSomeCause", "tail" : "(pf: PartialFunction[Cause[E], ZStream[R1, E1, A1]])(trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.catchSomeCause", "link" : "zio\/stream\/ZStream.html#catchSomeCause[R1<:R,E1>:E,A1>:A](pf:PartialFunction[zio.Cause[E],zio.stream.ZStream[R1,E1,A1]])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "catchSome", "tail" : "(pf: PartialFunction[E, ZStream[R1, E1, A1]])(trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.catchSome", "link" : "zio\/stream\/ZStream.html#catchSome[R1<:R,E1>:E,A1>:A](pf:PartialFunction[E,zio.stream.ZStream[R1,E1,A1]])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "catchAllCause", "tail" : "(f: (Cause[E]) => ZStream[R1, E2, A1])(trace: Trace): ZStream[R1, E2, A1]", "member" : "zio.stream.ZStream.catchAllCause", "link" : "zio\/stream\/ZStream.html#catchAllCause[R1<:R,E2,A1>:A](f:zio.Cause[E]=>zio.stream.ZStream[R1,E2,A1])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E2,A1]", "kind" : "def"}, {"label" : "catchAll", "tail" : "(f: (E) => ZStream[R1, E2, A1])(ev: CanFail[E], trace: Trace): ZStream[R1, E2, A1]", "member" : "zio.stream.ZStream.catchAll", "link" : "zio\/stream\/ZStream.html#catchAll[R1<:R,E2,A1>:A](f:E=>zio.stream.ZStream[R1,E2,A1])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.stream.ZStream[R1,E2,A1]", "kind" : "def"}, {"label" : "bufferUnbounded", "tail" : "(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.bufferUnbounded", "link" : "zio\/stream\/ZStream.html#bufferUnbounded(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "bufferSliding", "tail" : "(capacity: => Int)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.bufferSliding", "link" : "zio\/stream\/ZStream.html#bufferSliding(capacity:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "bufferDropping", "tail" : "(capacity: => Int)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.bufferDropping", "link" : "zio\/stream\/ZStream.html#bufferDropping(capacity:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "bufferChunksSliding", "tail" : "(capacity: => Int)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.bufferChunksSliding", "link" : "zio\/stream\/ZStream.html#bufferChunksSliding(capacity:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "bufferChunksDropping", "tail" : "(capacity: => Int)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.bufferChunksDropping", "link" : "zio\/stream\/ZStream.html#bufferChunksDropping(capacity:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "bufferChunks", "tail" : "(capacity: => Int)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.bufferChunks", "link" : "zio\/stream\/ZStream.html#bufferChunks(capacity:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "buffer", "tail" : "(capacity: => Int)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.buffer", "link" : "zio\/stream\/ZStream.html#buffer(capacity:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "broadcastedQueuesDynamic", "tail" : "(maximumLag: => Int)(trace: Trace): ZIO[R with Scope, Nothing, ZIO[R with Scope, Nothing, Dequeue[Take[E, A]]]]", "member" : "zio.stream.ZStream.broadcastedQueuesDynamic", "link" : "zio\/stream\/ZStream.html#broadcastedQueuesDynamic(maximumLag:=>Int)(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,zio.ZIO[Rwithzio.Scope,Nothing,zio.Dequeue[zio.stream.Take[E,A]]]]", "kind" : "def"}, {"label" : "broadcastedQueues", "tail" : "(n: => Int, maximumLag: => Int)(trace: Trace): ZIO[R with Scope, Nothing, Chunk[Dequeue[Take[E, A]]]]", "member" : "zio.stream.ZStream.broadcastedQueues", "link" : "zio\/stream\/ZStream.html#broadcastedQueues(n:=>Int,maximumLag:=>Int)(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,zio.Chunk[zio.Dequeue[zio.stream.Take[E,A]]]]", "kind" : "def"}, {"label" : "broadcastDynamic", "tail" : "(maximumLag: => Int)(trace: Trace): ZIO[R with Scope, Nothing, ZStream[Any, E, A]]", "member" : "zio.stream.ZStream.broadcastDynamic", "link" : "zio\/stream\/ZStream.html#broadcastDynamic(maximumLag:=>Int)(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,zio.stream.ZStream[Any,E,A]]", "kind" : "def"}, {"label" : "broadcast", "tail" : "(n: => Int, maximumLag: => Int)(trace: Trace): ZIO[R with Scope, Nothing, Chunk[ZStream[Any, E, A]]]", "member" : "zio.stream.ZStream.broadcast", "link" : "zio\/stream\/ZStream.html#broadcast(n:=>Int,maximumLag:=>Int)(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,zio.Chunk[zio.stream.ZStream[Any,E,A]]]", "kind" : "def"}, {"label" : "as", "tail" : "(A2: => A2)(trace: Trace): ZStream[R, E, A2]", "member" : "zio.stream.ZStream.as", "link" : "zio\/stream\/ZStream.html#as[A2](A2:=>A2)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A2]", "kind" : "def"}, {"label" : "aggregateAsyncWithinEither", "tail" : "(sink: => ZSink[R1, E1, A1, A1, B], schedule: => Schedule[R1, Option[B], C])(trace: Trace): ZStream[R1, E1, Either[C, B]]", "member" : "zio.stream.ZStream.aggregateAsyncWithinEither", "link" : "zio\/stream\/ZStream.html#aggregateAsyncWithinEither[R1<:R,E1>:E,A1>:A,B,C](sink:=>zio.stream.ZSink[R1,E1,A1,A1,B],schedule:=>zio.Schedule[R1,Option[B],C])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,Either[C,B]]", "kind" : "def"}, {"label" : "aggregateAsyncWithin", "tail" : "(sink: => ZSink[R1, E1, A1, A1, B], schedule: => Schedule[R1, Option[B], Any])(trace: Trace): ZStream[R1, E1, B]", "member" : "zio.stream.ZStream.aggregateAsyncWithin", "link" : "zio\/stream\/ZStream.html#aggregateAsyncWithin[R1<:R,E1>:E,A1>:A,B](sink:=>zio.stream.ZSink[R1,E1,A1,A1,B],schedule:=>zio.Schedule[R1,Option[B],Any])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,B]", "kind" : "def"}, {"label" : "aggregateAsync", "tail" : "(sink: => ZSink[R1, E1, A1, A1, B])(trace: Trace): ZStream[R1, E1, B]", "member" : "zio.stream.ZStream.aggregateAsync", "link" : "zio\/stream\/ZStream.html#aggregateAsync[R1<:R,E1>:E,A1>:A,B](sink:=>zio.stream.ZSink[R1,E1,A1,A1,B])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,B]", "kind" : "def"}, {"label" : "absolve", "tail" : "(ev: <:<[ZStream[R, E, A], ZStream[R1, E1, Either[E1, A1]]], trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.absolve", "link" : "zio\/stream\/ZStream.html#absolve[R1<:R,E1,A1](implicitev:zio.stream.ZStream[R,E,A]<:<zio.stream.ZStream[R1,E1,Either[E1,A1]],implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : "!", "tail" : "(ev1: <:<[E, Throwable], ev2: CanFail[E], trace: Trace): ZStream[R, Nothing, A]", "member" : "zio.stream.ZStream.!", "link" : "zio\/stream\/ZStream.html#!(implicitev1:E<:<Throwable,implicitev2:zio.CanFail[E],implicittrace:zio.Trace):zio.stream.ZStream[R,Nothing,A]", "kind" : "def"}, {"label" : "<>", "tail" : "(that: => ZStream[R1, E2, A1])(ev: CanFail[E], trace: Trace): ZStream[R1, E2, A1]", "member" : "zio.stream.ZStream.<>", "link" : "zio\/stream\/ZStream.html#<>[R1<:R,E2,A1>:A](that:=>zio.stream.ZStream[R1,E2,A1])(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.stream.ZStream[R1,E2,A1]", "kind" : "def"}, {"label" : "++", "tail" : "(that: => ZStream[R1, E1, A1])(trace: Trace): ZStream[R1, E1, A1]", "member" : "zio.stream.ZStream.++", "link" : "zio\/stream\/ZStream.html#++[R1<:R,E1>:E,A1>:A](that:=>zio.stream.ZStream[R1,E1,A1])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A1]", "kind" : "def"}, {"label" : ">>>", "tail" : "(sink: => ZSink[R1, E1, A2, Any, Z])(trace: Trace): ZIO[R1, E1, Z]", "member" : "zio.stream.ZStream.>>>", "link" : "zio\/stream\/ZStream.html#>>>[R1<:R,E1>:E,A2>:A,Z](sink:=>zio.stream.ZSink[R1,E1,A2,Any,Z])(implicittrace:zio.Trace):zio.ZIO[R1,E1,Z]", "kind" : "def"}, {"label" : ">>>", "tail" : "(pipeline: => ZPipeline[R1, E1, A, B])(trace: Trace): ZStream[R1, E1, B]", "member" : "zio.stream.ZStream.>>>", "link" : "zio\/stream\/ZStream.html#>>>[R1<:R,E1>:E,B](pipeline:=>zio.stream.ZPipeline[R1,E1,A,B])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,B]", "kind" : "def"}, {"label" : "&>", "tail" : "(that: => ZStream[R1, E1, A2])(trace: Trace): ZStream[R1, E1, A2]", "member" : "zio.stream.ZStream.&>", "link" : "zio\/stream\/ZStream.html#&>[R1<:R,E1>:E,A2](that:=>zio.stream.ZStream[R1,E1,A2])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A2]", "kind" : "def"}, {"label" : "<&", "tail" : "(that: => ZStream[R1, E1, A2])(trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.<&", "link" : "zio\/stream\/ZStream.html#<&[R1<:R,E1>:E,A2](that:=>zio.stream.ZStream[R1,E1,A2])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "<&>", "tail" : "(that: => ZStream[R1, E1, A2])(zippable: Zippable[A, A2], trace: Trace): ZStream[R1, E1, Out]", "member" : "zio.stream.ZStream.<&>", "link" : "zio\/stream\/ZStream.html#<&>[R1<:R,E1>:E,A2](that:=>zio.stream.ZStream[R1,E1,A2])(implicitzippable:zio.Zippable[A,A2],implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,zippable.Out]", "kind" : "def"}, {"label" : "*>", "tail" : "(that: => ZStream[R1, E1, A2])(trace: Trace): ZStream[R1, E1, A2]", "member" : "zio.stream.ZStream.*>", "link" : "zio\/stream\/ZStream.html#*>[R1<:R,E1>:E,A2](that:=>zio.stream.ZStream[R1,E1,A2])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A2]", "kind" : "def"}, {"label" : "<*", "tail" : "(that: => ZStream[R1, E1, A2])(trace: Trace): ZStream[R1, E1, A]", "member" : "zio.stream.ZStream.<*", "link" : "zio\/stream\/ZStream.html#<*[R1<:R,E1>:E,A2](that:=>zio.stream.ZStream[R1,E1,A2])(implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,A]", "kind" : "def"}, {"label" : "<*>", "tail" : "(that: => ZStream[R1, E1, A2])(zippable: Zippable[A, A2], trace: Trace): ZStream[R1, E1, Out]", "member" : "zio.stream.ZStream.<*>", "link" : "zio\/stream\/ZStream.html#<*>[R1<:R,E1>:E,A2](that:=>zio.stream.ZStream[R1,E1,A2])(implicitzippable:zio.Zippable[A,A2],implicittrace:zio.Trace):zio.stream.ZStream[R1,E1,zippable.Out]", "kind" : "def"}, {"label" : "@@", "tail" : "(aspect: => ZStreamAspect[LowerR, UpperR, LowerE, UpperE, LowerA, UpperA])(trace: Trace): ZStream[UpperR, LowerE, LowerA]", "member" : "zio.stream.ZStream.@@", "link" : "zio\/stream\/ZStream.html#@@[LowerR<:UpperR,UpperR<:R,LowerE>:E,UpperE>:LowerE,LowerA>:A,UpperA>:LowerA](aspect:=>zio.stream.ZStreamAspect[LowerR,UpperR,LowerE,UpperE,LowerA,UpperA])(implicittrace:zio.Trace):zio.stream.ZStream[UpperR,LowerE,LowerA]", "kind" : "def"}, {"label" : "channel", "tail" : ": ZChannel[R, Any, Any, Any, E, Chunk[A], Any]", "member" : "zio.stream.ZStream.channel", "link" : "zio\/stream\/ZStream.html#channel:zio.stream.ZChannel[R,Any,Any,Any,E,zio.Chunk[A],Any]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/ZStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/ZStream.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/ZStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/ZStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/ZStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/ZStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/ZStream.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/ZStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/ZStream.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/ZStream.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stream\/ZStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/ZStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stream\/ZStream.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/ZStream.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/ZStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/ZStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Connection", "tail" : "", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.Connection", "link" : "zio\/stream\/ZStream$.html#Connection", "kind" : "object"}, {"label" : "Connection", "tail" : "", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.Connection", "link" : "zio\/stream\/ZStream$.html#ConnectionextendsAnyRef", "kind" : "final class"}, {"label" : "SortedByKey", "tail" : "", "member" : "zio.stream.ZStream.SortedByKey", "link" : "zio\/stream\/ZStream$.html#SortedByKey[R,E,K,A]extendsAnyRef", "kind" : "implicit final class"}, {"label" : "Emit", "tail" : "", "member" : "zio.stream.ZStream.Emit", "link" : "zio\/stream\/ZStream$.html#Emit[+R,-E,-A,+B]extendszio.ZIO[R,Option[E],zio.Chunk[A]]=>B", "kind" : "trait"}, {"label" : "SyntaxOps", "tail" : "", "member" : "zio.stream.ZStream.SyntaxOps", "link" : "zio\/stream\/ZStream$.html#SyntaxOps[-R,+E,O]extendsAnyRef", "kind" : "implicit final class"}, {"label" : "RefineToOrDieOps", "tail" : "", "member" : "zio.stream.ZStream.RefineToOrDieOps", "link" : "zio\/stream\/ZStream$.html#RefineToOrDieOps[R,E<:Throwable,A]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "HaltStrategy", "tail" : "", "member" : "zio.stream.ZStream.HaltStrategy", "link" : "zio\/stream\/ZStream$.html#HaltStrategy", "kind" : "object"}, {"label" : "HaltStrategy", "tail" : "", "member" : "zio.stream.ZStream.HaltStrategy", "link" : "zio\/stream\/ZStream$.html#HaltStrategyextendsAnyRef", "kind" : "sealed trait"}, {"label" : "WhenCaseZIO", "tail" : "", "member" : "zio.stream.ZStream.WhenCaseZIO", "link" : "zio\/stream\/ZStream$.html#WhenCaseZIO[R,E,A]extendsAnyVal", "kind" : "final class"}, {"label" : "WhenZIO", "tail" : "", "member" : "zio.stream.ZStream.WhenZIO", "link" : "zio\/stream\/ZStream$.html#WhenZIO[R,E]extendsAnyVal", "kind" : "final class"}, {"label" : "Pull", "tail" : "", "member" : "zio.stream.ZStream.Pull", "link" : "zio\/stream\/ZStream$.html#Pull[-R,+E,+A]=zio.ZIO[R,Option[E],zio.Chunk[A]]", "kind" : "type"}, {"label" : "ZStreamConstructorLowPriority3", "tail" : "", "member" : "zio.stream.ZStream.ZStreamConstructorLowPriority3", "link" : "zio\/stream\/ZStream$.html#ZStreamConstructorLowPriority3extendsAnyRef", "kind" : "trait"}, {"label" : "ZStreamConstructorLowPriority2", "tail" : "", "member" : "zio.stream.ZStream.ZStreamConstructorLowPriority2", "link" : "zio\/stream\/ZStream$.html#ZStreamConstructorLowPriority2extendsZStream.ZStreamConstructorLowPriority3", "kind" : "trait"}, {"label" : "ZStreamConstructorLowPriority1", "tail" : "", "member" : "zio.stream.ZStream.ZStreamConstructorLowPriority1", "link" : "zio\/stream\/ZStream$.html#ZStreamConstructorLowPriority1extendsZStream.ZStreamConstructorLowPriority2", "kind" : "trait"}, {"label" : "ZStreamConstructor", "tail" : "", "member" : "zio.stream.ZStream.ZStreamConstructor", "link" : "zio\/stream\/ZStream$.html#ZStreamConstructor", "kind" : "object"}, {"label" : "ZStreamConstructor", "tail" : "", "member" : "zio.stream.ZStream.ZStreamConstructor", "link" : "zio\/stream\/ZStream$.html#ZStreamConstructor[Input]extendsAnyRef", "kind" : "trait"}, {"label" : "UpdateServiceAt", "tail" : "", "member" : "zio.stream.ZStream.UpdateServiceAt", "link" : "zio\/stream\/ZStream$.html#UpdateServiceAt[-R,+E,+A,Service]extendsAnyVal", "kind" : "final class"}, {"label" : "UpdateService", "tail" : "", "member" : "zio.stream.ZStream.UpdateService", "link" : "zio\/stream\/ZStream$.html#UpdateService[-R,+E,+A,M]extendsAnyVal", "kind" : "final class"}, {"label" : "ProvideSomeLayer", "tail" : "", "member" : "zio.stream.ZStream.ProvideSomeLayer", "link" : "zio\/stream\/ZStream$.html#ProvideSomeLayer[R0,-R,+E,+A]extendsAnyVal", "kind" : "final class"}, {"label" : "GroupBy", "tail" : "", "member" : "zio.stream.ZStream.GroupBy", "link" : "zio\/stream\/ZStream$.html#GroupBy[-R,+E,+K,+V]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "UnwrapScopedPartiallyApplied", "tail" : "", "member" : "zio.stream.ZStream.UnwrapScopedPartiallyApplied", "link" : "zio\/stream\/ZStream$.html#UnwrapScopedPartiallyApplied[R]extendsAnyVal", "kind" : "final class"}, {"label" : "ServiceWithStreamPartiallyApplied", "tail" : "", "member" : "zio.stream.ZStream.ServiceWithStreamPartiallyApplied", "link" : "zio\/stream\/ZStream$.html#ServiceWithStreamPartiallyApplied[Service]extendsAnyVal", "kind" : "final class"}, {"label" : "ServiceWithZIOPartiallyApplied", "tail" : "", "member" : "zio.stream.ZStream.ServiceWithZIOPartiallyApplied", "link" : "zio\/stream\/ZStream$.html#ServiceWithZIOPartiallyApplied[Service]extendsAnyVal", "kind" : "final class"}, {"label" : "ServiceWithPartiallyApplied", "tail" : "", "member" : "zio.stream.ZStream.ServiceWithPartiallyApplied", "link" : "zio\/stream\/ZStream$.html#ServiceWithPartiallyApplied[Service]extendsAnyVal", "kind" : "final class"}, {"label" : "ServiceAtPartiallyApplied", "tail" : "", "member" : "zio.stream.ZStream.ServiceAtPartiallyApplied", "link" : "zio\/stream\/ZStream$.html#ServiceAtPartiallyApplied[Service]extendsAnyVal", "kind" : "final class"}, {"label" : "ScopedPartiallyApplied", "tail" : "", "member" : "zio.stream.ZStream.ScopedPartiallyApplied", "link" : "zio\/stream\/ZStream$.html#ScopedPartiallyApplied[R]extendsAnyVal", "kind" : "final class"}, {"label" : "EnvironmentWithStreamPartiallyApplied", "tail" : "", "member" : "zio.stream.ZStream.EnvironmentWithStreamPartiallyApplied", "link" : "zio\/stream\/ZStream$.html#EnvironmentWithStreamPartiallyApplied[R]extendsAnyVal", "kind" : "final class"}, {"label" : "EnvironmentWithZIOPartiallyApplied", "tail" : "", "member" : "zio.stream.ZStream.EnvironmentWithZIOPartiallyApplied", "link" : "zio\/stream\/ZStream$.html#EnvironmentWithZIOPartiallyApplied[R]extendsAnyVal", "kind" : "final class"}, {"label" : "EnvironmentWithPartiallyApplied", "tail" : "", "member" : "zio.stream.ZStream.EnvironmentWithPartiallyApplied", "link" : "zio\/stream\/ZStream$.html#EnvironmentWithPartiallyApplied[R]extendsAnyVal", "kind" : "final class"}, {"label" : "whenZIO", "tail" : "(b: => ZIO[R, E, Boolean]): WhenZIO[R, E]", "member" : "zio.stream.ZStream.whenZIO", "link" : "zio\/stream\/ZStream$.html#whenZIO[R,E](b:=>zio.ZIO[R,E,Boolean]):zio.stream.ZStream.WhenZIO[R,E]", "kind" : "def"}, {"label" : "whenCaseZIO", "tail" : "(a: => ZIO[R, E, A]): WhenCaseZIO[R, E, A]", "member" : "zio.stream.ZStream.whenCaseZIO", "link" : "zio\/stream\/ZStream$.html#whenCaseZIO[R,E,A](a:=>zio.ZIO[R,E,A]):zio.stream.ZStream.WhenCaseZIO[R,E,A]", "kind" : "def"}, {"label" : "whenCase", "tail" : "(a: => A)(pf: PartialFunction[A, ZStream[R, E, O]])(trace: Trace): ZStream[R, E, O]", "member" : "zio.stream.ZStream.whenCase", "link" : "zio\/stream\/ZStream$.html#whenCase[R,E,A,O](a:=>A)(pf:PartialFunction[A,zio.stream.ZStream[R,E,O]])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,O]", "kind" : "def"}, {"label" : "when", "tail" : "(b: => Boolean)(zStream: => ZStream[R, E, O])(trace: Trace): ZStream[R, E, O]", "member" : "zio.stream.ZStream.when", "link" : "zio\/stream\/ZStream$.html#when[R,E,O](b:=>Boolean)(zStream:=>zio.stream.ZStream[R,E,O])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,O]", "kind" : "def"}, {"label" : "unwrapScopedWith", "tail" : "(f: (Scope) => ZIO[R, E, ZStream[R, E, A]])(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.unwrapScopedWith", "link" : "zio\/stream\/ZStream$.html#unwrapScopedWith[R,E,A](f:zio.Scope=>zio.ZIO[R,E,zio.stream.ZStream[R,E,A]])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "unwrapScoped", "tail" : "(): UnwrapScopedPartiallyApplied[R]", "member" : "zio.stream.ZStream.unwrapScoped", "link" : "zio\/stream\/ZStream$.html#unwrapScoped[R]:zio.stream.ZStream.UnwrapScopedPartiallyApplied[R]", "kind" : "def"}, {"label" : "unwrap", "tail" : "(fa: => ZIO[R, E, ZStream[R, E, A]])(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.unwrap", "link" : "zio\/stream\/ZStream$.html#unwrap[R,E,A](fa:=>zio.ZIO[R,E,zio.stream.ZStream[R,E,A]])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "unfoldZIO", "tail" : "(s: => S)(f: (S) => ZIO[R, E, Option[(A, S)]])(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.unfoldZIO", "link" : "zio\/stream\/ZStream$.html#unfoldZIO[R,E,A,S](s:=>S)(f:S=>zio.ZIO[R,E,Option[(A,S)]])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "unfoldChunkZIO", "tail" : "(s: => S)(f: (S) => ZIO[R, E, Option[(Chunk[A], S)]])(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.unfoldChunkZIO", "link" : "zio\/stream\/ZStream$.html#unfoldChunkZIO[R,E,A,S](s:=>S)(f:S=>zio.ZIO[R,E,Option[(zio.Chunk[A],S)]])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "unfoldChunk", "tail" : "(s: => S)(f: (S) => Option[(Chunk[A], S)])(trace: Trace): ZStream[Any, Nothing, A]", "member" : "zio.stream.ZStream.unfoldChunk", "link" : "zio\/stream\/ZStream$.html#unfoldChunk[S,A](s:=>S)(f:S=>Option[(zio.Chunk[A],S)])(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,A]", "kind" : "def"}, {"label" : "unfold", "tail" : "(s: => S)(f: (S) => Option[(A, S)])(trace: Trace): ZStream[Any, Nothing, A]", "member" : "zio.stream.ZStream.unfold", "link" : "zio\/stream\/ZStream$.html#unfold[S,A](s:=>S)(f:S=>Option[(A,S)])(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,A]", "kind" : "def"}, {"label" : "unit", "tail" : ": ZStream[Any, Nothing, Unit]", "member" : "zio.stream.ZStream.unit", "link" : "zio\/stream\/ZStream$.html#unit:zio.stream.ZStream[Any,Nothing,Unit]", "kind" : "val"}, {"label" : "tick", "tail" : "(interval: => zio.Duration)(trace: Trace): ZStream[Any, Nothing, Unit]", "member" : "zio.stream.ZStream.tick", "link" : "zio\/stream\/ZStream$.html#tick(interval:=>zio.Duration)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "tags", "tail" : "(trace: Trace): ZStream[Any, Nothing, Set[MetricLabel]]", "member" : "zio.stream.ZStream.tags", "link" : "zio\/stream\/ZStream$.html#tags(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Set[zio.metrics.MetricLabel]]", "kind" : "def"}, {"label" : "tagged", "tail" : "(tags: => Set[MetricLabel])(trace: Trace): ZStream[Any, Nothing, Unit]", "member" : "zio.stream.ZStream.tagged", "link" : "zio\/stream\/ZStream$.html#tagged(tags:=>Set[zio.metrics.MetricLabel])(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "tagged", "tail" : "(tag: => MetricLabel, tags: MetricLabel*)(trace: Trace): ZStream[Any, Nothing, Unit]", "member" : "zio.stream.ZStream.tagged", "link" : "zio\/stream\/ZStream$.html#tagged(tag:=>zio.metrics.MetricLabel,tags:zio.metrics.MetricLabel*)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "tagged", "tail" : "(key: => String, value: => String)(trace: Trace): ZStream[Any, Nothing, Unit]", "member" : "zio.stream.ZStream.tagged", "link" : "zio\/stream\/ZStream$.html#tagged(key:=>String,value:=>String)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "suspend", "tail" : "(stream: => ZStream[R, E, A]): ZStream[R, E, A]", "member" : "zio.stream.ZStream.suspend", "link" : "zio\/stream\/ZStream$.html#suspend[R,E,A](stream:=>zio.stream.ZStream[R,E,A]):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "succeed", "tail" : "(a: => A)(trace: Trace): ZStream[Any, Nothing, A]", "member" : "zio.stream.ZStream.succeed", "link" : "zio\/stream\/ZStream$.html#succeed[A](a:=>A)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,A]", "kind" : "def"}, {"label" : "serviceWithStream", "tail" : "(): ServiceWithStreamPartiallyApplied[Service]", "member" : "zio.stream.ZStream.serviceWithStream", "link" : "zio\/stream\/ZStream$.html#serviceWithStream[Service]:zio.stream.ZStream.ServiceWithStreamPartiallyApplied[Service]", "kind" : "def"}, {"label" : "serviceWithZIO", "tail" : "(): ServiceWithZIOPartiallyApplied[Service]", "member" : "zio.stream.ZStream.serviceWithZIO", "link" : "zio\/stream\/ZStream$.html#serviceWithZIO[Service]:zio.stream.ZStream.ServiceWithZIOPartiallyApplied[Service]", "kind" : "def"}, {"label" : "serviceWith", "tail" : "(): ServiceWithPartiallyApplied[Service]", "member" : "zio.stream.ZStream.serviceWith", "link" : "zio\/stream\/ZStream$.html#serviceWith[Service]:zio.stream.ZStream.ServiceWithPartiallyApplied[Service]", "kind" : "def"}, {"label" : "serviceAt", "tail" : "(): ServiceAtPartiallyApplied[Service]", "member" : "zio.stream.ZStream.serviceAt", "link" : "zio\/stream\/ZStream$.html#serviceAt[Service]:zio.stream.ZStream.ServiceAtPartiallyApplied[Service]", "kind" : "def"}, {"label" : "service", "tail" : "(arg0: Tag[A], trace: Trace): ZStream[A, Nothing, A]", "member" : "zio.stream.ZStream.service", "link" : "zio\/stream\/ZStream$.html#service[A](implicitevidence$1:zio.Tag[A],implicittrace:zio.Trace):zio.stream.ZStream[A,Nothing,A]", "kind" : "def"}, {"label" : "repeatZIOWithSchedule", "tail" : "(effect: => ZIO[R, E, A], schedule: => Schedule[R, A, Any])(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.repeatZIOWithSchedule", "link" : "zio\/stream\/ZStream$.html#repeatZIOWithSchedule[R,E,A](effect:=>zio.ZIO[R,E,A],schedule:=>zio.Schedule[R,A,Any])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "repeatZIOOption", "tail" : "(fa: => ZIO[R, Option[E], A])(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.repeatZIOOption", "link" : "zio\/stream\/ZStream$.html#repeatZIOOption[R,E,A](fa:=>zio.ZIO[R,Option[E],A])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "repeatZIOChunkOption", "tail" : "(fa: => ZIO[R, Option[E], Chunk[A]])(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.repeatZIOChunkOption", "link" : "zio\/stream\/ZStream$.html#repeatZIOChunkOption[R,E,A](fa:=>zio.ZIO[R,Option[E],zio.Chunk[A]])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "repeatZIOChunk", "tail" : "(fa: => ZIO[R, E, Chunk[A]])(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.repeatZIOChunk", "link" : "zio\/stream\/ZStream$.html#repeatZIOChunk[R,E,A](fa:=>zio.ZIO[R,E,zio.Chunk[A]])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "repeatZIO", "tail" : "(fa: => ZIO[R, E, A])(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.repeatZIO", "link" : "zio\/stream\/ZStream$.html#repeatZIO[R,E,A](fa:=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "repeatWithSchedule", "tail" : "(a: => A, schedule: => Schedule[R, A, _])(trace: Trace): ZStream[R, Nothing, A]", "member" : "zio.stream.ZStream.repeatWithSchedule", "link" : "zio\/stream\/ZStream$.html#repeatWithSchedule[R,A](a:=>A,schedule:=>zio.Schedule[R,A,_])(implicittrace:zio.Trace):zio.stream.ZStream[R,Nothing,A]", "kind" : "def"}, {"label" : "repeat", "tail" : "(a: => A)(trace: Trace): ZStream[Any, Nothing, A]", "member" : "zio.stream.ZStream.repeat", "link" : "zio\/stream\/ZStream$.html#repeat[A](a:=>A)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,A]", "kind" : "def"}, {"label" : "range", "tail" : "(min: => Int, max: => Int, chunkSize: => Int)(trace: Trace): ZStream[Any, Nothing, Int]", "member" : "zio.stream.ZStream.range", "link" : "zio\/stream\/ZStream$.html#range(min:=>Int,max:=>Int,chunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Int]", "kind" : "def"}, {"label" : "paginateZIO", "tail" : "(s: => S)(f: (S) => ZIO[R, E, (A, Option[S])])(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.paginateZIO", "link" : "zio\/stream\/ZStream$.html#paginateZIO[R,E,A,S](s:=>S)(f:S=>zio.ZIO[R,E,(A,Option[S])])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "provideLayer", "tail" : "(layer: ZLayer[RIn, E, ROut])(stream: => ZStream[ROut with RIn2, E, ROut2])(ev: zio.EnvironmentTag[RIn2], tag: zio.EnvironmentTag[ROut], trace: Trace): ZStream[RIn with RIn2, E, ROut2]", "member" : "zio.stream.ZStream.provideLayer", "link" : "zio\/stream\/ZStream$.html#provideLayer[RIn,E,ROut,RIn2,ROut2](layer:zio.ZLayer[RIn,E,ROut])(stream:=>zio.stream.ZStream[ROutwithRIn2,E,ROut2])(implicitev:zio.EnvironmentTag[RIn2],implicittag:zio.EnvironmentTag[ROut],implicittrace:zio.Trace):zio.stream.ZStream[RInwithRIn2,E,ROut2]", "kind" : "def"}, {"label" : "paginateChunkZIO", "tail" : "(s: => S)(f: (S) => ZIO[R, E, (Chunk[A], Option[S])])(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.paginateChunkZIO", "link" : "zio\/stream\/ZStream$.html#paginateChunkZIO[R,E,A,S](s:=>S)(f:S=>zio.ZIO[R,E,(zio.Chunk[A],Option[S])])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "paginateChunk", "tail" : "(s: => S)(f: (S) => (Chunk[A], Option[S]))(trace: Trace): ZStream[Any, Nothing, A]", "member" : "zio.stream.ZStream.paginateChunk", "link" : "zio\/stream\/ZStream$.html#paginateChunk[A,S](s:=>S)(f:S=>(zio.Chunk[A],Option[S]))(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,A]", "kind" : "def"}, {"label" : "paginate", "tail" : "(s: => S)(f: (S) => (A, Option[S]))(trace: Trace): ZStream[Any, Nothing, A]", "member" : "zio.stream.ZStream.paginate", "link" : "zio\/stream\/ZStream$.html#paginate[R,E,A,S](s:=>S)(f:S=>(A,Option[S]))(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,A]", "kind" : "def"}, {"label" : "never", "tail" : "(trace: Trace): ZStream[Any, Nothing, Nothing]", "member" : "zio.stream.ZStream.never", "link" : "zio\/stream\/ZStream$.html#never(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Nothing]", "kind" : "def"}, {"label" : "mergeAllUnbounded", "tail" : "(outputBuffer: => Int)(streams: ZStream[R, E, O]*)(trace: Trace): ZStream[R, E, O]", "member" : "zio.stream.ZStream.mergeAllUnbounded", "link" : "zio\/stream\/ZStream$.html#mergeAllUnbounded[R,E,O](outputBuffer:=>Int)(streams:zio.stream.ZStream[R,E,O]*)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,O]", "kind" : "def"}, {"label" : "mergeAll", "tail" : "(n: => Int, outputBuffer: => Int)(streams: ZStream[R, E, O]*)(trace: Trace): ZStream[R, E, O]", "member" : "zio.stream.ZStream.mergeAll", "link" : "zio\/stream\/ZStream$.html#mergeAll[R,E,O](n:=>Int,outputBuffer:=>Int)(streams:zio.stream.ZStream[R,E,O]*)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,O]", "kind" : "def"}, {"label" : "scopedWith", "tail" : "(f: (Scope) => ZIO[R, E, A])(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.scopedWith", "link" : "zio\/stream\/ZStream$.html#scopedWith[R,E,A](f:zio.Scope=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "scoped", "tail" : "(): ScopedPartiallyApplied[R]", "member" : "zio.stream.ZStream.scoped", "link" : "zio\/stream\/ZStream$.html#scoped[R]:zio.stream.ZStream.ScopedPartiallyApplied[R]", "kind" : "def"}, {"label" : "logWarning", "tail" : "(message: => String)(trace: Trace): ZStream[Any, Nothing, Unit]", "member" : "zio.stream.ZStream.logWarning", "link" : "zio\/stream\/ZStream$.html#logWarning(message:=>String)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "logTrace", "tail" : "(message: => String)(trace: Trace): ZStream[Any, Nothing, Unit]", "member" : "zio.stream.ZStream.logTrace", "link" : "zio\/stream\/ZStream$.html#logTrace(message:=>String)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "logSpan", "tail" : "(label: => String)(trace: Trace): ZStream[Any, Nothing, Unit]", "member" : "zio.stream.ZStream.logSpan", "link" : "zio\/stream\/ZStream$.html#logSpan(label:=>String)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "logLevel", "tail" : "(level: LogLevel)(trace: Trace): ZStream[Any, Nothing, Unit]", "member" : "zio.stream.ZStream.logLevel", "link" : "zio\/stream\/ZStream$.html#logLevel(level:zio.LogLevel)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "logInfo", "tail" : "(message: => String)(trace: Trace): ZStream[Any, Nothing, Unit]", "member" : "zio.stream.ZStream.logInfo", "link" : "zio\/stream\/ZStream$.html#logInfo(message:=>String)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "logFatal", "tail" : "(message: => String)(trace: Trace): ZStream[Any, Nothing, Unit]", "member" : "zio.stream.ZStream.logFatal", "link" : "zio\/stream\/ZStream$.html#logFatal(message:=>String)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "logErrorCause", "tail" : "(cause: => Cause[Any])(trace: Trace): ZStream[Any, Nothing, Unit]", "member" : "zio.stream.ZStream.logErrorCause", "link" : "zio\/stream\/ZStream$.html#logErrorCause(cause:=>zio.Cause[Any])(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "logError", "tail" : "(message: => String)(trace: Trace): ZStream[Any, Nothing, Unit]", "member" : "zio.stream.ZStream.logError", "link" : "zio\/stream\/ZStream$.html#logError(message:=>String)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "logDebug", "tail" : "(message: => String)(trace: Trace): ZStream[Any, Nothing, Unit]", "member" : "zio.stream.ZStream.logDebug", "link" : "zio\/stream\/ZStream$.html#logDebug(message:=>String)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "logAnnotations", "tail" : "(trace: Trace): ZStream[Any, Nothing, Map[String, String]]", "member" : "zio.stream.ZStream.logAnnotations", "link" : "zio\/stream\/ZStream$.html#logAnnotations(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Map[String,String]]", "kind" : "def"}, {"label" : "logAnnotate", "tail" : "(annotations: => Set[LogAnnotation])(trace: Trace): ZStream[Any, Nothing, Unit]", "member" : "zio.stream.ZStream.logAnnotate", "link" : "zio\/stream\/ZStream$.html#logAnnotate(annotations:=>Set[zio.LogAnnotation])(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "logAnnotate", "tail" : "(annotation: => LogAnnotation, annotations: LogAnnotation*)(trace: Trace): ZStream[Any, Nothing, Unit]", "member" : "zio.stream.ZStream.logAnnotate", "link" : "zio\/stream\/ZStream$.html#logAnnotate(annotation:=>zio.LogAnnotation,annotations:zio.LogAnnotation*)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "logAnnotate", "tail" : "(key: => String, value: => String)(trace: Trace): ZStream[Any, Nothing, Unit]", "member" : "zio.stream.ZStream.logAnnotate", "link" : "zio\/stream\/ZStream$.html#logAnnotate(key:=>String,value:=>String)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "log", "tail" : "(message: => String)(trace: Trace): ZStream[Any, Nothing, Unit]", "member" : "zio.stream.ZStream.log", "link" : "zio\/stream\/ZStream$.html#log(message:=>String)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "iterate", "tail" : "(a: => A)(f: (A) => A)(trace: Trace): ZStream[Any, Nothing, A]", "member" : "zio.stream.ZStream.iterate", "link" : "zio\/stream\/ZStream$.html#iterate[A](a:=>A)(f:A=>A)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,A]", "kind" : "def"}, {"label" : "fromZIOOption", "tail" : "(fa: => ZIO[R, Option[E], A])(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.fromZIOOption", "link" : "zio\/stream\/ZStream$.html#fromZIOOption[R,E,A](fa:=>zio.ZIO[R,Option[E],A])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "fromZIO", "tail" : "(fa: => ZIO[R, E, A])(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.fromZIO", "link" : "zio\/stream\/ZStream$.html#fromZIO[R,E,A](fa:=>zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "fromTQueue", "tail" : "(queue: => TDequeue[A])(trace: Trace): ZStream[Any, Nothing, A]", "member" : "zio.stream.ZStream.fromTQueue", "link" : "zio\/stream\/ZStream$.html#fromTQueue[A](queue:=>zio.stm.TDequeue[A])(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,A]", "kind" : "def"}, {"label" : "fromTPriorityQueue", "tail" : "(queue: => TPriorityQueue[A])(trace: Trace): ZStream[Any, Nothing, A]", "member" : "zio.stream.ZStream.fromTPriorityQueue", "link" : "zio\/stream\/ZStream$.html#fromTPriorityQueue[A](queue:=>zio.stm.TPriorityQueue[A])(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,A]", "kind" : "def"}, {"label" : "fromSchedule", "tail" : "(schedule: => Schedule[R, Any, A])(trace: Trace): ZStream[R, Nothing, A]", "member" : "zio.stream.ZStream.fromSchedule", "link" : "zio\/stream\/ZStream$.html#fromSchedule[R,A](schedule:=>zio.Schedule[R,Any,A])(implicittrace:zio.Trace):zio.stream.ZStream[R,Nothing,A]", "kind" : "def"}, {"label" : "fromQueueWithShutdown", "tail" : "(queue: => Dequeue[O], maxChunkSize: => Int)(trace: Trace): ZStream[Any, Nothing, O]", "member" : "zio.stream.ZStream.fromQueueWithShutdown", "link" : "zio\/stream\/ZStream$.html#fromQueueWithShutdown[O](queue:=>zio.Dequeue[O],maxChunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,O]", "kind" : "def"}, {"label" : "fromQueue", "tail" : "(queue: => Dequeue[O], maxChunkSize: => Int)(trace: Trace): ZStream[Any, Nothing, O]", "member" : "zio.stream.ZStream.fromQueue", "link" : "zio\/stream\/ZStream$.html#fromQueue[O](queue:=>zio.Dequeue[O],maxChunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,O]", "kind" : "def"}, {"label" : "fromPull", "tail" : "(zio: ZIO[Scope with R, Nothing, ZIO[R, Option[E], Chunk[A]]])(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.fromPull", "link" : "zio\/stream\/ZStream$.html#fromPull[R,E,A](zio:zio.ZIO[zio.ScopewithR,Nothing,zio.ZIO[R,Option[E],zio.Chunk[A]]])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "fromJavaIteratorZIO", "tail" : "(iterator: => ZIO[R, Throwable, Iterator[A]], chunkSize: Int)(trace: Trace): ZStream[R, Throwable, A]", "member" : "zio.stream.ZStream.fromJavaIteratorZIO", "link" : "zio\/stream\/ZStream$.html#fromJavaIteratorZIO[R,A](iterator:=>zio.ZIO[R,Throwable,java.util.Iterator[A]],chunkSize:Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,Throwable,A]", "kind" : "def"}, {"label" : "fromJavaIteratorZIO", "tail" : "(iterator: => ZIO[R, Throwable, Iterator[A]])(trace: Trace): ZStream[R, Throwable, A]", "member" : "zio.stream.ZStream.fromJavaIteratorZIO", "link" : "zio\/stream\/ZStream$.html#fromJavaIteratorZIO[R,A](iterator:=>zio.ZIO[R,Throwable,java.util.Iterator[A]])(implicittrace:zio.Trace):zio.stream.ZStream[R,Throwable,A]", "kind" : "def"}, {"label" : "fromJavaIteratorSucceed", "tail" : "(iterator: => Iterator[A], chunkSize: Int)(trace: Trace): ZStream[Any, Nothing, A]", "member" : "zio.stream.ZStream.fromJavaIteratorSucceed", "link" : "zio\/stream\/ZStream$.html#fromJavaIteratorSucceed[A](iterator:=>java.util.Iterator[A],chunkSize:Int)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,A]", "kind" : "def"}, {"label" : "fromJavaIteratorSucceed", "tail" : "(iterator: => Iterator[A])(trace: Trace): ZStream[Any, Nothing, A]", "member" : "zio.stream.ZStream.fromJavaIteratorSucceed", "link" : "zio\/stream\/ZStream$.html#fromJavaIteratorSucceed[A](iterator:=>java.util.Iterator[A])(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,A]", "kind" : "def"}, {"label" : "fromJavaIteratorScoped", "tail" : "(iterator: => ZIO[Scope with R, Throwable, Iterator[A]], chunkSize: Int)(trace: Trace): ZStream[R, Throwable, A]", "member" : "zio.stream.ZStream.fromJavaIteratorScoped", "link" : "zio\/stream\/ZStream$.html#fromJavaIteratorScoped[R,A](iterator:=>zio.ZIO[zio.ScopewithR,Throwable,java.util.Iterator[A]],chunkSize:Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,Throwable,A]", "kind" : "def"}, {"label" : "fromJavaIteratorScoped", "tail" : "(iterator: => ZIO[Scope with R, Throwable, Iterator[A]])(trace: Trace): ZStream[R, Throwable, A]", "member" : "zio.stream.ZStream.fromJavaIteratorScoped", "link" : "zio\/stream\/ZStream$.html#fromJavaIteratorScoped[R,A](iterator:=>zio.ZIO[zio.ScopewithR,Throwable,java.util.Iterator[A]])(implicittrace:zio.Trace):zio.stream.ZStream[R,Throwable,A]", "kind" : "def"}, {"label" : "fromJavaIterator", "tail" : "(iterator: => Iterator[A], chunkSize: Int)(trace: Trace): ZStream[Any, Throwable, A]", "member" : "zio.stream.ZStream.fromJavaIterator", "link" : "zio\/stream\/ZStream$.html#fromJavaIterator[A](iterator:=>java.util.Iterator[A],chunkSize:Int)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Throwable,A]", "kind" : "def"}, {"label" : "fromJavaIterator", "tail" : "(iterator: => Iterator[A])(trace: Trace): ZStream[Any, Throwable, A]", "member" : "zio.stream.ZStream.fromJavaIterator", "link" : "zio\/stream\/ZStream$.html#fromJavaIterator[A](iterator:=>java.util.Iterator[A])(implicittrace:zio.Trace):zio.stream.ZStream[Any,Throwable,A]", "kind" : "def"}, {"label" : "fromIteratorZIO", "tail" : "(iterator: => ZIO[R, Throwable, Iterator[A]], chunkSize: Int)(trace: Trace): ZStream[R, Throwable, A]", "member" : "zio.stream.ZStream.fromIteratorZIO", "link" : "zio\/stream\/ZStream$.html#fromIteratorZIO[R,A](iterator:=>zio.ZIO[R,Throwable,Iterator[A]],chunkSize:Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,Throwable,A]", "kind" : "def"}, {"label" : "fromIteratorZIO", "tail" : "(iterator: => ZIO[R, Throwable, Iterator[A]])(trace: Trace): ZStream[R, Throwable, A]", "member" : "zio.stream.ZStream.fromIteratorZIO", "link" : "zio\/stream\/ZStream$.html#fromIteratorZIO[R,A](iterator:=>zio.ZIO[R,Throwable,Iterator[A]])(implicittrace:zio.Trace):zio.stream.ZStream[R,Throwable,A]", "kind" : "def"}, {"label" : "fromIteratorSucceed", "tail" : "(iterator: => Iterator[A], maxChunkSize: => Int)(trace: Trace): ZStream[Any, Nothing, A]", "member" : "zio.stream.ZStream.fromIteratorSucceed", "link" : "zio\/stream\/ZStream$.html#fromIteratorSucceed[A](iterator:=>Iterator[A],maxChunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,A]", "kind" : "def"}, {"label" : "fromIteratorScoped", "tail" : "(iterator: => ZIO[Scope with R, Throwable, Iterator[A]], maxChunkSize: => Int)(trace: Trace): ZStream[R, Throwable, A]", "member" : "zio.stream.ZStream.fromIteratorScoped", "link" : "zio\/stream\/ZStream$.html#fromIteratorScoped[R,A](iterator:=>zio.ZIO[zio.ScopewithR,Throwable,Iterator[A]],maxChunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,Throwable,A]", "kind" : "def"}, {"label" : "fromIterator", "tail" : "(iterator: => Iterator[A], maxChunkSize: => Int)(trace: Trace): ZStream[Any, Throwable, A]", "member" : "zio.stream.ZStream.fromIterator", "link" : "zio\/stream\/ZStream$.html#fromIterator[A](iterator:=>Iterator[A],maxChunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Throwable,A]", "kind" : "def"}, {"label" : "fromIterableZIO", "tail" : "(iterable: => ZIO[R, E, Iterable[O]], chunkSize: => Int)(trace: Trace): ZStream[R, E, O]", "member" : "zio.stream.ZStream.fromIterableZIO", "link" : "zio\/stream\/ZStream$.html#fromIterableZIO[R,E,O](iterable:=>zio.ZIO[R,E,Iterable[O]],chunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,O]", "kind" : "def"}, {"label" : "fromIterableZIO", "tail" : "(iterable: => ZIO[R, E, Iterable[O]])(trace: Trace): ZStream[R, E, O]", "member" : "zio.stream.ZStream.fromIterableZIO", "link" : "zio\/stream\/ZStream$.html#fromIterableZIO[R,E,O](iterable:=>zio.ZIO[R,E,Iterable[O]])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,O]", "kind" : "def"}, {"label" : "fromIterable", "tail" : "(as: => Iterable[O], chunkSize: => Int)(trace: Trace): ZStream[Any, Nothing, O]", "member" : "zio.stream.ZStream.fromIterable", "link" : "zio\/stream\/ZStream$.html#fromIterable[O](as:=>Iterable[O],chunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,O]", "kind" : "def"}, {"label" : "fromIterable", "tail" : "(as: => Iterable[O])(trace: Trace): ZStream[Any, Nothing, O]", "member" : "zio.stream.ZStream.fromIterable", "link" : "zio\/stream\/ZStream$.html#fromIterable[O](as:=>Iterable[O])(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,O]", "kind" : "def"}, {"label" : "fromInputStreamScoped", "tail" : "(is: => ZIO[Scope with R, IOException, InputStream], chunkSize: => Int)(trace: Trace): ZStream[R, IOException, Byte]", "member" : "zio.stream.ZStream.fromInputStreamScoped", "link" : "zio\/stream\/ZStream$.html#fromInputStreamScoped[R](is:=>zio.ZIO[zio.ScopewithR,java.io.IOException,java.io.InputStream],chunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,java.io.IOException,Byte]", "kind" : "def"}, {"label" : "fromInputStreamZIO", "tail" : "(is: => ZIO[R, IOException, InputStream], chunkSize: => Int)(trace: Trace): ZStream[R, IOException, Byte]", "member" : "zio.stream.ZStream.fromInputStreamZIO", "link" : "zio\/stream\/ZStream$.html#fromInputStreamZIO[R](is:=>zio.ZIO[R,java.io.IOException,java.io.InputStream],chunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,java.io.IOException,Byte]", "kind" : "def"}, {"label" : "fromInputStream", "tail" : "(is: => InputStream, chunkSize: => Int)(trace: Trace): ZStream[Any, IOException, Byte]", "member" : "zio.stream.ZStream.fromInputStream", "link" : "zio\/stream\/ZStream$.html#fromInputStream(is:=>java.io.InputStream,chunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[Any,java.io.IOException,Byte]", "kind" : "def"}, {"label" : "fromHubScopedWithShutdown", "tail" : "(hub: => Hub[A], maxChunkSize: => Int)(trace: Trace): ZIO[Scope, Nothing, ZStream[Any, Nothing, A]]", "member" : "zio.stream.ZStream.fromHubScopedWithShutdown", "link" : "zio\/stream\/ZStream$.html#fromHubScopedWithShutdown[A](hub:=>zio.Hub[A],maxChunkSize:=>Int)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,zio.stream.ZStream[Any,Nothing,A]]", "kind" : "def"}, {"label" : "fromHubWithShutdown", "tail" : "(hub: => Hub[A], maxChunkSize: => Int)(trace: Trace): ZStream[Any, Nothing, A]", "member" : "zio.stream.ZStream.fromHubWithShutdown", "link" : "zio\/stream\/ZStream$.html#fromHubWithShutdown[A](hub:=>zio.Hub[A],maxChunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,A]", "kind" : "def"}, {"label" : "fromHubScoped", "tail" : "(hub: => Hub[A], maxChunkSize: => Int)(trace: Trace): ZIO[Scope, Nothing, ZStream[Any, Nothing, A]]", "member" : "zio.stream.ZStream.fromHubScoped", "link" : "zio\/stream\/ZStream$.html#fromHubScoped[A](hub:=>zio.Hub[A],maxChunkSize:=>Int)(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,zio.stream.ZStream[Any,Nothing,A]]", "kind" : "def"}, {"label" : "fromHub", "tail" : "(hub: => Hub[A], maxChunkSize: => Int)(trace: Trace): ZStream[Any, Nothing, A]", "member" : "zio.stream.ZStream.fromHub", "link" : "zio\/stream\/ZStream$.html#fromHub[A](hub:=>zio.Hub[A],maxChunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,A]", "kind" : "def"}, {"label" : "fromChunks", "tail" : "(cs: Chunk[O]*)(trace: Trace): ZStream[Any, Nothing, O]", "member" : "zio.stream.ZStream.fromChunks", "link" : "zio\/stream\/ZStream$.html#fromChunks[O](cs:zio.Chunk[O]*)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,O]", "kind" : "def"}, {"label" : "fromChunkQueueWithShutdown", "tail" : "(queue: => Dequeue[Chunk[O]])(trace: Trace): ZStream[Any, Nothing, O]", "member" : "zio.stream.ZStream.fromChunkQueueWithShutdown", "link" : "zio\/stream\/ZStream$.html#fromChunkQueueWithShutdown[O](queue:=>zio.Dequeue[zio.Chunk[O]])(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,O]", "kind" : "def"}, {"label" : "fromChunkQueue", "tail" : "(queue: => Dequeue[Chunk[O]])(trace: Trace): ZStream[Any, Nothing, O]", "member" : "zio.stream.ZStream.fromChunkQueue", "link" : "zio\/stream\/ZStream$.html#fromChunkQueue[O](queue:=>zio.Dequeue[zio.Chunk[O]])(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,O]", "kind" : "def"}, {"label" : "fromChunkHubScopedWithShutdown", "tail" : "(hub: => Hub[Chunk[O]])(trace: Trace): ZIO[Scope, Nothing, ZStream[Any, Nothing, O]]", "member" : "zio.stream.ZStream.fromChunkHubScopedWithShutdown", "link" : "zio\/stream\/ZStream$.html#fromChunkHubScopedWithShutdown[O](hub:=>zio.Hub[zio.Chunk[O]])(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,zio.stream.ZStream[Any,Nothing,O]]", "kind" : "def"}, {"label" : "fromChunkHubWithShutdown", "tail" : "(hub: => Hub[Chunk[O]])(trace: Trace): ZStream[Any, Nothing, O]", "member" : "zio.stream.ZStream.fromChunkHubWithShutdown", "link" : "zio\/stream\/ZStream$.html#fromChunkHubWithShutdown[O](hub:=>zio.Hub[zio.Chunk[O]])(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,O]", "kind" : "def"}, {"label" : "fromChunkHubScoped", "tail" : "(hub: => Hub[Chunk[O]])(trace: Trace): ZIO[Scope, Nothing, ZStream[Any, Nothing, O]]", "member" : "zio.stream.ZStream.fromChunkHubScoped", "link" : "zio\/stream\/ZStream$.html#fromChunkHubScoped[O](hub:=>zio.Hub[zio.Chunk[O]])(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,zio.stream.ZStream[Any,Nothing,O]]", "kind" : "def"}, {"label" : "fromChunkHub", "tail" : "(hub: => Hub[Chunk[O]])(trace: Trace): ZStream[Any, Nothing, O]", "member" : "zio.stream.ZStream.fromChunkHub", "link" : "zio\/stream\/ZStream$.html#fromChunkHub[O](hub:=>zio.Hub[zio.Chunk[O]])(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,O]", "kind" : "def"}, {"label" : "fromChunk", "tail" : "(chunk: => Chunk[O])(trace: Trace): ZStream[Any, Nothing, O]", "member" : "zio.stream.ZStream.fromChunk", "link" : "zio\/stream\/ZStream$.html#fromChunk[O](chunk:=>zio.Chunk[O])(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,O]", "kind" : "def"}, {"label" : "fromChannel", "tail" : "(channel: ZChannel[R, Any, Any, Any, E, Chunk[A], Any]): ZStream[R, E, A]", "member" : "zio.stream.ZStream.fromChannel", "link" : "zio\/stream\/ZStream$.html#fromChannel[R,E,A](channel:zio.stream.ZChannel[R,Any,Any,Any,E,zio.Chunk[A],Any]):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "from", "tail" : "(input: => Input)(constructor: ZStreamConstructor[Input], trace: Trace): Out", "member" : "zio.stream.ZStream.from", "link" : "zio\/stream\/ZStream$.html#from[Input](input:=>Input)(implicitconstructor:zio.stream.ZStream.ZStreamConstructor[Input],implicittrace:zio.Trace):constructor.Out", "kind" : "def"}, {"label" : "finalizer", "tail" : "(finalizer: => URIO[R, Any])(trace: Trace): ZStream[R, Nothing, Any]", "member" : "zio.stream.ZStream.finalizer", "link" : "zio\/stream\/ZStream$.html#finalizer[R](finalizer:=>zio.URIO[R,Any])(implicittrace:zio.Trace):zio.stream.ZStream[R,Nothing,Any]", "kind" : "def"}, {"label" : "failCause", "tail" : "(cause: => Cause[E])(trace: Trace): ZStream[Any, E, Nothing]", "member" : "zio.stream.ZStream.failCause", "link" : "zio\/stream\/ZStream$.html#failCause[E](cause:=>zio.Cause[E])(implicittrace:zio.Trace):zio.stream.ZStream[Any,E,Nothing]", "kind" : "def"}, {"label" : "fail", "tail" : "(error: => E)(trace: Trace): ZStream[Any, E, Nothing]", "member" : "zio.stream.ZStream.fail", "link" : "zio\/stream\/ZStream$.html#fail[E](error:=>E)(implicittrace:zio.Trace):zio.stream.ZStream[Any,E,Nothing]", "kind" : "def"}, {"label" : "execute", "tail" : "(zio: => ZIO[R, E, Any])(trace: Trace): ZStream[R, E, Nothing]", "member" : "zio.stream.ZStream.execute", "link" : "zio\/stream\/ZStream$.html#execute[R,E](zio:=>zio.ZIO[R,E,Any])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,Nothing]", "kind" : "def"}, {"label" : "environmentWithStream", "tail" : "(): EnvironmentWithStreamPartiallyApplied[R]", "member" : "zio.stream.ZStream.environmentWithStream", "link" : "zio\/stream\/ZStream$.html#environmentWithStream[R]:zio.stream.ZStream.EnvironmentWithStreamPartiallyApplied[R]", "kind" : "def"}, {"label" : "environmentWithZIO", "tail" : "(): EnvironmentWithZIOPartiallyApplied[R]", "member" : "zio.stream.ZStream.environmentWithZIO", "link" : "zio\/stream\/ZStream$.html#environmentWithZIO[R]:zio.stream.ZStream.EnvironmentWithZIOPartiallyApplied[R]", "kind" : "def"}, {"label" : "environmentWith", "tail" : "(): EnvironmentWithPartiallyApplied[R]", "member" : "zio.stream.ZStream.environmentWith", "link" : "zio\/stream\/ZStream$.html#environmentWith[R]:zio.stream.ZStream.EnvironmentWithPartiallyApplied[R]", "kind" : "def"}, {"label" : "environment", "tail" : "(trace: Trace): ZStream[R, Nothing, ZEnvironment[R]]", "member" : "zio.stream.ZStream.environment", "link" : "zio\/stream\/ZStream$.html#environment[R](implicittrace:zio.Trace):zio.stream.ZStream[R,Nothing,zio.ZEnvironment[R]]", "kind" : "def"}, {"label" : "empty", "tail" : "(trace: Trace): ZStream[Any, Nothing, Nothing]", "member" : "zio.stream.ZStream.empty", "link" : "zio\/stream\/ZStream$.html#empty(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Nothing]", "kind" : "def"}, {"label" : "done", "tail" : "(exit: => Exit[E, A])(trace: Trace): ZStream[Any, E, A]", "member" : "zio.stream.ZStream.done", "link" : "zio\/stream\/ZStream$.html#done[E,A](exit:=>zio.Exit[E,A])(implicittrace:zio.Trace):zio.stream.ZStream[Any,E,A]", "kind" : "def"}, {"label" : "dieMessage", "tail" : "(msg: => String)(trace: Trace): ZStream[Any, Nothing, Nothing]", "member" : "zio.stream.ZStream.dieMessage", "link" : "zio\/stream\/ZStream$.html#dieMessage(msg:=>String)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Nothing]", "kind" : "def"}, {"label" : "die", "tail" : "(ex: => Throwable)(trace: Trace): ZStream[Any, Nothing, Nothing]", "member" : "zio.stream.ZStream.die", "link" : "zio\/stream\/ZStream$.html#die(ex:=>Throwable)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Nothing]", "kind" : "def"}, {"label" : "debug", "tail" : "(value: => Any)(trace: Trace): ZStream[Any, Nothing, Unit]", "member" : "zio.stream.ZStream.debug", "link" : "zio\/stream\/ZStream$.html#debug(value:=>Any)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "concatAll", "tail" : "(streams: => Chunk[ZStream[R, E, O]])(trace: Trace): ZStream[R, E, O]", "member" : "zio.stream.ZStream.concatAll", "link" : "zio\/stream\/ZStream$.html#concatAll[R,E,O](streams:=>zio.Chunk[zio.stream.ZStream[R,E,O]])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,O]", "kind" : "def"}, {"label" : "blocking", "tail" : "(stream: => ZStream[R, E, A])(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.blocking", "link" : "zio\/stream\/ZStream$.html#blocking[R,E,A](stream:=>zio.stream.ZStream[R,E,A])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "apply", "tail" : "(as: A*)(trace: Trace): ZStream[Any, Nothing, A]", "member" : "zio.stream.ZStream.apply", "link" : "zio\/stream\/ZStream$.html#apply[A](as:A*)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,A]", "kind" : "def"}, {"label" : "alphanumeric", "tail" : "(trace: Trace): ZStream[Any, Nothing, Char]", "member" : "zio.stream.ZStream.alphanumeric", "link" : "zio\/stream\/ZStream$.html#alphanumeric(implicittrace:zio.Trace):zio.stream.ZStream[Any,Nothing,Char]", "kind" : "def"}, {"label" : "acquireReleaseExitWith", "tail" : "(acquire: => ZIO[R, E, A])(release: (A, Exit[Any, Any]) => URIO[R, Any])(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.acquireReleaseExitWith", "link" : "zio\/stream\/ZStream$.html#acquireReleaseExitWith[R,E,A](acquire:=>zio.ZIO[R,E,A])(release:(A,zio.Exit[Any,Any])=>zio.URIO[R,Any])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "acquireReleaseWith", "tail" : "(acquire: => ZIO[R, E, A])(release: (A) => URIO[R, Any])(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStream.acquireReleaseWith", "link" : "zio\/stream\/ZStream$.html#acquireReleaseWith[R,E,A](acquire:=>zio.ZIO[R,E,A])(release:A=>zio.URIO[R,Any])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "absolve", "tail" : "(xs: ZStream[R, E, Either[E, O]])(trace: Trace): ZStream[R, E, O]", "member" : "zio.stream.ZStream.absolve", "link" : "zio\/stream\/ZStream$.html#absolve[R,E,O](xs:zio.stream.ZStream[R,E,Either[E,O]])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,O]", "kind" : "def"}, {"label" : "DefaultChunkSize", "tail" : ": Int(4096)", "member" : "zio.stream.ZStream.DefaultChunkSize", "link" : "zio\/stream\/ZStream$.html#DefaultChunkSize:Int(4096)", "kind" : "final val"}, {"label" : "fromSocketServer", "tail" : "(port: => Int, host: => Option[String])(trace: Trace): ZStream[Any, Throwable, Connection]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.fromSocketServer", "link" : "zio\/stream\/ZStream$.html#fromSocketServer(port:=>Int,host:=>Option[String])(implicittrace:zio.Trace):zio.stream.ZStream[Any,Throwable,ZStreamPlatformSpecificConstructors.this.Connection]", "kind" : "def"}, {"label" : "fromJavaStreamZIO", "tail" : "(stream: => ZIO[R, Throwable, java.util.stream.Stream[A]], chunkSize: Int)(trace: Trace): ZStream[R, Throwable, A]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.fromJavaStreamZIO", "link" : "zio\/stream\/ZStream$.html#fromJavaStreamZIO[R,A](stream:=>zio.ZIO[R,Throwable,java.util.stream.Stream[A]],chunkSize:Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,Throwable,A]", "kind" : "final def"}, {"label" : "fromJavaStreamZIO", "tail" : "(stream: => ZIO[R, Throwable, java.util.stream.Stream[A]])(trace: Trace): ZStream[R, Throwable, A]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.fromJavaStreamZIO", "link" : "zio\/stream\/ZStream$.html#fromJavaStreamZIO[R,A](stream:=>zio.ZIO[R,Throwable,java.util.stream.Stream[A]])(implicittrace:zio.Trace):zio.stream.ZStream[R,Throwable,A]", "kind" : "final def"}, {"label" : "fromJavaStreamSucceed", "tail" : "(stream: => java.util.stream.Stream[A], chunkSize: Int)(trace: Trace): ZStream[R, Nothing, A]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.fromJavaStreamSucceed", "link" : "zio\/stream\/ZStream$.html#fromJavaStreamSucceed[R,A](stream:=>java.util.stream.Stream[A],chunkSize:Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,Nothing,A]", "kind" : "final def"}, {"label" : "fromJavaStreamSucceed", "tail" : "(stream: => java.util.stream.Stream[A])(trace: Trace): ZStream[R, Nothing, A]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.fromJavaStreamSucceed", "link" : "zio\/stream\/ZStream$.html#fromJavaStreamSucceed[R,A](stream:=>java.util.stream.Stream[A])(implicittrace:zio.Trace):zio.stream.ZStream[R,Nothing,A]", "kind" : "final def"}, {"label" : "fromJavaStreamScoped", "tail" : "(stream: => ZIO[Scope with R, Throwable, java.util.stream.Stream[A]], chunkSize: Int)(trace: Trace): ZStream[R, Throwable, A]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.fromJavaStreamScoped", "link" : "zio\/stream\/ZStream$.html#fromJavaStreamScoped[R,A](stream:=>zio.ZIO[zio.ScopewithR,Throwable,java.util.stream.Stream[A]],chunkSize:Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,Throwable,A]", "kind" : "final def"}, {"label" : "fromJavaStreamScoped", "tail" : "(stream: => ZIO[Scope with R, Throwable, java.util.stream.Stream[A]])(trace: Trace): ZStream[R, Throwable, A]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.fromJavaStreamScoped", "link" : "zio\/stream\/ZStream$.html#fromJavaStreamScoped[R,A](stream:=>zio.ZIO[zio.ScopewithR,Throwable,java.util.stream.Stream[A]])(implicittrace:zio.Trace):zio.stream.ZStream[R,Throwable,A]", "kind" : "final def"}, {"label" : "fromJavaStream", "tail" : "(stream: => java.util.stream.Stream[A], chunkSize: Int)(trace: Trace): ZStream[Any, Throwable, A]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.fromJavaStream", "link" : "zio\/stream\/ZStream$.html#fromJavaStream[A](stream:=>java.util.stream.Stream[A],chunkSize:Int)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Throwable,A]", "kind" : "final def"}, {"label" : "fromJavaStream", "tail" : "(stream: => java.util.stream.Stream[A])(trace: Trace): ZStream[Any, Throwable, A]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.fromJavaStream", "link" : "zio\/stream\/ZStream$.html#fromJavaStream[A](stream:=>java.util.stream.Stream[A])(implicittrace:zio.Trace):zio.stream.ZStream[Any,Throwable,A]", "kind" : "final def"}, {"label" : "fromOutputStreamWriter", "tail" : "(write: (OutputStream) => Unit, chunkSize: => Int)(trace: Trace): ZStream[Any, Throwable, Byte]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.fromOutputStreamWriter", "link" : "zio\/stream\/ZStream$.html#fromOutputStreamWriter(write:java.io.OutputStream=>Unit,chunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Throwable,Byte]", "kind" : "def"}, {"label" : "fromReaderZIO", "tail" : "(reader: => ZIO[R, IOException, Reader], chunkSize: => Int)(trace: Trace): ZStream[R, IOException, Char]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.fromReaderZIO", "link" : "zio\/stream\/ZStream$.html#fromReaderZIO[R](reader:=>zio.ZIO[R,java.io.IOException,java.io.Reader],chunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,java.io.IOException,Char]", "kind" : "def"}, {"label" : "fromReaderScoped", "tail" : "(reader: => ZIO[Scope with R, IOException, Reader], chunkSize: => Int)(trace: Trace): ZStream[R, IOException, Char]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.fromReaderScoped", "link" : "zio\/stream\/ZStream$.html#fromReaderScoped[R](reader:=>zio.ZIO[zio.ScopewithR,java.io.IOException,java.io.Reader],chunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,java.io.IOException,Char]", "kind" : "def"}, {"label" : "fromReader", "tail" : "(reader: => Reader, chunkSize: => Int)(trace: Trace): ZStream[Any, IOException, Char]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.fromReader", "link" : "zio\/stream\/ZStream$.html#fromReader(reader:=>java.io.Reader,chunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[Any,java.io.IOException,Char]", "kind" : "def"}, {"label" : "fromResource", "tail" : "(path: => String, chunkSize: => Int)(trace: Trace): ZStream[Any, IOException, Byte]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.fromResource", "link" : "zio\/stream\/ZStream$.html#fromResource(path:=>String,chunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[Any,java.io.IOException,Byte]", "kind" : "final def"}, {"label" : "fromPath", "tail" : "(path: => Path, chunkSize: => Int)(trace: Trace): ZStream[Any, Throwable, Byte]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.fromPath", "link" : "zio\/stream\/ZStream$.html#fromPath(path:=>java.nio.file.Path,chunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Throwable,Byte]", "kind" : "final def"}, {"label" : "fromFileURI", "tail" : "(uri: => URI, chunkSize: => Int)(trace: Trace): ZStream[Any, Throwable, Byte]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.fromFileURI", "link" : "zio\/stream\/ZStream$.html#fromFileURI(uri:=>java.net.URI,chunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Throwable,Byte]", "kind" : "final def"}, {"label" : "fromFileName", "tail" : "(name: => String, chunkSize: => Int)(trace: Trace): ZStream[Any, Throwable, Byte]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.fromFileName", "link" : "zio\/stream\/ZStream$.html#fromFileName(name:=>String,chunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Throwable,Byte]", "kind" : "final def"}, {"label" : "fromFile", "tail" : "(file: => File, chunkSize: => Int)(trace: Trace): ZStream[Any, Throwable, Byte]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.fromFile", "link" : "zio\/stream\/ZStream$.html#fromFile(file:=>java.io.File,chunkSize:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[Any,Throwable,Byte]", "kind" : "final def"}, {"label" : "asyncMaybe", "tail" : "(register: (Emit[R, E, A, Unit]) => Option[ZStream[R, E, A]], outputBuffer: => Int)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.asyncMaybe", "link" : "zio\/stream\/ZStream$.html#asyncMaybe[R,E,A](register:zio.stream.ZStream.Emit[R,E,A,Unit]=>Option[zio.stream.ZStream[R,E,A]],outputBuffer:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "asyncZIO", "tail" : "(register: (Emit[R, E, A, Unit]) => ZIO[R, E, Any], outputBuffer: => Int)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.asyncZIO", "link" : "zio\/stream\/ZStream$.html#asyncZIO[R,E,A](register:zio.stream.ZStream.Emit[R,E,A,Unit]=>zio.ZIO[R,E,Any],outputBuffer:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "asyncScoped", "tail" : "(register: ((ZIO[R, Option[E], Chunk[A]]) => Unit) => ZIO[Scope with R, E, Any], outputBuffer: => Int)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.asyncScoped", "link" : "zio\/stream\/ZStream$.html#asyncScoped[R,E,A](register:(zio.ZIO[R,Option[E],zio.Chunk[A]]=>Unit)=>zio.ZIO[zio.ScopewithR,E,Any],outputBuffer:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "asyncInterrupt", "tail" : "(register: (Emit[R, E, A, Unit]) => Either[URIO[R, Any], ZStream[R, E, A]], outputBuffer: => Int)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.asyncInterrupt", "link" : "zio\/stream\/ZStream$.html#asyncInterrupt[R,E,A](register:zio.stream.ZStream.Emit[R,E,A,Unit]=>Either[zio.URIO[R,Any],zio.stream.ZStream[R,E,A]],outputBuffer:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "async", "tail" : "(register: (Emit[R, E, A, Unit]) => Unit, outputBuffer: => Int)(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStreamPlatformSpecificConstructors.async", "link" : "zio\/stream\/ZStream$.html#async[R,E,A](register:zio.stream.ZStream.Emit[R,E,A,Unit]=>Unit,outputBuffer:=>Int)(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/ZStream$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/ZStream$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/ZStream$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/ZStream$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/ZStream$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/ZStream$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/ZStream$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/ZStream$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/ZStream$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/ZStream$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stream\/ZStream$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/ZStream$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZStream$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZStream$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZStream$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stream\/ZStream$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/ZStream$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/ZStream$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/ZStream$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/stream\/ZStream.html", "kind" : "class"}, {"name" : "zio.stream.ZStreamAspect", "object" : "zio\/stream\/ZStreamAspect$.html", "members_object" : [{"label" : "tagged", "tail" : "(key: String, value: String): ZStreamAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.stream.ZStreamAspect.tagged", "link" : "zio\/stream\/ZStreamAspect$.html#tagged(key:String,value:String):zio.stream.ZStreamAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "def"}, {"label" : "rechunk", "tail" : "(n: Int): ZStreamAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.stream.ZStreamAspect.rechunk", "link" : "zio\/stream\/ZStreamAspect$.html#rechunk(n:Int):zio.stream.ZStreamAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "def"}, {"label" : "annotated", "tail" : "(annotations: (String, String)*): ZStreamAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.stream.ZStreamAspect.annotated", "link" : "zio\/stream\/ZStreamAspect$.html#annotated(annotations:(String,String)*):zio.stream.ZStreamAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "def"}, {"label" : "annotated", "tail" : "(key: String, value: String): ZStreamAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.stream.ZStreamAspect.annotated", "link" : "zio\/stream\/ZStreamAspect$.html#annotated(key:String,value:String):zio.stream.ZStreamAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/ZStreamAspect$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/ZStreamAspect$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/ZStreamAspect$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/ZStreamAspect$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/ZStreamAspect$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/ZStreamAspect$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/ZStreamAspect$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/ZStreamAspect$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/ZStreamAspect$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/ZStreamAspect$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stream\/ZStreamAspect$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/ZStreamAspect$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZStreamAspect$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZStreamAspect$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZStreamAspect$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stream\/ZStreamAspect$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/ZStreamAspect$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/ZStreamAspect$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/ZStreamAspect$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/stream\/ZStreamAspect.html", "kind" : "trait", "members_trait" : [{"label" : "andThen", "tail" : "(that: ZStreamAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]): ZStreamAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]", "member" : "zio.stream.ZStreamAspect.andThen", "link" : "zio\/stream\/ZStreamAspect.html#andThen[LowerR1>:LowerR,UpperR1<:UpperR,LowerE1>:LowerE,UpperE1<:UpperE,LowerA1>:LowerA,UpperA1<:UpperA](that:zio.stream.ZStreamAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]):zio.stream.ZStreamAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]", "kind" : "def"}, {"label" : "@@", "tail" : "(that: ZStreamAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]): ZStreamAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]", "member" : "zio.stream.ZStreamAspect.@@", "link" : "zio\/stream\/ZStreamAspect.html#@@[LowerR1>:LowerR,UpperR1<:UpperR,LowerE1>:LowerE,UpperE1<:UpperE,LowerA1>:LowerA,UpperA1<:UpperA](that:zio.stream.ZStreamAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]):zio.stream.ZStreamAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]", "kind" : "def"}, {"label" : ">>>", "tail" : "(that: ZStreamAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]): ZStreamAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]", "member" : "zio.stream.ZStreamAspect.>>>", "link" : "zio\/stream\/ZStreamAspect.html#>>>[LowerR1>:LowerR,UpperR1<:UpperR,LowerE1>:LowerE,UpperE1<:UpperE,LowerA1>:LowerA,UpperA1<:UpperA](that:zio.stream.ZStreamAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]):zio.stream.ZStreamAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/ZStreamAspect.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/ZStreamAspect.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/ZStreamAspect.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/ZStreamAspect.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/ZStreamAspect.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/ZStreamAspect.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/ZStreamAspect.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/ZStreamAspect.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/ZStreamAspect.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/ZStreamAspect.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stream\/ZStreamAspect.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/ZStreamAspect.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZStreamAspect.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZStreamAspect.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/ZStreamAspect.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stream\/ZStreamAspect.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/ZStreamAspect.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/ZStreamAspect.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/ZStreamAspect.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(stream: ZStream[R, E, A])(trace: Trace): ZStream[R, E, A]", "member" : "zio.stream.ZStreamAspect.apply", "link" : "zio\/stream\/ZStreamAspect.html#apply[R>:LowerR<:UpperR,E>:LowerE<:UpperE,A>:LowerA<:UpperA](stream:zio.stream.ZStream[R,E,A])(implicittrace:zio.Trace):zio.stream.ZStream[R,E,A]", "kind" : "abstract def"}], "shortDescription" : ""}], "zio.test.results" : [{"name" : "zio.test.results.ResultPrinter", "object" : "zio\/test\/results\/ResultPrinter$.html", "members_object" : [{"label" : "json", "tail" : ": ZLayer[Any, Nothing, ResultPrinter]", "member" : "zio.test.results.ResultPrinter.json", "link" : "zio\/test\/results\/ResultPrinter$.html#json:zio.ZLayer[Any,Nothing,zio.test.results.ResultPrinter]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/results\/ResultPrinter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/results\/ResultPrinter$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/results\/ResultPrinter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/results\/ResultPrinter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/results\/ResultPrinter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/results\/ResultPrinter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/results\/ResultPrinter$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/results\/ResultPrinter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/results\/ResultPrinter$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/results\/ResultPrinter$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/results\/ResultPrinter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/results\/ResultPrinter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/results\/ResultPrinter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/results\/ResultPrinter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/results\/ResultPrinter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/results\/ResultPrinter$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/results\/ResultPrinter$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/results\/ResultPrinter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/results\/ResultPrinter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/results\/ResultPrinter.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/results\/ResultPrinter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/results\/ResultPrinter.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/results\/ResultPrinter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/results\/ResultPrinter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/results\/ResultPrinter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/results\/ResultPrinter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/results\/ResultPrinter.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/results\/ResultPrinter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/results\/ResultPrinter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/results\/ResultPrinter.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/results\/ResultPrinter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/results\/ResultPrinter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/results\/ResultPrinter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/results\/ResultPrinter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/results\/ResultPrinter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/results\/ResultPrinter.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/results\/ResultPrinter.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/results\/ResultPrinter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/results\/ResultPrinter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "print", "tail" : "(event: Test[E]): ZIO[Any, Nothing, Unit]", "member" : "zio.test.results.ResultPrinter.print", "link" : "zio\/test\/results\/ResultPrinter.html#print[E](event:zio.test.ExecutionEvent.Test[E]):zio.ZIO[Any,Nothing,Unit]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.test.results.ResultSerializer", "object" : "zio\/test\/results\/ResultSerializer$.html", "members_object" : [{"label" : "Json", "tail" : "", "member" : "zio.test.results.ResultSerializer.Json", "link" : "zio\/test\/results\/ResultSerializer$.html#Json", "kind" : "object"}, {"label" : "live", "tail" : ": ULayer[ResultSerializer]", "member" : "zio.test.results.ResultSerializer.live", "link" : "zio\/test\/results\/ResultSerializer$.html#live:zio.ULayer[zio.test.results.ResultSerializer]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/results\/ResultSerializer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/results\/ResultSerializer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/results\/ResultSerializer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/results\/ResultSerializer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/results\/ResultSerializer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/results\/ResultSerializer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/results\/ResultSerializer$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/results\/ResultSerializer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/results\/ResultSerializer$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/results\/ResultSerializer$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/results\/ResultSerializer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/results\/ResultSerializer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/results\/ResultSerializer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/results\/ResultSerializer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/results\/ResultSerializer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/results\/ResultSerializer$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/results\/ResultSerializer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/results\/ResultSerializer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/results\/ResultSerializer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/results\/ResultSerializer.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/results\/ResultSerializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/results\/ResultSerializer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/results\/ResultSerializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/results\/ResultSerializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/results\/ResultSerializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/results\/ResultSerializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/results\/ResultSerializer.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/results\/ResultSerializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/results\/ResultSerializer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/results\/ResultSerializer.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/results\/ResultSerializer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/results\/ResultSerializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/results\/ResultSerializer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/results\/ResultSerializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/results\/ResultSerializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/results\/ResultSerializer.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/results\/ResultSerializer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/results\/ResultSerializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/results\/ResultSerializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "render", "tail" : "(executionEvent: Test[E]): String", "member" : "zio.test.results.ResultSerializer.render", "link" : "zio\/test\/results\/ResultSerializer.html#render[E](executionEvent:zio.test.ExecutionEvent.Test[E]):String", "kind" : "abstract def"}], "shortDescription" : ""}], "zio.metrics" : [{"name" : "zio.metrics.Metric", "object" : "zio\/metrics\/Metric$.html", "members_object" : [{"label" : "timer", "tail" : "(name: String, description: String, chronoUnit: ChronoUnit, boundaries: Chunk[Double]): Metric[MetricKeyType.Histogram, zio.Duration, MetricState.Histogram]", "member" : "zio.metrics.Metric.timer", "link" : "zio\/metrics\/Metric$.html#timer(name:String,description:String,chronoUnit:java.time.temporal.ChronoUnit,boundaries:zio.Chunk[Double]):zio.metrics.Metric[zio.metrics.MetricKeyType.Histogram,zio.Duration,zio.metrics.MetricState.Histogram]", "kind" : "def"}, {"label" : "timer", "tail" : "(name: String, chronoUnit: ChronoUnit, boundaries: Chunk[Double]): Metric[MetricKeyType.Histogram, zio.Duration, MetricState.Histogram]", "member" : "zio.metrics.Metric.timer", "link" : "zio\/metrics\/Metric$.html#timer(name:String,chronoUnit:java.time.temporal.ChronoUnit,boundaries:zio.Chunk[Double]):zio.metrics.Metric[zio.metrics.MetricKeyType.Histogram,zio.Duration,zio.metrics.MetricState.Histogram]", "kind" : "def"}, {"label" : "timer", "tail" : "(name: String, description: String, chronoUnit: ChronoUnit): Metric[MetricKeyType.Histogram, zio.Duration, MetricState.Histogram]", "member" : "zio.metrics.Metric.timer", "link" : "zio\/metrics\/Metric$.html#timer(name:String,description:String,chronoUnit:java.time.temporal.ChronoUnit):zio.metrics.Metric[zio.metrics.MetricKeyType.Histogram,zio.Duration,zio.metrics.MetricState.Histogram]", "kind" : "def"}, {"label" : "timer", "tail" : "(name: String, chronoUnit: ChronoUnit): Metric[MetricKeyType.Histogram, zio.Duration, MetricState.Histogram]", "member" : "zio.metrics.Metric.timer", "link" : "zio\/metrics\/Metric$.html#timer(name:String,chronoUnit:java.time.temporal.ChronoUnit):zio.metrics.Metric[zio.metrics.MetricKeyType.Histogram,zio.Duration,zio.metrics.MetricState.Histogram]", "kind" : "def"}, {"label" : "summaryInstant", "tail" : "(name: String, description: String, maxAge: zio.Duration, maxSize: Int, error: Double, quantiles: Chunk[Double]): Summary[(Double, Instant)]", "member" : "zio.metrics.Metric.summaryInstant", "link" : "zio\/metrics\/Metric$.html#summaryInstant(name:String,description:String,maxAge:zio.Duration,maxSize:Int,error:Double,quantiles:zio.Chunk[Double]):zio.metrics.Metric.Summary[(Double,java.time.Instant)]", "kind" : "def"}, {"label" : "summaryInstant", "tail" : "(name: String, maxAge: zio.Duration, maxSize: Int, error: Double, quantiles: Chunk[Double]): Summary[(Double, Instant)]", "member" : "zio.metrics.Metric.summaryInstant", "link" : "zio\/metrics\/Metric$.html#summaryInstant(name:String,maxAge:zio.Duration,maxSize:Int,error:Double,quantiles:zio.Chunk[Double]):zio.metrics.Metric.Summary[(Double,java.time.Instant)]", "kind" : "def"}, {"label" : "summary", "tail" : "(name: String, description: String, maxAge: zio.Duration, maxSize: Int, error: Double, quantiles: Chunk[Double]): Summary[Double]", "member" : "zio.metrics.Metric.summary", "link" : "zio\/metrics\/Metric$.html#summary(name:String,description:String,maxAge:zio.Duration,maxSize:Int,error:Double,quantiles:zio.Chunk[Double]):zio.metrics.Metric.Summary[Double]", "kind" : "def"}, {"label" : "summary", "tail" : "(name: String, maxAge: zio.Duration, maxSize: Int, error: Double, quantiles: Chunk[Double]): Summary[Double]", "member" : "zio.metrics.Metric.summary", "link" : "zio\/metrics\/Metric$.html#summary(name:String,maxAge:zio.Duration,maxSize:Int,error:Double,quantiles:zio.Chunk[Double]):zio.metrics.Metric.Summary[Double]", "kind" : "def"}, {"label" : "succeed", "tail" : "(out: => Out): Metric[Unit, Any, Out]", "member" : "zio.metrics.Metric.succeed", "link" : "zio\/metrics\/Metric$.html#succeed[Out](out:=>Out):zio.metrics.Metric[Unit,Any,Out]", "kind" : "def"}, {"label" : "histogram", "tail" : "(name: String, description: String, boundaries: Boundaries): Histogram[Double]", "member" : "zio.metrics.Metric.histogram", "link" : "zio\/metrics\/Metric$.html#histogram(name:String,description:String,boundaries:zio.metrics.MetricKeyType.Histogram.Boundaries):zio.metrics.Metric.Histogram[Double]", "kind" : "def"}, {"label" : "histogram", "tail" : "(name: String, boundaries: Boundaries): Histogram[Double]", "member" : "zio.metrics.Metric.histogram", "link" : "zio\/metrics\/Metric$.html#histogram(name:String,boundaries:zio.metrics.MetricKeyType.Histogram.Boundaries):zio.metrics.Metric.Histogram[Double]", "kind" : "def"}, {"label" : "gauge", "tail" : "(name: String, description: String): Gauge[Double]", "member" : "zio.metrics.Metric.gauge", "link" : "zio\/metrics\/Metric$.html#gauge(name:String,description:String):zio.metrics.Metric.Gauge[Double]", "kind" : "def"}, {"label" : "gauge", "tail" : "(name: String): Gauge[Double]", "member" : "zio.metrics.Metric.gauge", "link" : "zio\/metrics\/Metric$.html#gauge(name:String):zio.metrics.Metric.Gauge[Double]", "kind" : "def"}, {"label" : "fromMetricKey", "tail" : "(key: MetricKey[Type]): Metric[Type, Metric.fromMetricKey.Type.In, Metric.fromMetricKey.Type.Out]", "member" : "zio.metrics.Metric.fromMetricKey", "link" : "zio\/metrics\/Metric$.html#fromMetricKey[Type<:zio.metrics.MetricKeyType](key:zio.metrics.MetricKey[Type]):zio.metrics.Metric[Type,key.keyType.In,key.keyType.Out]", "kind" : "def"}, {"label" : "frequency", "tail" : "(name: String, description: String): Frequency[String]", "member" : "zio.metrics.Metric.frequency", "link" : "zio\/metrics\/Metric$.html#frequency(name:String,description:String):zio.metrics.Metric.Frequency[String]", "kind" : "def"}, {"label" : "frequency", "tail" : "(name: String): Frequency[String]", "member" : "zio.metrics.Metric.frequency", "link" : "zio\/metrics\/Metric$.html#frequency(name:String):zio.metrics.Metric.Frequency[String]", "kind" : "def"}, {"label" : "counterInt", "tail" : "(name: String, description: String): Counter[Int]", "member" : "zio.metrics.Metric.counterInt", "link" : "zio\/metrics\/Metric$.html#counterInt(name:String,description:String):zio.metrics.Metric.Counter[Int]", "kind" : "def"}, {"label" : "counterInt", "tail" : "(name: String): Counter[Int]", "member" : "zio.metrics.Metric.counterInt", "link" : "zio\/metrics\/Metric$.html#counterInt(name:String):zio.metrics.Metric.Counter[Int]", "kind" : "def"}, {"label" : "counterDouble", "tail" : "(name: String, description: String): Counter[Double]", "member" : "zio.metrics.Metric.counterDouble", "link" : "zio\/metrics\/Metric$.html#counterDouble(name:String,description:String):zio.metrics.Metric.Counter[Double]", "kind" : "def"}, {"label" : "counterDouble", "tail" : "(name: String): Counter[Double]", "member" : "zio.metrics.Metric.counterDouble", "link" : "zio\/metrics\/Metric$.html#counterDouble(name:String):zio.metrics.Metric.Counter[Double]", "kind" : "def"}, {"label" : "counter", "tail" : "(name: String, description: String): Counter[Long]", "member" : "zio.metrics.Metric.counter", "link" : "zio\/metrics\/Metric$.html#counter(name:String,description:String):zio.metrics.Metric.Counter[Long]", "kind" : "def"}, {"label" : "counter", "tail" : "(name: String): Counter[Long]", "member" : "zio.metrics.Metric.counter", "link" : "zio\/metrics\/Metric$.html#counter(name:String):zio.metrics.Metric.Counter[Long]", "kind" : "def"}, {"label" : "runtime", "tail" : "", "member" : "zio.metrics.Metric.runtime", "link" : "zio\/metrics\/Metric$.html#runtime", "kind" : "object"}, {"label" : "GaugeSyntax", "tail" : "", "member" : "zio.metrics.Metric.GaugeSyntax", "link" : "zio\/metrics\/Metric$.html#GaugeSyntax[In]extendsAnyRef", "kind" : "implicit class"}, {"label" : "CounterSyntax", "tail" : "", "member" : "zio.metrics.Metric.CounterSyntax", "link" : "zio\/metrics\/Metric$.html#CounterSyntax[In]extendsAnyRef", "kind" : "implicit class"}, {"label" : "InvariantSyntax", "tail" : "", "member" : "zio.metrics.Metric.InvariantSyntax", "link" : "zio\/metrics\/Metric$.html#InvariantSyntax[Type,In,Out]extendsAnyRef", "kind" : "implicit class"}, {"label" : "Frequency", "tail" : "", "member" : "zio.metrics.Metric.Frequency", "link" : "zio\/metrics\/Metric$.html#Frequency[-In]=zio.metrics.Metric[zio.metrics.MetricKeyType.Frequency,In,zio.metrics.MetricState.Frequency]", "kind" : "type"}, {"label" : "Summary", "tail" : "", "member" : "zio.metrics.Metric.Summary", "link" : "zio\/metrics\/Metric$.html#Summary[-In]=zio.metrics.Metric[zio.metrics.MetricKeyType.Summary,In,zio.metrics.MetricState.Summary]", "kind" : "type"}, {"label" : "Histogram", "tail" : "", "member" : "zio.metrics.Metric.Histogram", "link" : "zio\/metrics\/Metric$.html#Histogram[-In]=zio.metrics.Metric[zio.metrics.MetricKeyType.Histogram,In,zio.metrics.MetricState.Histogram]", "kind" : "type"}, {"label" : "Gauge", "tail" : "", "member" : "zio.metrics.Metric.Gauge", "link" : "zio\/metrics\/Metric$.html#Gauge[-In]=zio.metrics.Metric[zio.metrics.MetricKeyType.Gauge,In,zio.metrics.MetricState.Gauge]", "kind" : "type"}, {"label" : "Counter", "tail" : "", "member" : "zio.metrics.Metric.Counter", "link" : "zio\/metrics\/Metric$.html#Counter[-In]=zio.metrics.Metric[zio.metrics.MetricKeyType.Counter,In,zio.metrics.MetricState.Counter]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/Metric$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/Metric$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/Metric$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/Metric$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/Metric$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/Metric$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/Metric$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/Metric$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/Metric$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/Metric$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/metrics\/Metric$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/Metric$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/Metric$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/Metric$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/Metric$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/metrics\/Metric$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/metrics\/Metric$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/Metric$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/Metric$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/metrics\/Metric.html", "kind" : "trait", "members_trait" : [{"label" : "withNow", "tail" : "(ev: <:<[(In2, Instant), In]): Metric[Type, In2, Out]", "member" : "zio.metrics.Metric.withNow", "link" : "zio\/metrics\/Metric.html#withNow[In2](implicitev:(In2,java.time.Instant)<:<In):zio.metrics.Metric[Type,In2,Out]", "kind" : "final def"}, {"label" : "value", "tail" : "(trace: Trace): UIO[Out]", "member" : "zio.metrics.Metric.value", "link" : "zio\/metrics\/Metric.html#value(implicittrace:zio.Trace):zio.UIO[Out]", "kind" : "final def"}, {"label" : "update", "tail" : "(in: => In)(trace: Trace): UIO[Unit]", "member" : "zio.metrics.Metric.update", "link" : "zio\/metrics\/Metric.html#update(in:=>In)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "final def"}, {"label" : "trackSuccessWith", "tail" : "(f: (In2) => In): ZIOAspect[Nothing, Any, Nothing, Any, Nothing, In2]", "member" : "zio.metrics.Metric.trackSuccessWith", "link" : "zio\/metrics\/Metric.html#trackSuccessWith[In2](f:In2=>In):zio.ZIOAspect[Nothing,Any,Nothing,Any,Nothing,In2]", "kind" : "final def"}, {"label" : "trackSuccess", "tail" : "(): ZIOAspect[Nothing, Any, Nothing, Any, Nothing, In]", "member" : "zio.metrics.Metric.trackSuccess", "link" : "zio\/metrics\/Metric.html#trackSuccess:zio.ZIOAspect[Nothing,Any,Nothing,Any,Nothing,In]", "kind" : "final def"}, {"label" : "trackErrorWith", "tail" : "(f: (In2) => In): ZIOAspect[Nothing, Any, Nothing, In2, Nothing, Any]", "member" : "zio.metrics.Metric.trackErrorWith", "link" : "zio\/metrics\/Metric.html#trackErrorWith[In2](f:In2=>In):zio.ZIOAspect[Nothing,Any,Nothing,In2,Nothing,Any]", "kind" : "final def"}, {"label" : "trackError", "tail" : "(): ZIOAspect[Nothing, Any, Nothing, In, Nothing, Any]", "member" : "zio.metrics.Metric.trackError", "link" : "zio\/metrics\/Metric.html#trackError:zio.ZIOAspect[Nothing,Any,Nothing,In,Nothing,Any]", "kind" : "final def"}, {"label" : "trackDurationWith", "tail" : "(f: (zio.Duration) => In): ZIOAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.metrics.Metric.trackDurationWith", "link" : "zio\/metrics\/Metric.html#trackDurationWith(f:zio.Duration=>In):zio.ZIOAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "final def"}, {"label" : "trackDuration", "tail" : "(ev: <:<[zio.Duration, In]): ZIOAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.metrics.Metric.trackDuration", "link" : "zio\/metrics\/Metric.html#trackDuration(implicitev:zio.Duration<:<In):zio.ZIOAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "final def"}, {"label" : "trackDefectWith", "tail" : "(f: (Throwable) => In): ZIOAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.metrics.Metric.trackDefectWith", "link" : "zio\/metrics\/Metric.html#trackDefectWith(f:Throwable=>In):zio.ZIOAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "final def"}, {"label" : "trackDefect", "tail" : "(ev: <:<[Throwable, In]): ZIOAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.metrics.Metric.trackDefect", "link" : "zio\/metrics\/Metric.html#trackDefect(implicitev:Throwable<:<In):zio.ZIOAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "final def"}, {"label" : "trackAll", "tail" : "(in: => In): ZIOAspect[Nothing, Any, Nothing, Any, Nothing, Any]", "member" : "zio.metrics.Metric.trackAll", "link" : "zio\/metrics\/Metric.html#trackAll(in:=>In):zio.ZIOAspect[Nothing,Any,Nothing,Any,Nothing,Any]", "kind" : "final def"}, {"label" : "taggedWith", "tail" : "(f: (In1) => Set[MetricLabel]): Metric[Type, In1, Unit]", "member" : "zio.metrics.Metric.taggedWith", "link" : "zio\/metrics\/Metric.html#taggedWith[In1<:In](f:In1=>Set[zio.metrics.MetricLabel]):zio.metrics.Metric[Type,In1,Unit]", "kind" : "final def"}, {"label" : "tagged", "tail" : "(extraTags0: Set[MetricLabel]): Metric[Type, In, Out]", "member" : "zio.metrics.Metric.tagged", "link" : "zio\/metrics\/Metric.html#tagged(extraTags0:Set[zio.metrics.MetricLabel]):zio.metrics.Metric[Type,In,Out]", "kind" : "final def"}, {"label" : "tagged", "tail" : "(extraTag: MetricLabel, extraTags: MetricLabel*): Metric[Type, In, Out]", "member" : "zio.metrics.Metric.tagged", "link" : "zio\/metrics\/Metric.html#tagged(extraTag:zio.metrics.MetricLabel,extraTags:zio.metrics.MetricLabel*):zio.metrics.Metric[Type,In,Out]", "kind" : "final def"}, {"label" : "tagged", "tail" : "(key: String, value: String): Metric[Type, In, Out]", "member" : "zio.metrics.Metric.tagged", "link" : "zio\/metrics\/Metric.html#tagged(key:String,value:String):zio.metrics.Metric[Type,In,Out]", "kind" : "final def"}, {"label" : "modify", "tail" : "(in: => In)(trace: Trace): UIO[Unit]", "member" : "zio.metrics.Metric.modify", "link" : "zio\/metrics\/Metric.html#modify(in:=>In)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "final def"}, {"label" : "mapType", "tail" : "(f: (Type) => Type2): Metric[Type2, In, Out]", "member" : "zio.metrics.Metric.mapType", "link" : "zio\/metrics\/Metric.html#mapType[Type2](f:Type=>Type2):zio.metrics.Metric[Type2,In,Out]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Out) => Out2): Metric[Type, In, Out2]", "member" : "zio.metrics.Metric.map", "link" : "zio\/metrics\/Metric.html#map[Out2](f:Out=>Out2):zio.metrics.Metric[Type,In,Out2]", "kind" : "final def"}, {"label" : "fromConst", "tail" : "(in: => In): Metric[Type, Any, Out]", "member" : "zio.metrics.Metric.fromConst", "link" : "zio\/metrics\/Metric.html#fromConst(in:=>In):zio.metrics.Metric[Type,Any,Out]", "kind" : "final def"}, {"label" : "contramap", "tail" : "(f: (In2) => In): Metric[Type, In2, Out]", "member" : "zio.metrics.Metric.contramap", "link" : "zio\/metrics\/Metric.html#contramap[In2](f:In2=>In):zio.metrics.Metric[Type,In2,Out]", "kind" : "final def"}, {"label" : "apply", "tail" : "(zio: ZIO[R, E, A1])(trace: Trace): ZIO[R, E, A1]", "member" : "zio.metrics.Metric.apply", "link" : "zio\/metrics\/Metric.html#apply[R,E,A1<:In](zio:zio.ZIO[R,E,A1])(implicittrace:zio.Trace):zio.ZIO[R,E,A1]", "kind" : "final def"}, {"label" : "flip", "tail" : "(): ZIOAspect[Nothing, Any, Nothing, In, Nothing, Any]", "member" : "zio.ZIOAspect.flip", "link" : "zio\/metrics\/Metric.html#flip:zio.ZIOAspect[LowerR,UpperR,LowerA,UpperA,LowerE,UpperE]", "kind" : "def"}, {"label" : "andThen", "tail" : "(that: ZIOAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]): ZIOAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]", "member" : "zio.ZIOAspect.andThen", "link" : "zio\/metrics\/Metric.html#andThen[LowerR1>:LowerR,UpperR1<:UpperR,LowerE1>:LowerE,UpperE1<:UpperE,LowerA1>:LowerA,UpperA1<:UpperA](that:zio.ZIOAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]):zio.ZIOAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]", "kind" : "def"}, {"label" : "@@", "tail" : "(that: ZIOAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]): ZIOAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]", "member" : "zio.ZIOAspect.@@", "link" : "zio\/metrics\/Metric.html#@@[LowerR1>:LowerR,UpperR1<:UpperR,LowerE1>:LowerE,UpperE1<:UpperE,LowerA1>:LowerA,UpperA1<:UpperA](that:zio.ZIOAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]):zio.ZIOAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]", "kind" : "def"}, {"label" : ">>>", "tail" : "(that: ZIOAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]): ZIOAspect[LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1]", "member" : "zio.ZIOAspect.>>>", "link" : "zio\/metrics\/Metric.html#>>>[LowerR1>:LowerR,UpperR1<:UpperR,LowerE1>:LowerE,UpperE1<:UpperE,LowerA1>:LowerA,UpperA1<:UpperA](that:zio.ZIOAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]):zio.ZIOAspect[LowerR1,UpperR1,LowerE1,UpperE1,LowerA1,UpperA1]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/Metric.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/Metric.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/Metric.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/Metric.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/Metric.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/Metric.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/Metric.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/Metric.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/Metric.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/Metric.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/metrics\/Metric.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/Metric.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/Metric.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/Metric.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/Metric.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/metrics\/Metric.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/metrics\/Metric.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/Metric.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/Metric.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "keyType", "tail" : ": Type", "member" : "zio.metrics.Metric.keyType", "link" : "zio\/metrics\/Metric.html#keyType:Type", "kind" : "abstract val"}], "shortDescription" : "A Metric[In, Out] represents a concurrent metric, which accepts updates oftype In, which are aggregated to a stateful value of type Out."}, {"name" : "zio.metrics.MetricKey", "shortDescription" : "A MetricKey is a unique key associated with each metric.", "object" : "zio\/metrics\/MetricKey$.html", "members_object" : [{"label" : "summary", "tail" : "(name: String, description0: String, maxAge: zio.Duration, maxSize: Int, error: Double, quantiles: Chunk[Double]): Summary", "member" : "zio.metrics.MetricKey.summary", "link" : "zio\/metrics\/MetricKey$.html#summary(name:String,description0:String,maxAge:zio.Duration,maxSize:Int,error:Double,quantiles:zio.Chunk[Double]):zio.metrics.MetricKey.Summary", "kind" : "def"}, {"label" : "summary", "tail" : "(name: String, maxAge: zio.Duration, maxSize: Int, error: Double, quantiles: Chunk[Double]): Summary", "member" : "zio.metrics.MetricKey.summary", "link" : "zio\/metrics\/MetricKey$.html#summary(name:String,maxAge:zio.Duration,maxSize:Int,error:Double,quantiles:zio.Chunk[Double]):zio.metrics.MetricKey.Summary", "kind" : "def"}, {"label" : "histogram", "tail" : "(name: String, description0: String, boundaries: Boundaries): Histogram", "member" : "zio.metrics.MetricKey.histogram", "link" : "zio\/metrics\/MetricKey$.html#histogram(name:String,description0:String,boundaries:zio.metrics.MetricKeyType.Histogram.Boundaries):zio.metrics.MetricKey.Histogram", "kind" : "def"}, {"label" : "histogram", "tail" : "(name: String, boundaries: Boundaries): Histogram", "member" : "zio.metrics.MetricKey.histogram", "link" : "zio\/metrics\/MetricKey$.html#histogram(name:String,boundaries:zio.metrics.MetricKeyType.Histogram.Boundaries):zio.metrics.MetricKey.Histogram", "kind" : "def"}, {"label" : "gauge", "tail" : "(name: String, description0: String): Gauge", "member" : "zio.metrics.MetricKey.gauge", "link" : "zio\/metrics\/MetricKey$.html#gauge(name:String,description0:String):zio.metrics.MetricKey.Gauge", "kind" : "def"}, {"label" : "gauge", "tail" : "(name: String): Gauge", "member" : "zio.metrics.MetricKey.gauge", "link" : "zio\/metrics\/MetricKey$.html#gauge(name:String):zio.metrics.MetricKey.Gauge", "kind" : "def"}, {"label" : "frequency", "tail" : "(name: String, description0: String): Frequency", "member" : "zio.metrics.MetricKey.frequency", "link" : "zio\/metrics\/MetricKey$.html#frequency(name:String,description0:String):zio.metrics.MetricKey.Frequency", "kind" : "def"}, {"label" : "frequency", "tail" : "(name: String): Frequency", "member" : "zio.metrics.MetricKey.frequency", "link" : "zio\/metrics\/MetricKey$.html#frequency(name:String):zio.metrics.MetricKey.Frequency", "kind" : "def"}, {"label" : "counter", "tail" : "(name: String, description0: String): Counter", "member" : "zio.metrics.MetricKey.counter", "link" : "zio\/metrics\/MetricKey$.html#counter(name:String,description0:String):zio.metrics.MetricKey.Counter", "kind" : "def"}, {"label" : "counter", "tail" : "(name: String): Counter", "member" : "zio.metrics.MetricKey.counter", "link" : "zio\/metrics\/MetricKey$.html#counter(name:String):zio.metrics.MetricKey.Counter", "kind" : "def"}, {"label" : "Frequency", "tail" : "", "member" : "zio.metrics.MetricKey.Frequency", "link" : "zio\/metrics\/MetricKey$.html#Frequency=zio.metrics.MetricKey[zio.metrics.MetricKeyType.Frequency]", "kind" : "type"}, {"label" : "Summary", "tail" : "", "member" : "zio.metrics.MetricKey.Summary", "link" : "zio\/metrics\/MetricKey$.html#Summary=zio.metrics.MetricKey[zio.metrics.MetricKeyType.Summary]", "kind" : "type"}, {"label" : "Histogram", "tail" : "", "member" : "zio.metrics.MetricKey.Histogram", "link" : "zio\/metrics\/MetricKey$.html#Histogram=zio.metrics.MetricKey[zio.metrics.MetricKeyType.Histogram]", "kind" : "type"}, {"label" : "Gauge", "tail" : "", "member" : "zio.metrics.MetricKey.Gauge", "link" : "zio\/metrics\/MetricKey$.html#Gauge=zio.metrics.MetricKey[zio.metrics.MetricKeyType.Gauge]", "kind" : "type"}, {"label" : "Counter", "tail" : "", "member" : "zio.metrics.MetricKey.Counter", "link" : "zio\/metrics\/MetricKey$.html#Counter=zio.metrics.MetricKey[zio.metrics.MetricKeyType.Counter]", "kind" : "type"}, {"label" : "Untyped", "tail" : "", "member" : "zio.metrics.MetricKey.Untyped", "link" : "zio\/metrics\/MetricKey$.html#Untyped=zio.metrics.MetricKey[Any]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/MetricKey$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/MetricKey$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/MetricKey$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/MetricKey$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/MetricKey$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/MetricKey$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/MetricKey$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/MetricKey$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/MetricKey$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/MetricKey$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/metrics\/MetricKey$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/MetricKey$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricKey$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricKey$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricKey$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/metrics\/MetricKey$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/metrics\/MetricKey$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/MetricKey$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/MetricKey$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "tagged", "tail" : "(extraTags: Set[MetricLabel]): MetricKey[Type]", "member" : "zio.metrics.MetricKey.tagged", "link" : "zio\/metrics\/MetricKey.html#tagged(extraTags:Set[zio.metrics.MetricLabel]):zio.metrics.MetricKey[Type]", "kind" : "def"}, {"label" : "tagged", "tail" : "(extraTag: MetricLabel, extraTags: MetricLabel*): MetricKey[Type]", "member" : "zio.metrics.MetricKey.tagged", "link" : "zio\/metrics\/MetricKey.html#tagged(extraTag:zio.metrics.MetricLabel,extraTags:zio.metrics.MetricLabel*):zio.metrics.MetricKey[Type]", "kind" : "def"}, {"label" : "tagged", "tail" : "(key: String, value: String): MetricKey[Type]", "member" : "zio.metrics.MetricKey.tagged", "link" : "zio\/metrics\/MetricKey.html#tagged(key:String,value:String):zio.metrics.MetricKey[Type]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "zio.metrics.MetricKey.toString", "link" : "zio\/metrics\/MetricKey.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "zio.metrics.MetricKey.equals", "link" : "zio\/metrics\/MetricKey.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "zio.metrics.MetricKey.hashCode", "link" : "zio\/metrics\/MetricKey.html#hashCode():Int", "kind" : "def"}, {"label" : "copy", "tail" : "(name: String, keyType: Type2, tags: Set[MetricLabel]): MetricKey[Type2]", "member" : "zio.metrics.MetricKey.copy", "link" : "zio\/metrics\/MetricKey.html#copy[Type2](name:String,keyType:Type2,tags:Set[zio.metrics.MetricLabel]):zio.metrics.MetricKey[Type2]", "kind" : "def"}, {"label" : "description", "tail" : "(): Option[String]", "member" : "zio.metrics.MetricKey.description", "link" : "zio\/metrics\/MetricKey.html#description:Option[String]", "kind" : "def"}, {"label" : "tags", "tail" : ": Set[MetricLabel]", "member" : "zio.metrics.MetricKey.tags", "link" : "zio\/metrics\/MetricKey.html#tags:Set[zio.metrics.MetricLabel]", "kind" : "val"}, {"label" : "keyType", "tail" : ": Type", "member" : "zio.metrics.MetricKey.keyType", "link" : "zio\/metrics\/MetricKey.html#keyType:Type", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "zio.metrics.MetricKey.name", "link" : "zio\/metrics\/MetricKey.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/metrics\/MetricKey.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/MetricKey.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/MetricKey.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/MetricKey.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/MetricKey.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/MetricKey.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/MetricKey.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/MetricKey.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/MetricKey.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/MetricKey.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/MetricKey.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/MetricKey.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricKey.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricKey.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricKey.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/MetricKey.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/MetricKey.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/metrics\/MetricKey.html", "kind" : "case class"}, {"name" : "zio.metrics.MetricKeyType", "object" : "zio\/metrics\/MetricKeyType$.html", "members_object" : [{"label" : "Summary", "tail" : "", "member" : "zio.metrics.MetricKeyType.Summary", "link" : "zio\/metrics\/MetricKeyType$.html#SummaryextendsMetricKeyTypewithProductwithSerializable", "kind" : "final case class"}, {"label" : "Histogram", "tail" : "", "member" : "zio.metrics.MetricKeyType.Histogram", "link" : "zio\/metrics\/MetricKeyType$.html#Histogram", "kind" : "object"}, {"label" : "Histogram", "tail" : "", "member" : "zio.metrics.MetricKeyType.Histogram", "link" : "zio\/metrics\/MetricKeyType$.html#HistogramextendsMetricKeyTypewithProductwithSerializable", "kind" : "final case class"}, {"label" : "Gauge", "tail" : "", "member" : "zio.metrics.MetricKeyType.Gauge", "link" : "zio\/metrics\/MetricKeyType$.html#Gauge", "kind" : "case object"}, {"label" : "Gauge", "tail" : "", "member" : "zio.metrics.MetricKeyType.Gauge", "link" : "zio\/metrics\/MetricKeyType$.html#Gauge=zio.metrics.MetricKeyType.Gauge.type", "kind" : "type"}, {"label" : "Frequency", "tail" : "", "member" : "zio.metrics.MetricKeyType.Frequency", "link" : "zio\/metrics\/MetricKeyType$.html#Frequency", "kind" : "case object"}, {"label" : "Frequency", "tail" : "", "member" : "zio.metrics.MetricKeyType.Frequency", "link" : "zio\/metrics\/MetricKeyType$.html#Frequency=zio.metrics.MetricKeyType.Frequency.type", "kind" : "type"}, {"label" : "Counter", "tail" : "", "member" : "zio.metrics.MetricKeyType.Counter", "link" : "zio\/metrics\/MetricKeyType$.html#Counter", "kind" : "case object"}, {"label" : "Counter", "tail" : "", "member" : "zio.metrics.MetricKeyType.Counter", "link" : "zio\/metrics\/MetricKeyType$.html#Counter=zio.metrics.MetricKeyType.Counter.type", "kind" : "type"}, {"label" : "WithIn", "tail" : "", "member" : "zio.metrics.MetricKeyType.WithIn", "link" : "zio\/metrics\/MetricKeyType$.html#WithIn[T]=zio.metrics.MetricKeyType{typeIn=T}", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/MetricKeyType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/MetricKeyType$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/MetricKeyType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/MetricKeyType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/MetricKeyType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/MetricKeyType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/MetricKeyType$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/MetricKeyType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/MetricKeyType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/MetricKeyType$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/metrics\/MetricKeyType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/MetricKeyType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricKeyType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricKeyType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricKeyType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/metrics\/MetricKeyType$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/metrics\/MetricKeyType$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/MetricKeyType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/MetricKeyType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/metrics\/MetricKeyType.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/MetricKeyType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/MetricKeyType.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/MetricKeyType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/MetricKeyType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/MetricKeyType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/MetricKeyType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/MetricKeyType.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/MetricKeyType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/MetricKeyType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/MetricKeyType.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/metrics\/MetricKeyType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/MetricKeyType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricKeyType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricKeyType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricKeyType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/metrics\/MetricKeyType.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/metrics\/MetricKeyType.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/MetricKeyType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/MetricKeyType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "zio.metrics.MetricKeyType.Out", "error" : "unsupported entity"}, {"member" : "zio.metrics.MetricKeyType.In", "error" : "unsupported entity"}], "shortDescription" : ""}, {"name" : "zio.metrics.MetricLabel", "shortDescription" : "A MetricLabel represents a key value pair that allows analyzing metrics atan additional level of granularity.", "members_case class" : [{"member" : "zio.metrics.MetricLabel#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": String", "member" : "zio.metrics.MetricLabel.value", "link" : "zio\/metrics\/MetricLabel.html#value:String", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "zio.metrics.MetricLabel.key", "link" : "zio\/metrics\/MetricLabel.html#key:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/metrics\/MetricLabel.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/MetricLabel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/MetricLabel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/MetricLabel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/MetricLabel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/MetricLabel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/MetricLabel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/MetricLabel.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/MetricLabel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/MetricLabel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/MetricLabel.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/MetricLabel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricLabel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricLabel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricLabel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/MetricLabel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/MetricLabel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/metrics\/MetricLabel.html", "kind" : "case class"}, {"name" : "zio.metrics.MetricPair", "shortDescription" : "", "object" : "zio\/metrics\/MetricPair$.html", "members_object" : [{"label" : "Untyped", "tail" : "", "member" : "zio.metrics.MetricPair.Untyped", "link" : "zio\/metrics\/MetricPair$.html#Untyped=zio.metrics.MetricPair.Lossy[Any]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/MetricPair$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/MetricPair$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/MetricPair$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/MetricPair$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/MetricPair$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/MetricPair$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/MetricPair$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/MetricPair$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/MetricPair$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/MetricPair$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/metrics\/MetricPair$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/MetricPair$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricPair$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricPair$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricPair$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/metrics\/MetricPair$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/metrics\/MetricPair$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/MetricPair$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/MetricPair$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "zio.metrics.MetricPair#<init>", "error" : "unsupported entity"}, {"label" : "metricState", "tail" : ": MetricState[Out0]", "member" : "zio.metrics.MetricPair.metricState", "link" : "zio\/metrics\/MetricPair.html#metricState:zio.metrics.MetricState[Out0]", "kind" : "val"}, {"label" : "metricKey", "tail" : ": MetricKey[Type]", "member" : "zio.metrics.MetricPair.metricKey", "link" : "zio\/metrics\/MetricPair.html#metricKey:zio.metrics.MetricKey[Type]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/metrics\/MetricPair.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/MetricPair.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/MetricPair.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/MetricPair.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/MetricPair.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/MetricPair.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/MetricPair.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/MetricPair.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/MetricPair.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/MetricPair.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/MetricPair.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/MetricPair.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricPair.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricPair.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricPair.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/MetricPair.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/MetricPair.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/metrics\/MetricPair.html", "kind" : "case class"}, {"name" : "zio.metrics.Metrics", "shortDescription" : "", "members_case class" : [{"label" : "dump", "tail" : "(trace: Trace): IO[IOException, Unit]", "member" : "zio.metrics.Metrics.dump", "link" : "zio\/metrics\/Metrics.html#dump(implicittrace:zio.Trace):zio.IO[java.io.IOException,Unit]", "kind" : "def"}, {"label" : "prettyPrint", "tail" : "(trace: Trace): UIO[String]", "member" : "zio.metrics.Metrics.prettyPrint", "link" : "zio\/metrics\/Metrics.html#prettyPrint(implicittrace:zio.Trace):zio.UIO[String]", "kind" : "def"}, {"label" : "metrics", "tail" : ": Set[Untyped]", "member" : "zio.metrics.Metrics.metrics", "link" : "zio\/metrics\/Metrics.html#metrics:Set[zio.metrics.MetricPair.Untyped]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/metrics\/Metrics.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/Metrics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/Metrics.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/Metrics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/Metrics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/Metrics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/Metrics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/Metrics.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/Metrics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/Metrics.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/Metrics.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/Metrics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/Metrics.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/Metrics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/Metrics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/Metrics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/Metrics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/metrics\/Metrics.html", "kind" : "case class"}, {"name" : "zio.metrics.MetricState", "object" : "zio\/metrics\/MetricState$.html", "members_object" : [{"label" : "Summary", "tail" : "", "member" : "zio.metrics.MetricState.Summary", "link" : "zio\/metrics\/MetricState$.html#SummaryextendsMetricState[zio.metrics.MetricKeyType.Summary]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Histogram", "tail" : "", "member" : "zio.metrics.MetricState.Histogram", "link" : "zio\/metrics\/MetricState$.html#HistogramextendsMetricState[zio.metrics.MetricKeyType.Histogram]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Gauge", "tail" : "", "member" : "zio.metrics.MetricState.Gauge", "link" : "zio\/metrics\/MetricState$.html#GaugeextendsMetricState[zio.metrics.MetricKeyType.Gauge]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Frequency", "tail" : "", "member" : "zio.metrics.MetricState.Frequency", "link" : "zio\/metrics\/MetricState$.html#FrequencyextendsMetricState[zio.metrics.MetricKeyType.Frequency]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Counter", "tail" : "", "member" : "zio.metrics.MetricState.Counter", "link" : "zio\/metrics\/MetricState$.html#CounterextendsMetricState[zio.metrics.MetricKeyType.Counter]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Untyped", "tail" : "", "member" : "zio.metrics.MetricState.Untyped", "link" : "zio\/metrics\/MetricState$.html#Untyped=zio.metrics.MetricState[Any]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/MetricState$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/MetricState$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/MetricState$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/MetricState$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/MetricState$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/MetricState$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/MetricState$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/MetricState$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/MetricState$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/MetricState$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/metrics\/MetricState$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/MetricState$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricState$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricState$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricState$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/metrics\/MetricState$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/metrics\/MetricState$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/MetricState$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/MetricState$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/metrics\/MetricState.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/MetricState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/MetricState.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/MetricState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/MetricState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/MetricState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/MetricState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/MetricState.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/MetricState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/MetricState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/MetricState.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/metrics\/MetricState.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/MetricState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/MetricState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/metrics\/MetricState.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/metrics\/MetricState.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/MetricState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/MetricState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A MetricState describes the state of a metric."}, {"name" : "zio.metrics.PollingMetric", "object" : "zio\/metrics\/PollingMetric$.html", "members_object" : [{"label" : "collectAll", "tail" : "(in0: Iterable[PollingMetric[R, E, Out]]): PollingMetric[R, E, Chunk[Out]]", "member" : "zio.metrics.PollingMetric.collectAll", "link" : "zio\/metrics\/PollingMetric$.html#collectAll[R,E,Out](in0:Iterable[zio.metrics.PollingMetric[R,E,Out]]):zio.metrics.PollingMetric[R,E,zio.Chunk[Out]]", "kind" : "def"}, {"label" : "apply", "tail" : "(metric0: Metric[Type0, In0, Out], poll0: ZIO[R, E, In0]): PollingMetric[R, E, Out] { ... \/* 2 definitions in type refinement *\/ }", "member" : "zio.metrics.PollingMetric.apply", "link" : "zio\/metrics\/PollingMetric$.html#apply[Type0,In0,R,E,Out](metric0:zio.metrics.Metric[Type0,In0,Out],poll0:zio.ZIO[R,E,In0]):zio.metrics.PollingMetric[R,E,Out]{typeType=Type0;typeIn=In0}", "kind" : "def"}, {"label" : "Full", "tail" : "", "member" : "zio.metrics.PollingMetric.Full", "link" : "zio\/metrics\/PollingMetric$.html#Full[Type0,In0,-R,+E,+Out]=zio.metrics.PollingMetric[R,E,Out]{typeType=Type0;typeIn=In0}", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/PollingMetric$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/PollingMetric$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/PollingMetric$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/PollingMetric$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/PollingMetric$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/PollingMetric$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/PollingMetric$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/PollingMetric$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/PollingMetric$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/PollingMetric$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/metrics\/PollingMetric$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/PollingMetric$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/PollingMetric$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/PollingMetric$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/PollingMetric$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/metrics\/PollingMetric$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/metrics\/PollingMetric$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/PollingMetric$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/PollingMetric$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/metrics\/PollingMetric.html", "kind" : "trait", "members_trait" : [{"label" : "zip", "tail" : "(that: PollingMetric[R1, E1, Out2])(z1: Zippable[Type, Type], z2: Zippable[Out, Out2]): Full[Out, (In, In), R1, E1, Out]", "member" : "zio.metrics.PollingMetric.zip", "link" : "zio\/metrics\/PollingMetric.html#zip[R1<:R,E1>:E,Out2](that:zio.metrics.PollingMetric[R1,E1,Out2])(implicitz1:zio.Zippable[PollingMetric.this.Type,that.Type],implicitz2:zio.Zippable[Out,Out2]):zio.metrics.PollingMetric.Full[z1.Out,(PollingMetric.this.In,that.In),R1,E1,z2.Out]", "kind" : "final def"}, {"label" : "retry", "tail" : "(policy: Schedule[R1, E1, Any]): Full[Type, In, R1, E1, Out]", "member" : "zio.metrics.PollingMetric.retry", "link" : "zio\/metrics\/PollingMetric.html#retry[R1<:R,E1>:E](policy:zio.Schedule[R1,E1,Any]):zio.metrics.PollingMetric.Full[PollingMetric.this.Type,PollingMetric.this.In,R1,E1,Out]", "kind" : "final def"}, {"label" : "pollAndUpdate", "tail" : "(trace: Trace): ZIO[R, E, Unit]", "member" : "zio.metrics.PollingMetric.pollAndUpdate", "link" : "zio\/metrics\/PollingMetric.html#pollAndUpdate(implicittrace:zio.Trace):zio.ZIO[R,E,Unit]", "kind" : "final def"}, {"label" : "launch", "tail" : "(schedule: Schedule[R1, Any, B])(trace: Trace): ZIO[R1 with Scope, Nothing, Fiber[E, B]]", "member" : "zio.metrics.PollingMetric.launch", "link" : "zio\/metrics\/PollingMetric.html#launch[R1<:R,B](schedule:zio.Schedule[R1,Any,B])(implicittrace:zio.Trace):zio.ZIO[R1withzio.Scope,Nothing,zio.Fiber[E,B]]", "kind" : "final def"}, {"label" : "blocking", "tail" : "(): Full[Type, In, R, E, Out]", "member" : "zio.metrics.PollingMetric.blocking", "link" : "zio\/metrics\/PollingMetric.html#blocking:zio.metrics.PollingMetric.Full[PollingMetric.this.Type,PollingMetric.this.In,R,E,Out]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/metrics\/PollingMetric.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/metrics\/PollingMetric.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/metrics\/PollingMetric.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/metrics\/PollingMetric.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/metrics\/PollingMetric.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/metrics\/PollingMetric.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/metrics\/PollingMetric.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/metrics\/PollingMetric.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/metrics\/PollingMetric.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/metrics\/PollingMetric.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/metrics\/PollingMetric.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/metrics\/PollingMetric.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/PollingMetric.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/PollingMetric.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/metrics\/PollingMetric.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/metrics\/PollingMetric.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/metrics\/PollingMetric.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/metrics\/PollingMetric.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/metrics\/PollingMetric.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "poll", "tail" : "(trace: Trace): ZIO[R, E, In]", "member" : "zio.metrics.PollingMetric.poll", "link" : "zio\/metrics\/PollingMetric.html#poll(implicittrace:zio.Trace):zio.ZIO[R,E,PollingMetric.this.In]", "kind" : "abstract def"}, {"label" : "metric", "tail" : "(): Metric[Type, In, Out]", "member" : "zio.metrics.PollingMetric.metric", "link" : "zio\/metrics\/PollingMetric.html#metric:zio.metrics.Metric[PollingMetric.this.Type,PollingMetric.this.In,Out]", "kind" : "abstract def"}, {"member" : "zio.metrics.PollingMetric.In", "error" : "unsupported entity"}, {"member" : "zio.metrics.PollingMetric.Type", "error" : "unsupported entity"}], "shortDescription" : "A PollingMetric[Type, Out] is a combination of a metric and an effect thatpolls for updates to the metric."}], "zio.test.render" : [{"name" : "zio.test.render.ConsoleRenderer", "object" : "zio\/test\/render\/ConsoleRenderer$.html", "members_object" : [{"label" : "render", "tail" : "(cause: Cause[_], labels: List[String]): Option[String]", "member" : "zio.test.render.ConsoleRenderer.render", "link" : "zio\/test\/render\/ConsoleRenderer$.html#render(cause:zio.Cause[_],labels:List[String]):Option[String]", "kind" : "def"}, {"label" : "renderSummary", "tail" : "(summary: Summary): String", "member" : "zio.test.render.ConsoleRenderer.renderSummary", "link" : "zio\/test\/render\/ConsoleRenderer$.html#renderSummary(summary:zio.test.Summary):String", "kind" : "def"}, {"label" : "renderToStringLines", "tail" : "(message: Message): Seq[String]", "member" : "zio.test.render.ConsoleRenderer.renderToStringLines", "link" : "zio\/test\/render\/ConsoleRenderer$.html#renderToStringLines(message:zio.test.render.LogLine.Message):Seq[String]", "kind" : "def"}, {"label" : "renderForSummary", "tail" : "(results: Seq[ExecutionResult], testAnnotationRenderer: TestAnnotationRenderer): Seq[String]", "member" : "zio.test.render.ConsoleRenderer.renderForSummary", "link" : "zio\/test\/render\/ConsoleRenderer$.html#renderForSummary(results:Seq[zio.test.render.ExecutionResult],testAnnotationRenderer:zio.test.TestAnnotationRenderer):Seq[String]", "kind" : "def"}, {"label" : "renderOutput", "tail" : "(results: Seq[ExecutionResult])(trace: Trace): Seq[String]", "member" : "zio.test.render.ConsoleRenderer.renderOutput", "link" : "zio\/test\/render\/ConsoleRenderer$.html#renderOutput(results:Seq[zio.test.render.ExecutionResult])(implicittrace:zio.Trace):Seq[String]", "kind" : "def"}, {"label" : "renderEvent", "tail" : "(event: ExecutionEvent, includeCause: Boolean)(trace: Trace): Seq[ExecutionResult]", "member" : "zio.test.render.ConsoleRenderer.renderEvent", "link" : "zio\/test\/render\/ConsoleRenderer$.html#renderEvent(event:zio.test.ExecutionEvent,includeCause:Boolean)(implicittrace:zio.Trace):Seq[zio.test.render.ExecutionResult]", "kind" : "def"}, {"label" : "renderedWithSummary", "tail" : "(caseType: ResultType, label: String, result: Status, offset: Int, lines: List[Line], summaryLines: List[Line]): ExecutionResult", "member" : "zio.test.render.TestRenderer.renderedWithSummary", "link" : "zio\/test\/render\/ConsoleRenderer$.html#renderedWithSummary(caseType:zio.test.render.ExecutionResult.ResultType,label:String,result:zio.test.render.ExecutionResult.Status,offset:Int,lines:List[zio.test.render.LogLine.Line],summaryLines:List[zio.test.render.LogLine.Line]):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "rendered", "tail" : "(caseType: ResultType, label: String, result: Status, offset: Int, lines: Line*): ExecutionResult", "member" : "zio.test.render.TestRenderer.rendered", "link" : "zio\/test\/render\/ConsoleRenderer$.html#rendered(caseType:zio.test.render.ExecutionResult.ResultType,label:String,result:zio.test.render.ExecutionResult.Status,offset:Int,lines:zio.test.render.LogLine.Line*):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "renderFailureLabel", "tail" : "(label: String, offset: Int): Line", "member" : "zio.test.render.TestRenderer.renderFailureLabel", "link" : "zio\/test\/render\/ConsoleRenderer$.html#renderFailureLabel(label:String,offset:Int):zio.test.render.LogLine.Line", "kind" : "def"}, {"label" : "renderCause", "tail" : "(cause: Cause[Any], offset: Int)(trace: Trace): Message", "member" : "zio.test.render.TestRenderer.renderCause", "link" : "zio\/test\/render\/ConsoleRenderer$.html#renderCause(cause:zio.Cause[Any],offset:Int)(implicittrace:zio.Trace):zio.test.render.LogLine.Message", "kind" : "def"}, {"label" : "renderFailureCase", "tail" : "(failureCase: FailureCase, offset: Int, testLabel: Option[String]): Chunk[Line]", "member" : "zio.test.render.TestRenderer.renderFailureCase", "link" : "zio\/test\/render\/ConsoleRenderer$.html#renderFailureCase(failureCase:zio.test.FailureCase,offset:Int,testLabel:Option[String]):zio.Chunk[zio.test.render.LogLine.Line]", "kind" : "def"}, {"label" : "renderAssertionResult", "tail" : "(assertionResult: TestTrace[Boolean], offset: Int): Message", "member" : "zio.test.render.TestRenderer.renderAssertionResult", "link" : "zio\/test\/render\/ConsoleRenderer$.html#renderAssertionResult(assertionResult:zio.test.TestTrace[Boolean],offset:Int):zio.test.render.LogLine.Message", "kind" : "def"}, {"label" : "renderRuntimeCause", "tail" : "(cause: Cause[E], labels: List[String], depth: Int, includeCause: Boolean)(trace: Trace): ExecutionResult", "member" : "zio.test.render.TestRenderer.renderRuntimeCause", "link" : "zio\/test\/render\/ConsoleRenderer$.html#renderRuntimeCause[E](cause:zio.Cause[E],labels:List[String],depth:Int,includeCause:Boolean)(implicittrace:zio.Trace):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "renderAssertFailure", "tail" : "(result: TestResult, labels: List[String], depth: Int, annotations: TestAnnotationMap): ExecutionResult", "member" : "zio.test.render.TestRenderer.renderAssertFailure", "link" : "zio\/test\/render\/ConsoleRenderer$.html#renderAssertFailure(result:zio.test.TestResult,labels:List[String],depth:Int,annotations:zio.test.TestAnnotationMap):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "testCaseOutput", "tail" : "(labels: List[String], results: Either[TestFailure[Any], TestSuccess], includeCause: Boolean, annotations: TestAnnotationMap)(trace: Trace): (List[Line], List[Line])", "member" : "zio.test.render.TestRenderer.testCaseOutput", "link" : "zio\/test\/render\/ConsoleRenderer$.html#testCaseOutput(labels:List[String],results:Either[zio.test.TestFailure[Any],zio.test.TestSuccess],includeCause:Boolean,annotations:zio.test.TestAnnotationMap)(implicittrace:zio.Trace):(List[zio.test.render.LogLine.Line],List[zio.test.render.LogLine.Line])", "kind" : "def"}, {"label" : "render", "tail" : "(reporterEvent: ExecutionEvent, includeCause: Boolean)(trace: Trace): Seq[String]", "member" : "zio.test.render.TestRenderer.render", "link" : "zio\/test\/render\/ConsoleRenderer$.html#render(reporterEvent:zio.test.ExecutionEvent,includeCause:Boolean)(implicittrace:zio.Trace):Seq[String]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/render\/ConsoleRenderer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/render\/ConsoleRenderer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/render\/ConsoleRenderer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/render\/ConsoleRenderer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/render\/ConsoleRenderer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/render\/ConsoleRenderer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/render\/ConsoleRenderer$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/render\/ConsoleRenderer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/render\/ConsoleRenderer$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/render\/ConsoleRenderer$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/render\/ConsoleRenderer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/render\/ConsoleRenderer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/ConsoleRenderer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/ConsoleRenderer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/ConsoleRenderer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/render\/ConsoleRenderer$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/render\/ConsoleRenderer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/render\/ConsoleRenderer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/render\/ConsoleRenderer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/render\/ConsoleRenderer.html", "kind" : "trait", "members_trait" : [{"label" : "render", "tail" : "(cause: Cause[_], labels: List[String]): Option[String]", "member" : "zio.test.render.ConsoleRenderer.render", "link" : "zio\/test\/render\/ConsoleRenderer.html#render(cause:zio.Cause[_],labels:List[String]):Option[String]", "kind" : "def"}, {"label" : "renderSummary", "tail" : "(summary: Summary): String", "member" : "zio.test.render.ConsoleRenderer.renderSummary", "link" : "zio\/test\/render\/ConsoleRenderer.html#renderSummary(summary:zio.test.Summary):String", "kind" : "def"}, {"label" : "renderToStringLines", "tail" : "(message: Message): Seq[String]", "member" : "zio.test.render.ConsoleRenderer.renderToStringLines", "link" : "zio\/test\/render\/ConsoleRenderer.html#renderToStringLines(message:zio.test.render.LogLine.Message):Seq[String]", "kind" : "def"}, {"label" : "renderForSummary", "tail" : "(results: Seq[ExecutionResult], testAnnotationRenderer: TestAnnotationRenderer): Seq[String]", "member" : "zio.test.render.ConsoleRenderer.renderForSummary", "link" : "zio\/test\/render\/ConsoleRenderer.html#renderForSummary(results:Seq[zio.test.render.ExecutionResult],testAnnotationRenderer:zio.test.TestAnnotationRenderer):Seq[String]", "kind" : "def"}, {"label" : "renderOutput", "tail" : "(results: Seq[ExecutionResult])(trace: Trace): Seq[String]", "member" : "zio.test.render.ConsoleRenderer.renderOutput", "link" : "zio\/test\/render\/ConsoleRenderer.html#renderOutput(results:Seq[zio.test.render.ExecutionResult])(implicittrace:zio.Trace):Seq[String]", "kind" : "def"}, {"label" : "renderEvent", "tail" : "(event: ExecutionEvent, includeCause: Boolean)(trace: Trace): Seq[ExecutionResult]", "member" : "zio.test.render.ConsoleRenderer.renderEvent", "link" : "zio\/test\/render\/ConsoleRenderer.html#renderEvent(event:zio.test.ExecutionEvent,includeCause:Boolean)(implicittrace:zio.Trace):Seq[zio.test.render.ExecutionResult]", "kind" : "def"}, {"label" : "renderedWithSummary", "tail" : "(caseType: ResultType, label: String, result: Status, offset: Int, lines: List[Line], summaryLines: List[Line]): ExecutionResult", "member" : "zio.test.render.TestRenderer.renderedWithSummary", "link" : "zio\/test\/render\/ConsoleRenderer.html#renderedWithSummary(caseType:zio.test.render.ExecutionResult.ResultType,label:String,result:zio.test.render.ExecutionResult.Status,offset:Int,lines:List[zio.test.render.LogLine.Line],summaryLines:List[zio.test.render.LogLine.Line]):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "rendered", "tail" : "(caseType: ResultType, label: String, result: Status, offset: Int, lines: Line*): ExecutionResult", "member" : "zio.test.render.TestRenderer.rendered", "link" : "zio\/test\/render\/ConsoleRenderer.html#rendered(caseType:zio.test.render.ExecutionResult.ResultType,label:String,result:zio.test.render.ExecutionResult.Status,offset:Int,lines:zio.test.render.LogLine.Line*):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "renderFailureLabel", "tail" : "(label: String, offset: Int): Line", "member" : "zio.test.render.TestRenderer.renderFailureLabel", "link" : "zio\/test\/render\/ConsoleRenderer.html#renderFailureLabel(label:String,offset:Int):zio.test.render.LogLine.Line", "kind" : "def"}, {"label" : "renderCause", "tail" : "(cause: Cause[Any], offset: Int)(trace: Trace): Message", "member" : "zio.test.render.TestRenderer.renderCause", "link" : "zio\/test\/render\/ConsoleRenderer.html#renderCause(cause:zio.Cause[Any],offset:Int)(implicittrace:zio.Trace):zio.test.render.LogLine.Message", "kind" : "def"}, {"label" : "renderFailureCase", "tail" : "(failureCase: FailureCase, offset: Int, testLabel: Option[String]): Chunk[Line]", "member" : "zio.test.render.TestRenderer.renderFailureCase", "link" : "zio\/test\/render\/ConsoleRenderer.html#renderFailureCase(failureCase:zio.test.FailureCase,offset:Int,testLabel:Option[String]):zio.Chunk[zio.test.render.LogLine.Line]", "kind" : "def"}, {"label" : "renderAssertionResult", "tail" : "(assertionResult: TestTrace[Boolean], offset: Int): Message", "member" : "zio.test.render.TestRenderer.renderAssertionResult", "link" : "zio\/test\/render\/ConsoleRenderer.html#renderAssertionResult(assertionResult:zio.test.TestTrace[Boolean],offset:Int):zio.test.render.LogLine.Message", "kind" : "def"}, {"label" : "renderRuntimeCause", "tail" : "(cause: Cause[E], labels: List[String], depth: Int, includeCause: Boolean)(trace: Trace): ExecutionResult", "member" : "zio.test.render.TestRenderer.renderRuntimeCause", "link" : "zio\/test\/render\/ConsoleRenderer.html#renderRuntimeCause[E](cause:zio.Cause[E],labels:List[String],depth:Int,includeCause:Boolean)(implicittrace:zio.Trace):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "renderAssertFailure", "tail" : "(result: TestResult, labels: List[String], depth: Int, annotations: TestAnnotationMap): ExecutionResult", "member" : "zio.test.render.TestRenderer.renderAssertFailure", "link" : "zio\/test\/render\/ConsoleRenderer.html#renderAssertFailure(result:zio.test.TestResult,labels:List[String],depth:Int,annotations:zio.test.TestAnnotationMap):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "testCaseOutput", "tail" : "(labels: List[String], results: Either[TestFailure[Any], TestSuccess], includeCause: Boolean, annotations: TestAnnotationMap)(trace: Trace): (List[Line], List[Line])", "member" : "zio.test.render.TestRenderer.testCaseOutput", "link" : "zio\/test\/render\/ConsoleRenderer.html#testCaseOutput(labels:List[String],results:Either[zio.test.TestFailure[Any],zio.test.TestSuccess],includeCause:Boolean,annotations:zio.test.TestAnnotationMap)(implicittrace:zio.Trace):(List[zio.test.render.LogLine.Line],List[zio.test.render.LogLine.Line])", "kind" : "def"}, {"label" : "render", "tail" : "(reporterEvent: ExecutionEvent, includeCause: Boolean)(trace: Trace): Seq[String]", "member" : "zio.test.render.TestRenderer.render", "link" : "zio\/test\/render\/ConsoleRenderer.html#render(reporterEvent:zio.test.ExecutionEvent,includeCause:Boolean)(implicittrace:zio.Trace):Seq[String]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/render\/ConsoleRenderer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/render\/ConsoleRenderer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/render\/ConsoleRenderer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/render\/ConsoleRenderer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/render\/ConsoleRenderer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/render\/ConsoleRenderer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/render\/ConsoleRenderer.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/render\/ConsoleRenderer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/render\/ConsoleRenderer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/render\/ConsoleRenderer.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/render\/ConsoleRenderer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/render\/ConsoleRenderer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/ConsoleRenderer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/ConsoleRenderer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/ConsoleRenderer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/render\/ConsoleRenderer.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/render\/ConsoleRenderer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/render\/ConsoleRenderer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/render\/ConsoleRenderer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.render.ExecutionResult", "shortDescription" : "", "object" : "zio\/test\/render\/ExecutionResult$.html", "members_object" : [{"label" : "ResultType", "tail" : "", "member" : "zio.test.render.ExecutionResult.ResultType", "link" : "zio\/test\/render\/ExecutionResult$.html#ResultType", "kind" : "object"}, {"label" : "ResultType", "tail" : "", "member" : "zio.test.render.ExecutionResult.ResultType", "link" : "zio\/test\/render\/ExecutionResult$.html#ResultTypeextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "Status", "tail" : "", "member" : "zio.test.render.ExecutionResult.Status", "link" : "zio\/test\/render\/ExecutionResult$.html#Status", "kind" : "object"}, {"label" : "Status", "tail" : "", "member" : "zio.test.render.ExecutionResult.Status", "link" : "zio\/test\/render\/ExecutionResult$.html#StatusextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "withoutSummarySpecificOutput", "tail" : "(resultType: ResultType, label: String, status: Status, offset: Int, annotations: List[TestAnnotationMap], lines: List[Line], duration: Option[Long]): ExecutionResult", "member" : "zio.test.render.ExecutionResult.withoutSummarySpecificOutput", "link" : "zio\/test\/render\/ExecutionResult$.html#withoutSummarySpecificOutput(resultType:zio.test.render.ExecutionResult.ResultType,label:String,status:zio.test.render.ExecutionResult.Status,offset:Int,annotations:List[zio.test.TestAnnotationMap],lines:List[zio.test.render.LogLine.Line],duration:Option[Long]):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/render\/ExecutionResult$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/render\/ExecutionResult$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/render\/ExecutionResult$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/render\/ExecutionResult$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/render\/ExecutionResult$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/render\/ExecutionResult$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/render\/ExecutionResult$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/render\/ExecutionResult$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/render\/ExecutionResult$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/render\/ExecutionResult$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/render\/ExecutionResult$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/render\/ExecutionResult$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/ExecutionResult$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/ExecutionResult$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/ExecutionResult$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/render\/ExecutionResult$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/render\/ExecutionResult$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/render\/ExecutionResult$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/render\/ExecutionResult$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withAnnotations", "tail" : "(annotations: List[TestAnnotationMap]): ExecutionResult", "member" : "zio.test.render.ExecutionResult.withAnnotations", "link" : "zio\/test\/render\/ExecutionResult.html#withAnnotations(annotations:List[zio.test.TestAnnotationMap]):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): ExecutionResult", "member" : "zio.test.render.ExecutionResult.unary_!", "link" : "zio\/test\/render\/ExecutionResult.html#unary_!:zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "||", "tail" : "(that: ExecutionResult): ExecutionResult", "member" : "zio.test.render.ExecutionResult.||", "link" : "zio\/test\/render\/ExecutionResult.html#||(that:zio.test.render.ExecutionResult):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "&&", "tail" : "(that: ExecutionResult): ExecutionResult", "member" : "zio.test.render.ExecutionResult.&&", "link" : "zio\/test\/render\/ExecutionResult.html#&&(that:zio.test.render.ExecutionResult):zio.test.render.ExecutionResult", "kind" : "def"}, {"member" : "zio.test.render.ExecutionResult#<init>", "error" : "unsupported entity"}, {"label" : "duration", "tail" : ": Option[Long]", "member" : "zio.test.render.ExecutionResult.duration", "link" : "zio\/test\/render\/ExecutionResult.html#duration:Option[Long]", "kind" : "val"}, {"label" : "summaryLines", "tail" : ": List[Line]", "member" : "zio.test.render.ExecutionResult.summaryLines", "link" : "zio\/test\/render\/ExecutionResult.html#summaryLines:List[zio.test.render.LogLine.Line]", "kind" : "val"}, {"label" : "streamingLines", "tail" : ": List[Line]", "member" : "zio.test.render.ExecutionResult.streamingLines", "link" : "zio\/test\/render\/ExecutionResult.html#streamingLines:List[zio.test.render.LogLine.Line]", "kind" : "val"}, {"label" : "annotations", "tail" : ": List[TestAnnotationMap]", "member" : "zio.test.render.ExecutionResult.annotations", "link" : "zio\/test\/render\/ExecutionResult.html#annotations:List[zio.test.TestAnnotationMap]", "kind" : "val"}, {"label" : "offset", "tail" : ": Int", "member" : "zio.test.render.ExecutionResult.offset", "link" : "zio\/test\/render\/ExecutionResult.html#offset:Int", "kind" : "val"}, {"label" : "status", "tail" : ": Status", "member" : "zio.test.render.ExecutionResult.status", "link" : "zio\/test\/render\/ExecutionResult.html#status:zio.test.render.ExecutionResult.Status", "kind" : "val"}, {"label" : "label", "tail" : ": String", "member" : "zio.test.render.ExecutionResult.label", "link" : "zio\/test\/render\/ExecutionResult.html#label:String", "kind" : "val"}, {"label" : "resultType", "tail" : ": ResultType", "member" : "zio.test.render.ExecutionResult.resultType", "link" : "zio\/test\/render\/ExecutionResult.html#resultType:zio.test.render.ExecutionResult.ResultType", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/test\/render\/ExecutionResult.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/render\/ExecutionResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/render\/ExecutionResult.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/render\/ExecutionResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/render\/ExecutionResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/render\/ExecutionResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/render\/ExecutionResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/render\/ExecutionResult.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/render\/ExecutionResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/render\/ExecutionResult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/render\/ExecutionResult.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/render\/ExecutionResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/ExecutionResult.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/ExecutionResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/ExecutionResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/render\/ExecutionResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/render\/ExecutionResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/test\/render\/ExecutionResult.html", "kind" : "case class"}, {"name" : "zio.test.render.IntelliJRenderer", "object" : "zio\/test\/render\/IntelliJRenderer$.html", "members_object" : [{"label" : "locationRenderer", "tail" : ": TestAnnotationRenderer", "member" : "zio.test.render.IntelliJRenderer.locationRenderer", "link" : "zio\/test\/render\/IntelliJRenderer$.html#locationRenderer:zio.test.TestAnnotationRenderer", "kind" : "val"}, {"label" : "renderSummary", "tail" : "(summary: Summary): String", "member" : "zio.test.render.IntelliJRenderer.renderSummary", "link" : "zio\/test\/render\/IntelliJRenderer$.html#renderSummary(summary:zio.test.Summary):String", "kind" : "def"}, {"label" : "escape", "tail" : "(str: String): String", "member" : "zio.test.render.IntelliJRenderer.escape", "link" : "zio\/test\/render\/IntelliJRenderer$.html#escape(str:String):String", "kind" : "def"}, {"label" : "renderOutput", "tail" : "(results: Seq[ExecutionResult])(trace: Trace): Seq[String]", "member" : "zio.test.render.IntelliJRenderer.renderOutput", "link" : "zio\/test\/render\/IntelliJRenderer$.html#renderOutput(results:Seq[zio.test.render.ExecutionResult])(implicittrace:zio.Trace):Seq[String]", "kind" : "def"}, {"label" : "renderEvent", "tail" : "(event: ExecutionEvent, includeCause: Boolean)(trace: Trace): Seq[ExecutionResult]", "member" : "zio.test.render.IntelliJRenderer.renderEvent", "link" : "zio\/test\/render\/IntelliJRenderer$.html#renderEvent(event:zio.test.ExecutionEvent,includeCause:Boolean)(implicittrace:zio.Trace):Seq[zio.test.render.ExecutionResult]", "kind" : "def"}, {"label" : "renderedWithSummary", "tail" : "(caseType: ResultType, label: String, result: Status, offset: Int, lines: List[Line], summaryLines: List[Line]): ExecutionResult", "member" : "zio.test.render.TestRenderer.renderedWithSummary", "link" : "zio\/test\/render\/IntelliJRenderer$.html#renderedWithSummary(caseType:zio.test.render.ExecutionResult.ResultType,label:String,result:zio.test.render.ExecutionResult.Status,offset:Int,lines:List[zio.test.render.LogLine.Line],summaryLines:List[zio.test.render.LogLine.Line]):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "rendered", "tail" : "(caseType: ResultType, label: String, result: Status, offset: Int, lines: Line*): ExecutionResult", "member" : "zio.test.render.TestRenderer.rendered", "link" : "zio\/test\/render\/IntelliJRenderer$.html#rendered(caseType:zio.test.render.ExecutionResult.ResultType,label:String,result:zio.test.render.ExecutionResult.Status,offset:Int,lines:zio.test.render.LogLine.Line*):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "renderFailureLabel", "tail" : "(label: String, offset: Int): Line", "member" : "zio.test.render.TestRenderer.renderFailureLabel", "link" : "zio\/test\/render\/IntelliJRenderer$.html#renderFailureLabel(label:String,offset:Int):zio.test.render.LogLine.Line", "kind" : "def"}, {"label" : "renderCause", "tail" : "(cause: Cause[Any], offset: Int)(trace: Trace): Message", "member" : "zio.test.render.TestRenderer.renderCause", "link" : "zio\/test\/render\/IntelliJRenderer$.html#renderCause(cause:zio.Cause[Any],offset:Int)(implicittrace:zio.Trace):zio.test.render.LogLine.Message", "kind" : "def"}, {"label" : "renderFailureCase", "tail" : "(failureCase: FailureCase, offset: Int, testLabel: Option[String]): Chunk[Line]", "member" : "zio.test.render.TestRenderer.renderFailureCase", "link" : "zio\/test\/render\/IntelliJRenderer$.html#renderFailureCase(failureCase:zio.test.FailureCase,offset:Int,testLabel:Option[String]):zio.Chunk[zio.test.render.LogLine.Line]", "kind" : "def"}, {"label" : "renderAssertionResult", "tail" : "(assertionResult: TestTrace[Boolean], offset: Int): Message", "member" : "zio.test.render.TestRenderer.renderAssertionResult", "link" : "zio\/test\/render\/IntelliJRenderer$.html#renderAssertionResult(assertionResult:zio.test.TestTrace[Boolean],offset:Int):zio.test.render.LogLine.Message", "kind" : "def"}, {"label" : "renderRuntimeCause", "tail" : "(cause: Cause[E], labels: List[String], depth: Int, includeCause: Boolean)(trace: Trace): ExecutionResult", "member" : "zio.test.render.TestRenderer.renderRuntimeCause", "link" : "zio\/test\/render\/IntelliJRenderer$.html#renderRuntimeCause[E](cause:zio.Cause[E],labels:List[String],depth:Int,includeCause:Boolean)(implicittrace:zio.Trace):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "renderAssertFailure", "tail" : "(result: TestResult, labels: List[String], depth: Int, annotations: TestAnnotationMap): ExecutionResult", "member" : "zio.test.render.TestRenderer.renderAssertFailure", "link" : "zio\/test\/render\/IntelliJRenderer$.html#renderAssertFailure(result:zio.test.TestResult,labels:List[String],depth:Int,annotations:zio.test.TestAnnotationMap):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "testCaseOutput", "tail" : "(labels: List[String], results: Either[TestFailure[Any], TestSuccess], includeCause: Boolean, annotations: TestAnnotationMap)(trace: Trace): (List[Line], List[Line])", "member" : "zio.test.render.TestRenderer.testCaseOutput", "link" : "zio\/test\/render\/IntelliJRenderer$.html#testCaseOutput(labels:List[String],results:Either[zio.test.TestFailure[Any],zio.test.TestSuccess],includeCause:Boolean,annotations:zio.test.TestAnnotationMap)(implicittrace:zio.Trace):(List[zio.test.render.LogLine.Line],List[zio.test.render.LogLine.Line])", "kind" : "def"}, {"label" : "render", "tail" : "(reporterEvent: ExecutionEvent, includeCause: Boolean)(trace: Trace): Seq[String]", "member" : "zio.test.render.TestRenderer.render", "link" : "zio\/test\/render\/IntelliJRenderer$.html#render(reporterEvent:zio.test.ExecutionEvent,includeCause:Boolean)(implicittrace:zio.Trace):Seq[String]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/render\/IntelliJRenderer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/render\/IntelliJRenderer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/render\/IntelliJRenderer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/render\/IntelliJRenderer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/render\/IntelliJRenderer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/render\/IntelliJRenderer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/render\/IntelliJRenderer$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/render\/IntelliJRenderer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/render\/IntelliJRenderer$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/render\/IntelliJRenderer$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/render\/IntelliJRenderer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/render\/IntelliJRenderer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/IntelliJRenderer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/IntelliJRenderer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/IntelliJRenderer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/render\/IntelliJRenderer$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/render\/IntelliJRenderer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/render\/IntelliJRenderer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/render\/IntelliJRenderer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/render\/IntelliJRenderer.html", "kind" : "trait", "members_trait" : [{"label" : "renderSummary", "tail" : "(summary: Summary): String", "member" : "zio.test.render.IntelliJRenderer.renderSummary", "link" : "zio\/test\/render\/IntelliJRenderer.html#renderSummary(summary:zio.test.Summary):String", "kind" : "def"}, {"label" : "escape", "tail" : "(str: String): String", "member" : "zio.test.render.IntelliJRenderer.escape", "link" : "zio\/test\/render\/IntelliJRenderer.html#escape(str:String):String", "kind" : "def"}, {"label" : "renderOutput", "tail" : "(results: Seq[ExecutionResult])(trace: Trace): Seq[String]", "member" : "zio.test.render.IntelliJRenderer.renderOutput", "link" : "zio\/test\/render\/IntelliJRenderer.html#renderOutput(results:Seq[zio.test.render.ExecutionResult])(implicittrace:zio.Trace):Seq[String]", "kind" : "def"}, {"label" : "renderEvent", "tail" : "(event: ExecutionEvent, includeCause: Boolean)(trace: Trace): Seq[ExecutionResult]", "member" : "zio.test.render.IntelliJRenderer.renderEvent", "link" : "zio\/test\/render\/IntelliJRenderer.html#renderEvent(event:zio.test.ExecutionEvent,includeCause:Boolean)(implicittrace:zio.Trace):Seq[zio.test.render.ExecutionResult]", "kind" : "def"}, {"label" : "renderedWithSummary", "tail" : "(caseType: ResultType, label: String, result: Status, offset: Int, lines: List[Line], summaryLines: List[Line]): ExecutionResult", "member" : "zio.test.render.TestRenderer.renderedWithSummary", "link" : "zio\/test\/render\/IntelliJRenderer.html#renderedWithSummary(caseType:zio.test.render.ExecutionResult.ResultType,label:String,result:zio.test.render.ExecutionResult.Status,offset:Int,lines:List[zio.test.render.LogLine.Line],summaryLines:List[zio.test.render.LogLine.Line]):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "rendered", "tail" : "(caseType: ResultType, label: String, result: Status, offset: Int, lines: Line*): ExecutionResult", "member" : "zio.test.render.TestRenderer.rendered", "link" : "zio\/test\/render\/IntelliJRenderer.html#rendered(caseType:zio.test.render.ExecutionResult.ResultType,label:String,result:zio.test.render.ExecutionResult.Status,offset:Int,lines:zio.test.render.LogLine.Line*):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "renderFailureLabel", "tail" : "(label: String, offset: Int): Line", "member" : "zio.test.render.TestRenderer.renderFailureLabel", "link" : "zio\/test\/render\/IntelliJRenderer.html#renderFailureLabel(label:String,offset:Int):zio.test.render.LogLine.Line", "kind" : "def"}, {"label" : "renderCause", "tail" : "(cause: Cause[Any], offset: Int)(trace: Trace): Message", "member" : "zio.test.render.TestRenderer.renderCause", "link" : "zio\/test\/render\/IntelliJRenderer.html#renderCause(cause:zio.Cause[Any],offset:Int)(implicittrace:zio.Trace):zio.test.render.LogLine.Message", "kind" : "def"}, {"label" : "renderFailureCase", "tail" : "(failureCase: FailureCase, offset: Int, testLabel: Option[String]): Chunk[Line]", "member" : "zio.test.render.TestRenderer.renderFailureCase", "link" : "zio\/test\/render\/IntelliJRenderer.html#renderFailureCase(failureCase:zio.test.FailureCase,offset:Int,testLabel:Option[String]):zio.Chunk[zio.test.render.LogLine.Line]", "kind" : "def"}, {"label" : "renderAssertionResult", "tail" : "(assertionResult: TestTrace[Boolean], offset: Int): Message", "member" : "zio.test.render.TestRenderer.renderAssertionResult", "link" : "zio\/test\/render\/IntelliJRenderer.html#renderAssertionResult(assertionResult:zio.test.TestTrace[Boolean],offset:Int):zio.test.render.LogLine.Message", "kind" : "def"}, {"label" : "renderRuntimeCause", "tail" : "(cause: Cause[E], labels: List[String], depth: Int, includeCause: Boolean)(trace: Trace): ExecutionResult", "member" : "zio.test.render.TestRenderer.renderRuntimeCause", "link" : "zio\/test\/render\/IntelliJRenderer.html#renderRuntimeCause[E](cause:zio.Cause[E],labels:List[String],depth:Int,includeCause:Boolean)(implicittrace:zio.Trace):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "renderAssertFailure", "tail" : "(result: TestResult, labels: List[String], depth: Int, annotations: TestAnnotationMap): ExecutionResult", "member" : "zio.test.render.TestRenderer.renderAssertFailure", "link" : "zio\/test\/render\/IntelliJRenderer.html#renderAssertFailure(result:zio.test.TestResult,labels:List[String],depth:Int,annotations:zio.test.TestAnnotationMap):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "testCaseOutput", "tail" : "(labels: List[String], results: Either[TestFailure[Any], TestSuccess], includeCause: Boolean, annotations: TestAnnotationMap)(trace: Trace): (List[Line], List[Line])", "member" : "zio.test.render.TestRenderer.testCaseOutput", "link" : "zio\/test\/render\/IntelliJRenderer.html#testCaseOutput(labels:List[String],results:Either[zio.test.TestFailure[Any],zio.test.TestSuccess],includeCause:Boolean,annotations:zio.test.TestAnnotationMap)(implicittrace:zio.Trace):(List[zio.test.render.LogLine.Line],List[zio.test.render.LogLine.Line])", "kind" : "def"}, {"label" : "render", "tail" : "(reporterEvent: ExecutionEvent, includeCause: Boolean)(trace: Trace): Seq[String]", "member" : "zio.test.render.TestRenderer.render", "link" : "zio\/test\/render\/IntelliJRenderer.html#render(reporterEvent:zio.test.ExecutionEvent,includeCause:Boolean)(implicittrace:zio.Trace):Seq[String]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/render\/IntelliJRenderer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/render\/IntelliJRenderer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/render\/IntelliJRenderer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/render\/IntelliJRenderer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/render\/IntelliJRenderer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/render\/IntelliJRenderer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/render\/IntelliJRenderer.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/render\/IntelliJRenderer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/render\/IntelliJRenderer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/render\/IntelliJRenderer.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/render\/IntelliJRenderer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/render\/IntelliJRenderer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/IntelliJRenderer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/IntelliJRenderer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/IntelliJRenderer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/render\/IntelliJRenderer.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/render\/IntelliJRenderer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/render\/IntelliJRenderer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/render\/IntelliJRenderer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.render.LogLine", "shortDescription" : "", "object" : "zio\/test\/render\/LogLine$.html", "members_object" : [{"label" : "Fragment", "tail" : "", "member" : "zio.test.render.LogLine.Fragment", "link" : "zio\/test\/render\/LogLine$.html#Fragment", "kind" : "object"}, {"label" : "Fragment", "tail" : "", "member" : "zio.test.render.LogLine.Fragment", "link" : "zio\/test\/render\/LogLine$.html#FragmentextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Line", "tail" : "", "member" : "zio.test.render.LogLine.Line", "link" : "zio\/test\/render\/LogLine$.html#Line", "kind" : "object"}, {"label" : "Line", "tail" : "", "member" : "zio.test.render.LogLine.Line", "link" : "zio\/test\/render\/LogLine$.html#LineextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Message", "tail" : "", "member" : "zio.test.render.LogLine.Message", "link" : "zio\/test\/render\/LogLine$.html#Message", "kind" : "object"}, {"label" : "Message", "tail" : "", "member" : "zio.test.render.LogLine.Message", "link" : "zio\/test\/render\/LogLine$.html#MessageextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/render\/LogLine$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/render\/LogLine$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/render\/LogLine$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/render\/LogLine$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/render\/LogLine$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/render\/LogLine$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/render\/LogLine$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/render\/LogLine$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/render\/LogLine$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/render\/LogLine$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/render\/LogLine$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/render\/LogLine$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/LogLine$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/LogLine$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/LogLine$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/render\/LogLine$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/render\/LogLine$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/render\/LogLine$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/render\/LogLine$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.render.TestRenderer", "trait" : "zio\/test\/render\/TestRenderer.html", "kind" : "trait", "members_trait" : [{"label" : "renderedWithSummary", "tail" : "(caseType: ResultType, label: String, result: Status, offset: Int, lines: List[Line], summaryLines: List[Line]): ExecutionResult", "member" : "zio.test.render.TestRenderer.renderedWithSummary", "link" : "zio\/test\/render\/TestRenderer.html#renderedWithSummary(caseType:zio.test.render.ExecutionResult.ResultType,label:String,result:zio.test.render.ExecutionResult.Status,offset:Int,lines:List[zio.test.render.LogLine.Line],summaryLines:List[zio.test.render.LogLine.Line]):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "rendered", "tail" : "(caseType: ResultType, label: String, result: Status, offset: Int, lines: Line*): ExecutionResult", "member" : "zio.test.render.TestRenderer.rendered", "link" : "zio\/test\/render\/TestRenderer.html#rendered(caseType:zio.test.render.ExecutionResult.ResultType,label:String,result:zio.test.render.ExecutionResult.Status,offset:Int,lines:zio.test.render.LogLine.Line*):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "renderFailureLabel", "tail" : "(label: String, offset: Int): Line", "member" : "zio.test.render.TestRenderer.renderFailureLabel", "link" : "zio\/test\/render\/TestRenderer.html#renderFailureLabel(label:String,offset:Int):zio.test.render.LogLine.Line", "kind" : "def"}, {"label" : "renderCause", "tail" : "(cause: Cause[Any], offset: Int)(trace: Trace): Message", "member" : "zio.test.render.TestRenderer.renderCause", "link" : "zio\/test\/render\/TestRenderer.html#renderCause(cause:zio.Cause[Any],offset:Int)(implicittrace:zio.Trace):zio.test.render.LogLine.Message", "kind" : "def"}, {"label" : "renderFailureCase", "tail" : "(failureCase: FailureCase, offset: Int, testLabel: Option[String]): Chunk[Line]", "member" : "zio.test.render.TestRenderer.renderFailureCase", "link" : "zio\/test\/render\/TestRenderer.html#renderFailureCase(failureCase:zio.test.FailureCase,offset:Int,testLabel:Option[String]):zio.Chunk[zio.test.render.LogLine.Line]", "kind" : "def"}, {"label" : "renderAssertionResult", "tail" : "(assertionResult: TestTrace[Boolean], offset: Int): Message", "member" : "zio.test.render.TestRenderer.renderAssertionResult", "link" : "zio\/test\/render\/TestRenderer.html#renderAssertionResult(assertionResult:zio.test.TestTrace[Boolean],offset:Int):zio.test.render.LogLine.Message", "kind" : "def"}, {"label" : "renderRuntimeCause", "tail" : "(cause: Cause[E], labels: List[String], depth: Int, includeCause: Boolean)(trace: Trace): ExecutionResult", "member" : "zio.test.render.TestRenderer.renderRuntimeCause", "link" : "zio\/test\/render\/TestRenderer.html#renderRuntimeCause[E](cause:zio.Cause[E],labels:List[String],depth:Int,includeCause:Boolean)(implicittrace:zio.Trace):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "renderAssertFailure", "tail" : "(result: TestResult, labels: List[String], depth: Int, annotations: TestAnnotationMap): ExecutionResult", "member" : "zio.test.render.TestRenderer.renderAssertFailure", "link" : "zio\/test\/render\/TestRenderer.html#renderAssertFailure(result:zio.test.TestResult,labels:List[String],depth:Int,annotations:zio.test.TestAnnotationMap):zio.test.render.ExecutionResult", "kind" : "def"}, {"label" : "testCaseOutput", "tail" : "(labels: List[String], results: Either[TestFailure[Any], TestSuccess], includeCause: Boolean, annotations: TestAnnotationMap)(trace: Trace): (List[Line], List[Line])", "member" : "zio.test.render.TestRenderer.testCaseOutput", "link" : "zio\/test\/render\/TestRenderer.html#testCaseOutput(labels:List[String],results:Either[zio.test.TestFailure[Any],zio.test.TestSuccess],includeCause:Boolean,annotations:zio.test.TestAnnotationMap)(implicittrace:zio.Trace):(List[zio.test.render.LogLine.Line],List[zio.test.render.LogLine.Line])", "kind" : "def"}, {"label" : "render", "tail" : "(reporterEvent: ExecutionEvent, includeCause: Boolean)(trace: Trace): Seq[String]", "member" : "zio.test.render.TestRenderer.render", "link" : "zio\/test\/render\/TestRenderer.html#render(reporterEvent:zio.test.ExecutionEvent,includeCause:Boolean)(implicittrace:zio.Trace):Seq[String]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/render\/TestRenderer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/render\/TestRenderer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/render\/TestRenderer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/render\/TestRenderer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/render\/TestRenderer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/render\/TestRenderer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/render\/TestRenderer.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/render\/TestRenderer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/render\/TestRenderer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/render\/TestRenderer.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/render\/TestRenderer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/render\/TestRenderer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/TestRenderer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/TestRenderer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/render\/TestRenderer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/render\/TestRenderer.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/render\/TestRenderer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/render\/TestRenderer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/render\/TestRenderer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "renderOutput", "tail" : "(results: Seq[ExecutionResult])(trace: Trace): Seq[String]", "member" : "zio.test.render.TestRenderer.renderOutput", "link" : "zio\/test\/render\/TestRenderer.html#renderOutput(results:Seq[zio.test.render.ExecutionResult])(implicittrace:zio.Trace):Seq[String]", "kind" : "abstract def"}, {"label" : "renderSummary", "tail" : "(summary: Summary): String", "member" : "zio.test.render.TestRenderer.renderSummary", "link" : "zio\/test\/render\/TestRenderer.html#renderSummary(summary:zio.test.Summary):String", "kind" : "abstract def"}, {"label" : "renderEvent", "tail" : "(event: ExecutionEvent, includeCause: Boolean)(trace: Trace): Seq[ExecutionResult]", "member" : "zio.test.render.TestRenderer.renderEvent", "link" : "zio\/test\/render\/TestRenderer.html#renderEvent(event:zio.test.ExecutionEvent,includeCause:Boolean)(implicittrace:zio.Trace):Seq[zio.test.render.ExecutionResult]", "kind" : "abstract def"}], "shortDescription" : ""}], "zio.test.diff" : [{"name" : "zio.test.diff.Diff", "object" : "zio\/test\/diff\/Diff$.html", "members_object" : [{"label" : "DiffOps", "tail" : "", "member" : "zio.test.diff.Diff.DiffOps", "link" : "zio\/test\/diff\/Diff$.html#DiffOps[A]extendsAnyRef", "kind" : "implicit final class"}, {"label" : "render", "tail" : "(oldValue: A, newValue: A)(arg0: Diff[A]): String", "member" : "zio.test.diff.Diff.render", "link" : "zio\/test\/diff\/Diff$.html#render[A](oldValue:A,newValue:A)(implicitevidence$1:zio.test.diff.Diff[A]):String", "kind" : "def"}, {"label" : "apply", "tail" : "(diff: Diff[A]): Diff[A]", "member" : "zio.test.diff.Diff.apply", "link" : "zio\/test\/diff\/Diff$.html#apply[A](implicitdiff:zio.test.diff.Diff[A]):zio.test.diff.Diff[A]", "kind" : "def"}, {"label" : "nothingDiff", "tail" : ": Diff[Nothing]", "member" : "zio.test.diff.DiffInstances.nothingDiff", "link" : "zio\/test\/diff\/Diff$.html#nothingDiff:zio.test.diff.Diff[Nothing]", "kind" : "implicit val"}, {"label" : "setDiff", "tail" : "(arg0: Diff[A]): Diff[Set[A]]", "member" : "zio.test.diff.DiffInstances.setDiff", "link" : "zio\/test\/diff\/Diff$.html#setDiff[A](implicitevidence$13:zio.test.diff.Diff[A]):zio.test.diff.Diff[Set[A]]", "kind" : "implicit def"}, {"label" : "mkSeqDiff", "tail" : "(name: String)(f: (F[A]) => Seq[A])(arg0: Diff[A]): Diff[F[A]]", "member" : "zio.test.diff.DiffInstances.mkSeqDiff", "link" : "zio\/test\/diff\/Diff$.html#mkSeqDiff[F[_],A](name:String)(f:F[A]=>Seq[A])(implicitevidence$12:zio.test.diff.Diff[A]):zio.test.diff.Diff[F[A]]", "kind" : "def"}, {"label" : "seqDiff", "tail" : "(arg0: Diff[A]): Diff[Seq[A]]", "member" : "zio.test.diff.DiffInstances.seqDiff", "link" : "zio\/test\/diff\/Diff$.html#seqDiff[A](implicitevidence$11:zio.test.diff.Diff[A]):zio.test.diff.Diff[Seq[A]]", "kind" : "implicit def"}, {"label" : "listBufferDiff", "tail" : "(arg0: Diff[A]): Diff[ListBuffer[A]]", "member" : "zio.test.diff.DiffInstances.listBufferDiff", "link" : "zio\/test\/diff\/Diff$.html#listBufferDiff[A](implicitevidence$10:zio.test.diff.Diff[A]):zio.test.diff.Diff[scala.collection.mutable.ListBuffer[A]]", "kind" : "implicit def"}, {"label" : "arrayBufferDiff", "tail" : "(arg0: Diff[A]): Diff[ArrayBuffer[A]]", "member" : "zio.test.diff.DiffInstances.arrayBufferDiff", "link" : "zio\/test\/diff\/Diff$.html#arrayBufferDiff[A](implicitevidence$9:zio.test.diff.Diff[A]):zio.test.diff.Diff[scala.collection.mutable.ArrayBuffer[A]]", "kind" : "implicit def"}, {"label" : "arrayDiff", "tail" : "(arg0: Diff[A]): Diff[Array[A]]", "member" : "zio.test.diff.DiffInstances.arrayDiff", "link" : "zio\/test\/diff\/Diff$.html#arrayDiff[A](implicitevidence$8:zio.test.diff.Diff[A]):zio.test.diff.Diff[Array[A]]", "kind" : "implicit def"}, {"label" : "nonEmptyChunk", "tail" : "(arg0: Diff[A]): Diff[NonEmptyChunk[A]]", "member" : "zio.test.diff.DiffInstances.nonEmptyChunk", "link" : "zio\/test\/diff\/Diff$.html#nonEmptyChunk[A](implicitevidence$7:zio.test.diff.Diff[A]):zio.test.diff.Diff[zio.NonEmptyChunk[A]]", "kind" : "implicit def"}, {"label" : "chunkDiff", "tail" : "(arg0: Diff[A]): Diff[Chunk[A]]", "member" : "zio.test.diff.DiffInstances.chunkDiff", "link" : "zio\/test\/diff\/Diff$.html#chunkDiff[A](implicitevidence$6:zio.test.diff.Diff[A]):zio.test.diff.Diff[zio.Chunk[A]]", "kind" : "implicit def"}, {"label" : "vectorDiff", "tail" : "(arg0: Diff[A]): Diff[Vector[A]]", "member" : "zio.test.diff.DiffInstances.vectorDiff", "link" : "zio\/test\/diff\/Diff$.html#vectorDiff[A](implicitevidence$5:zio.test.diff.Diff[A]):zio.test.diff.Diff[Vector[A]]", "kind" : "implicit def"}, {"label" : "listDiff", "tail" : "(arg0: Diff[A]): Diff[List[A]]", "member" : "zio.test.diff.DiffInstances.listDiff", "link" : "zio\/test\/diff\/Diff$.html#listDiff[A](implicitevidence$4:zio.test.diff.Diff[A]):zio.test.diff.Diff[List[A]]", "kind" : "implicit def"}, {"label" : "optionDiff", "tail" : "(arg0: Diff[A]): Diff[Option[A]]", "member" : "zio.test.diff.DiffInstances.optionDiff", "link" : "zio\/test\/diff\/Diff$.html#optionDiff[A](implicitevidence$3:zio.test.diff.Diff[A]):zio.test.diff.Diff[Option[A]]", "kind" : "implicit def"}, {"label" : "mapDiff", "tail" : "(arg0: Diff[V]): Diff[Map[K, V]]", "member" : "zio.test.diff.DiffInstances.mapDiff", "link" : "zio\/test\/diff\/Diff$.html#mapDiff[K,V](implicitevidence$2:zio.test.diff.Diff[V]):zio.test.diff.Diff[Map[K,V]]", "kind" : "implicit def"}, {"label" : "stringDiff", "tail" : ": Diff[String]", "member" : "zio.test.diff.DiffInstances.stringDiff", "link" : "zio\/test\/diff\/Diff$.html#stringDiff:zio.test.diff.Diff[String]", "kind" : "implicit val"}, {"label" : "anyDiff", "tail" : "(): Diff[A]", "member" : "zio.test.diff.LowPriDiff.anyDiff", "link" : "zio\/test\/diff\/Diff$.html#anyDiff[A]:zio.test.diff.Diff[A]", "kind" : "def"}, {"label" : "anyValDiff", "tail" : "(): Diff[A]", "member" : "zio.test.diff.LowPriDiff.anyValDiff", "link" : "zio\/test\/diff\/Diff$.html#anyValDiff[A<:AnyVal]:zio.test.diff.Diff[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/diff\/Diff$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/diff\/Diff$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/diff\/Diff$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/diff\/Diff$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/diff\/Diff$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/diff\/Diff$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/diff\/Diff$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/diff\/Diff$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/diff\/Diff$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/diff\/Diff$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/diff\/Diff$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/diff\/Diff$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/diff\/Diff$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/diff\/Diff$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/diff\/Diff$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/diff\/Diff$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/diff\/Diff$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/diff\/Diff$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/diff\/Diff$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/diff\/Diff.html", "kind" : "trait", "members_trait" : [{"label" : "isLowPriority", "tail" : "(): Boolean", "member" : "zio.test.diff.Diff.isLowPriority", "link" : "zio\/test\/diff\/Diff.html#isLowPriority:Boolean", "kind" : "def"}, {"label" : "contramap", "tail" : "(f: (B) => A): Diff[B]", "member" : "zio.test.diff.Diff.contramap", "link" : "zio\/test\/diff\/Diff.html#contramap[B](f:B=>A):zio.test.diff.Diff[B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/diff\/Diff.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/diff\/Diff.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/diff\/Diff.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/diff\/Diff.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/diff\/Diff.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/diff\/Diff.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/diff\/Diff.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/diff\/Diff.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/diff\/Diff.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/diff\/Diff.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/diff\/Diff.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/diff\/Diff.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/diff\/Diff.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/diff\/Diff.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/diff\/Diff.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/diff\/Diff.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/diff\/Diff.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/diff\/Diff.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/diff\/Diff.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "diff", "tail" : "(x: A, y: A): DiffResult", "member" : "zio.test.diff.Diff.diff", "link" : "zio\/test\/diff\/Diff.html#diff(x:A,y:A):zio.test.diff.DiffResult", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.test.diff.DiffInstances", "trait" : "zio\/test\/diff\/DiffInstances.html", "kind" : "trait", "members_trait" : [{"label" : "nothingDiff", "tail" : ": Diff[Nothing]", "member" : "zio.test.diff.DiffInstances.nothingDiff", "link" : "zio\/test\/diff\/DiffInstances.html#nothingDiff:zio.test.diff.Diff[Nothing]", "kind" : "implicit val"}, {"label" : "setDiff", "tail" : "(arg0: Diff[A]): Diff[Set[A]]", "member" : "zio.test.diff.DiffInstances.setDiff", "link" : "zio\/test\/diff\/DiffInstances.html#setDiff[A](implicitevidence$13:zio.test.diff.Diff[A]):zio.test.diff.Diff[Set[A]]", "kind" : "implicit def"}, {"label" : "mkSeqDiff", "tail" : "(name: String)(f: (F[A]) => Seq[A])(arg0: Diff[A]): Diff[F[A]]", "member" : "zio.test.diff.DiffInstances.mkSeqDiff", "link" : "zio\/test\/diff\/DiffInstances.html#mkSeqDiff[F[_],A](name:String)(f:F[A]=>Seq[A])(implicitevidence$12:zio.test.diff.Diff[A]):zio.test.diff.Diff[F[A]]", "kind" : "def"}, {"label" : "seqDiff", "tail" : "(arg0: Diff[A]): Diff[Seq[A]]", "member" : "zio.test.diff.DiffInstances.seqDiff", "link" : "zio\/test\/diff\/DiffInstances.html#seqDiff[A](implicitevidence$11:zio.test.diff.Diff[A]):zio.test.diff.Diff[Seq[A]]", "kind" : "implicit def"}, {"label" : "listBufferDiff", "tail" : "(arg0: Diff[A]): Diff[ListBuffer[A]]", "member" : "zio.test.diff.DiffInstances.listBufferDiff", "link" : "zio\/test\/diff\/DiffInstances.html#listBufferDiff[A](implicitevidence$10:zio.test.diff.Diff[A]):zio.test.diff.Diff[scala.collection.mutable.ListBuffer[A]]", "kind" : "implicit def"}, {"label" : "arrayBufferDiff", "tail" : "(arg0: Diff[A]): Diff[ArrayBuffer[A]]", "member" : "zio.test.diff.DiffInstances.arrayBufferDiff", "link" : "zio\/test\/diff\/DiffInstances.html#arrayBufferDiff[A](implicitevidence$9:zio.test.diff.Diff[A]):zio.test.diff.Diff[scala.collection.mutable.ArrayBuffer[A]]", "kind" : "implicit def"}, {"label" : "arrayDiff", "tail" : "(arg0: Diff[A]): Diff[Array[A]]", "member" : "zio.test.diff.DiffInstances.arrayDiff", "link" : "zio\/test\/diff\/DiffInstances.html#arrayDiff[A](implicitevidence$8:zio.test.diff.Diff[A]):zio.test.diff.Diff[Array[A]]", "kind" : "implicit def"}, {"label" : "nonEmptyChunk", "tail" : "(arg0: Diff[A]): Diff[NonEmptyChunk[A]]", "member" : "zio.test.diff.DiffInstances.nonEmptyChunk", "link" : "zio\/test\/diff\/DiffInstances.html#nonEmptyChunk[A](implicitevidence$7:zio.test.diff.Diff[A]):zio.test.diff.Diff[zio.NonEmptyChunk[A]]", "kind" : "implicit def"}, {"label" : "chunkDiff", "tail" : "(arg0: Diff[A]): Diff[Chunk[A]]", "member" : "zio.test.diff.DiffInstances.chunkDiff", "link" : "zio\/test\/diff\/DiffInstances.html#chunkDiff[A](implicitevidence$6:zio.test.diff.Diff[A]):zio.test.diff.Diff[zio.Chunk[A]]", "kind" : "implicit def"}, {"label" : "vectorDiff", "tail" : "(arg0: Diff[A]): Diff[Vector[A]]", "member" : "zio.test.diff.DiffInstances.vectorDiff", "link" : "zio\/test\/diff\/DiffInstances.html#vectorDiff[A](implicitevidence$5:zio.test.diff.Diff[A]):zio.test.diff.Diff[Vector[A]]", "kind" : "implicit def"}, {"label" : "listDiff", "tail" : "(arg0: Diff[A]): Diff[List[A]]", "member" : "zio.test.diff.DiffInstances.listDiff", "link" : "zio\/test\/diff\/DiffInstances.html#listDiff[A](implicitevidence$4:zio.test.diff.Diff[A]):zio.test.diff.Diff[List[A]]", "kind" : "implicit def"}, {"label" : "optionDiff", "tail" : "(arg0: Diff[A]): Diff[Option[A]]", "member" : "zio.test.diff.DiffInstances.optionDiff", "link" : "zio\/test\/diff\/DiffInstances.html#optionDiff[A](implicitevidence$3:zio.test.diff.Diff[A]):zio.test.diff.Diff[Option[A]]", "kind" : "implicit def"}, {"label" : "mapDiff", "tail" : "(arg0: Diff[V]): Diff[Map[K, V]]", "member" : "zio.test.diff.DiffInstances.mapDiff", "link" : "zio\/test\/diff\/DiffInstances.html#mapDiff[K,V](implicitevidence$2:zio.test.diff.Diff[V]):zio.test.diff.Diff[Map[K,V]]", "kind" : "implicit def"}, {"label" : "stringDiff", "tail" : ": Diff[String]", "member" : "zio.test.diff.DiffInstances.stringDiff", "link" : "zio\/test\/diff\/DiffInstances.html#stringDiff:zio.test.diff.Diff[String]", "kind" : "implicit val"}, {"label" : "anyDiff", "tail" : "(): Diff[A]", "member" : "zio.test.diff.LowPriDiff.anyDiff", "link" : "zio\/test\/diff\/DiffInstances.html#anyDiff[A]:zio.test.diff.Diff[A]", "kind" : "def"}, {"label" : "anyValDiff", "tail" : "(): Diff[A]", "member" : "zio.test.diff.LowPriDiff.anyValDiff", "link" : "zio\/test\/diff\/DiffInstances.html#anyValDiff[A<:AnyVal]:zio.test.diff.Diff[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/diff\/DiffInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/diff\/DiffInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/diff\/DiffInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/diff\/DiffInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/diff\/DiffInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/diff\/DiffInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/diff\/DiffInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/diff\/DiffInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/diff\/DiffInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/diff\/DiffInstances.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/diff\/DiffInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/diff\/DiffInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/diff\/DiffInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/diff\/DiffInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/diff\/DiffInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/diff\/DiffInstances.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/diff\/DiffInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/diff\/DiffInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/diff\/DiffInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.diff.DiffResult", "object" : "zio\/test\/diff\/DiffResult$.html", "members_object" : [{"label" : "indent", "tail" : "(string: String, amount: Int): String", "member" : "zio.test.diff.DiffResult.indent", "link" : "zio\/test\/diff\/DiffResult$.html#indent(string:String,amount:Int):String", "kind" : "def"}, {"label" : "Identical", "tail" : "", "member" : "zio.test.diff.DiffResult.Identical", "link" : "zio\/test\/diff\/DiffResult$.html#IdenticalextendsDiffResultwithProductwithSerializable", "kind" : "case class"}, {"label" : "Added", "tail" : "", "member" : "zio.test.diff.DiffResult.Added", "link" : "zio\/test\/diff\/DiffResult$.html#AddedextendsDiffResultwithProductwithSerializable", "kind" : "case class"}, {"label" : "Removed", "tail" : "", "member" : "zio.test.diff.DiffResult.Removed", "link" : "zio\/test\/diff\/DiffResult$.html#RemovedextendsDiffResultwithProductwithSerializable", "kind" : "case class"}, {"label" : "Different", "tail" : "", "member" : "zio.test.diff.DiffResult.Different", "link" : "zio\/test\/diff\/DiffResult$.html#DifferentextendsDiffResultwithProductwithSerializable", "kind" : "case class"}, {"label" : "Nested", "tail" : "", "member" : "zio.test.diff.DiffResult.Nested", "link" : "zio\/test\/diff\/DiffResult$.html#NestedextendsDiffResultwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/diff\/DiffResult$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/diff\/DiffResult$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/diff\/DiffResult$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/diff\/DiffResult$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/diff\/DiffResult$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/diff\/DiffResult$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/diff\/DiffResult$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/diff\/DiffResult$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/diff\/DiffResult$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/diff\/DiffResult$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/diff\/DiffResult$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/diff\/DiffResult$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/diff\/DiffResult$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/diff\/DiffResult$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/diff\/DiffResult$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/diff\/DiffResult$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/diff\/DiffResult$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/diff\/DiffResult$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/diff\/DiffResult$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/diff\/DiffResult.html", "kind" : "trait", "members_trait" : [{"label" : "render", "tail" : "(): String", "member" : "zio.test.diff.DiffResult.render", "link" : "zio\/test\/diff\/DiffResult.html#render:String", "kind" : "def"}, {"label" : "hasDiff", "tail" : "(): Boolean", "member" : "zio.test.diff.DiffResult.hasDiff", "link" : "zio\/test\/diff\/DiffResult.html#hasDiff:Boolean", "kind" : "def"}, {"label" : "noDiff", "tail" : "(): Boolean", "member" : "zio.test.diff.DiffResult.noDiff", "link" : "zio\/test\/diff\/DiffResult.html#noDiff:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/diff\/DiffResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/diff\/DiffResult.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/diff\/DiffResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/diff\/DiffResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/diff\/DiffResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/diff\/DiffResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/diff\/DiffResult.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/diff\/DiffResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/diff\/DiffResult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/diff\/DiffResult.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/diff\/DiffResult.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/diff\/DiffResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/diff\/DiffResult.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/diff\/DiffResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/diff\/DiffResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/diff\/DiffResult.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/diff\/DiffResult.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/diff\/DiffResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/diff\/DiffResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.diff.LowPriDiff", "trait" : "zio\/test\/diff\/LowPriDiff.html", "kind" : "trait", "members_trait" : [{"label" : "anyDiff", "tail" : "(): Diff[A]", "member" : "zio.test.diff.LowPriDiff.anyDiff", "link" : "zio\/test\/diff\/LowPriDiff.html#anyDiff[A]:zio.test.diff.Diff[A]", "kind" : "def"}, {"label" : "anyValDiff", "tail" : "(): Diff[A]", "member" : "zio.test.diff.LowPriDiff.anyValDiff", "link" : "zio\/test\/diff\/LowPriDiff.html#anyValDiff[A<:AnyVal]:zio.test.diff.Diff[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/diff\/LowPriDiff.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/diff\/LowPriDiff.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/diff\/LowPriDiff.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/diff\/LowPriDiff.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/diff\/LowPriDiff.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/diff\/LowPriDiff.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/diff\/LowPriDiff.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/diff\/LowPriDiff.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/diff\/LowPriDiff.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/diff\/LowPriDiff.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/diff\/LowPriDiff.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/diff\/LowPriDiff.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/diff\/LowPriDiff.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/diff\/LowPriDiff.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/diff\/LowPriDiff.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/diff\/LowPriDiff.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/diff\/LowPriDiff.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/diff\/LowPriDiff.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/diff\/LowPriDiff.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}], "zio.test.refined" : [{"name" : "zio.test.refined.all", "shortDescription" : "", "object" : "zio\/test\/refined\/all$.html", "members_object" : [{"label" : "FiniteStringPartiallyApplied", "tail" : "", "member" : "zio.test.refined.types.StringInstance.FiniteStringPartiallyApplied", "link" : "zio\/test\/refined\/types\/StringInstance.html#FiniteStringPartiallyApplied[N<:Int,P]extendsAnyRef", "kind" : "class"}, {"label" : "millsDeriveGen", "tail" : "(): DeriveGen[Millis]", "member" : "zio.test.refined.types.TimeInstances.millsDeriveGen", "link" : "zio\/test\/refined\/all$.html#millsDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Millis]", "kind" : "implicit def"}, {"label" : "secondDeriveGen", "tail" : "(): DeriveGen[Second]", "member" : "zio.test.refined.types.TimeInstances.secondDeriveGen", "link" : "zio\/test\/refined\/all$.html#secondDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Second]", "kind" : "implicit def"}, {"label" : "minuteDeriveGen", "tail" : "(): DeriveGen[Minute]", "member" : "zio.test.refined.types.TimeInstances.minuteDeriveGen", "link" : "zio\/test\/refined\/all$.html#minuteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Minute]", "kind" : "implicit def"}, {"label" : "hourDeriveGen", "tail" : "(): DeriveGen[Hour]", "member" : "zio.test.refined.types.TimeInstances.hourDeriveGen", "link" : "zio\/test\/refined\/all$.html#hourDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Hour]", "kind" : "implicit def"}, {"label" : "dayDeriveGen", "tail" : "(): DeriveGen[Day]", "member" : "zio.test.refined.types.TimeInstances.dayDeriveGen", "link" : "zio\/test\/refined\/all$.html#dayDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Day]", "kind" : "implicit def"}, {"label" : "monthDeriveGen", "tail" : "(): DeriveGen[Month]", "member" : "zio.test.refined.types.TimeInstances.monthDeriveGen", "link" : "zio\/test\/refined\/all$.html#monthDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Month]", "kind" : "implicit def"}, {"label" : "millsGen", "tail" : ": Gen[Any, Millis]", "member" : "zio.test.refined.types.TimeInstances.millsGen", "link" : "zio\/test\/refined\/all$.html#millsGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Millis]", "kind" : "val"}, {"label" : "secondGen", "tail" : ": Gen[Any, Second]", "member" : "zio.test.refined.types.TimeInstances.secondGen", "link" : "zio\/test\/refined\/all$.html#secondGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Second]", "kind" : "val"}, {"label" : "minuteGen", "tail" : ": Gen[Any, Minute]", "member" : "zio.test.refined.types.TimeInstances.minuteGen", "link" : "zio\/test\/refined\/all$.html#minuteGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Minute]", "kind" : "val"}, {"label" : "hourGen", "tail" : ": Gen[Any, Hour]", "member" : "zio.test.refined.types.TimeInstances.hourGen", "link" : "zio\/test\/refined\/all$.html#hourGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Hour]", "kind" : "val"}, {"label" : "dayGen", "tail" : ": Gen[Any, Day]", "member" : "zio.test.refined.types.TimeInstances.dayGen", "link" : "zio\/test\/refined\/all$.html#dayGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Day]", "kind" : "val"}, {"label" : "monthGen", "tail" : ": Gen[Any, Month]", "member" : "zio.test.refined.types.TimeInstances.monthGen", "link" : "zio\/test\/refined\/all$.html#monthGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Month]", "kind" : "val"}, {"label" : "hexStringDeriveGen", "tail" : "(): DeriveGen[HexString]", "member" : "zio.test.refined.types.StringInstance.hexStringDeriveGen", "link" : "zio\/test\/refined\/all$.html#hexStringDeriveGen[R]:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.HexString]", "kind" : "implicit def"}, {"label" : "trimmedStringDeriveGen", "tail" : "(charGen: DeriveGen[Char]): DeriveGen[TrimmedString]", "member" : "zio.test.refined.types.StringInstance.trimmedStringDeriveGen", "link" : "zio\/test\/refined\/all$.html#trimmedStringDeriveGen[R](implicitcharGen:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.TrimmedString]", "kind" : "implicit def"}, {"label" : "nonEmptyFiniteStringDeriveGen", "tail" : "(ws: Aux[N], charGen: DeriveGen[Char]): DeriveGen[NonEmptyFiniteString[N]]", "member" : "zio.test.refined.types.StringInstance.nonEmptyFiniteStringDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonEmptyFiniteStringDeriveGen[N<:Int](implicitws:shapeless.Witness.Aux[N],implicitcharGen:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.NonEmptyFiniteString[N]]", "kind" : "implicit def"}, {"label" : "nonEmptyStringDeriveGen", "tail" : "(charGen: DeriveGen[Char]): DeriveGen[NonEmptyString]", "member" : "zio.test.refined.types.StringInstance.nonEmptyStringDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonEmptyStringDeriveGen[R](implicitcharGen:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.NonEmptyString]", "kind" : "implicit def"}, {"label" : "finiteStringDeriveGen", "tail" : "(ws: Aux[N], charGen: DeriveGen[Char]): DeriveGen[FiniteString[N]]", "member" : "zio.test.refined.types.StringInstance.finiteStringDeriveGen", "link" : "zio\/test\/refined\/all$.html#finiteStringDeriveGen[N<:Int](implicitws:shapeless.Witness.Aux[N],implicitcharGen:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.FiniteString[N]]", "kind" : "implicit def"}, {"label" : "hexStringGen", "tail" : "(): Gen[Any, HexString]", "member" : "zio.test.refined.types.StringInstance.hexStringGen", "link" : "zio\/test\/refined\/all$.html#hexStringGen:zio.test.Gen[Any,eu.timepit.refined.types.string.HexString]", "kind" : "def"}, {"label" : "trimmedStringGen", "tail" : "(charGen: Gen[R, Char]): Gen[R, TrimmedString]", "member" : "zio.test.refined.types.StringInstance.trimmedStringGen", "link" : "zio\/test\/refined\/all$.html#trimmedStringGen[R](charGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.types.string.TrimmedString]", "kind" : "def"}, {"label" : "nonEmptyFiniteStringGen", "tail" : "(): FiniteStringPartiallyApplied[N, Size[Closed[shapeless.Nat._1, N]]]", "member" : "zio.test.refined.types.StringInstance.nonEmptyFiniteStringGen", "link" : "zio\/test\/refined\/all$.html#nonEmptyFiniteStringGen[N<:Int]:StringInstance.this.FiniteStringPartiallyApplied[N,eu.timepit.refined.collection.Size[eu.timepit.refined.numeric.Interval.Closed[shapeless.Nat._1,N]]]", "kind" : "def"}, {"label" : "nonEmptyStringGen", "tail" : "(charGen: Gen[R, Char]): Gen[R, NonEmptyString]", "member" : "zio.test.refined.types.StringInstance.nonEmptyStringGen", "link" : "zio\/test\/refined\/all$.html#nonEmptyStringGen[R](charGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.types.string.NonEmptyString]", "kind" : "def"}, {"label" : "finiteStringGen", "tail" : "(): FiniteStringPartiallyApplied[N, MaxSize[N]]", "member" : "zio.test.refined.types.StringInstance.finiteStringGen", "link" : "zio\/test\/refined\/all$.html#finiteStringGen[N<:Int]:StringInstance.this.FiniteStringPartiallyApplied[N,eu.timepit.refined.collection.MaxSize[N]]", "kind" : "def"}, {"label" : "nonNanDoubleDeriveGen", "tail" : ": DeriveGen[NonNaNDouble]", "member" : "zio.test.refined.types.NumericInstances.nonNanDoubleDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonNanDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNaNDouble]", "kind" : "implicit val"}, {"label" : "nonNanFloatDeriveGen", "tail" : ": DeriveGen[NonNaNFloat]", "member" : "zio.test.refined.types.NumericInstances.nonNanFloatDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonNanFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNaNFloat]", "kind" : "implicit val"}, {"label" : "nonPosBigDecimalDeriveGen", "tail" : ": DeriveGen[NonPosBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.nonPosBigDecimalDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonPosBigDecimalDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosBigDecimal]", "kind" : "implicit val"}, {"label" : "negBigDecimalDeriveGen", "tail" : ": DeriveGen[NegBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.negBigDecimalDeriveGen", "link" : "zio\/test\/refined\/all$.html#negBigDecimalDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegBigDecimal]", "kind" : "implicit val"}, {"label" : "nonNegBigDecimalDeriveGen", "tail" : ": DeriveGen[NonNegBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.nonNegBigDecimalDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonNegBigDecimalDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegBigDecimal]", "kind" : "implicit val"}, {"label" : "posBigDecimalDeriveGen", "tail" : ": DeriveGen[PosBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.posBigDecimalDeriveGen", "link" : "zio\/test\/refined\/all$.html#posBigDecimalDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosBigDecimal]", "kind" : "implicit val"}, {"label" : "nonPosDoubleDeriveGen", "tail" : ": DeriveGen[NonPosDouble]", "member" : "zio.test.refined.types.NumericInstances.nonPosDoubleDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonPosDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosDouble]", "kind" : "implicit val"}, {"label" : "negDoubleDeriveGen", "tail" : ": DeriveGen[NegDouble]", "member" : "zio.test.refined.types.NumericInstances.negDoubleDeriveGen", "link" : "zio\/test\/refined\/all$.html#negDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegDouble]", "kind" : "implicit val"}, {"label" : "nonNegDoubleDeriveGen", "tail" : ": DeriveGen[NonNegDouble]", "member" : "zio.test.refined.types.NumericInstances.nonNegDoubleDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonNegDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegDouble]", "kind" : "implicit val"}, {"label" : "posDoubleDeriveGen", "tail" : ": DeriveGen[PosDouble]", "member" : "zio.test.refined.types.NumericInstances.posDoubleDeriveGen", "link" : "zio\/test\/refined\/all$.html#posDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosDouble]", "kind" : "implicit val"}, {"label" : "nonPosFloatDeriveGen", "tail" : ": DeriveGen[NonPosFloat]", "member" : "zio.test.refined.types.NumericInstances.nonPosFloatDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonPosFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosFloat]", "kind" : "implicit val"}, {"label" : "negFloatDeriveGen", "tail" : ": DeriveGen[NegFloat]", "member" : "zio.test.refined.types.NumericInstances.negFloatDeriveGen", "link" : "zio\/test\/refined\/all$.html#negFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegFloat]", "kind" : "implicit val"}, {"label" : "nonNegFloatDeriveGen", "tail" : ": DeriveGen[NonNegFloat]", "member" : "zio.test.refined.types.NumericInstances.nonNegFloatDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonNegFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegFloat]", "kind" : "implicit val"}, {"label" : "posFloatDeriveGen", "tail" : ": DeriveGen[PosFloat]", "member" : "zio.test.refined.types.NumericInstances.posFloatDeriveGen", "link" : "zio\/test\/refined\/all$.html#posFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosFloat]", "kind" : "implicit val"}, {"label" : "nonPosBigIntDeriveGen", "tail" : ": DeriveGen[NonPosBigInt]", "member" : "zio.test.refined.types.NumericInstances.nonPosBigIntDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonPosBigIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosBigInt]", "kind" : "implicit val"}, {"label" : "negBigIntDeriveGen", "tail" : ": DeriveGen[NegBigInt]", "member" : "zio.test.refined.types.NumericInstances.negBigIntDeriveGen", "link" : "zio\/test\/refined\/all$.html#negBigIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegBigInt]", "kind" : "implicit val"}, {"label" : "nonNegBigIntDeriveGen", "tail" : ": DeriveGen[NonNegBigInt]", "member" : "zio.test.refined.types.NumericInstances.nonNegBigIntDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonNegBigIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegBigInt]", "kind" : "implicit val"}, {"label" : "posBigIntDeriveGen", "tail" : ": DeriveGen[PosBigInt]", "member" : "zio.test.refined.types.NumericInstances.posBigIntDeriveGen", "link" : "zio\/test\/refined\/all$.html#posBigIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosBigInt]", "kind" : "implicit val"}, {"label" : "nonPosLongDeriveGen", "tail" : ": DeriveGen[NonPosLong]", "member" : "zio.test.refined.types.NumericInstances.nonPosLongDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonPosLongDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosLong]", "kind" : "implicit val"}, {"label" : "negLongDeriveGen", "tail" : ": DeriveGen[NegLong]", "member" : "zio.test.refined.types.NumericInstances.negLongDeriveGen", "link" : "zio\/test\/refined\/all$.html#negLongDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegLong]", "kind" : "implicit val"}, {"label" : "nonNegLongDeriveGen", "tail" : ": DeriveGen[NonNegLong]", "member" : "zio.test.refined.types.NumericInstances.nonNegLongDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonNegLongDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegLong]", "kind" : "implicit val"}, {"label" : "posLongDeriveGen", "tail" : ": DeriveGen[PosLong]", "member" : "zio.test.refined.types.NumericInstances.posLongDeriveGen", "link" : "zio\/test\/refined\/all$.html#posLongDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosLong]", "kind" : "implicit val"}, {"label" : "nonPosIntDeriveGen", "tail" : ": DeriveGen[NonPosInt]", "member" : "zio.test.refined.types.NumericInstances.nonPosIntDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonPosIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosInt]", "kind" : "implicit val"}, {"label" : "negIntDeriveGen", "tail" : ": DeriveGen[NegInt]", "member" : "zio.test.refined.types.NumericInstances.negIntDeriveGen", "link" : "zio\/test\/refined\/all$.html#negIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegInt]", "kind" : "implicit val"}, {"label" : "nonNegIntDeriveGen", "tail" : ": DeriveGen[NonNegInt]", "member" : "zio.test.refined.types.NumericInstances.nonNegIntDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonNegIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegInt]", "kind" : "implicit val"}, {"label" : "posIntDeriveGen", "tail" : ": DeriveGen[PosInt]", "member" : "zio.test.refined.types.NumericInstances.posIntDeriveGen", "link" : "zio\/test\/refined\/all$.html#posIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosInt]", "kind" : "implicit val"}, {"label" : "nonPosShortDeriveGen", "tail" : ": DeriveGen[NonPosShort]", "member" : "zio.test.refined.types.NumericInstances.nonPosShortDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonPosShortDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosShort]", "kind" : "implicit val"}, {"label" : "negShortDeriveGen", "tail" : ": DeriveGen[NegShort]", "member" : "zio.test.refined.types.NumericInstances.negShortDeriveGen", "link" : "zio\/test\/refined\/all$.html#negShortDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegShort]", "kind" : "implicit val"}, {"label" : "nonNegShortDeriveGen", "tail" : ": DeriveGen[NonNegShort]", "member" : "zio.test.refined.types.NumericInstances.nonNegShortDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonNegShortDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegShort]", "kind" : "implicit val"}, {"label" : "posShortDeriveGen", "tail" : ": DeriveGen[PosShort]", "member" : "zio.test.refined.types.NumericInstances.posShortDeriveGen", "link" : "zio\/test\/refined\/all$.html#posShortDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosShort]", "kind" : "implicit val"}, {"label" : "nonPosByteDeriveGen", "tail" : ": DeriveGen[NonPosByte]", "member" : "zio.test.refined.types.NumericInstances.nonPosByteDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonPosByteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosByte]", "kind" : "implicit val"}, {"label" : "negByteDeriveGen", "tail" : ": DeriveGen[NegByte]", "member" : "zio.test.refined.types.NumericInstances.negByteDeriveGen", "link" : "zio\/test\/refined\/all$.html#negByteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegByte]", "kind" : "implicit val"}, {"label" : "nonNegByteDeriveGen", "tail" : ": DeriveGen[NonNegByte]", "member" : "zio.test.refined.types.NumericInstances.nonNegByteDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonNegByteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegByte]", "kind" : "implicit val"}, {"label" : "posByteDeriveGen", "tail" : ": DeriveGen[PosByte]", "member" : "zio.test.refined.types.NumericInstances.posByteDeriveGen", "link" : "zio\/test\/refined\/all$.html#posByteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosByte]", "kind" : "implicit val"}, {"label" : "nonNanDoubleGen", "tail" : ": Gen[Any, NonNaNDouble]", "member" : "zio.test.refined.types.NumericInstances.nonNanDoubleGen", "link" : "zio\/test\/refined\/all$.html#nonNanDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNaNDouble]", "kind" : "val"}, {"label" : "nonNanFloatGen", "tail" : ": Gen[Any, NonNaNFloat]", "member" : "zio.test.refined.types.NumericInstances.nonNanFloatGen", "link" : "zio\/test\/refined\/all$.html#nonNanFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNaNFloat]", "kind" : "val"}, {"label" : "nonPosBigDecimalGen", "tail" : ": Gen[Any, NonPosBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.nonPosBigDecimalGen", "link" : "zio\/test\/refined\/all$.html#nonPosBigDecimalGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosBigDecimal]", "kind" : "val"}, {"label" : "negBigDecimalGen", "tail" : ": Gen[Any, NegBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.negBigDecimalGen", "link" : "zio\/test\/refined\/all$.html#negBigDecimalGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegBigDecimal]", "kind" : "val"}, {"label" : "nonNegBigDecimalGen", "tail" : ": Gen[Any, NonNegBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.nonNegBigDecimalGen", "link" : "zio\/test\/refined\/all$.html#nonNegBigDecimalGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegBigDecimal]", "kind" : "val"}, {"label" : "posBigDecimalGen", "tail" : ": Gen[Any, PosBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.posBigDecimalGen", "link" : "zio\/test\/refined\/all$.html#posBigDecimalGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosBigDecimal]", "kind" : "val"}, {"label" : "nonPosDoubleGen", "tail" : ": Gen[Any, NonPosDouble]", "member" : "zio.test.refined.types.NumericInstances.nonPosDoubleGen", "link" : "zio\/test\/refined\/all$.html#nonPosDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosDouble]", "kind" : "val"}, {"label" : "negDoubleGen", "tail" : ": Gen[Any, NegDouble]", "member" : "zio.test.refined.types.NumericInstances.negDoubleGen", "link" : "zio\/test\/refined\/all$.html#negDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegDouble]", "kind" : "val"}, {"label" : "nonNegDoubleGen", "tail" : ": Gen[Any, NonNegDouble]", "member" : "zio.test.refined.types.NumericInstances.nonNegDoubleGen", "link" : "zio\/test\/refined\/all$.html#nonNegDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegDouble]", "kind" : "val"}, {"label" : "posDoubleGen", "tail" : ": Gen[Any, PosDouble]", "member" : "zio.test.refined.types.NumericInstances.posDoubleGen", "link" : "zio\/test\/refined\/all$.html#posDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosDouble]", "kind" : "val"}, {"label" : "nonPosFloatGen", "tail" : ": Gen[Any, NonPosFloat]", "member" : "zio.test.refined.types.NumericInstances.nonPosFloatGen", "link" : "zio\/test\/refined\/all$.html#nonPosFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosFloat]", "kind" : "val"}, {"label" : "negFloatGen", "tail" : ": Gen[Any, NegFloat]", "member" : "zio.test.refined.types.NumericInstances.negFloatGen", "link" : "zio\/test\/refined\/all$.html#negFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegFloat]", "kind" : "val"}, {"label" : "nonNegFloatGen", "tail" : ": Gen[Any, NonNegFloat]", "member" : "zio.test.refined.types.NumericInstances.nonNegFloatGen", "link" : "zio\/test\/refined\/all$.html#nonNegFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegFloat]", "kind" : "val"}, {"label" : "posFloatGen", "tail" : ": Gen[Any, PosFloat]", "member" : "zio.test.refined.types.NumericInstances.posFloatGen", "link" : "zio\/test\/refined\/all$.html#posFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosFloat]", "kind" : "val"}, {"label" : "nonPosBigIntGen", "tail" : ": Gen[Any, NonPosBigInt]", "member" : "zio.test.refined.types.NumericInstances.nonPosBigIntGen", "link" : "zio\/test\/refined\/all$.html#nonPosBigIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosBigInt]", "kind" : "val"}, {"label" : "negBigIntGen", "tail" : ": Gen[Any, NegBigInt]", "member" : "zio.test.refined.types.NumericInstances.negBigIntGen", "link" : "zio\/test\/refined\/all$.html#negBigIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegBigInt]", "kind" : "val"}, {"label" : "nonNegBigIntGen", "tail" : ": Gen[Any, NonNegBigInt]", "member" : "zio.test.refined.types.NumericInstances.nonNegBigIntGen", "link" : "zio\/test\/refined\/all$.html#nonNegBigIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegBigInt]", "kind" : "val"}, {"label" : "posBigIntGen", "tail" : ": Gen[Any, PosBigInt]", "member" : "zio.test.refined.types.NumericInstances.posBigIntGen", "link" : "zio\/test\/refined\/all$.html#posBigIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosBigInt]", "kind" : "val"}, {"label" : "nonPosLongGen", "tail" : ": Gen[Any, NonPosLong]", "member" : "zio.test.refined.types.NumericInstances.nonPosLongGen", "link" : "zio\/test\/refined\/all$.html#nonPosLongGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosLong]", "kind" : "val"}, {"label" : "negLongGen", "tail" : ": Gen[Any, NegLong]", "member" : "zio.test.refined.types.NumericInstances.negLongGen", "link" : "zio\/test\/refined\/all$.html#negLongGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegLong]", "kind" : "val"}, {"label" : "nonNegLongGen", "tail" : ": Gen[Any, NonNegLong]", "member" : "zio.test.refined.types.NumericInstances.nonNegLongGen", "link" : "zio\/test\/refined\/all$.html#nonNegLongGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegLong]", "kind" : "val"}, {"label" : "posLongGen", "tail" : ": Gen[Any, PosLong]", "member" : "zio.test.refined.types.NumericInstances.posLongGen", "link" : "zio\/test\/refined\/all$.html#posLongGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosLong]", "kind" : "val"}, {"label" : "nonPosIntGen", "tail" : ": Gen[Any, NonPosInt]", "member" : "zio.test.refined.types.NumericInstances.nonPosIntGen", "link" : "zio\/test\/refined\/all$.html#nonPosIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosInt]", "kind" : "val"}, {"label" : "negIntGen", "tail" : ": Gen[Any, NegInt]", "member" : "zio.test.refined.types.NumericInstances.negIntGen", "link" : "zio\/test\/refined\/all$.html#negIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegInt]", "kind" : "val"}, {"label" : "nonNegIntGen", "tail" : ": Gen[Any, NonNegInt]", "member" : "zio.test.refined.types.NumericInstances.nonNegIntGen", "link" : "zio\/test\/refined\/all$.html#nonNegIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegInt]", "kind" : "val"}, {"label" : "posIntGen", "tail" : ": Gen[Any, PosInt]", "member" : "zio.test.refined.types.NumericInstances.posIntGen", "link" : "zio\/test\/refined\/all$.html#posIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosInt]", "kind" : "val"}, {"label" : "nonPosShortGen", "tail" : ": Gen[Any, NonPosShort]", "member" : "zio.test.refined.types.NumericInstances.nonPosShortGen", "link" : "zio\/test\/refined\/all$.html#nonPosShortGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosShort]", "kind" : "val"}, {"label" : "negShortGen", "tail" : ": Gen[Any, NegShort]", "member" : "zio.test.refined.types.NumericInstances.negShortGen", "link" : "zio\/test\/refined\/all$.html#negShortGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegShort]", "kind" : "val"}, {"label" : "nonNegShortGen", "tail" : ": Gen[Any, NonNegShort]", "member" : "zio.test.refined.types.NumericInstances.nonNegShortGen", "link" : "zio\/test\/refined\/all$.html#nonNegShortGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegShort]", "kind" : "val"}, {"label" : "posShortGen", "tail" : ": Gen[Any, PosShort]", "member" : "zio.test.refined.types.NumericInstances.posShortGen", "link" : "zio\/test\/refined\/all$.html#posShortGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosShort]", "kind" : "val"}, {"label" : "nonPosByteGen", "tail" : ": Gen[Any, NonPosByte]", "member" : "zio.test.refined.types.NumericInstances.nonPosByteGen", "link" : "zio\/test\/refined\/all$.html#nonPosByteGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosByte]", "kind" : "val"}, {"label" : "negByteGen", "tail" : ": Gen[Any, NegByte]", "member" : "zio.test.refined.types.NumericInstances.negByteGen", "link" : "zio\/test\/refined\/all$.html#negByteGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegByte]", "kind" : "val"}, {"label" : "nonNegByteGen", "tail" : ": Gen[Any, NonNegByte]", "member" : "zio.test.refined.types.NumericInstances.nonNegByteGen", "link" : "zio\/test\/refined\/all$.html#nonNegByteGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegByte]", "kind" : "val"}, {"label" : "posByteGen", "tail" : ": Gen[Any, PosByte]", "member" : "zio.test.refined.types.NumericInstances.posByteGen", "link" : "zio\/test\/refined\/all$.html#posByteGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosByte]", "kind" : "val"}, {"label" : "privateNetworkDeriveGen", "tail" : ": DeriveGen[PrivateNetwork]", "member" : "zio.test.refined.types.NetInstances.privateNetworkDeriveGen", "link" : "zio\/test\/refined\/all$.html#privateNetworkDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.PrivateNetwork]", "kind" : "implicit val"}, {"label" : "rfc2544BenchmarkDeriveGen", "tail" : ": DeriveGen[Rfc2544Benchmark]", "member" : "zio.test.refined.types.NetInstances.rfc2544BenchmarkDeriveGen", "link" : "zio\/test\/refined\/all$.html#rfc2544BenchmarkDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc2544Benchmark]", "kind" : "implicit val"}, {"label" : "rfc3927LocalLinkDeriveGen", "tail" : ": DeriveGen[Rfc3927LocalLink]", "member" : "zio.test.refined.types.NetInstances.rfc3927LocalLinkDeriveGen", "link" : "zio\/test\/refined\/all$.html#rfc3927LocalLinkDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc3927LocalLink]", "kind" : "implicit val"}, {"label" : "rfc5737TestnetDeriveGen", "tail" : ": DeriveGen[Rfc5737Testnet]", "member" : "zio.test.refined.types.NetInstances.rfc5737TestnetDeriveGen", "link" : "zio\/test\/refined\/all$.html#rfc5737TestnetDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc5737Testnet]", "kind" : "implicit val"}, {"label" : "rfc5737Testnet3DeriveGen", "tail" : ": DeriveGen[Rfc5737Testnet3]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet3DeriveGen", "link" : "zio\/test\/refined\/all$.html#rfc5737Testnet3DeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc5737Testnet3]", "kind" : "implicit val"}, {"label" : "rfc5737Testnet2DeriveGen", "tail" : ": DeriveGen[Rfc5737Testnet2]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet2DeriveGen", "link" : "zio\/test\/refined\/all$.html#rfc5737Testnet2DeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc5737Testnet2]", "kind" : "implicit val"}, {"label" : "rfc5737Testnet1DeriveGen", "tail" : ": DeriveGen[Rfc5737Testnet1]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet1DeriveGen", "link" : "zio\/test\/refined\/all$.html#rfc5737Testnet1DeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc5737Testnet1]", "kind" : "implicit val"}, {"label" : "rfc1918PrivateDeriveGen", "tail" : ": DeriveGen[Rfc1918Private]", "member" : "zio.test.refined.types.NetInstances.rfc1918PrivateDeriveGen", "link" : "zio\/test\/refined\/all$.html#rfc1918PrivateDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc1918Private]", "kind" : "implicit val"}, {"label" : "rfc1918ClassCPrivateDeriveGen", "tail" : ": DeriveGen[Rfc1918ClassCPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassCPrivateDeriveGen", "link" : "zio\/test\/refined\/all$.html#rfc1918ClassCPrivateDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc1918ClassCPrivate]", "kind" : "implicit val"}, {"label" : "rfc1918ClassBPrivateDeriveGen", "tail" : ": DeriveGen[Rfc1918ClassBPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassBPrivateDeriveGen", "link" : "zio\/test\/refined\/all$.html#rfc1918ClassBPrivateDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc1918ClassBPrivate]", "kind" : "implicit val"}, {"label" : "rfc1918ClassAPrivateDeriveGen", "tail" : ": DeriveGen[Rfc1918ClassAPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassAPrivateDeriveGen", "link" : "zio\/test\/refined\/all$.html#rfc1918ClassAPrivateDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc1918ClassAPrivate]", "kind" : "implicit val"}, {"label" : "nonSystemPortNumberDeriveGen", "tail" : ": DeriveGen[NonSystemPortNumber]", "member" : "zio.test.refined.types.NetInstances.nonSystemPortNumberDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonSystemPortNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.NonSystemPortNumber]", "kind" : "implicit val"}, {"label" : "dynamicPortNumberDeriveGen", "tail" : ": DeriveGen[DynamicPortNumber]", "member" : "zio.test.refined.types.NetInstances.dynamicPortNumberDeriveGen", "link" : "zio\/test\/refined\/all$.html#dynamicPortNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.DynamicPortNumber]", "kind" : "implicit val"}, {"label" : "userPortNumberDeriveGen", "tail" : ": DeriveGen[UserPortNumber]", "member" : "zio.test.refined.types.NetInstances.userPortNumberDeriveGen", "link" : "zio\/test\/refined\/all$.html#userPortNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.UserPortNumber]", "kind" : "implicit val"}, {"label" : "systemPortNumberDeriveGen", "tail" : ": DeriveGen[SystemPortNumber]", "member" : "zio.test.refined.types.NetInstances.systemPortNumberDeriveGen", "link" : "zio\/test\/refined\/all$.html#systemPortNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.SystemPortNumber]", "kind" : "implicit val"}, {"label" : "portNumberDeriveGen", "tail" : ": DeriveGen[PortNumber]", "member" : "zio.test.refined.types.NetInstances.portNumberDeriveGen", "link" : "zio\/test\/refined\/all$.html#portNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.PortNumber]", "kind" : "implicit val"}, {"label" : "privateNetworkGen", "tail" : ": Gen[Any, PrivateNetwork]", "member" : "zio.test.refined.types.NetInstances.privateNetworkGen", "link" : "zio\/test\/refined\/all$.html#privateNetworkGen:zio.test.Gen[Any,eu.timepit.refined.types.net.PrivateNetwork]", "kind" : "val"}, {"label" : "rfc2544BenchmarkGen", "tail" : ": Gen[Any, Rfc2544Benchmark]", "member" : "zio.test.refined.types.NetInstances.rfc2544BenchmarkGen", "link" : "zio\/test\/refined\/all$.html#rfc2544BenchmarkGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc2544Benchmark]", "kind" : "val"}, {"label" : "rfc3927LocalLinkGen", "tail" : ": Gen[Any, Rfc3927LocalLink]", "member" : "zio.test.refined.types.NetInstances.rfc3927LocalLinkGen", "link" : "zio\/test\/refined\/all$.html#rfc3927LocalLinkGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc3927LocalLink]", "kind" : "val"}, {"label" : "rfc5737TestnetGen", "tail" : ": Gen[Any, Rfc5737Testnet]", "member" : "zio.test.refined.types.NetInstances.rfc5737TestnetGen", "link" : "zio\/test\/refined\/all$.html#rfc5737TestnetGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc5737Testnet]", "kind" : "val"}, {"label" : "rfc5737Testnet3Gen", "tail" : ": Gen[Any, Rfc5737Testnet3]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet3Gen", "link" : "zio\/test\/refined\/all$.html#rfc5737Testnet3Gen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc5737Testnet3]", "kind" : "val"}, {"label" : "rfc5737Testnet2Gen", "tail" : ": Gen[Any, Rfc5737Testnet2]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet2Gen", "link" : "zio\/test\/refined\/all$.html#rfc5737Testnet2Gen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc5737Testnet2]", "kind" : "val"}, {"label" : "rfc5737Testnet1Gen", "tail" : ": Gen[Any, Rfc5737Testnet1]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet1Gen", "link" : "zio\/test\/refined\/all$.html#rfc5737Testnet1Gen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc5737Testnet1]", "kind" : "val"}, {"label" : "rfc1918PrivateGen", "tail" : ": Gen[Any, Rfc1918Private]", "member" : "zio.test.refined.types.NetInstances.rfc1918PrivateGen", "link" : "zio\/test\/refined\/all$.html#rfc1918PrivateGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc1918Private]", "kind" : "val"}, {"label" : "rfc1918ClassCPrivateGen", "tail" : ": Gen[Any, Rfc1918ClassCPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassCPrivateGen", "link" : "zio\/test\/refined\/all$.html#rfc1918ClassCPrivateGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc1918ClassCPrivate]", "kind" : "val"}, {"label" : "rfc1918ClassBPrivateGen", "tail" : ": Gen[Any, Rfc1918ClassBPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassBPrivateGen", "link" : "zio\/test\/refined\/all$.html#rfc1918ClassBPrivateGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc1918ClassBPrivate]", "kind" : "val"}, {"label" : "rfc1918ClassAPrivateGen", "tail" : ": Gen[Any, Rfc1918ClassAPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassAPrivateGen", "link" : "zio\/test\/refined\/all$.html#rfc1918ClassAPrivateGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc1918ClassAPrivate]", "kind" : "val"}, {"label" : "nonSystemPortNumberGen", "tail" : ": Gen[Any, NonSystemPortNumber]", "member" : "zio.test.refined.types.NetInstances.nonSystemPortNumberGen", "link" : "zio\/test\/refined\/all$.html#nonSystemPortNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.NonSystemPortNumber]", "kind" : "val"}, {"label" : "dynamicPortNumberGen", "tail" : ": Gen[Any, DynamicPortNumber]", "member" : "zio.test.refined.types.NetInstances.dynamicPortNumberGen", "link" : "zio\/test\/refined\/all$.html#dynamicPortNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.DynamicPortNumber]", "kind" : "val"}, {"label" : "userPortNumberGen", "tail" : ": Gen[Any, UserPortNumber]", "member" : "zio.test.refined.types.NetInstances.userPortNumberGen", "link" : "zio\/test\/refined\/all$.html#userPortNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.UserPortNumber]", "kind" : "val"}, {"label" : "systemPortNumberGen", "tail" : ": Gen[Any, SystemPortNumber]", "member" : "zio.test.refined.types.NetInstances.systemPortNumberGen", "link" : "zio\/test\/refined\/all$.html#systemPortNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.SystemPortNumber]", "kind" : "val"}, {"label" : "portNumberGen", "tail" : ": Gen[Any, PortNumber]", "member" : "zio.test.refined.types.NetInstances.portNumberGen", "link" : "zio\/test\/refined\/all$.html#portNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.PortNumber]", "kind" : "val"}, {"label" : "sha512Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA512]", "member" : "zio.test.refined.types.DigitInstances.sha512Arbitrary", "link" : "zio\/test\/refined\/all$.html#sha512Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA512]", "kind" : "implicit val"}, {"label" : "sha384Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA384]", "member" : "zio.test.refined.types.DigitInstances.sha384Arbitrary", "link" : "zio\/test\/refined\/all$.html#sha384Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA384]", "kind" : "implicit val"}, {"label" : "sha256Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA256]", "member" : "zio.test.refined.types.DigitInstances.sha256Arbitrary", "link" : "zio\/test\/refined\/all$.html#sha256Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA256]", "kind" : "implicit val"}, {"label" : "sha224Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA224]", "member" : "zio.test.refined.types.DigitInstances.sha224Arbitrary", "link" : "zio\/test\/refined\/all$.html#sha224Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA224]", "kind" : "implicit val"}, {"label" : "sha1Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA1]", "member" : "zio.test.refined.types.DigitInstances.sha1Arbitrary", "link" : "zio\/test\/refined\/all$.html#sha1Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA1]", "kind" : "implicit val"}, {"label" : "md5Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.MD5]", "member" : "zio.test.refined.types.DigitInstances.md5Arbitrary", "link" : "zio\/test\/refined\/all$.html#md5Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.MD5]", "kind" : "implicit val"}, {"label" : "sha512Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA512]", "member" : "zio.test.refined.types.DigitInstances.sha512Gen", "link" : "zio\/test\/refined\/all$.html#sha512Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA512]", "kind" : "val"}, {"label" : "sha384Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA384]", "member" : "zio.test.refined.types.DigitInstances.sha384Gen", "link" : "zio\/test\/refined\/all$.html#sha384Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA384]", "kind" : "val"}, {"label" : "sha256Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA256]", "member" : "zio.test.refined.types.DigitInstances.sha256Gen", "link" : "zio\/test\/refined\/all$.html#sha256Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA256]", "kind" : "val"}, {"label" : "sha224Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA224]", "member" : "zio.test.refined.types.DigitInstances.sha224Gen", "link" : "zio\/test\/refined\/all$.html#sha224Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA224]", "kind" : "val"}, {"label" : "sha1Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA1]", "member" : "zio.test.refined.types.DigitInstances.sha1Gen", "link" : "zio\/test\/refined\/all$.html#sha1Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA1]", "kind" : "val"}, {"label" : "md5Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.MD5]", "member" : "zio.test.refined.types.DigitInstances.md5Gen", "link" : "zio\/test\/refined\/all$.html#md5Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.MD5]", "kind" : "val"}, {"label" : "upperCaseCharDeriveGen", "tail" : ": DeriveGen[UpperCaseChar]", "member" : "zio.test.refined.types.CharInstances.upperCaseCharDeriveGen", "link" : "zio\/test\/refined\/all$.html#upperCaseCharDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.char.UpperCaseChar]", "kind" : "implicit val"}, {"label" : "lowerCaseCharDeriveGen", "tail" : ": DeriveGen[LowerCaseChar]", "member" : "zio.test.refined.types.CharInstances.lowerCaseCharDeriveGen", "link" : "zio\/test\/refined\/all$.html#lowerCaseCharDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.char.LowerCaseChar]", "kind" : "implicit val"}, {"label" : "upperCaseCharGen", "tail" : ": Gen[Any, UpperCaseChar]", "member" : "zio.test.refined.types.CharInstances.upperCaseCharGen", "link" : "zio\/test\/refined\/all$.html#upperCaseCharGen:zio.test.Gen[Any,eu.timepit.refined.types.char.UpperCaseChar]", "kind" : "val"}, {"label" : "lowerCaseCharGen", "tail" : ": Gen[Any, LowerCaseChar]", "member" : "zio.test.refined.types.CharInstances.lowerCaseCharGen", "link" : "zio\/test\/refined\/all$.html#lowerCaseCharGen:zio.test.Gen[Any,eu.timepit.refined.types.char.LowerCaseChar]", "kind" : "val"}, {"label" : "doubleLessThan", "tail" : "(wn: WitnessAs[N, Double]): DeriveGen[Refined[Double, Less[N]]]", "member" : "zio.test.refined.NumericInstances.doubleLessThan", "link" : "zio\/test\/refined\/all$.html#doubleLessThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Double]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Double,eu.timepit.refined.numeric.Less[N]]]", "kind" : "implicit def"}, {"label" : "byteLessThan", "tail" : "(wn: WitnessAs[N, Byte]): DeriveGen[Refined[Byte, Less[N]]]", "member" : "zio.test.refined.NumericInstances.byteLessThan", "link" : "zio\/test\/refined\/all$.html#byteLessThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Byte]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Byte,eu.timepit.refined.numeric.Less[N]]]", "kind" : "implicit def"}, {"label" : "shortLessThan", "tail" : "(wn: WitnessAs[N, Short]): DeriveGen[Refined[Short, Less[N]]]", "member" : "zio.test.refined.NumericInstances.shortLessThan", "link" : "zio\/test\/refined\/all$.html#shortLessThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Short]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Short,eu.timepit.refined.numeric.Less[N]]]", "kind" : "implicit def"}, {"label" : "longLessThan", "tail" : "(wn: WitnessAs[N, Long]): DeriveGen[Refined[Long, Less[N]]]", "member" : "zio.test.refined.NumericInstances.longLessThan", "link" : "zio\/test\/refined\/all$.html#longLessThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Long]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Long,eu.timepit.refined.numeric.Less[N]]]", "kind" : "implicit def"}, {"label" : "intLessThan", "tail" : "(wn: WitnessAs[N, Int]): DeriveGen[Refined[Int, Less[N]]]", "member" : "zio.test.refined.NumericInstances.intLessThan", "link" : "zio\/test\/refined\/all$.html#intLessThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Int]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Less[N]]]", "kind" : "implicit def"}, {"label" : "doubleGreaterThan", "tail" : "(wn: WitnessAs[N, Double]): DeriveGen[Refined[Double, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.doubleGreaterThan", "link" : "zio\/test\/refined\/all$.html#doubleGreaterThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Double]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Double,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "implicit def"}, {"label" : "byteGreaterThan", "tail" : "(wn: WitnessAs[N, Byte]): DeriveGen[Refined[Byte, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.byteGreaterThan", "link" : "zio\/test\/refined\/all$.html#byteGreaterThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Byte]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Byte,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "implicit def"}, {"label" : "shortGreaterThan", "tail" : "(wn: WitnessAs[N, Short]): DeriveGen[Refined[Short, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.shortGreaterThan", "link" : "zio\/test\/refined\/all$.html#shortGreaterThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Short]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Short,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "implicit def"}, {"label" : "longGreaterThan", "tail" : "(wn: WitnessAs[N, Long]): DeriveGen[Refined[Long, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.longGreaterThan", "link" : "zio\/test\/refined\/all$.html#longGreaterThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Long]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Long,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "implicit def"}, {"label" : "intGreaterThan", "tail" : "(wn: WitnessAs[N, Int]): DeriveGen[Refined[Int, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.intGreaterThan", "link" : "zio\/test\/refined\/all$.html#intGreaterThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Int]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "implicit def"}, {"label" : "doubleLessThanGen", "tail" : "(wn: WitnessAs[N, Double]): Gen[Any, Refined[Double, Less[N]]]", "member" : "zio.test.refined.NumericInstances.doubleLessThanGen", "link" : "zio\/test\/refined\/all$.html#doubleLessThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Double]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Double,eu.timepit.refined.numeric.Less[N]]]", "kind" : "def"}, {"label" : "byteLessThanGen", "tail" : "(wn: WitnessAs[N, Byte]): Gen[Any, Refined[Byte, Less[N]]]", "member" : "zio.test.refined.NumericInstances.byteLessThanGen", "link" : "zio\/test\/refined\/all$.html#byteLessThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Byte]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Byte,eu.timepit.refined.numeric.Less[N]]]", "kind" : "def"}, {"label" : "shortLessThanGen", "tail" : "(wn: WitnessAs[N, Short]): Gen[Any, Refined[Short, Less[N]]]", "member" : "zio.test.refined.NumericInstances.shortLessThanGen", "link" : "zio\/test\/refined\/all$.html#shortLessThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Short]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Short,eu.timepit.refined.numeric.Less[N]]]", "kind" : "def"}, {"label" : "longLessThanGen", "tail" : "(wn: WitnessAs[N, Long]): Gen[Any, Refined[Long, Less[N]]]", "member" : "zio.test.refined.NumericInstances.longLessThanGen", "link" : "zio\/test\/refined\/all$.html#longLessThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Long]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Long,eu.timepit.refined.numeric.Less[N]]]", "kind" : "def"}, {"label" : "intLessThanGen", "tail" : "(wn: WitnessAs[N, Int]): Gen[Any, Refined[Int, Less[N]]]", "member" : "zio.test.refined.NumericInstances.intLessThanGen", "link" : "zio\/test\/refined\/all$.html#intLessThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Int]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Less[N]]]", "kind" : "def"}, {"label" : "doubleGreaterThanGen", "tail" : "(wn: WitnessAs[N, Double]): Gen[Any, Refined[Double, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.doubleGreaterThanGen", "link" : "zio\/test\/refined\/all$.html#doubleGreaterThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Double]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Double,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "def"}, {"label" : "byteGreaterThanGen", "tail" : "(wn: WitnessAs[N, Byte]): Gen[Any, Refined[Byte, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.byteGreaterThanGen", "link" : "zio\/test\/refined\/all$.html#byteGreaterThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Byte]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Byte,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "def"}, {"label" : "shortGreaterThanGen", "tail" : "(wn: WitnessAs[N, Short]): Gen[Any, Refined[Short, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.shortGreaterThanGen", "link" : "zio\/test\/refined\/all$.html#shortGreaterThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Short]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Short,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "def"}, {"label" : "longGreaterThanGen", "tail" : "(wn: WitnessAs[N, Long]): Gen[Any, Refined[Long, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.longGreaterThanGen", "link" : "zio\/test\/refined\/all$.html#longGreaterThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Long]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Long,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "def"}, {"label" : "intGreaterThanGen", "tail" : "(wn: WitnessAs[N, Int]): Gen[Any, Refined[Int, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.intGreaterThanGen", "link" : "zio\/test\/refined\/all$.html#intGreaterThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Int]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "def"}, {"label" : "startsWithStringNDeriveGen", "tail" : "(ws: Aux[S], deriveGenT: DeriveGen[Char], deriveGenSize: DeriveGen[Refined[Int, P]]): DeriveGen[Refined[String, StartsWith[S]]]", "member" : "zio.test.refined.StringInstances.startsWithStringNDeriveGen", "link" : "zio\/test\/refined\/all$.html#startsWithStringNDeriveGen[S<:String,P](implicitws:shapeless.Witness.Aux[S],implicitderiveGenT:zio.test.magnolia.DeriveGen[Char],implicitderiveGenSize:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Int,P]]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.StartsWith[S]]]", "kind" : "implicit def"}, {"label" : "endsWithStringNDeriveGen", "tail" : "(ws: Aux[S], deriveGenT: DeriveGen[Char], deriveGenSize: DeriveGen[Refined[Int, P]]): DeriveGen[Refined[String, EndsWith[S]]]", "member" : "zio.test.refined.StringInstances.endsWithStringNDeriveGen", "link" : "zio\/test\/refined\/all$.html#endsWithStringNDeriveGen[S<:String,P](implicitws:shapeless.Witness.Aux[S],implicitderiveGenT:zio.test.magnolia.DeriveGen[Char],implicitderiveGenSize:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Int,P]]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.EndsWith[S]]]", "kind" : "implicit def"}, {"label" : "startsWithString1DeriveGen", "tail" : "(ws: Aux[S], deriveGenT: DeriveGen[Char]): DeriveGen[Refined[String, StartsWith[S]]]", "member" : "zio.test.refined.StringInstances.startsWithString1DeriveGen", "link" : "zio\/test\/refined\/all$.html#startsWithString1DeriveGen[S<:String](implicitws:shapeless.Witness.Aux[S],implicitderiveGenT:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.StartsWith[S]]]", "kind" : "implicit def"}, {"label" : "endsWithString1DeriveGen", "tail" : "(ws: Aux[S], deriveGenT: DeriveGen[Char]): DeriveGen[Refined[String, EndsWith[S]]]", "member" : "zio.test.refined.StringInstances.endsWithString1DeriveGen", "link" : "zio\/test\/refined\/all$.html#endsWithString1DeriveGen[S<:String](implicitws:shapeless.Witness.Aux[S],implicitderiveGenT:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.EndsWith[S]]]", "kind" : "implicit def"}, {"label" : "startsWithStringDeriveGen", "tail" : "(ws: Aux[S], deriveGenT: DeriveGen[Char]): DeriveGen[Refined[String, StartsWith[S]]]", "member" : "zio.test.refined.StringInstances.startsWithStringDeriveGen", "link" : "zio\/test\/refined\/all$.html#startsWithStringDeriveGen[S<:String](implicitws:shapeless.Witness.Aux[S],implicitderiveGenT:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.StartsWith[S]]]", "kind" : "implicit def"}, {"label" : "endsWithStringDeriveGen", "tail" : "(ws: Aux[S], deriveGenT: DeriveGen[Char]): DeriveGen[Refined[String, EndsWith[S]]]", "member" : "zio.test.refined.StringInstances.endsWithStringDeriveGen", "link" : "zio\/test\/refined\/all$.html#endsWithStringDeriveGen[S<:String](implicitws:shapeless.Witness.Aux[S],implicitderiveGenT:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.EndsWith[S]]]", "kind" : "implicit def"}, {"label" : "uuidStringDeriveGen", "tail" : ": DeriveGen[Refined[String, Uuid]]", "member" : "zio.test.refined.StringInstances.uuidStringDeriveGen", "link" : "zio\/test\/refined\/all$.html#uuidStringDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.Uuid]]", "kind" : "implicit val"}, {"label" : "uuidStringGen", "tail" : ": Gen[Any, Refined[String, Uuid]]", "member" : "zio.test.refined.StringInstances.uuidStringGen", "link" : "zio\/test\/refined\/all$.html#uuidStringGen:zio.test.Gen[Any,eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.Uuid]]", "kind" : "val"}, {"label" : "startsWithStringNGen", "tail" : "(ws: Aux[S], charGen: Gen[R, Char], sizeGen: Gen[R, Refined[Int, P]]): Gen[R, Refined[String, StartsWith[S]]]", "member" : "zio.test.refined.StringInstances.startsWithStringNGen", "link" : "zio\/test\/refined\/all$.html#startsWithStringNGen[R,S<:String,P](implicitws:shapeless.Witness.Aux[S],implicitcharGen:zio.test.Gen[R,Char],implicitsizeGen:zio.test.Gen[R,eu.timepit.refined.api.Refined[Int,P]]):zio.test.Gen[R,eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.StartsWith[S]]]", "kind" : "def"}, {"label" : "startsWithString1Gen", "tail" : "(ws: Aux[S], charGen: Gen[R, Char]): Gen[R, Refined[String, StartsWith[S]]]", "member" : "zio.test.refined.StringInstances.startsWithString1Gen", "link" : "zio\/test\/refined\/all$.html#startsWithString1Gen[R,S<:String](implicitws:shapeless.Witness.Aux[S],implicitcharGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.StartsWith[S]]]", "kind" : "def"}, {"label" : "startsWithStringGen", "tail" : "(ws: Aux[S], charGen: Gen[R, Char]): Gen[R, Refined[String, StartsWith[S]]]", "member" : "zio.test.refined.StringInstances.startsWithStringGen", "link" : "zio\/test\/refined\/all$.html#startsWithStringGen[R,S<:String](implicitws:shapeless.Witness.Aux[S],implicitcharGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.StartsWith[S]]]", "kind" : "def"}, {"label" : "endsWithStringNGen", "tail" : "(ws: Aux[S], charGen: Gen[R, Char], sizeGen: Gen[R, Refined[Int, P]]): Gen[R, Refined[String, EndsWith[S]]]", "member" : "zio.test.refined.StringInstances.endsWithStringNGen", "link" : "zio\/test\/refined\/all$.html#endsWithStringNGen[R,S<:String,P](implicitws:shapeless.Witness.Aux[S],implicitcharGen:zio.test.Gen[R,Char],implicitsizeGen:zio.test.Gen[R,eu.timepit.refined.api.Refined[Int,P]]):zio.test.Gen[R,eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.EndsWith[S]]]", "kind" : "def"}, {"label" : "endsWithString1Gen", "tail" : "(ws: Aux[S], charGen: Gen[R, Char]): Gen[R, Refined[String, EndsWith[S]]]", "member" : "zio.test.refined.StringInstances.endsWithString1Gen", "link" : "zio\/test\/refined\/all$.html#endsWithString1Gen[R,S<:String](implicitws:shapeless.Witness.Aux[S],implicitcharGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.EndsWith[S]]]", "kind" : "def"}, {"label" : "endsWithStringGen", "tail" : "(ws: Aux[S], charGen: Gen[R, Char]): Gen[R, Refined[String, EndsWith[S]]]", "member" : "zio.test.refined.StringInstances.endsWithStringGen", "link" : "zio\/test\/refined\/all$.html#endsWithStringGen[R,S<:String](implicitws:shapeless.Witness.Aux[S],implicitcharGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.EndsWith[S]]]", "kind" : "def"}, {"label" : "equalArbitrary", "tail" : "(wu: Aux[U]): DeriveGen[Refined[T, Equal[U]]]", "member" : "zio.test.refined.GenericInstances.equalArbitrary", "link" : "zio\/test\/refined\/all$.html#equalArbitrary[T,U<:T](implicitwu:shapeless.Witness.Aux[U]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[T,eu.timepit.refined.generic.Equal[U]]]", "kind" : "implicit def"}, {"label" : "equalArbitraryGen", "tail" : "(wu: Aux[U]): Gen[Any, Refined[T, Equal[U]]]", "member" : "zio.test.refined.GenericInstances.equalArbitraryGen", "link" : "zio\/test\/refined\/all$.html#equalArbitraryGen[T,U<:T](implicitwu:shapeless.Witness.Aux[U]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[T,eu.timepit.refined.generic.Equal[U]]]", "kind" : "def"}, {"label" : "vectorSizeRefinedDeriveGen", "tail" : "(deriveGenT: DeriveGen[T], deriveGenSize: DeriveGen[Refined[Int, P]]): DeriveGen[Refined[Vector[T], Size[P]]]", "member" : "zio.test.refined.CollectionInstances.vectorSizeRefinedDeriveGen", "link" : "zio\/test\/refined\/all$.html#vectorSizeRefinedDeriveGen[T,P](implicitderiveGenT:zio.test.magnolia.DeriveGen[T],implicitderiveGenSize:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Int,P]]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Vector[T],eu.timepit.refined.collection.Size[P]]]", "kind" : "implicit def"}, {"label" : "listSizeRefinedDeriveGen", "tail" : "(deriveGenT: DeriveGen[T], deriveGenSize: DeriveGen[Refined[Int, P]]): DeriveGen[Refined[List[T], Size[P]]]", "member" : "zio.test.refined.CollectionInstances.listSizeRefinedDeriveGen", "link" : "zio\/test\/refined\/all$.html#listSizeRefinedDeriveGen[T,P](implicitderiveGenT:zio.test.magnolia.DeriveGen[T],implicitderiveGenSize:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Int,P]]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[List[T],eu.timepit.refined.collection.Size[P]]]", "kind" : "implicit def"}, {"label" : "sizedChunkRefinedDeriveGen", "tail" : "(deriveGenT: DeriveGen[T], deriveGenSize: DeriveGen[Refined[Int, P]]): DeriveGen[Refined[Chunk[T], Size[P]]]", "member" : "zio.test.refined.CollectionInstances.sizedChunkRefinedDeriveGen", "link" : "zio\/test\/refined\/all$.html#sizedChunkRefinedDeriveGen[T,P](implicitderiveGenT:zio.test.magnolia.DeriveGen[T],implicitderiveGenSize:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Int,P]]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[zio.Chunk[T],eu.timepit.refined.collection.Size[P]]]", "kind" : "implicit def"}, {"label" : "nonEmptyVectorRefinedDeriveGen", "tail" : "(deriveGenT: DeriveGen[T]): DeriveGen[Refined[Vector[T], NonEmpty]]", "member" : "zio.test.refined.CollectionInstances.nonEmptyVectorRefinedDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonEmptyVectorRefinedDeriveGen[T](implicitderiveGenT:zio.test.magnolia.DeriveGen[T]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Vector[T],eu.timepit.refined.collection.NonEmpty]]", "kind" : "implicit def"}, {"label" : "nonEmptyListRefinedDeriveGen", "tail" : "(deriveGenT: DeriveGen[T]): DeriveGen[Refined[List[T], NonEmpty]]", "member" : "zio.test.refined.CollectionInstances.nonEmptyListRefinedDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonEmptyListRefinedDeriveGen[T](implicitderiveGenT:zio.test.magnolia.DeriveGen[T]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[List[T],eu.timepit.refined.collection.NonEmpty]]", "kind" : "implicit def"}, {"label" : "nonEmptyChunkRefinedDeriveGen", "tail" : "(deriveGenT: DeriveGen[T]): DeriveGen[Refined[NonEmptyChunk[T], NonEmpty]]", "member" : "zio.test.refined.CollectionInstances.nonEmptyChunkRefinedDeriveGen", "link" : "zio\/test\/refined\/all$.html#nonEmptyChunkRefinedDeriveGen[C,T](implicitderiveGenT:zio.test.magnolia.DeriveGen[T]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[zio.NonEmptyChunk[T],eu.timepit.refined.collection.NonEmpty]]", "kind" : "implicit def"}, {"label" : "vectorSizeRefinedGen", "tail" : "(genT: Gen[R, T], sizeGen: Gen[R, Refined[Int, P]]): Gen[R, Refined[Vector[T], Size[P]]]", "member" : "zio.test.refined.CollectionInstances.vectorSizeRefinedGen", "link" : "zio\/test\/refined\/all$.html#vectorSizeRefinedGen[R,T,P](implicitgenT:zio.test.Gen[R,T],implicitsizeGen:zio.test.Gen[R,eu.timepit.refined.api.Refined[Int,P]]):zio.test.Gen[R,eu.timepit.refined.api.Refined[Vector[T],eu.timepit.refined.collection.Size[P]]]", "kind" : "def"}, {"label" : "listSizeRefinedGen", "tail" : "(genT: Gen[R, T], sizeGen: Gen[R, Refined[Int, P]]): Gen[R, Refined[List[T], Size[P]]]", "member" : "zio.test.refined.CollectionInstances.listSizeRefinedGen", "link" : "zio\/test\/refined\/all$.html#listSizeRefinedGen[R,T,P](implicitgenT:zio.test.Gen[R,T],implicitsizeGen:zio.test.Gen[R,eu.timepit.refined.api.Refined[Int,P]]):zio.test.Gen[R,eu.timepit.refined.api.Refined[List[T],eu.timepit.refined.collection.Size[P]]]", "kind" : "def"}, {"label" : "sizedChunkRefinedGen", "tail" : "(genT: Gen[R, T], sizeGen: Gen[R, Refined[Int, P]]): Gen[R, Refined[Chunk[T], Size[P]]]", "member" : "zio.test.refined.CollectionInstances.sizedChunkRefinedGen", "link" : "zio\/test\/refined\/all$.html#sizedChunkRefinedGen[R,T,P](implicitgenT:zio.test.Gen[R,T],implicitsizeGen:zio.test.Gen[R,eu.timepit.refined.api.Refined[Int,P]]):zio.test.Gen[R,eu.timepit.refined.api.Refined[zio.Chunk[T],eu.timepit.refined.collection.Size[P]]]", "kind" : "def"}, {"label" : "nonEmptyVectorRefinedGen", "tail" : "(genT: Gen[R, T]): Gen[R, Refined[Vector[T], NonEmpty]]", "member" : "zio.test.refined.CollectionInstances.nonEmptyVectorRefinedGen", "link" : "zio\/test\/refined\/all$.html#nonEmptyVectorRefinedGen[R,T](implicitgenT:zio.test.Gen[R,T]):zio.test.Gen[R,eu.timepit.refined.api.Refined[Vector[T],eu.timepit.refined.collection.NonEmpty]]", "kind" : "def"}, {"label" : "nonEmptyListRefinedGen", "tail" : "(genT: Gen[R, T]): Gen[R, Refined[List[T], NonEmpty]]", "member" : "zio.test.refined.CollectionInstances.nonEmptyListRefinedGen", "link" : "zio\/test\/refined\/all$.html#nonEmptyListRefinedGen[R,T](implicitgenT:zio.test.Gen[R,T]):zio.test.Gen[R,eu.timepit.refined.api.Refined[List[T],eu.timepit.refined.collection.NonEmpty]]", "kind" : "def"}, {"label" : "nonEmptyChunkRefinedGen", "tail" : "(genT: Gen[R, T]): Gen[R, Refined[NonEmptyChunk[T], NonEmpty]]", "member" : "zio.test.refined.CollectionInstances.nonEmptyChunkRefinedGen", "link" : "zio\/test\/refined\/all$.html#nonEmptyChunkRefinedGen[R,T](implicitgenT:zio.test.Gen[R,T]):zio.test.Gen[R,eu.timepit.refined.api.Refined[zio.NonEmptyChunk[T],eu.timepit.refined.collection.NonEmpty]]", "kind" : "def"}, {"label" : "whitespaceDeriveGen", "tail" : "(): DeriveGen[Refined[Char, Whitespace]]", "member" : "zio.test.refined.CharInstances.whitespaceDeriveGen", "link" : "zio\/test\/refined\/all$.html#whitespaceDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.Whitespace]]", "kind" : "implicit def"}, {"label" : "upperCaseDeriveGen", "tail" : "(): DeriveGen[Refined[Char, UpperCase]]", "member" : "zio.test.refined.CharInstances.upperCaseDeriveGen", "link" : "zio\/test\/refined\/all$.html#upperCaseDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.UpperCase]]", "kind" : "implicit def"}, {"label" : "lowerCaseDeriveGen", "tail" : "(): DeriveGen[Refined[Char, LowerCase]]", "member" : "zio.test.refined.CharInstances.lowerCaseDeriveGen", "link" : "zio\/test\/refined\/all$.html#lowerCaseDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.LowerCase]]", "kind" : "implicit def"}, {"label" : "letterDeriveGen", "tail" : "(): DeriveGen[Refined[Char, Letter]]", "member" : "zio.test.refined.CharInstances.letterDeriveGen", "link" : "zio\/test\/refined\/all$.html#letterDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.Letter]]", "kind" : "implicit def"}, {"label" : "digitArbitrary", "tail" : "(): DeriveGen[Refined[Char, Digit]]", "member" : "zio.test.refined.CharInstances.digitArbitrary", "link" : "zio\/test\/refined\/all$.html#digitArbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.Digit]]", "kind" : "implicit def"}, {"label" : "whitespaceGen", "tail" : ": Gen[Any, Refined[Char, Whitespace]]", "member" : "zio.test.refined.CharInstances.whitespaceGen", "link" : "zio\/test\/refined\/all$.html#whitespaceGen:zio.test.Gen[Any,eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.Whitespace]]", "kind" : "val"}, {"label" : "upperCaseGen", "tail" : ": Gen[Any, Refined[Char, UpperCase]]", "member" : "zio.test.refined.CharInstances.upperCaseGen", "link" : "zio\/test\/refined\/all$.html#upperCaseGen:zio.test.Gen[Any,eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.UpperCase]]", "kind" : "val"}, {"label" : "lowerCaseGen", "tail" : ": Gen[Any, Refined[Char, LowerCase]]", "member" : "zio.test.refined.CharInstances.lowerCaseGen", "link" : "zio\/test\/refined\/all$.html#lowerCaseGen:zio.test.Gen[Any,eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.LowerCase]]", "kind" : "val"}, {"label" : "letterGen", "tail" : ": Gen[Any, Refined[Char, Letter]]", "member" : "zio.test.refined.CharInstances.letterGen", "link" : "zio\/test\/refined\/all$.html#letterGen:zio.test.Gen[Any,eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.Letter]]", "kind" : "val"}, {"label" : "digitGen", "tail" : ": Gen[Any, Refined[Char, Digit]]", "member" : "zio.test.refined.CharInstances.digitGen", "link" : "zio\/test\/refined\/all$.html#digitGen:zio.test.Gen[Any,eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.Digit]]", "kind" : "val"}, {"label" : "orGen", "tail" : "(genA: Gen[R, T], genB: Gen[R, T]): Gen[R, Refined[T, Or[A, B]]]", "member" : "zio.test.refined.BooleanInstances.orGen", "link" : "zio\/test\/refined\/all$.html#orGen[R<:zio.Random,T,A,B](implicitgenA:zio.test.Gen[R,T],implicitgenB:zio.test.Gen[R,T]):zio.test.Gen[R,eu.timepit.refined.api.Refined[T,eu.timepit.refined.boolean.Or[A,B]]]", "kind" : "def"}, {"label" : "orDeriveGen", "tail" : "(raGen: DeriveGen[Refined[T, A]], rbGen: DeriveGen[Refined[T, B]]): DeriveGen[Refined[T, Or[A, B]]]", "member" : "zio.test.refined.BooleanInstances.orDeriveGen", "link" : "zio\/test\/refined\/all$.html#orDeriveGen[T,A,B](implicitraGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[T,A]],implicitrbGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[T,B]]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[T,eu.timepit.refined.boolean.Or[A,B]]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/all$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/all$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/all$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/all$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/all$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/all$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/all$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/all$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/all$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/all$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/all$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/all$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/all$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/all$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/all$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/all$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/all$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/all$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/all$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.refined.boolean", "shortDescription" : "", "object" : "zio\/test\/refined\/boolean$.html", "members_object" : [{"label" : "orGen", "tail" : "(genA: Gen[R, T], genB: Gen[R, T]): Gen[R, Refined[T, Or[A, B]]]", "member" : "zio.test.refined.BooleanInstances.orGen", "link" : "zio\/test\/refined\/boolean$.html#orGen[R<:zio.Random,T,A,B](implicitgenA:zio.test.Gen[R,T],implicitgenB:zio.test.Gen[R,T]):zio.test.Gen[R,eu.timepit.refined.api.Refined[T,eu.timepit.refined.boolean.Or[A,B]]]", "kind" : "def"}, {"label" : "orDeriveGen", "tail" : "(raGen: DeriveGen[Refined[T, A]], rbGen: DeriveGen[Refined[T, B]]): DeriveGen[Refined[T, Or[A, B]]]", "member" : "zio.test.refined.BooleanInstances.orDeriveGen", "link" : "zio\/test\/refined\/boolean$.html#orDeriveGen[T,A,B](implicitraGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[T,A]],implicitrbGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[T,B]]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[T,eu.timepit.refined.boolean.Or[A,B]]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/boolean$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/boolean$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/boolean$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/boolean$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/boolean$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/boolean$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/boolean$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/boolean$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/boolean$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/boolean$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/boolean$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/boolean$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/boolean$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/boolean$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/boolean$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/boolean$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/boolean$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/boolean$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/boolean$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.refined.BooleanInstances", "trait" : "zio\/test\/refined\/BooleanInstances.html", "kind" : "trait", "members_trait" : [{"label" : "orGen", "tail" : "(genA: Gen[R, T], genB: Gen[R, T]): Gen[R, Refined[T, Or[A, B]]]", "member" : "zio.test.refined.BooleanInstances.orGen", "link" : "zio\/test\/refined\/BooleanInstances.html#orGen[R<:zio.Random,T,A,B](implicitgenA:zio.test.Gen[R,T],implicitgenB:zio.test.Gen[R,T]):zio.test.Gen[R,eu.timepit.refined.api.Refined[T,eu.timepit.refined.boolean.Or[A,B]]]", "kind" : "def"}, {"label" : "orDeriveGen", "tail" : "(raGen: DeriveGen[Refined[T, A]], rbGen: DeriveGen[Refined[T, B]]): DeriveGen[Refined[T, Or[A, B]]]", "member" : "zio.test.refined.BooleanInstances.orDeriveGen", "link" : "zio\/test\/refined\/BooleanInstances.html#orDeriveGen[T,A,B](implicitraGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[T,A]],implicitrbGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[T,B]]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[T,eu.timepit.refined.boolean.Or[A,B]]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/BooleanInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/BooleanInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/BooleanInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/BooleanInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/BooleanInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/BooleanInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/BooleanInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/BooleanInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/BooleanInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/BooleanInstances.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/BooleanInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/BooleanInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/BooleanInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/BooleanInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/BooleanInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/BooleanInstances.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/BooleanInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/BooleanInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/BooleanInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.refined.char", "shortDescription" : "", "object" : "zio\/test\/refined\/char$.html", "members_object" : [{"label" : "whitespaceDeriveGen", "tail" : "(): DeriveGen[Refined[Char, Whitespace]]", "member" : "zio.test.refined.CharInstances.whitespaceDeriveGen", "link" : "zio\/test\/refined\/char$.html#whitespaceDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.Whitespace]]", "kind" : "implicit def"}, {"label" : "upperCaseDeriveGen", "tail" : "(): DeriveGen[Refined[Char, UpperCase]]", "member" : "zio.test.refined.CharInstances.upperCaseDeriveGen", "link" : "zio\/test\/refined\/char$.html#upperCaseDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.UpperCase]]", "kind" : "implicit def"}, {"label" : "lowerCaseDeriveGen", "tail" : "(): DeriveGen[Refined[Char, LowerCase]]", "member" : "zio.test.refined.CharInstances.lowerCaseDeriveGen", "link" : "zio\/test\/refined\/char$.html#lowerCaseDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.LowerCase]]", "kind" : "implicit def"}, {"label" : "letterDeriveGen", "tail" : "(): DeriveGen[Refined[Char, Letter]]", "member" : "zio.test.refined.CharInstances.letterDeriveGen", "link" : "zio\/test\/refined\/char$.html#letterDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.Letter]]", "kind" : "implicit def"}, {"label" : "digitArbitrary", "tail" : "(): DeriveGen[Refined[Char, Digit]]", "member" : "zio.test.refined.CharInstances.digitArbitrary", "link" : "zio\/test\/refined\/char$.html#digitArbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.Digit]]", "kind" : "implicit def"}, {"label" : "whitespaceGen", "tail" : ": Gen[Any, Refined[Char, Whitespace]]", "member" : "zio.test.refined.CharInstances.whitespaceGen", "link" : "zio\/test\/refined\/char$.html#whitespaceGen:zio.test.Gen[Any,eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.Whitespace]]", "kind" : "val"}, {"label" : "upperCaseGen", "tail" : ": Gen[Any, Refined[Char, UpperCase]]", "member" : "zio.test.refined.CharInstances.upperCaseGen", "link" : "zio\/test\/refined\/char$.html#upperCaseGen:zio.test.Gen[Any,eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.UpperCase]]", "kind" : "val"}, {"label" : "lowerCaseGen", "tail" : ": Gen[Any, Refined[Char, LowerCase]]", "member" : "zio.test.refined.CharInstances.lowerCaseGen", "link" : "zio\/test\/refined\/char$.html#lowerCaseGen:zio.test.Gen[Any,eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.LowerCase]]", "kind" : "val"}, {"label" : "letterGen", "tail" : ": Gen[Any, Refined[Char, Letter]]", "member" : "zio.test.refined.CharInstances.letterGen", "link" : "zio\/test\/refined\/char$.html#letterGen:zio.test.Gen[Any,eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.Letter]]", "kind" : "val"}, {"label" : "digitGen", "tail" : ": Gen[Any, Refined[Char, Digit]]", "member" : "zio.test.refined.CharInstances.digitGen", "link" : "zio\/test\/refined\/char$.html#digitGen:zio.test.Gen[Any,eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.Digit]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/char$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/char$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/char$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/char$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/char$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/char$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/char$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/char$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/char$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/char$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/char$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/char$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/char$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/char$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/char$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/char$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/char$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/char$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/char$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.refined.CharInstances", "trait" : "zio\/test\/refined\/CharInstances.html", "kind" : "trait", "members_trait" : [{"label" : "whitespaceDeriveGen", "tail" : "(): DeriveGen[Refined[Char, Whitespace]]", "member" : "zio.test.refined.CharInstances.whitespaceDeriveGen", "link" : "zio\/test\/refined\/CharInstances.html#whitespaceDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.Whitespace]]", "kind" : "implicit def"}, {"label" : "upperCaseDeriveGen", "tail" : "(): DeriveGen[Refined[Char, UpperCase]]", "member" : "zio.test.refined.CharInstances.upperCaseDeriveGen", "link" : "zio\/test\/refined\/CharInstances.html#upperCaseDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.UpperCase]]", "kind" : "implicit def"}, {"label" : "lowerCaseDeriveGen", "tail" : "(): DeriveGen[Refined[Char, LowerCase]]", "member" : "zio.test.refined.CharInstances.lowerCaseDeriveGen", "link" : "zio\/test\/refined\/CharInstances.html#lowerCaseDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.LowerCase]]", "kind" : "implicit def"}, {"label" : "letterDeriveGen", "tail" : "(): DeriveGen[Refined[Char, Letter]]", "member" : "zio.test.refined.CharInstances.letterDeriveGen", "link" : "zio\/test\/refined\/CharInstances.html#letterDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.Letter]]", "kind" : "implicit def"}, {"label" : "digitArbitrary", "tail" : "(): DeriveGen[Refined[Char, Digit]]", "member" : "zio.test.refined.CharInstances.digitArbitrary", "link" : "zio\/test\/refined\/CharInstances.html#digitArbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.Digit]]", "kind" : "implicit def"}, {"label" : "whitespaceGen", "tail" : ": Gen[Any, Refined[Char, Whitespace]]", "member" : "zio.test.refined.CharInstances.whitespaceGen", "link" : "zio\/test\/refined\/CharInstances.html#whitespaceGen:zio.test.Gen[Any,eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.Whitespace]]", "kind" : "val"}, {"label" : "upperCaseGen", "tail" : ": Gen[Any, Refined[Char, UpperCase]]", "member" : "zio.test.refined.CharInstances.upperCaseGen", "link" : "zio\/test\/refined\/CharInstances.html#upperCaseGen:zio.test.Gen[Any,eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.UpperCase]]", "kind" : "val"}, {"label" : "lowerCaseGen", "tail" : ": Gen[Any, Refined[Char, LowerCase]]", "member" : "zio.test.refined.CharInstances.lowerCaseGen", "link" : "zio\/test\/refined\/CharInstances.html#lowerCaseGen:zio.test.Gen[Any,eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.LowerCase]]", "kind" : "val"}, {"label" : "letterGen", "tail" : ": Gen[Any, Refined[Char, Letter]]", "member" : "zio.test.refined.CharInstances.letterGen", "link" : "zio\/test\/refined\/CharInstances.html#letterGen:zio.test.Gen[Any,eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.Letter]]", "kind" : "val"}, {"label" : "digitGen", "tail" : ": Gen[Any, Refined[Char, Digit]]", "member" : "zio.test.refined.CharInstances.digitGen", "link" : "zio\/test\/refined\/CharInstances.html#digitGen:zio.test.Gen[Any,eu.timepit.refined.api.Refined[Char,eu.timepit.refined.char.Digit]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/CharInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/CharInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/CharInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/CharInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/CharInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/CharInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/CharInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/CharInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/CharInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/CharInstances.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/CharInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/CharInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/CharInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/CharInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/CharInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/CharInstances.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/CharInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/CharInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/CharInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.refined.collection", "shortDescription" : "", "object" : "zio\/test\/refined\/collection$.html", "members_object" : [{"label" : "vectorSizeRefinedDeriveGen", "tail" : "(deriveGenT: DeriveGen[T], deriveGenSize: DeriveGen[Refined[Int, P]]): DeriveGen[Refined[Vector[T], Size[P]]]", "member" : "zio.test.refined.CollectionInstances.vectorSizeRefinedDeriveGen", "link" : "zio\/test\/refined\/collection$.html#vectorSizeRefinedDeriveGen[T,P](implicitderiveGenT:zio.test.magnolia.DeriveGen[T],implicitderiveGenSize:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Int,P]]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Vector[T],eu.timepit.refined.collection.Size[P]]]", "kind" : "implicit def"}, {"label" : "listSizeRefinedDeriveGen", "tail" : "(deriveGenT: DeriveGen[T], deriveGenSize: DeriveGen[Refined[Int, P]]): DeriveGen[Refined[List[T], Size[P]]]", "member" : "zio.test.refined.CollectionInstances.listSizeRefinedDeriveGen", "link" : "zio\/test\/refined\/collection$.html#listSizeRefinedDeriveGen[T,P](implicitderiveGenT:zio.test.magnolia.DeriveGen[T],implicitderiveGenSize:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Int,P]]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[List[T],eu.timepit.refined.collection.Size[P]]]", "kind" : "implicit def"}, {"label" : "sizedChunkRefinedDeriveGen", "tail" : "(deriveGenT: DeriveGen[T], deriveGenSize: DeriveGen[Refined[Int, P]]): DeriveGen[Refined[Chunk[T], Size[P]]]", "member" : "zio.test.refined.CollectionInstances.sizedChunkRefinedDeriveGen", "link" : "zio\/test\/refined\/collection$.html#sizedChunkRefinedDeriveGen[T,P](implicitderiveGenT:zio.test.magnolia.DeriveGen[T],implicitderiveGenSize:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Int,P]]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[zio.Chunk[T],eu.timepit.refined.collection.Size[P]]]", "kind" : "implicit def"}, {"label" : "nonEmptyVectorRefinedDeriveGen", "tail" : "(deriveGenT: DeriveGen[T]): DeriveGen[Refined[Vector[T], NonEmpty]]", "member" : "zio.test.refined.CollectionInstances.nonEmptyVectorRefinedDeriveGen", "link" : "zio\/test\/refined\/collection$.html#nonEmptyVectorRefinedDeriveGen[T](implicitderiveGenT:zio.test.magnolia.DeriveGen[T]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Vector[T],eu.timepit.refined.collection.NonEmpty]]", "kind" : "implicit def"}, {"label" : "nonEmptyListRefinedDeriveGen", "tail" : "(deriveGenT: DeriveGen[T]): DeriveGen[Refined[List[T], NonEmpty]]", "member" : "zio.test.refined.CollectionInstances.nonEmptyListRefinedDeriveGen", "link" : "zio\/test\/refined\/collection$.html#nonEmptyListRefinedDeriveGen[T](implicitderiveGenT:zio.test.magnolia.DeriveGen[T]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[List[T],eu.timepit.refined.collection.NonEmpty]]", "kind" : "implicit def"}, {"label" : "nonEmptyChunkRefinedDeriveGen", "tail" : "(deriveGenT: DeriveGen[T]): DeriveGen[Refined[NonEmptyChunk[T], NonEmpty]]", "member" : "zio.test.refined.CollectionInstances.nonEmptyChunkRefinedDeriveGen", "link" : "zio\/test\/refined\/collection$.html#nonEmptyChunkRefinedDeriveGen[C,T](implicitderiveGenT:zio.test.magnolia.DeriveGen[T]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[zio.NonEmptyChunk[T],eu.timepit.refined.collection.NonEmpty]]", "kind" : "implicit def"}, {"label" : "vectorSizeRefinedGen", "tail" : "(genT: Gen[R, T], sizeGen: Gen[R, Refined[Int, P]]): Gen[R, Refined[Vector[T], Size[P]]]", "member" : "zio.test.refined.CollectionInstances.vectorSizeRefinedGen", "link" : "zio\/test\/refined\/collection$.html#vectorSizeRefinedGen[R,T,P](implicitgenT:zio.test.Gen[R,T],implicitsizeGen:zio.test.Gen[R,eu.timepit.refined.api.Refined[Int,P]]):zio.test.Gen[R,eu.timepit.refined.api.Refined[Vector[T],eu.timepit.refined.collection.Size[P]]]", "kind" : "def"}, {"label" : "listSizeRefinedGen", "tail" : "(genT: Gen[R, T], sizeGen: Gen[R, Refined[Int, P]]): Gen[R, Refined[List[T], Size[P]]]", "member" : "zio.test.refined.CollectionInstances.listSizeRefinedGen", "link" : "zio\/test\/refined\/collection$.html#listSizeRefinedGen[R,T,P](implicitgenT:zio.test.Gen[R,T],implicitsizeGen:zio.test.Gen[R,eu.timepit.refined.api.Refined[Int,P]]):zio.test.Gen[R,eu.timepit.refined.api.Refined[List[T],eu.timepit.refined.collection.Size[P]]]", "kind" : "def"}, {"label" : "sizedChunkRefinedGen", "tail" : "(genT: Gen[R, T], sizeGen: Gen[R, Refined[Int, P]]): Gen[R, Refined[Chunk[T], Size[P]]]", "member" : "zio.test.refined.CollectionInstances.sizedChunkRefinedGen", "link" : "zio\/test\/refined\/collection$.html#sizedChunkRefinedGen[R,T,P](implicitgenT:zio.test.Gen[R,T],implicitsizeGen:zio.test.Gen[R,eu.timepit.refined.api.Refined[Int,P]]):zio.test.Gen[R,eu.timepit.refined.api.Refined[zio.Chunk[T],eu.timepit.refined.collection.Size[P]]]", "kind" : "def"}, {"label" : "nonEmptyVectorRefinedGen", "tail" : "(genT: Gen[R, T]): Gen[R, Refined[Vector[T], NonEmpty]]", "member" : "zio.test.refined.CollectionInstances.nonEmptyVectorRefinedGen", "link" : "zio\/test\/refined\/collection$.html#nonEmptyVectorRefinedGen[R,T](implicitgenT:zio.test.Gen[R,T]):zio.test.Gen[R,eu.timepit.refined.api.Refined[Vector[T],eu.timepit.refined.collection.NonEmpty]]", "kind" : "def"}, {"label" : "nonEmptyListRefinedGen", "tail" : "(genT: Gen[R, T]): Gen[R, Refined[List[T], NonEmpty]]", "member" : "zio.test.refined.CollectionInstances.nonEmptyListRefinedGen", "link" : "zio\/test\/refined\/collection$.html#nonEmptyListRefinedGen[R,T](implicitgenT:zio.test.Gen[R,T]):zio.test.Gen[R,eu.timepit.refined.api.Refined[List[T],eu.timepit.refined.collection.NonEmpty]]", "kind" : "def"}, {"label" : "nonEmptyChunkRefinedGen", "tail" : "(genT: Gen[R, T]): Gen[R, Refined[NonEmptyChunk[T], NonEmpty]]", "member" : "zio.test.refined.CollectionInstances.nonEmptyChunkRefinedGen", "link" : "zio\/test\/refined\/collection$.html#nonEmptyChunkRefinedGen[R,T](implicitgenT:zio.test.Gen[R,T]):zio.test.Gen[R,eu.timepit.refined.api.Refined[zio.NonEmptyChunk[T],eu.timepit.refined.collection.NonEmpty]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/collection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/collection$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/collection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/collection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/collection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/collection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/collection$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/collection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/collection$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/collection$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/collection$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/collection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/collection$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/collection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/collection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/collection$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/collection$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/collection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/collection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.refined.CollectionInstances", "trait" : "zio\/test\/refined\/CollectionInstances.html", "kind" : "trait", "members_trait" : [{"label" : "vectorSizeRefinedDeriveGen", "tail" : "(deriveGenT: DeriveGen[T], deriveGenSize: DeriveGen[Refined[Int, P]]): DeriveGen[Refined[Vector[T], Size[P]]]", "member" : "zio.test.refined.CollectionInstances.vectorSizeRefinedDeriveGen", "link" : "zio\/test\/refined\/CollectionInstances.html#vectorSizeRefinedDeriveGen[T,P](implicitderiveGenT:zio.test.magnolia.DeriveGen[T],implicitderiveGenSize:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Int,P]]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Vector[T],eu.timepit.refined.collection.Size[P]]]", "kind" : "implicit def"}, {"label" : "listSizeRefinedDeriveGen", "tail" : "(deriveGenT: DeriveGen[T], deriveGenSize: DeriveGen[Refined[Int, P]]): DeriveGen[Refined[List[T], Size[P]]]", "member" : "zio.test.refined.CollectionInstances.listSizeRefinedDeriveGen", "link" : "zio\/test\/refined\/CollectionInstances.html#listSizeRefinedDeriveGen[T,P](implicitderiveGenT:zio.test.magnolia.DeriveGen[T],implicitderiveGenSize:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Int,P]]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[List[T],eu.timepit.refined.collection.Size[P]]]", "kind" : "implicit def"}, {"label" : "sizedChunkRefinedDeriveGen", "tail" : "(deriveGenT: DeriveGen[T], deriveGenSize: DeriveGen[Refined[Int, P]]): DeriveGen[Refined[Chunk[T], Size[P]]]", "member" : "zio.test.refined.CollectionInstances.sizedChunkRefinedDeriveGen", "link" : "zio\/test\/refined\/CollectionInstances.html#sizedChunkRefinedDeriveGen[T,P](implicitderiveGenT:zio.test.magnolia.DeriveGen[T],implicitderiveGenSize:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Int,P]]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[zio.Chunk[T],eu.timepit.refined.collection.Size[P]]]", "kind" : "implicit def"}, {"label" : "nonEmptyVectorRefinedDeriveGen", "tail" : "(deriveGenT: DeriveGen[T]): DeriveGen[Refined[Vector[T], NonEmpty]]", "member" : "zio.test.refined.CollectionInstances.nonEmptyVectorRefinedDeriveGen", "link" : "zio\/test\/refined\/CollectionInstances.html#nonEmptyVectorRefinedDeriveGen[T](implicitderiveGenT:zio.test.magnolia.DeriveGen[T]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Vector[T],eu.timepit.refined.collection.NonEmpty]]", "kind" : "implicit def"}, {"label" : "nonEmptyListRefinedDeriveGen", "tail" : "(deriveGenT: DeriveGen[T]): DeriveGen[Refined[List[T], NonEmpty]]", "member" : "zio.test.refined.CollectionInstances.nonEmptyListRefinedDeriveGen", "link" : "zio\/test\/refined\/CollectionInstances.html#nonEmptyListRefinedDeriveGen[T](implicitderiveGenT:zio.test.magnolia.DeriveGen[T]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[List[T],eu.timepit.refined.collection.NonEmpty]]", "kind" : "implicit def"}, {"label" : "nonEmptyChunkRefinedDeriveGen", "tail" : "(deriveGenT: DeriveGen[T]): DeriveGen[Refined[NonEmptyChunk[T], NonEmpty]]", "member" : "zio.test.refined.CollectionInstances.nonEmptyChunkRefinedDeriveGen", "link" : "zio\/test\/refined\/CollectionInstances.html#nonEmptyChunkRefinedDeriveGen[C,T](implicitderiveGenT:zio.test.magnolia.DeriveGen[T]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[zio.NonEmptyChunk[T],eu.timepit.refined.collection.NonEmpty]]", "kind" : "implicit def"}, {"label" : "vectorSizeRefinedGen", "tail" : "(genT: Gen[R, T], sizeGen: Gen[R, Refined[Int, P]]): Gen[R, Refined[Vector[T], Size[P]]]", "member" : "zio.test.refined.CollectionInstances.vectorSizeRefinedGen", "link" : "zio\/test\/refined\/CollectionInstances.html#vectorSizeRefinedGen[R,T,P](implicitgenT:zio.test.Gen[R,T],implicitsizeGen:zio.test.Gen[R,eu.timepit.refined.api.Refined[Int,P]]):zio.test.Gen[R,eu.timepit.refined.api.Refined[Vector[T],eu.timepit.refined.collection.Size[P]]]", "kind" : "def"}, {"label" : "listSizeRefinedGen", "tail" : "(genT: Gen[R, T], sizeGen: Gen[R, Refined[Int, P]]): Gen[R, Refined[List[T], Size[P]]]", "member" : "zio.test.refined.CollectionInstances.listSizeRefinedGen", "link" : "zio\/test\/refined\/CollectionInstances.html#listSizeRefinedGen[R,T,P](implicitgenT:zio.test.Gen[R,T],implicitsizeGen:zio.test.Gen[R,eu.timepit.refined.api.Refined[Int,P]]):zio.test.Gen[R,eu.timepit.refined.api.Refined[List[T],eu.timepit.refined.collection.Size[P]]]", "kind" : "def"}, {"label" : "sizedChunkRefinedGen", "tail" : "(genT: Gen[R, T], sizeGen: Gen[R, Refined[Int, P]]): Gen[R, Refined[Chunk[T], Size[P]]]", "member" : "zio.test.refined.CollectionInstances.sizedChunkRefinedGen", "link" : "zio\/test\/refined\/CollectionInstances.html#sizedChunkRefinedGen[R,T,P](implicitgenT:zio.test.Gen[R,T],implicitsizeGen:zio.test.Gen[R,eu.timepit.refined.api.Refined[Int,P]]):zio.test.Gen[R,eu.timepit.refined.api.Refined[zio.Chunk[T],eu.timepit.refined.collection.Size[P]]]", "kind" : "def"}, {"label" : "nonEmptyVectorRefinedGen", "tail" : "(genT: Gen[R, T]): Gen[R, Refined[Vector[T], NonEmpty]]", "member" : "zio.test.refined.CollectionInstances.nonEmptyVectorRefinedGen", "link" : "zio\/test\/refined\/CollectionInstances.html#nonEmptyVectorRefinedGen[R,T](implicitgenT:zio.test.Gen[R,T]):zio.test.Gen[R,eu.timepit.refined.api.Refined[Vector[T],eu.timepit.refined.collection.NonEmpty]]", "kind" : "def"}, {"label" : "nonEmptyListRefinedGen", "tail" : "(genT: Gen[R, T]): Gen[R, Refined[List[T], NonEmpty]]", "member" : "zio.test.refined.CollectionInstances.nonEmptyListRefinedGen", "link" : "zio\/test\/refined\/CollectionInstances.html#nonEmptyListRefinedGen[R,T](implicitgenT:zio.test.Gen[R,T]):zio.test.Gen[R,eu.timepit.refined.api.Refined[List[T],eu.timepit.refined.collection.NonEmpty]]", "kind" : "def"}, {"label" : "nonEmptyChunkRefinedGen", "tail" : "(genT: Gen[R, T]): Gen[R, Refined[NonEmptyChunk[T], NonEmpty]]", "member" : "zio.test.refined.CollectionInstances.nonEmptyChunkRefinedGen", "link" : "zio\/test\/refined\/CollectionInstances.html#nonEmptyChunkRefinedGen[R,T](implicitgenT:zio.test.Gen[R,T]):zio.test.Gen[R,eu.timepit.refined.api.Refined[zio.NonEmptyChunk[T],eu.timepit.refined.collection.NonEmpty]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/CollectionInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/CollectionInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/CollectionInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/CollectionInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/CollectionInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/CollectionInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/CollectionInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/CollectionInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/CollectionInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/CollectionInstances.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/CollectionInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/CollectionInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/CollectionInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/CollectionInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/CollectionInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/CollectionInstances.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/CollectionInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/CollectionInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/CollectionInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.refined.generic", "shortDescription" : "", "object" : "zio\/test\/refined\/generic$.html", "members_object" : [{"label" : "equalArbitrary", "tail" : "(wu: Aux[U]): DeriveGen[Refined[T, Equal[U]]]", "member" : "zio.test.refined.GenericInstances.equalArbitrary", "link" : "zio\/test\/refined\/generic$.html#equalArbitrary[T,U<:T](implicitwu:shapeless.Witness.Aux[U]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[T,eu.timepit.refined.generic.Equal[U]]]", "kind" : "implicit def"}, {"label" : "equalArbitraryGen", "tail" : "(wu: Aux[U]): Gen[Any, Refined[T, Equal[U]]]", "member" : "zio.test.refined.GenericInstances.equalArbitraryGen", "link" : "zio\/test\/refined\/generic$.html#equalArbitraryGen[T,U<:T](implicitwu:shapeless.Witness.Aux[U]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[T,eu.timepit.refined.generic.Equal[U]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/generic$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/generic$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/generic$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/generic$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/generic$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/generic$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/generic$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/generic$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/generic$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/generic$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/generic$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/generic$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/generic$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/generic$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/generic$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/generic$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/generic$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/generic$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/generic$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.refined.GenericInstances", "trait" : "zio\/test\/refined\/GenericInstances.html", "kind" : "trait", "members_trait" : [{"label" : "equalArbitrary", "tail" : "(wu: Aux[U]): DeriveGen[Refined[T, Equal[U]]]", "member" : "zio.test.refined.GenericInstances.equalArbitrary", "link" : "zio\/test\/refined\/GenericInstances.html#equalArbitrary[T,U<:T](implicitwu:shapeless.Witness.Aux[U]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[T,eu.timepit.refined.generic.Equal[U]]]", "kind" : "implicit def"}, {"label" : "equalArbitraryGen", "tail" : "(wu: Aux[U]): Gen[Any, Refined[T, Equal[U]]]", "member" : "zio.test.refined.GenericInstances.equalArbitraryGen", "link" : "zio\/test\/refined\/GenericInstances.html#equalArbitraryGen[T,U<:T](implicitwu:shapeless.Witness.Aux[U]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[T,eu.timepit.refined.generic.Equal[U]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/GenericInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/GenericInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/GenericInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/GenericInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/GenericInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/GenericInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/GenericInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/GenericInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/GenericInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/GenericInstances.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/GenericInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/GenericInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/GenericInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/GenericInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/GenericInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/GenericInstances.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/GenericInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/GenericInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/GenericInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.refined.numeric", "shortDescription" : "", "object" : "zio\/test\/refined\/numeric$.html", "members_object" : [{"label" : "doubleLessThan", "tail" : "(wn: WitnessAs[N, Double]): DeriveGen[Refined[Double, Less[N]]]", "member" : "zio.test.refined.NumericInstances.doubleLessThan", "link" : "zio\/test\/refined\/numeric$.html#doubleLessThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Double]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Double,eu.timepit.refined.numeric.Less[N]]]", "kind" : "implicit def"}, {"label" : "byteLessThan", "tail" : "(wn: WitnessAs[N, Byte]): DeriveGen[Refined[Byte, Less[N]]]", "member" : "zio.test.refined.NumericInstances.byteLessThan", "link" : "zio\/test\/refined\/numeric$.html#byteLessThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Byte]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Byte,eu.timepit.refined.numeric.Less[N]]]", "kind" : "implicit def"}, {"label" : "shortLessThan", "tail" : "(wn: WitnessAs[N, Short]): DeriveGen[Refined[Short, Less[N]]]", "member" : "zio.test.refined.NumericInstances.shortLessThan", "link" : "zio\/test\/refined\/numeric$.html#shortLessThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Short]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Short,eu.timepit.refined.numeric.Less[N]]]", "kind" : "implicit def"}, {"label" : "longLessThan", "tail" : "(wn: WitnessAs[N, Long]): DeriveGen[Refined[Long, Less[N]]]", "member" : "zio.test.refined.NumericInstances.longLessThan", "link" : "zio\/test\/refined\/numeric$.html#longLessThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Long]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Long,eu.timepit.refined.numeric.Less[N]]]", "kind" : "implicit def"}, {"label" : "intLessThan", "tail" : "(wn: WitnessAs[N, Int]): DeriveGen[Refined[Int, Less[N]]]", "member" : "zio.test.refined.NumericInstances.intLessThan", "link" : "zio\/test\/refined\/numeric$.html#intLessThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Int]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Less[N]]]", "kind" : "implicit def"}, {"label" : "doubleGreaterThan", "tail" : "(wn: WitnessAs[N, Double]): DeriveGen[Refined[Double, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.doubleGreaterThan", "link" : "zio\/test\/refined\/numeric$.html#doubleGreaterThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Double]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Double,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "implicit def"}, {"label" : "byteGreaterThan", "tail" : "(wn: WitnessAs[N, Byte]): DeriveGen[Refined[Byte, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.byteGreaterThan", "link" : "zio\/test\/refined\/numeric$.html#byteGreaterThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Byte]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Byte,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "implicit def"}, {"label" : "shortGreaterThan", "tail" : "(wn: WitnessAs[N, Short]): DeriveGen[Refined[Short, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.shortGreaterThan", "link" : "zio\/test\/refined\/numeric$.html#shortGreaterThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Short]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Short,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "implicit def"}, {"label" : "longGreaterThan", "tail" : "(wn: WitnessAs[N, Long]): DeriveGen[Refined[Long, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.longGreaterThan", "link" : "zio\/test\/refined\/numeric$.html#longGreaterThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Long]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Long,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "implicit def"}, {"label" : "intGreaterThan", "tail" : "(wn: WitnessAs[N, Int]): DeriveGen[Refined[Int, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.intGreaterThan", "link" : "zio\/test\/refined\/numeric$.html#intGreaterThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Int]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "implicit def"}, {"label" : "doubleLessThanGen", "tail" : "(wn: WitnessAs[N, Double]): Gen[Any, Refined[Double, Less[N]]]", "member" : "zio.test.refined.NumericInstances.doubleLessThanGen", "link" : "zio\/test\/refined\/numeric$.html#doubleLessThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Double]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Double,eu.timepit.refined.numeric.Less[N]]]", "kind" : "def"}, {"label" : "byteLessThanGen", "tail" : "(wn: WitnessAs[N, Byte]): Gen[Any, Refined[Byte, Less[N]]]", "member" : "zio.test.refined.NumericInstances.byteLessThanGen", "link" : "zio\/test\/refined\/numeric$.html#byteLessThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Byte]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Byte,eu.timepit.refined.numeric.Less[N]]]", "kind" : "def"}, {"label" : "shortLessThanGen", "tail" : "(wn: WitnessAs[N, Short]): Gen[Any, Refined[Short, Less[N]]]", "member" : "zio.test.refined.NumericInstances.shortLessThanGen", "link" : "zio\/test\/refined\/numeric$.html#shortLessThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Short]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Short,eu.timepit.refined.numeric.Less[N]]]", "kind" : "def"}, {"label" : "longLessThanGen", "tail" : "(wn: WitnessAs[N, Long]): Gen[Any, Refined[Long, Less[N]]]", "member" : "zio.test.refined.NumericInstances.longLessThanGen", "link" : "zio\/test\/refined\/numeric$.html#longLessThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Long]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Long,eu.timepit.refined.numeric.Less[N]]]", "kind" : "def"}, {"label" : "intLessThanGen", "tail" : "(wn: WitnessAs[N, Int]): Gen[Any, Refined[Int, Less[N]]]", "member" : "zio.test.refined.NumericInstances.intLessThanGen", "link" : "zio\/test\/refined\/numeric$.html#intLessThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Int]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Less[N]]]", "kind" : "def"}, {"label" : "doubleGreaterThanGen", "tail" : "(wn: WitnessAs[N, Double]): Gen[Any, Refined[Double, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.doubleGreaterThanGen", "link" : "zio\/test\/refined\/numeric$.html#doubleGreaterThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Double]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Double,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "def"}, {"label" : "byteGreaterThanGen", "tail" : "(wn: WitnessAs[N, Byte]): Gen[Any, Refined[Byte, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.byteGreaterThanGen", "link" : "zio\/test\/refined\/numeric$.html#byteGreaterThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Byte]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Byte,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "def"}, {"label" : "shortGreaterThanGen", "tail" : "(wn: WitnessAs[N, Short]): Gen[Any, Refined[Short, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.shortGreaterThanGen", "link" : "zio\/test\/refined\/numeric$.html#shortGreaterThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Short]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Short,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "def"}, {"label" : "longGreaterThanGen", "tail" : "(wn: WitnessAs[N, Long]): Gen[Any, Refined[Long, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.longGreaterThanGen", "link" : "zio\/test\/refined\/numeric$.html#longGreaterThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Long]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Long,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "def"}, {"label" : "intGreaterThanGen", "tail" : "(wn: WitnessAs[N, Int]): Gen[Any, Refined[Int, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.intGreaterThanGen", "link" : "zio\/test\/refined\/numeric$.html#intGreaterThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Int]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/numeric$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/numeric$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/numeric$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/numeric$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/numeric$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/numeric$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/numeric$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/numeric$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/numeric$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/numeric$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/numeric$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/numeric$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/numeric$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/numeric$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/numeric$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/numeric$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/numeric$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/numeric$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/numeric$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.refined.NumericInstances", "trait" : "zio\/test\/refined\/NumericInstances.html", "kind" : "trait", "members_trait" : [{"label" : "doubleLessThan", "tail" : "(wn: WitnessAs[N, Double]): DeriveGen[Refined[Double, Less[N]]]", "member" : "zio.test.refined.NumericInstances.doubleLessThan", "link" : "zio\/test\/refined\/NumericInstances.html#doubleLessThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Double]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Double,eu.timepit.refined.numeric.Less[N]]]", "kind" : "implicit def"}, {"label" : "byteLessThan", "tail" : "(wn: WitnessAs[N, Byte]): DeriveGen[Refined[Byte, Less[N]]]", "member" : "zio.test.refined.NumericInstances.byteLessThan", "link" : "zio\/test\/refined\/NumericInstances.html#byteLessThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Byte]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Byte,eu.timepit.refined.numeric.Less[N]]]", "kind" : "implicit def"}, {"label" : "shortLessThan", "tail" : "(wn: WitnessAs[N, Short]): DeriveGen[Refined[Short, Less[N]]]", "member" : "zio.test.refined.NumericInstances.shortLessThan", "link" : "zio\/test\/refined\/NumericInstances.html#shortLessThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Short]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Short,eu.timepit.refined.numeric.Less[N]]]", "kind" : "implicit def"}, {"label" : "longLessThan", "tail" : "(wn: WitnessAs[N, Long]): DeriveGen[Refined[Long, Less[N]]]", "member" : "zio.test.refined.NumericInstances.longLessThan", "link" : "zio\/test\/refined\/NumericInstances.html#longLessThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Long]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Long,eu.timepit.refined.numeric.Less[N]]]", "kind" : "implicit def"}, {"label" : "intLessThan", "tail" : "(wn: WitnessAs[N, Int]): DeriveGen[Refined[Int, Less[N]]]", "member" : "zio.test.refined.NumericInstances.intLessThan", "link" : "zio\/test\/refined\/NumericInstances.html#intLessThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Int]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Less[N]]]", "kind" : "implicit def"}, {"label" : "doubleGreaterThan", "tail" : "(wn: WitnessAs[N, Double]): DeriveGen[Refined[Double, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.doubleGreaterThan", "link" : "zio\/test\/refined\/NumericInstances.html#doubleGreaterThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Double]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Double,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "implicit def"}, {"label" : "byteGreaterThan", "tail" : "(wn: WitnessAs[N, Byte]): DeriveGen[Refined[Byte, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.byteGreaterThan", "link" : "zio\/test\/refined\/NumericInstances.html#byteGreaterThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Byte]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Byte,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "implicit def"}, {"label" : "shortGreaterThan", "tail" : "(wn: WitnessAs[N, Short]): DeriveGen[Refined[Short, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.shortGreaterThan", "link" : "zio\/test\/refined\/NumericInstances.html#shortGreaterThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Short]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Short,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "implicit def"}, {"label" : "longGreaterThan", "tail" : "(wn: WitnessAs[N, Long]): DeriveGen[Refined[Long, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.longGreaterThan", "link" : "zio\/test\/refined\/NumericInstances.html#longGreaterThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Long]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Long,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "implicit def"}, {"label" : "intGreaterThan", "tail" : "(wn: WitnessAs[N, Int]): DeriveGen[Refined[Int, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.intGreaterThan", "link" : "zio\/test\/refined\/NumericInstances.html#intGreaterThan[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Int]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "implicit def"}, {"label" : "doubleLessThanGen", "tail" : "(wn: WitnessAs[N, Double]): Gen[Any, Refined[Double, Less[N]]]", "member" : "zio.test.refined.NumericInstances.doubleLessThanGen", "link" : "zio\/test\/refined\/NumericInstances.html#doubleLessThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Double]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Double,eu.timepit.refined.numeric.Less[N]]]", "kind" : "def"}, {"label" : "byteLessThanGen", "tail" : "(wn: WitnessAs[N, Byte]): Gen[Any, Refined[Byte, Less[N]]]", "member" : "zio.test.refined.NumericInstances.byteLessThanGen", "link" : "zio\/test\/refined\/NumericInstances.html#byteLessThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Byte]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Byte,eu.timepit.refined.numeric.Less[N]]]", "kind" : "def"}, {"label" : "shortLessThanGen", "tail" : "(wn: WitnessAs[N, Short]): Gen[Any, Refined[Short, Less[N]]]", "member" : "zio.test.refined.NumericInstances.shortLessThanGen", "link" : "zio\/test\/refined\/NumericInstances.html#shortLessThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Short]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Short,eu.timepit.refined.numeric.Less[N]]]", "kind" : "def"}, {"label" : "longLessThanGen", "tail" : "(wn: WitnessAs[N, Long]): Gen[Any, Refined[Long, Less[N]]]", "member" : "zio.test.refined.NumericInstances.longLessThanGen", "link" : "zio\/test\/refined\/NumericInstances.html#longLessThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Long]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Long,eu.timepit.refined.numeric.Less[N]]]", "kind" : "def"}, {"label" : "intLessThanGen", "tail" : "(wn: WitnessAs[N, Int]): Gen[Any, Refined[Int, Less[N]]]", "member" : "zio.test.refined.NumericInstances.intLessThanGen", "link" : "zio\/test\/refined\/NumericInstances.html#intLessThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Int]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Less[N]]]", "kind" : "def"}, {"label" : "doubleGreaterThanGen", "tail" : "(wn: WitnessAs[N, Double]): Gen[Any, Refined[Double, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.doubleGreaterThanGen", "link" : "zio\/test\/refined\/NumericInstances.html#doubleGreaterThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Double]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Double,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "def"}, {"label" : "byteGreaterThanGen", "tail" : "(wn: WitnessAs[N, Byte]): Gen[Any, Refined[Byte, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.byteGreaterThanGen", "link" : "zio\/test\/refined\/NumericInstances.html#byteGreaterThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Byte]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Byte,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "def"}, {"label" : "shortGreaterThanGen", "tail" : "(wn: WitnessAs[N, Short]): Gen[Any, Refined[Short, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.shortGreaterThanGen", "link" : "zio\/test\/refined\/NumericInstances.html#shortGreaterThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Short]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Short,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "def"}, {"label" : "longGreaterThanGen", "tail" : "(wn: WitnessAs[N, Long]): Gen[Any, Refined[Long, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.longGreaterThanGen", "link" : "zio\/test\/refined\/NumericInstances.html#longGreaterThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Long]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Long,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "def"}, {"label" : "intGreaterThanGen", "tail" : "(wn: WitnessAs[N, Int]): Gen[Any, Refined[Int, Greater[N]]]", "member" : "zio.test.refined.NumericInstances.intGreaterThanGen", "link" : "zio\/test\/refined\/NumericInstances.html#intGreaterThanGen[N](implicitwn:eu.timepit.refined.internal.WitnessAs[N,Int]):zio.test.Gen[Any,eu.timepit.refined.api.Refined[Int,eu.timepit.refined.numeric.Greater[N]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/NumericInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/NumericInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/NumericInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/NumericInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/NumericInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/NumericInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/NumericInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/NumericInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/NumericInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/NumericInstances.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/NumericInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/NumericInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/NumericInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/NumericInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/NumericInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/NumericInstances.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/NumericInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/NumericInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/NumericInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.refined.string", "shortDescription" : "", "object" : "zio\/test\/refined\/string$.html", "members_object" : [{"label" : "startsWithStringNDeriveGen", "tail" : "(ws: Aux[S], deriveGenT: DeriveGen[Char], deriveGenSize: DeriveGen[Refined[Int, P]]): DeriveGen[Refined[String, StartsWith[S]]]", "member" : "zio.test.refined.StringInstances.startsWithStringNDeriveGen", "link" : "zio\/test\/refined\/string$.html#startsWithStringNDeriveGen[S<:String,P](implicitws:shapeless.Witness.Aux[S],implicitderiveGenT:zio.test.magnolia.DeriveGen[Char],implicitderiveGenSize:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Int,P]]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.StartsWith[S]]]", "kind" : "implicit def"}, {"label" : "endsWithStringNDeriveGen", "tail" : "(ws: Aux[S], deriveGenT: DeriveGen[Char], deriveGenSize: DeriveGen[Refined[Int, P]]): DeriveGen[Refined[String, EndsWith[S]]]", "member" : "zio.test.refined.StringInstances.endsWithStringNDeriveGen", "link" : "zio\/test\/refined\/string$.html#endsWithStringNDeriveGen[S<:String,P](implicitws:shapeless.Witness.Aux[S],implicitderiveGenT:zio.test.magnolia.DeriveGen[Char],implicitderiveGenSize:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Int,P]]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.EndsWith[S]]]", "kind" : "implicit def"}, {"label" : "startsWithString1DeriveGen", "tail" : "(ws: Aux[S], deriveGenT: DeriveGen[Char]): DeriveGen[Refined[String, StartsWith[S]]]", "member" : "zio.test.refined.StringInstances.startsWithString1DeriveGen", "link" : "zio\/test\/refined\/string$.html#startsWithString1DeriveGen[S<:String](implicitws:shapeless.Witness.Aux[S],implicitderiveGenT:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.StartsWith[S]]]", "kind" : "implicit def"}, {"label" : "endsWithString1DeriveGen", "tail" : "(ws: Aux[S], deriveGenT: DeriveGen[Char]): DeriveGen[Refined[String, EndsWith[S]]]", "member" : "zio.test.refined.StringInstances.endsWithString1DeriveGen", "link" : "zio\/test\/refined\/string$.html#endsWithString1DeriveGen[S<:String](implicitws:shapeless.Witness.Aux[S],implicitderiveGenT:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.EndsWith[S]]]", "kind" : "implicit def"}, {"label" : "startsWithStringDeriveGen", "tail" : "(ws: Aux[S], deriveGenT: DeriveGen[Char]): DeriveGen[Refined[String, StartsWith[S]]]", "member" : "zio.test.refined.StringInstances.startsWithStringDeriveGen", "link" : "zio\/test\/refined\/string$.html#startsWithStringDeriveGen[S<:String](implicitws:shapeless.Witness.Aux[S],implicitderiveGenT:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.StartsWith[S]]]", "kind" : "implicit def"}, {"label" : "endsWithStringDeriveGen", "tail" : "(ws: Aux[S], deriveGenT: DeriveGen[Char]): DeriveGen[Refined[String, EndsWith[S]]]", "member" : "zio.test.refined.StringInstances.endsWithStringDeriveGen", "link" : "zio\/test\/refined\/string$.html#endsWithStringDeriveGen[S<:String](implicitws:shapeless.Witness.Aux[S],implicitderiveGenT:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.EndsWith[S]]]", "kind" : "implicit def"}, {"label" : "uuidStringDeriveGen", "tail" : ": DeriveGen[Refined[String, Uuid]]", "member" : "zio.test.refined.StringInstances.uuidStringDeriveGen", "link" : "zio\/test\/refined\/string$.html#uuidStringDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.Uuid]]", "kind" : "implicit val"}, {"label" : "uuidStringGen", "tail" : ": Gen[Any, Refined[String, Uuid]]", "member" : "zio.test.refined.StringInstances.uuidStringGen", "link" : "zio\/test\/refined\/string$.html#uuidStringGen:zio.test.Gen[Any,eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.Uuid]]", "kind" : "val"}, {"label" : "startsWithStringNGen", "tail" : "(ws: Aux[S], charGen: Gen[R, Char], sizeGen: Gen[R, Refined[Int, P]]): Gen[R, Refined[String, StartsWith[S]]]", "member" : "zio.test.refined.StringInstances.startsWithStringNGen", "link" : "zio\/test\/refined\/string$.html#startsWithStringNGen[R,S<:String,P](implicitws:shapeless.Witness.Aux[S],implicitcharGen:zio.test.Gen[R,Char],implicitsizeGen:zio.test.Gen[R,eu.timepit.refined.api.Refined[Int,P]]):zio.test.Gen[R,eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.StartsWith[S]]]", "kind" : "def"}, {"label" : "startsWithString1Gen", "tail" : "(ws: Aux[S], charGen: Gen[R, Char]): Gen[R, Refined[String, StartsWith[S]]]", "member" : "zio.test.refined.StringInstances.startsWithString1Gen", "link" : "zio\/test\/refined\/string$.html#startsWithString1Gen[R,S<:String](implicitws:shapeless.Witness.Aux[S],implicitcharGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.StartsWith[S]]]", "kind" : "def"}, {"label" : "startsWithStringGen", "tail" : "(ws: Aux[S], charGen: Gen[R, Char]): Gen[R, Refined[String, StartsWith[S]]]", "member" : "zio.test.refined.StringInstances.startsWithStringGen", "link" : "zio\/test\/refined\/string$.html#startsWithStringGen[R,S<:String](implicitws:shapeless.Witness.Aux[S],implicitcharGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.StartsWith[S]]]", "kind" : "def"}, {"label" : "endsWithStringNGen", "tail" : "(ws: Aux[S], charGen: Gen[R, Char], sizeGen: Gen[R, Refined[Int, P]]): Gen[R, Refined[String, EndsWith[S]]]", "member" : "zio.test.refined.StringInstances.endsWithStringNGen", "link" : "zio\/test\/refined\/string$.html#endsWithStringNGen[R,S<:String,P](implicitws:shapeless.Witness.Aux[S],implicitcharGen:zio.test.Gen[R,Char],implicitsizeGen:zio.test.Gen[R,eu.timepit.refined.api.Refined[Int,P]]):zio.test.Gen[R,eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.EndsWith[S]]]", "kind" : "def"}, {"label" : "endsWithString1Gen", "tail" : "(ws: Aux[S], charGen: Gen[R, Char]): Gen[R, Refined[String, EndsWith[S]]]", "member" : "zio.test.refined.StringInstances.endsWithString1Gen", "link" : "zio\/test\/refined\/string$.html#endsWithString1Gen[R,S<:String](implicitws:shapeless.Witness.Aux[S],implicitcharGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.EndsWith[S]]]", "kind" : "def"}, {"label" : "endsWithStringGen", "tail" : "(ws: Aux[S], charGen: Gen[R, Char]): Gen[R, Refined[String, EndsWith[S]]]", "member" : "zio.test.refined.StringInstances.endsWithStringGen", "link" : "zio\/test\/refined\/string$.html#endsWithStringGen[R,S<:String](implicitws:shapeless.Witness.Aux[S],implicitcharGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.EndsWith[S]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/string$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/string$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/string$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/string$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/string$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/string$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/string$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/string$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/string$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/string$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/string$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/string$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/string$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/string$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/string$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/string$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/string$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/string$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/string$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.refined.StringInstances", "trait" : "zio\/test\/refined\/StringInstances.html", "kind" : "trait", "members_trait" : [{"label" : "startsWithStringNDeriveGen", "tail" : "(ws: Aux[S], deriveGenT: DeriveGen[Char], deriveGenSize: DeriveGen[Refined[Int, P]]): DeriveGen[Refined[String, StartsWith[S]]]", "member" : "zio.test.refined.StringInstances.startsWithStringNDeriveGen", "link" : "zio\/test\/refined\/StringInstances.html#startsWithStringNDeriveGen[S<:String,P](implicitws:shapeless.Witness.Aux[S],implicitderiveGenT:zio.test.magnolia.DeriveGen[Char],implicitderiveGenSize:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Int,P]]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.StartsWith[S]]]", "kind" : "implicit def"}, {"label" : "endsWithStringNDeriveGen", "tail" : "(ws: Aux[S], deriveGenT: DeriveGen[Char], deriveGenSize: DeriveGen[Refined[Int, P]]): DeriveGen[Refined[String, EndsWith[S]]]", "member" : "zio.test.refined.StringInstances.endsWithStringNDeriveGen", "link" : "zio\/test\/refined\/StringInstances.html#endsWithStringNDeriveGen[S<:String,P](implicitws:shapeless.Witness.Aux[S],implicitderiveGenT:zio.test.magnolia.DeriveGen[Char],implicitderiveGenSize:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[Int,P]]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.EndsWith[S]]]", "kind" : "implicit def"}, {"label" : "startsWithString1DeriveGen", "tail" : "(ws: Aux[S], deriveGenT: DeriveGen[Char]): DeriveGen[Refined[String, StartsWith[S]]]", "member" : "zio.test.refined.StringInstances.startsWithString1DeriveGen", "link" : "zio\/test\/refined\/StringInstances.html#startsWithString1DeriveGen[S<:String](implicitws:shapeless.Witness.Aux[S],implicitderiveGenT:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.StartsWith[S]]]", "kind" : "implicit def"}, {"label" : "endsWithString1DeriveGen", "tail" : "(ws: Aux[S], deriveGenT: DeriveGen[Char]): DeriveGen[Refined[String, EndsWith[S]]]", "member" : "zio.test.refined.StringInstances.endsWithString1DeriveGen", "link" : "zio\/test\/refined\/StringInstances.html#endsWithString1DeriveGen[S<:String](implicitws:shapeless.Witness.Aux[S],implicitderiveGenT:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.EndsWith[S]]]", "kind" : "implicit def"}, {"label" : "startsWithStringDeriveGen", "tail" : "(ws: Aux[S], deriveGenT: DeriveGen[Char]): DeriveGen[Refined[String, StartsWith[S]]]", "member" : "zio.test.refined.StringInstances.startsWithStringDeriveGen", "link" : "zio\/test\/refined\/StringInstances.html#startsWithStringDeriveGen[S<:String](implicitws:shapeless.Witness.Aux[S],implicitderiveGenT:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.StartsWith[S]]]", "kind" : "implicit def"}, {"label" : "endsWithStringDeriveGen", "tail" : "(ws: Aux[S], deriveGenT: DeriveGen[Char]): DeriveGen[Refined[String, EndsWith[S]]]", "member" : "zio.test.refined.StringInstances.endsWithStringDeriveGen", "link" : "zio\/test\/refined\/StringInstances.html#endsWithStringDeriveGen[S<:String](implicitws:shapeless.Witness.Aux[S],implicitderiveGenT:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.EndsWith[S]]]", "kind" : "implicit def"}, {"label" : "uuidStringDeriveGen", "tail" : ": DeriveGen[Refined[String, Uuid]]", "member" : "zio.test.refined.StringInstances.uuidStringDeriveGen", "link" : "zio\/test\/refined\/StringInstances.html#uuidStringDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.Uuid]]", "kind" : "implicit val"}, {"label" : "uuidStringGen", "tail" : ": Gen[Any, Refined[String, Uuid]]", "member" : "zio.test.refined.StringInstances.uuidStringGen", "link" : "zio\/test\/refined\/StringInstances.html#uuidStringGen:zio.test.Gen[Any,eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.Uuid]]", "kind" : "val"}, {"label" : "startsWithStringNGen", "tail" : "(ws: Aux[S], charGen: Gen[R, Char], sizeGen: Gen[R, Refined[Int, P]]): Gen[R, Refined[String, StartsWith[S]]]", "member" : "zio.test.refined.StringInstances.startsWithStringNGen", "link" : "zio\/test\/refined\/StringInstances.html#startsWithStringNGen[R,S<:String,P](implicitws:shapeless.Witness.Aux[S],implicitcharGen:zio.test.Gen[R,Char],implicitsizeGen:zio.test.Gen[R,eu.timepit.refined.api.Refined[Int,P]]):zio.test.Gen[R,eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.StartsWith[S]]]", "kind" : "def"}, {"label" : "startsWithString1Gen", "tail" : "(ws: Aux[S], charGen: Gen[R, Char]): Gen[R, Refined[String, StartsWith[S]]]", "member" : "zio.test.refined.StringInstances.startsWithString1Gen", "link" : "zio\/test\/refined\/StringInstances.html#startsWithString1Gen[R,S<:String](implicitws:shapeless.Witness.Aux[S],implicitcharGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.StartsWith[S]]]", "kind" : "def"}, {"label" : "startsWithStringGen", "tail" : "(ws: Aux[S], charGen: Gen[R, Char]): Gen[R, Refined[String, StartsWith[S]]]", "member" : "zio.test.refined.StringInstances.startsWithStringGen", "link" : "zio\/test\/refined\/StringInstances.html#startsWithStringGen[R,S<:String](implicitws:shapeless.Witness.Aux[S],implicitcharGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.StartsWith[S]]]", "kind" : "def"}, {"label" : "endsWithStringNGen", "tail" : "(ws: Aux[S], charGen: Gen[R, Char], sizeGen: Gen[R, Refined[Int, P]]): Gen[R, Refined[String, EndsWith[S]]]", "member" : "zio.test.refined.StringInstances.endsWithStringNGen", "link" : "zio\/test\/refined\/StringInstances.html#endsWithStringNGen[R,S<:String,P](implicitws:shapeless.Witness.Aux[S],implicitcharGen:zio.test.Gen[R,Char],implicitsizeGen:zio.test.Gen[R,eu.timepit.refined.api.Refined[Int,P]]):zio.test.Gen[R,eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.EndsWith[S]]]", "kind" : "def"}, {"label" : "endsWithString1Gen", "tail" : "(ws: Aux[S], charGen: Gen[R, Char]): Gen[R, Refined[String, EndsWith[S]]]", "member" : "zio.test.refined.StringInstances.endsWithString1Gen", "link" : "zio\/test\/refined\/StringInstances.html#endsWithString1Gen[R,S<:String](implicitws:shapeless.Witness.Aux[S],implicitcharGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.EndsWith[S]]]", "kind" : "def"}, {"label" : "endsWithStringGen", "tail" : "(ws: Aux[S], charGen: Gen[R, Char]): Gen[R, Refined[String, EndsWith[S]]]", "member" : "zio.test.refined.StringInstances.endsWithStringGen", "link" : "zio\/test\/refined\/StringInstances.html#endsWithStringGen[R,S<:String](implicitws:shapeless.Witness.Aux[S],implicitcharGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.api.Refined[String,eu.timepit.refined.string.EndsWith[S]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/StringInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/StringInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/StringInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/StringInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/StringInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/StringInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/StringInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/StringInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/StringInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/StringInstances.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/StringInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/StringInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/StringInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/StringInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/StringInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/StringInstances.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/StringInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/StringInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/StringInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}], "zio.test.internal" : [{"name" : "zio.test.internal.LowPriOptionalImplicit", "trait" : "zio\/test\/internal\/LowPriOptionalImplicit.html", "kind" : "trait", "members_trait" : [{"label" : "none", "tail" : "(): OptionalImplicit[A]", "member" : "zio.test.internal.LowPriOptionalImplicit.none", "link" : "zio\/test\/internal\/LowPriOptionalImplicit.html#none[A]:zio.test.internal.OptionalImplicit[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/internal\/LowPriOptionalImplicit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/internal\/LowPriOptionalImplicit.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/internal\/LowPriOptionalImplicit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/internal\/LowPriOptionalImplicit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/internal\/LowPriOptionalImplicit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/internal\/LowPriOptionalImplicit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/internal\/LowPriOptionalImplicit.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/internal\/LowPriOptionalImplicit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/internal\/LowPriOptionalImplicit.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/internal\/LowPriOptionalImplicit.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/internal\/LowPriOptionalImplicit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/internal\/LowPriOptionalImplicit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/LowPriOptionalImplicit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/LowPriOptionalImplicit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/LowPriOptionalImplicit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/internal\/LowPriOptionalImplicit.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/internal\/LowPriOptionalImplicit.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/internal\/LowPriOptionalImplicit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/internal\/LowPriOptionalImplicit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.internal.OptionalImplicit", "object" : "zio\/test\/internal\/OptionalImplicit$.html", "members_object" : [{"label" : "some", "tail" : "(instance: A): OptionalImplicit[A]", "member" : "zio.test.internal.OptionalImplicit.some", "link" : "zio\/test\/internal\/OptionalImplicit$.html#some[A](implicitinstance:A):zio.test.internal.OptionalImplicit[A]", "kind" : "implicit def"}, {"label" : "apply", "tail" : "(arg0: OptionalImplicit[A]): Option[A]", "member" : "zio.test.internal.OptionalImplicit.apply", "link" : "zio\/test\/internal\/OptionalImplicit$.html#apply[A](implicitevidence$1:zio.test.internal.OptionalImplicit[A]):Option[A]", "kind" : "def"}, {"label" : "none", "tail" : "(): OptionalImplicit[A]", "member" : "zio.test.internal.LowPriOptionalImplicit.none", "link" : "zio\/test\/internal\/OptionalImplicit$.html#none[A]:zio.test.internal.OptionalImplicit[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/internal\/OptionalImplicit$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/internal\/OptionalImplicit$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/internal\/OptionalImplicit$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/internal\/OptionalImplicit$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/internal\/OptionalImplicit$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/internal\/OptionalImplicit$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/internal\/OptionalImplicit$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/internal\/OptionalImplicit$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/internal\/OptionalImplicit$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/internal\/OptionalImplicit$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/internal\/OptionalImplicit$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/internal\/OptionalImplicit$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/OptionalImplicit$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/OptionalImplicit$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/OptionalImplicit$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/internal\/OptionalImplicit$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/internal\/OptionalImplicit$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/internal\/OptionalImplicit$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/internal\/OptionalImplicit$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/internal\/OptionalImplicit.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/internal\/OptionalImplicit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/internal\/OptionalImplicit.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/internal\/OptionalImplicit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/internal\/OptionalImplicit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/internal\/OptionalImplicit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/internal\/OptionalImplicit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/internal\/OptionalImplicit.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/internal\/OptionalImplicit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/internal\/OptionalImplicit.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/internal\/OptionalImplicit.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/internal\/OptionalImplicit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/internal\/OptionalImplicit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/OptionalImplicit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/OptionalImplicit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/OptionalImplicit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/internal\/OptionalImplicit.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/internal\/OptionalImplicit.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/internal\/OptionalImplicit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/internal\/OptionalImplicit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "value", "tail" : "(): Option[A]", "member" : "zio.test.internal.OptionalImplicit.value", "link" : "zio\/test\/internal\/OptionalImplicit.html#value:Option[A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.test.internal.SmartAssertions", "shortDescription" : "", "object" : "zio\/test\/internal\/SmartAssertions$.html", "members_object" : [{"label" : "Implicits", "tail" : "", "member" : "zio.test.internal.SmartAssertions.Implicits", "link" : "zio\/test\/internal\/SmartAssertions$.html#Implicits", "kind" : "object"}, {"label" : "endsWithString", "tail" : "(postfix: String): TestArrow[String, Boolean]", "member" : "zio.test.internal.SmartAssertions.endsWithString", "link" : "zio\/test\/internal\/SmartAssertions$.html#endsWithString(postfix:String):zio.test.TestArrow[String,Boolean]", "kind" : "def"}, {"label" : "endsWithSeq", "tail" : "(postfix: Seq[A]): TestArrow[Seq[A], Boolean]", "member" : "zio.test.internal.SmartAssertions.endsWithSeq", "link" : "zio\/test\/internal\/SmartAssertions$.html#endsWithSeq[A](postfix:Seq[A]):zio.test.TestArrow[Seq[A],Boolean]", "kind" : "def"}, {"label" : "startsWithString", "tail" : "(prefix: String): TestArrow[String, Boolean]", "member" : "zio.test.internal.SmartAssertions.startsWithString", "link" : "zio\/test\/internal\/SmartAssertions$.html#startsWithString(prefix:String):zio.test.TestArrow[String,Boolean]", "kind" : "def"}, {"label" : "startsWithSeq", "tail" : "(prefix: Seq[A]): TestArrow[Seq[A], Boolean]", "member" : "zio.test.internal.SmartAssertions.startsWithSeq", "link" : "zio\/test\/internal\/SmartAssertions$.html#startsWithSeq[A](prefix:Seq[A]):zio.test.TestArrow[Seq[A],Boolean]", "kind" : "def"}, {"label" : "is", "tail" : "(CB: ClassTag[B]): TestArrow[A, Boolean]", "member" : "zio.test.internal.SmartAssertions.is", "link" : "zio\/test\/internal\/SmartAssertions$.html#is[A,B](implicitCB:scala.reflect.ClassTag[B]):zio.test.TestArrow[A,Boolean]", "kind" : "def"}, {"label" : "as", "tail" : "(CB: ClassTag[B]): TestArrow[A, B]", "member" : "zio.test.internal.SmartAssertions.as", "link" : "zio\/test\/internal\/SmartAssertions$.html#as[A,B](implicitCB:scala.reflect.ClassTag[B]):zio.test.TestArrow[A,B]", "kind" : "def"}, {"label" : "throws", "tail" : ": TestArrow[Any, Throwable]", "member" : "zio.test.internal.SmartAssertions.throws", "link" : "zio\/test\/internal\/SmartAssertions$.html#throws:zio.test.TestArrow[Any,Throwable]", "kind" : "val"}, {"label" : "asExitSuccess", "tail" : "(): TestArrow[Exit[E, A], A]", "member" : "zio.test.internal.SmartAssertions.asExitSuccess", "link" : "zio\/test\/internal\/SmartAssertions$.html#asExitSuccess[E,A]:zio.test.TestArrow[zio.Exit[E,A],A]", "kind" : "def"}, {"label" : "asExitInterrupted", "tail" : "(): TestArrow[Exit[E, A], Boolean]", "member" : "zio.test.internal.SmartAssertions.asExitInterrupted", "link" : "zio\/test\/internal\/SmartAssertions$.html#asExitInterrupted[E,A]:zio.test.TestArrow[zio.Exit[E,A],Boolean]", "kind" : "def"}, {"label" : "asExitFailure", "tail" : "(): TestArrow[Exit[E, Any], E]", "member" : "zio.test.internal.SmartAssertions.asExitFailure", "link" : "zio\/test\/internal\/SmartAssertions$.html#asExitFailure[E]:zio.test.TestArrow[zio.Exit[E,Any],E]", "kind" : "def"}, {"label" : "asExitCause", "tail" : "(): TestArrow[Exit[E, Any], Cause[E]]", "member" : "zio.test.internal.SmartAssertions.asExitCause", "link" : "zio\/test\/internal\/SmartAssertions$.html#asExitCause[E]:zio.test.TestArrow[zio.Exit[E,Any],zio.Cause[E]]", "kind" : "def"}, {"label" : "asExitDie", "tail" : "(): TestArrow[Exit[E, A], Throwable]", "member" : "zio.test.internal.SmartAssertions.asExitDie", "link" : "zio\/test\/internal\/SmartAssertions$.html#asExitDie[E,A]:zio.test.TestArrow[zio.Exit[E,A],Throwable]", "kind" : "def"}, {"label" : "asCauseInterrupted", "tail" : "(): TestArrow[Cause[E], Boolean]", "member" : "zio.test.internal.SmartAssertions.asCauseInterrupted", "link" : "zio\/test\/internal\/SmartAssertions$.html#asCauseInterrupted[E]:zio.test.TestArrow[zio.Cause[E],Boolean]", "kind" : "def"}, {"label" : "asCauseFailure", "tail" : "(): TestArrow[Cause[E], E]", "member" : "zio.test.internal.SmartAssertions.asCauseFailure", "link" : "zio\/test\/internal\/SmartAssertions$.html#asCauseFailure[E]:zio.test.TestArrow[zio.Cause[E],E]", "kind" : "def"}, {"label" : "asCauseDie", "tail" : "(): TestArrow[Cause[E], Throwable]", "member" : "zio.test.internal.SmartAssertions.asCauseDie", "link" : "zio\/test\/internal\/SmartAssertions$.html#asCauseDie[E]:zio.test.TestArrow[zio.Cause[E],Throwable]", "kind" : "def"}, {"label" : "equalToR", "tail" : "(that: B)(diff: OptionalImplicit[Diff[A]], conv: (B) => A): TestArrow[A, Boolean]", "member" : "zio.test.internal.SmartAssertions.equalToR", "link" : "zio\/test\/internal\/SmartAssertions$.html#equalToR[A,B](that:B)(implicitdiff:zio.test.internal.OptionalImplicit[zio.test.diff.Diff[A]],implicitconv:B=>A):zio.test.TestArrow[A,Boolean]", "kind" : "def"}, {"label" : "equalToL", "tail" : "(that: B)(diff: OptionalImplicit[Diff[B]], conv: (A) => B): TestArrow[A, Boolean]", "member" : "zio.test.internal.SmartAssertions.equalToL", "link" : "zio\/test\/internal\/SmartAssertions$.html#equalToL[A,B](that:B)(implicitdiff:zio.test.internal.OptionalImplicit[zio.test.diff.Diff[B]],implicitconv:A=>B):zio.test.TestArrow[A,Boolean]", "kind" : "def"}, {"label" : "equalTo", "tail" : "(that: A)(diff: OptionalImplicit[Diff[A]]): TestArrow[A, Boolean]", "member" : "zio.test.internal.SmartAssertions.equalTo", "link" : "zio\/test\/internal\/SmartAssertions$.html#equalTo[A](that:A)(implicitdiff:zio.test.internal.OptionalImplicit[zio.test.diff.Diff[A]]):zio.test.TestArrow[A,Boolean]", "kind" : "def"}, {"label" : "lessThanOrEqualToR", "tail" : "(that: B)(ordering: Ordering[A], conv: (B) => A): TestArrow[A, Boolean]", "member" : "zio.test.internal.SmartAssertions.lessThanOrEqualToR", "link" : "zio\/test\/internal\/SmartAssertions$.html#lessThanOrEqualToR[A,B](that:B)(implicitordering:Ordering[A],implicitconv:B=>A):zio.test.TestArrow[A,Boolean]", "kind" : "def"}, {"label" : "lessThanR", "tail" : "(that: B)(ordering: Ordering[A], conv: (B) => A): TestArrow[A, Boolean]", "member" : "zio.test.internal.SmartAssertions.lessThanR", "link" : "zio\/test\/internal\/SmartAssertions$.html#lessThanR[A,B](that:B)(implicitordering:Ordering[A],implicitconv:B=>A):zio.test.TestArrow[A,Boolean]", "kind" : "def"}, {"label" : "greaterThanOrEqualToR", "tail" : "(that: B)(ordering: Ordering[A], conv: (B) => A): TestArrow[A, Boolean]", "member" : "zio.test.internal.SmartAssertions.greaterThanOrEqualToR", "link" : "zio\/test\/internal\/SmartAssertions$.html#greaterThanOrEqualToR[A,B](that:B)(implicitordering:Ordering[A],implicitconv:B=>A):zio.test.TestArrow[A,Boolean]", "kind" : "def"}, {"label" : "greaterThanR", "tail" : "(that: B)(ordering: Ordering[A], conv: (B) => A): TestArrow[A, Boolean]", "member" : "zio.test.internal.SmartAssertions.greaterThanR", "link" : "zio\/test\/internal\/SmartAssertions$.html#greaterThanR[A,B](that:B)(implicitordering:Ordering[A],implicitconv:B=>A):zio.test.TestArrow[A,Boolean]", "kind" : "def"}, {"label" : "lessThanOrEqualToL", "tail" : "(that: B)(ordering: Ordering[B], conv: (A) => B): TestArrow[A, Boolean]", "member" : "zio.test.internal.SmartAssertions.lessThanOrEqualToL", "link" : "zio\/test\/internal\/SmartAssertions$.html#lessThanOrEqualToL[A,B](that:B)(implicitordering:Ordering[B],implicitconv:A=>B):zio.test.TestArrow[A,Boolean]", "kind" : "def"}, {"label" : "lessThanL", "tail" : "(that: B)(ordering: Ordering[B], conv: (A) => B): TestArrow[A, Boolean]", "member" : "zio.test.internal.SmartAssertions.lessThanL", "link" : "zio\/test\/internal\/SmartAssertions$.html#lessThanL[A,B](that:B)(implicitordering:Ordering[B],implicitconv:A=>B):zio.test.TestArrow[A,Boolean]", "kind" : "def"}, {"label" : "greaterThanOrEqualToL", "tail" : "(that: B)(ordering: Ordering[B], conv: (A) => B): TestArrow[A, Boolean]", "member" : "zio.test.internal.SmartAssertions.greaterThanOrEqualToL", "link" : "zio\/test\/internal\/SmartAssertions$.html#greaterThanOrEqualToL[A,B](that:B)(implicitordering:Ordering[B],implicitconv:A=>B):zio.test.TestArrow[A,Boolean]", "kind" : "def"}, {"label" : "greaterThanL", "tail" : "(that: B)(ordering: Ordering[B], conv: (A) => B): TestArrow[A, Boolean]", "member" : "zio.test.internal.SmartAssertions.greaterThanL", "link" : "zio\/test\/internal\/SmartAssertions$.html#greaterThanL[A,B](that:B)(implicitordering:Ordering[B],implicitconv:A=>B):zio.test.TestArrow[A,Boolean]", "kind" : "def"}, {"label" : "lessThanOrEqualTo", "tail" : "(that: A)(ordering: Ordering[A]): TestArrow[A, Boolean]", "member" : "zio.test.internal.SmartAssertions.lessThanOrEqualTo", "link" : "zio\/test\/internal\/SmartAssertions$.html#lessThanOrEqualTo[A](that:A)(implicitordering:Ordering[A]):zio.test.TestArrow[A,Boolean]", "kind" : "def"}, {"label" : "lessThan", "tail" : "(that: A)(ordering: Ordering[A]): TestArrow[A, Boolean]", "member" : "zio.test.internal.SmartAssertions.lessThan", "link" : "zio\/test\/internal\/SmartAssertions$.html#lessThan[A](that:A)(implicitordering:Ordering[A]):zio.test.TestArrow[A,Boolean]", "kind" : "def"}, {"label" : "greaterThanOrEqualTo", "tail" : "(that: A)(ordering: Ordering[A]): TestArrow[A, Boolean]", "member" : "zio.test.internal.SmartAssertions.greaterThanOrEqualTo", "link" : "zio\/test\/internal\/SmartAssertions$.html#greaterThanOrEqualTo[A](that:A)(implicitordering:Ordering[A]):zio.test.TestArrow[A,Boolean]", "kind" : "def"}, {"label" : "greaterThan", "tail" : "(that: A)(ordering: Ordering[A]): TestArrow[A, Boolean]", "member" : "zio.test.internal.SmartAssertions.greaterThan", "link" : "zio\/test\/internal\/SmartAssertions$.html#greaterThan[A](that:A)(implicitordering:Ordering[A]):zio.test.TestArrow[A,Boolean]", "kind" : "def"}, {"label" : "isOdd", "tail" : "(integral: Integral[A]): TestArrow[A, Boolean]", "member" : "zio.test.internal.SmartAssertions.isOdd", "link" : "zio\/test\/internal\/SmartAssertions$.html#isOdd[A](implicitintegral:Integral[A]):zio.test.TestArrow[A,Boolean]", "kind" : "def"}, {"label" : "isEven", "tail" : "(integral: Integral[A]): TestArrow[A, Boolean]", "member" : "zio.test.internal.SmartAssertions.isEven", "link" : "zio\/test\/internal\/SmartAssertions$.html#isEven[A](implicitintegral:Integral[A]):zio.test.TestArrow[A,Boolean]", "kind" : "def"}, {"label" : "last", "tail" : "(): TestArrow[Iterable[A], A]", "member" : "zio.test.internal.SmartAssertions.last", "link" : "zio\/test\/internal\/SmartAssertions$.html#last[A]:zio.test.TestArrow[Iterable[A],A]", "kind" : "def"}, {"label" : "head", "tail" : "(): TestArrow[Iterable[A], A]", "member" : "zio.test.internal.SmartAssertions.head", "link" : "zio\/test\/internal\/SmartAssertions$.html#head[A]:zio.test.TestArrow[Iterable[A],A]", "kind" : "def"}, {"label" : "hasKey", "tail" : "(key: K): TestArrow[Map[K, V], V]", "member" : "zio.test.internal.SmartAssertions.hasKey", "link" : "zio\/test\/internal\/SmartAssertions$.html#hasKey[K,V](key:K):zio.test.TestArrow[Map[K,V],V]", "kind" : "def"}, {"label" : "hasField", "tail" : "(name: String, proj: (A) => B): TestArrow[A, B]", "member" : "zio.test.internal.SmartAssertions.hasField", "link" : "zio\/test\/internal\/SmartAssertions$.html#hasField[A,B](name:String,proj:A=>B):zio.test.TestArrow[A,B]", "kind" : "def"}, {"label" : "hasAt", "tail" : "(index: Int): TestArrow[Seq[A], A]", "member" : "zio.test.internal.SmartAssertions.hasAt", "link" : "zio\/test\/internal\/SmartAssertions$.html#hasAt[A](index:Int):zio.test.TestArrow[Seq[A],A]", "kind" : "def"}, {"label" : "containsString", "tail" : "(value: String): TestArrow[String, Boolean]", "member" : "zio.test.internal.SmartAssertions.containsString", "link" : "zio\/test\/internal\/SmartAssertions$.html#containsString(value:String):zio.test.TestArrow[String,Boolean]", "kind" : "def"}, {"label" : "containsOption", "tail" : "(value: A): TestArrow[Option[A], Boolean]", "member" : "zio.test.internal.SmartAssertions.containsOption", "link" : "zio\/test\/internal\/SmartAssertions$.html#containsOption[A](value:A):zio.test.TestArrow[Option[A],Boolean]", "kind" : "def"}, {"label" : "containsCause", "tail" : "(expected: Cause[E]): TestArrow[Cause[E], Boolean]", "member" : "zio.test.internal.SmartAssertions.containsCause", "link" : "zio\/test\/internal\/SmartAssertions$.html#containsCause[E](expected:zio.Cause[E]):zio.test.TestArrow[zio.Cause[E],Boolean]", "kind" : "def"}, {"label" : "containsIterable", "tail" : "(value: A): TestArrow[Iterable[A], Boolean]", "member" : "zio.test.internal.SmartAssertions.containsIterable", "link" : "zio\/test\/internal\/SmartAssertions$.html#containsIterable[A](value:A):zio.test.TestArrow[Iterable[A],Boolean]", "kind" : "def"}, {"label" : "containsSeq", "tail" : "(value: A): TestArrow[Seq[B], Boolean]", "member" : "zio.test.internal.SmartAssertions.containsSeq", "link" : "zio\/test\/internal\/SmartAssertions$.html#containsSeq[A,B>:A](value:A):zio.test.TestArrow[Seq[B],Boolean]", "kind" : "def"}, {"label" : "existsIterable", "tail" : "(predicate: TestArrow[A, Boolean]): TestArrow[Iterable[A], Boolean]", "member" : "zio.test.internal.SmartAssertions.existsIterable", "link" : "zio\/test\/internal\/SmartAssertions$.html#existsIterable[A](predicate:zio.test.TestArrow[A,Boolean]):zio.test.TestArrow[Iterable[A],Boolean]", "kind" : "def"}, {"label" : "forallIterable", "tail" : "(predicate: TestArrow[A, Boolean]): TestArrow[Iterable[A], Boolean]", "member" : "zio.test.internal.SmartAssertions.forallIterable", "link" : "zio\/test\/internal\/SmartAssertions$.html#forallIterable[A](predicate:zio.test.TestArrow[A,Boolean]):zio.test.TestArrow[Iterable[A],Boolean]", "kind" : "def"}, {"label" : "isDefinedOption", "tail" : "(): TestArrow[Option[Any], Boolean]", "member" : "zio.test.internal.SmartAssertions.isDefinedOption", "link" : "zio\/test\/internal\/SmartAssertions$.html#isDefinedOption:zio.test.TestArrow[Option[Any],Boolean]", "kind" : "def"}, {"label" : "isEmptyOption", "tail" : "(): TestArrow[Option[Any], Boolean]", "member" : "zio.test.internal.SmartAssertions.isEmptyOption", "link" : "zio\/test\/internal\/SmartAssertions$.html#isEmptyOption:zio.test.TestArrow[Option[Any],Boolean]", "kind" : "def"}, {"label" : "isNonEmptyString", "tail" : "(): TestArrow[String, Boolean]", "member" : "zio.test.internal.SmartAssertions.isNonEmptyString", "link" : "zio\/test\/internal\/SmartAssertions$.html#isNonEmptyString:zio.test.TestArrow[String,Boolean]", "kind" : "def"}, {"label" : "isNonEmptyIterable", "tail" : "(): TestArrow[Iterable[Any], Boolean]", "member" : "zio.test.internal.SmartAssertions.isNonEmptyIterable", "link" : "zio\/test\/internal\/SmartAssertions$.html#isNonEmptyIterable:zio.test.TestArrow[Iterable[Any],Boolean]", "kind" : "def"}, {"label" : "isEmptyString", "tail" : "(): TestArrow[String, Boolean]", "member" : "zio.test.internal.SmartAssertions.isEmptyString", "link" : "zio\/test\/internal\/SmartAssertions$.html#isEmptyString:zio.test.TestArrow[String,Boolean]", "kind" : "def"}, {"label" : "isEmptyIterable", "tail" : "(): TestArrow[Iterable[A], Boolean]", "member" : "zio.test.internal.SmartAssertions.isEmptyIterable", "link" : "zio\/test\/internal\/SmartAssertions$.html#isEmptyIterable[A]:zio.test.TestArrow[Iterable[A],Boolean]", "kind" : "def"}, {"label" : "asLeft", "tail" : "(): TestArrow[Either[A, _], A]", "member" : "zio.test.internal.SmartAssertions.asLeft", "link" : "zio\/test\/internal\/SmartAssertions$.html#asLeft[A]:zio.test.TestArrow[Either[A,_],A]", "kind" : "def"}, {"label" : "asRight", "tail" : "(): TestArrow[Either[_, A], A]", "member" : "zio.test.internal.SmartAssertions.asRight", "link" : "zio\/test\/internal\/SmartAssertions$.html#asRight[A]:zio.test.TestArrow[Either[_,A],A]", "kind" : "def"}, {"label" : "asTryFailure", "tail" : "(): TestArrow[Try[A], Throwable]", "member" : "zio.test.internal.SmartAssertions.asTryFailure", "link" : "zio\/test\/internal\/SmartAssertions$.html#asTryFailure[A]:zio.test.TestArrow[scala.util.Try[A],Throwable]", "kind" : "def"}, {"label" : "asTrySuccess", "tail" : "(): TestArrow[Try[A], A]", "member" : "zio.test.internal.SmartAssertions.asTrySuccess", "link" : "zio\/test\/internal\/SmartAssertions$.html#asTrySuccess[A]:zio.test.TestArrow[scala.util.Try[A],A]", "kind" : "def"}, {"label" : "isSome", "tail" : "(): TestArrow[Option[A], A]", "member" : "zio.test.internal.SmartAssertions.isSome", "link" : "zio\/test\/internal\/SmartAssertions$.html#isSome[A]:zio.test.TestArrow[Option[A],A]", "kind" : "def"}, {"label" : "custom", "tail" : "(customAssertion: CustomAssertion[A, B]): TestArrow[A, B]", "member" : "zio.test.internal.SmartAssertions.custom", "link" : "zio\/test\/internal\/SmartAssertions$.html#custom[A,B](customAssertion:zio.test.CustomAssertion[A,B]):zio.test.TestArrow[A,B]", "kind" : "def"}, {"label" : "approximatelyEquals", "tail" : "(reference: A, tolerance: A)(arg0: Numeric[A]): TestArrow[A, Boolean]", "member" : "zio.test.internal.SmartAssertions.approximatelyEquals", "link" : "zio\/test\/internal\/SmartAssertions$.html#approximatelyEquals[A](reference:A,tolerance:A)(implicitevidence$1:Numeric[A]):zio.test.TestArrow[A,Boolean]", "kind" : "def"}, {"label" : "anything", "tail" : ": TestArrow[Any, Boolean]", "member" : "zio.test.internal.SmartAssertions.anything", "link" : "zio\/test\/internal\/SmartAssertions$.html#anything:zio.test.TestArrow[Any,Boolean]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/internal\/SmartAssertions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/internal\/SmartAssertions$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/internal\/SmartAssertions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/internal\/SmartAssertions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/internal\/SmartAssertions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/internal\/SmartAssertions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/internal\/SmartAssertions$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/internal\/SmartAssertions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/internal\/SmartAssertions$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/internal\/SmartAssertions$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/internal\/SmartAssertions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/internal\/SmartAssertions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/SmartAssertions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/SmartAssertions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/SmartAssertions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/internal\/SmartAssertions$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/internal\/SmartAssertions$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/internal\/SmartAssertions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/internal\/SmartAssertions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "zio.test.laws" : [{"name" : "zio.test.laws.GenF", "object" : "zio\/test\/laws\/GenF$.html", "members_object" : [{"label" : "vector", "tail" : ": GenF[Any, Vector]", "member" : "zio.test.laws.GenF.vector", "link" : "zio\/test\/laws\/GenF$.html#vector:zio.test.laws.GenF[Any,Vector]", "kind" : "val"}, {"label" : "set", "tail" : ": GenF[Any, Set]", "member" : "zio.test.laws.GenF.set", "link" : "zio\/test\/laws\/GenF$.html#set:zio.test.laws.GenF[Any,Set]", "kind" : "val"}, {"label" : "option", "tail" : ": GenF[Any, Option]", "member" : "zio.test.laws.GenF.option", "link" : "zio\/test\/laws\/GenF$.html#option:zio.test.laws.GenF[Any,Option]", "kind" : "val"}, {"label" : "map", "tail" : "(a: Gen[R, A]): GenF[R, [+x]Map[A, x]]", "member" : "zio.test.laws.GenF.map", "link" : "zio\/test\/laws\/GenF$.html#map[R,A](a:zio.test.Gen[R,A]):zio.test.laws.GenF[R,[+x]scala.collection.immutable.Map[A,x]]", "kind" : "def"}, {"label" : "list", "tail" : ": GenF[Any, List]", "member" : "zio.test.laws.GenF.list", "link" : "zio\/test\/laws\/GenF$.html#list:zio.test.laws.GenF[Any,List]", "kind" : "val"}, {"label" : "either", "tail" : "(a: Gen[R, A]): GenF[R, [+x]Either[A, x]]", "member" : "zio.test.laws.GenF.either", "link" : "zio\/test\/laws\/GenF$.html#either[R,A](a:zio.test.Gen[R,A]):zio.test.laws.GenF[R,[+x]scala.util.Either[A,x]]", "kind" : "def"}, {"label" : "chunk", "tail" : ": GenF[Any, Chunk]", "member" : "zio.test.laws.GenF.chunk", "link" : "zio\/test\/laws\/GenF$.html#chunk:zio.test.laws.GenF[Any,zio.Chunk]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/laws\/GenF$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/laws\/GenF$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/laws\/GenF$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/laws\/GenF$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/laws\/GenF$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/laws\/GenF$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/laws\/GenF$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/laws\/GenF$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/laws\/GenF$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/laws\/GenF$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/laws\/GenF$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/laws\/GenF$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/GenF$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/GenF$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/GenF$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/laws\/GenF$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/laws\/GenF$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/laws\/GenF$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/laws\/GenF$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/laws\/GenF.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/laws\/GenF.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/laws\/GenF.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/laws\/GenF.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/laws\/GenF.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/laws\/GenF.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/laws\/GenF.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/laws\/GenF.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/laws\/GenF.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/laws\/GenF.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/laws\/GenF.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/laws\/GenF.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/laws\/GenF.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/GenF.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/GenF.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/GenF.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/laws\/GenF.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/laws\/GenF.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/laws\/GenF.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/laws\/GenF.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(gen: Gen[R1, A])(trace: Trace): Gen[R1, F[A]]", "member" : "zio.test.laws.GenF.apply", "link" : "zio\/test\/laws\/GenF.html#apply[R1<:R,A](gen:zio.test.Gen[R1,A])(implicittrace:zio.Trace):zio.test.Gen[R1,F[A]]", "kind" : "abstract def"}], "shortDescription" : "A GenF knows how to construct a generator of F[A] values given agenerator of A values for any A."}, {"name" : "zio.test.laws.GenF2", "object" : "zio\/test\/laws\/GenF2$.html", "members_object" : [{"label" : "function1", "tail" : ": GenF2[Any, Function1]", "member" : "zio.test.laws.GenF2.function1", "link" : "zio\/test\/laws\/GenF2$.html#function1:zio.test.laws.GenF2[Any,Function1]", "kind" : "val"}, {"label" : "functionWith4", "tail" : "(gen: Gen[R, E])(hash: (A, B, C, D) => Int)(trace: Trace): Gen[R, (A, B, C, D) => E]", "member" : "zio.test.FunctionVariants.functionWith4", "link" : "zio\/test\/laws\/GenF2$.html#functionWith4[R,A,B,C,D,E](gen:zio.test.Gen[R,E])(hash:(A,B,C,D)=>Int)(implicittrace:zio.Trace):zio.test.Gen[R,(A,B,C,D)=>E]", "kind" : "final def"}, {"label" : "functionWith3", "tail" : "(gen: Gen[R, D])(hash: (A, B, C) => Int)(trace: Trace): Gen[R, (A, B, C) => D]", "member" : "zio.test.FunctionVariants.functionWith3", "link" : "zio\/test\/laws\/GenF2$.html#functionWith3[R,A,B,C,D](gen:zio.test.Gen[R,D])(hash:(A,B,C)=>Int)(implicittrace:zio.Trace):zio.test.Gen[R,(A,B,C)=>D]", "kind" : "final def"}, {"label" : "functionWith2", "tail" : "(gen: Gen[R, C])(hash: (A, B) => Int)(trace: Trace): Gen[R, (A, B) => C]", "member" : "zio.test.FunctionVariants.functionWith2", "link" : "zio\/test\/laws\/GenF2$.html#functionWith2[R,A,B,C](gen:zio.test.Gen[R,C])(hash:(A,B)=>Int)(implicittrace:zio.Trace):zio.test.Gen[R,(A,B)=>C]", "kind" : "final def"}, {"label" : "functionWith", "tail" : "(gen: Gen[R, B])(hash: (A) => Int)(trace: Trace): Gen[R, (A) => B]", "member" : "zio.test.FunctionVariants.functionWith", "link" : "zio\/test\/laws\/GenF2$.html#functionWith[R,A,B](gen:zio.test.Gen[R,B])(hash:A=>Int)(implicittrace:zio.Trace):zio.test.Gen[R,A=>B]", "kind" : "final def"}, {"label" : "function4", "tail" : "(gen: Gen[R, E])(trace: Trace): Gen[R, (A, B, C, D) => E]", "member" : "zio.test.FunctionVariants.function4", "link" : "zio\/test\/laws\/GenF2$.html#function4[R,A,B,C,D,E](gen:zio.test.Gen[R,E])(implicittrace:zio.Trace):zio.test.Gen[R,(A,B,C,D)=>E]", "kind" : "final def"}, {"label" : "function3", "tail" : "(gen: Gen[R, D])(trace: Trace): Gen[R, (A, B, C) => D]", "member" : "zio.test.FunctionVariants.function3", "link" : "zio\/test\/laws\/GenF2$.html#function3[R,A,B,C,D](gen:zio.test.Gen[R,D])(implicittrace:zio.Trace):zio.test.Gen[R,(A,B,C)=>D]", "kind" : "final def"}, {"label" : "function2", "tail" : "(gen: Gen[R, C])(trace: Trace): Gen[R, (A, B) => C]", "member" : "zio.test.FunctionVariants.function2", "link" : "zio\/test\/laws\/GenF2$.html#function2[R,A,B,C](gen:zio.test.Gen[R,C])(implicittrace:zio.Trace):zio.test.Gen[R,(A,B)=>C]", "kind" : "final def"}, {"label" : "function", "tail" : "(gen: Gen[R, B])(trace: Trace): Gen[R, (A) => B]", "member" : "zio.test.FunctionVariants.function", "link" : "zio\/test\/laws\/GenF2$.html#function[R,A,B](gen:zio.test.Gen[R,B])(implicittrace:zio.Trace):zio.test.Gen[R,A=>B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/laws\/GenF2$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/laws\/GenF2$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/laws\/GenF2$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/laws\/GenF2$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/laws\/GenF2$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/laws\/GenF2$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/laws\/GenF2$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/laws\/GenF2$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/laws\/GenF2$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/laws\/GenF2$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/laws\/GenF2$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/laws\/GenF2$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/GenF2$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/GenF2$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/GenF2$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/laws\/GenF2$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/laws\/GenF2$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/laws\/GenF2$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/laws\/GenF2$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/laws\/GenF2.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/laws\/GenF2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/laws\/GenF2.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/laws\/GenF2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/laws\/GenF2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/laws\/GenF2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/laws\/GenF2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/laws\/GenF2.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/laws\/GenF2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/laws\/GenF2.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/laws\/GenF2.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/laws\/GenF2.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/laws\/GenF2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/GenF2.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/GenF2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/GenF2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/laws\/GenF2.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/laws\/GenF2.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/laws\/GenF2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/laws\/GenF2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(gen: Gen[R1, B])(trace: Trace): Gen[R1, F[A, B]]", "member" : "zio.test.laws.GenF2.apply", "link" : "zio\/test\/laws\/GenF2.html#apply[R1<:R,A,B](gen:zio.test.Gen[R1,B])(implicittrace:zio.Trace):zio.test.Gen[R1,F[A,B]]", "kind" : "abstract def"}], "shortDescription" : "A GenF knows how to construct a generator of F[A,B] values given agenerator of A and generator of B values."}, {"name" : "zio.test.laws.LawfulF", "shortDescription" : "", "object" : "zio\/test\/laws\/package$$LawfulF$.html", "members_object" : [{"label" : "Invariant", "tail" : "", "member" : "zio.test.laws.LawfulF.Invariant", "link" : "zio\/test\/laws\/package$$LawfulF$.html#Invariant[-CapsF[_[_]],-Caps[_]]=zio.test.laws.ZLawfulF.Invariant[CapsF,Caps,Any]", "kind" : "type"}, {"label" : "Contravariant", "tail" : "", "member" : "zio.test.laws.LawfulF.Contravariant", "link" : "zio\/test\/laws\/package$$LawfulF$.html#Contravariant[-CapsF[_[-_]],-Caps[_]]=zio.test.laws.ZLawfulF.Contravariant[CapsF,Caps,Any]", "kind" : "type"}, {"label" : "Covariant", "tail" : "", "member" : "zio.test.laws.LawfulF.Covariant", "link" : "zio\/test\/laws\/package$$LawfulF$.html#Covariant[-CapsF[_[+_]],-Caps[_]]=zio.test.laws.ZLawfulF.Covariant[CapsF,Caps,Any]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/laws\/package$$LawfulF$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/laws\/package$$LawfulF$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/laws\/package$$LawfulF$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/laws\/package$$LawfulF$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/laws\/package$$LawfulF$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/laws\/package$$LawfulF$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/laws\/package$$LawfulF$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/laws\/package$$LawfulF$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/laws\/package$$LawfulF$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/laws\/package$$LawfulF$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/laws\/package$$LawfulF$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/laws\/package$$LawfulF$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/package$$LawfulF$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/package$$LawfulF$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/package$$LawfulF$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/laws\/package$$LawfulF$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/laws\/package$$LawfulF$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/laws\/package$$LawfulF$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/laws\/package$$LawfulF$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.laws.LawfulF2", "shortDescription" : "", "object" : "zio\/test\/laws\/package$$LawfulF2$.html", "members_object" : [{"label" : "Divariant", "tail" : "", "member" : "zio.test.laws.LawfulF2.Divariant", "link" : "zio\/test\/laws\/package$$LawfulF2$.html#Divariant[-CapsBoth[_[-_,+_]],-CapsLeft[_],-CapsRight[_]]=zio.test.laws.ZLawfulF2.Divariant[CapsBoth,CapsLeft,CapsRight,Any]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/laws\/package$$LawfulF2$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/laws\/package$$LawfulF2$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/laws\/package$$LawfulF2$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/laws\/package$$LawfulF2$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/laws\/package$$LawfulF2$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/laws\/package$$LawfulF2$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/laws\/package$$LawfulF2$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/laws\/package$$LawfulF2$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/laws\/package$$LawfulF2$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/laws\/package$$LawfulF2$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/laws\/package$$LawfulF2$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/laws\/package$$LawfulF2$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/package$$LawfulF2$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/package$$LawfulF2$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/package$$LawfulF2$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/laws\/package$$LawfulF2$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/laws\/package$$LawfulF2$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/laws\/package$$LawfulF2$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/laws\/package$$LawfulF2$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.laws.Laws", "shortDescription" : "", "object" : "zio\/test\/laws\/package$$Laws$.html", "members_object" : [{"label" : "Law3ZIO", "tail" : "", "member" : "zio.test.laws.Laws.Law3ZIO", "link" : "zio\/test\/laws\/package$$Laws$.html#Law3ZIO[-Caps[_]]=zio.test.laws.ZLaws.Law3ZIO[Caps,Any]", "kind" : "type"}, {"label" : "Law3", "tail" : "", "member" : "zio.test.laws.Laws.Law3", "link" : "zio\/test\/laws\/package$$Laws$.html#Law3[-Caps[_]]=zio.test.laws.ZLaws.Law3[Caps]", "kind" : "type"}, {"label" : "Law2ZIO", "tail" : "", "member" : "zio.test.laws.Laws.Law2ZIO", "link" : "zio\/test\/laws\/package$$Laws$.html#Law2ZIO[-Caps[_]]=zio.test.laws.ZLaws.Law2ZIO[Caps,Any]", "kind" : "type"}, {"label" : "Law2", "tail" : "", "member" : "zio.test.laws.Laws.Law2", "link" : "zio\/test\/laws\/package$$Laws$.html#Law2[-Caps[_]]=zio.test.laws.ZLaws.Law2[Caps]", "kind" : "type"}, {"label" : "Law1ZIO", "tail" : "", "member" : "zio.test.laws.Laws.Law1ZIO", "link" : "zio\/test\/laws\/package$$Laws$.html#Law1ZIO[-Caps[_]]=zio.test.laws.ZLaws.Law1ZIO[Caps,Any]", "kind" : "type"}, {"label" : "Law1", "tail" : "", "member" : "zio.test.laws.Laws.Law1", "link" : "zio\/test\/laws\/package$$Laws$.html#Law1[-Caps[_]]=zio.test.laws.ZLaws.Law1[Caps]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/laws\/package$$Laws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/laws\/package$$Laws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/laws\/package$$Laws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/laws\/package$$Laws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/laws\/package$$Laws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/laws\/package$$Laws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/laws\/package$$Laws$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/laws\/package$$Laws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/laws\/package$$Laws$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/laws\/package$$Laws$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/laws\/package$$Laws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/laws\/package$$Laws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/package$$Laws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/package$$Laws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/package$$Laws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/laws\/package$$Laws$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/laws\/package$$Laws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/laws\/package$$Laws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/laws\/package$$Laws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.laws.Laws2", "shortDescription" : "", "object" : "zio\/test\/laws\/package$$Laws2$.html", "members_object" : [{"label" : "Law1Right", "tail" : "", "member" : "zio.test.laws.Laws2.Law1Right", "link" : "zio\/test\/laws\/package$$Laws2$.html#Law1Right[-CapsBoth[_,_],-CapsLeft[_],-CapsRight[_]]=zio.test.laws.ZLaws2.Law1Right[CapsBoth,CapsLeft,CapsRight]", "kind" : "type"}, {"label" : "Law1Left", "tail" : "", "member" : "zio.test.laws.Laws2.Law1Left", "link" : "zio\/test\/laws\/package$$Laws2$.html#Law1Left[-CapsBoth[_,_],-CapsLeft[_],-CapsRight[_]]=zio.test.laws.ZLaws2.Law1Left[CapsBoth,CapsLeft,CapsRight]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/laws\/package$$Laws2$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/laws\/package$$Laws2$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/laws\/package$$Laws2$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/laws\/package$$Laws2$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/laws\/package$$Laws2$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/laws\/package$$Laws2$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/laws\/package$$Laws2$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/laws\/package$$Laws2$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/laws\/package$$Laws2$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/laws\/package$$Laws2$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/laws\/package$$Laws2$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/laws\/package$$Laws2$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/package$$Laws2$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/package$$Laws2$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/package$$Laws2$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/laws\/package$$Laws2$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/laws\/package$$Laws2$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/laws\/package$$Laws2$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/laws\/package$$Laws2$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.laws.LawsF", "shortDescription" : "", "object" : "zio\/test\/laws\/package$$LawsF$.html", "members_object" : [{"label" : "Invariant", "tail" : "", "member" : "zio.test.laws.LawsF.Invariant", "link" : "zio\/test\/laws\/package$$LawsF$.html#Invariant", "kind" : "object"}, {"label" : "Contravariant", "tail" : "", "member" : "zio.test.laws.LawsF.Contravariant", "link" : "zio\/test\/laws\/package$$LawsF$.html#Contravariant", "kind" : "object"}, {"label" : "Covariant", "tail" : "", "member" : "zio.test.laws.LawsF.Covariant", "link" : "zio\/test\/laws\/package$$LawsF$.html#Covariant", "kind" : "object"}, {"label" : "Invariant", "tail" : "", "member" : "zio.test.laws.LawsF.Invariant", "link" : "zio\/test\/laws\/package$$LawsF$.html#Invariant[-CapsF[_[_]],-Caps[_]]=zio.test.laws.ZLawsF.Invariant[CapsF,Caps,Any]", "kind" : "type"}, {"label" : "Contravariant", "tail" : "", "member" : "zio.test.laws.LawsF.Contravariant", "link" : "zio\/test\/laws\/package$$LawsF$.html#Contravariant[-CapsF[_[-_]],-Caps[_]]=zio.test.laws.ZLawsF.Contravariant[CapsF,Caps,Any]", "kind" : "type"}, {"label" : "Covariant", "tail" : "", "member" : "zio.test.laws.LawsF.Covariant", "link" : "zio\/test\/laws\/package$$LawsF$.html#Covariant[-CapsF[_[+_]],-Caps[_]]=zio.test.laws.ZLawsF.Covariant[CapsF,Caps,Any]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/laws\/package$$LawsF$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/laws\/package$$LawsF$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/laws\/package$$LawsF$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/laws\/package$$LawsF$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/laws\/package$$LawsF$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/laws\/package$$LawsF$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/laws\/package$$LawsF$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/laws\/package$$LawsF$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/laws\/package$$LawsF$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/laws\/package$$LawsF$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/laws\/package$$LawsF$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/laws\/package$$LawsF$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/package$$LawsF$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/package$$LawsF$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/package$$LawsF$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/laws\/package$$LawsF$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/laws\/package$$LawsF$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/laws\/package$$LawsF$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/laws\/package$$LawsF$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.laws.LawsF2", "shortDescription" : "", "object" : "zio\/test\/laws\/package$$LawsF2$.html", "members_object" : [{"label" : "Divariant", "tail" : "", "member" : "zio.test.laws.LawsF2.Divariant", "link" : "zio\/test\/laws\/package$$LawsF2$.html#Divariant", "kind" : "object"}, {"label" : "Divariant", "tail" : "", "member" : "zio.test.laws.LawsF2.Divariant", "link" : "zio\/test\/laws\/package$$LawsF2$.html#Divariant[-CapsBoth[_[-_,+_]],-CapsLeft[_],-CapsRight[_]]=zio.test.laws.ZLawsF2.Divariant[CapsBoth,CapsLeft,CapsRight,Any]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/laws\/package$$LawsF2$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/laws\/package$$LawsF2$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/laws\/package$$LawsF2$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/laws\/package$$LawsF2$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/laws\/package$$LawsF2$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/laws\/package$$LawsF2$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/laws\/package$$LawsF2$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/laws\/package$$LawsF2$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/laws\/package$$LawsF2$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/laws\/package$$LawsF2$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/laws\/package$$LawsF2$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/laws\/package$$LawsF2$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/package$$LawsF2$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/package$$LawsF2$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/package$$LawsF2$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/laws\/package$$LawsF2$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/laws\/package$$LawsF2$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/laws\/package$$LawsF2$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/laws\/package$$LawsF2$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.laws.ZLawful", "trait" : "zio\/test\/laws\/ZLawful.html", "kind" : "trait", "members_trait" : [{"label" : "+", "tail" : "(that: ZLawful[Caps1, R1]): ZLawful[Caps1, R1]", "member" : "zio.test.laws.ZLawful.+", "link" : "zio\/test\/laws\/ZLawful.html#+[Caps1[x]<:Caps[x],R1<:R](that:zio.test.laws.ZLawful[Caps1,R1]):zio.test.laws.ZLawful[Caps1,R1]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/laws\/ZLawful.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/laws\/ZLawful.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/laws\/ZLawful.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/laws\/ZLawful.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/laws\/ZLawful.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/laws\/ZLawful.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/laws\/ZLawful.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/laws\/ZLawful.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/laws\/ZLawful.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/laws\/ZLawful.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/laws\/ZLawful.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/laws\/ZLawful.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLawful.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLawful.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLawful.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/laws\/ZLawful.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/laws\/ZLawful.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/laws\/ZLawful.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/laws\/ZLawful.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): ZLaws[Caps, R]", "member" : "zio.test.laws.ZLawful.laws", "link" : "zio\/test\/laws\/ZLawful.html#laws:zio.test.laws.ZLaws[Caps,R]", "kind" : "abstract def"}], "shortDescription" : "ZLawful[Caps, R] describes a capability that is expected to satisfy a setof laws."}, {"name" : "zio.test.laws.ZLawful2", "trait" : "zio\/test\/laws\/ZLawful2.html", "kind" : "trait", "members_trait" : [{"label" : "+", "tail" : "(that: ZLawful2[CapsBoth1, CapsLeft1, CapsRight1, R1]): ZLawful2[CapsBoth1, CapsLeft1, CapsRight1, R1]", "member" : "zio.test.laws.ZLawful2.+", "link" : "zio\/test\/laws\/ZLawful2.html#+[CapsBoth1[x,y]<:CapsBoth[x,y],CapsLeft1[x]<:CapsLeft[x],CapsRight1[x]<:CapsRight[x],R1<:R](that:zio.test.laws.ZLawful2[CapsBoth1,CapsLeft1,CapsRight1,R1]):zio.test.laws.ZLawful2[CapsBoth1,CapsLeft1,CapsRight1,R1]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/laws\/ZLawful2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/laws\/ZLawful2.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/laws\/ZLawful2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/laws\/ZLawful2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/laws\/ZLawful2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/laws\/ZLawful2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/laws\/ZLawful2.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/laws\/ZLawful2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/laws\/ZLawful2.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/laws\/ZLawful2.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/laws\/ZLawful2.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/laws\/ZLawful2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLawful2.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLawful2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLawful2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/laws\/ZLawful2.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/laws\/ZLawful2.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/laws\/ZLawful2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/laws\/ZLawful2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): ZLaws2[CapsBoth, CapsLeft, CapsRight, R]", "member" : "zio.test.laws.ZLawful2.laws", "link" : "zio\/test\/laws\/ZLawful2.html#laws:zio.test.laws.ZLaws2[CapsBoth,CapsLeft,CapsRight,R]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.test.laws.ZLawfulF", "shortDescription" : "ZLawfulF[CapsF, Caps, R] describes a set of laws that a parameterized typeF[A] with capabilities CapsF is expected to satisfy with respect to alltypes A that have capabilities Caps.", "object" : "zio\/test\/laws\/ZLawfulF$.html", "members_object" : [{"label" : "Invariant", "tail" : "", "member" : "zio.test.laws.ZLawfulF.Invariant", "link" : "zio\/test\/laws\/ZLawfulF$.html#Invariant[-CapsF[_[_]],-Caps[_],-R]extendsAnyRef", "kind" : "trait"}, {"label" : "Contravariant", "tail" : "", "member" : "zio.test.laws.ZLawfulF.Contravariant", "link" : "zio\/test\/laws\/ZLawfulF$.html#Contravariant[-CapsF[_[-_]],-Caps[_],-R]extendsAnyRef", "kind" : "trait"}, {"label" : "Covariant", "tail" : "", "member" : "zio.test.laws.ZLawfulF.Covariant", "link" : "zio\/test\/laws\/ZLawfulF$.html#Covariant[-CapsF[_[+_]],-Caps[_],-R]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/laws\/ZLawfulF$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/laws\/ZLawfulF$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/laws\/ZLawfulF$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/laws\/ZLawfulF$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/laws\/ZLawfulF$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/laws\/ZLawfulF$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/laws\/ZLawfulF$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/laws\/ZLawfulF$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/laws\/ZLawfulF$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/laws\/ZLawfulF$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/laws\/ZLawfulF$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/laws\/ZLawfulF$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLawfulF$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLawfulF$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLawfulF$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/laws\/ZLawfulF$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/laws\/ZLawfulF$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/laws\/ZLawfulF$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/laws\/ZLawfulF$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.laws.ZLawfulF2", "shortDescription" : "", "object" : "zio\/test\/laws\/ZLawfulF2$.html", "members_object" : [{"label" : "Divariant", "tail" : "", "member" : "zio.test.laws.ZLawfulF2.Divariant", "link" : "zio\/test\/laws\/ZLawfulF2$.html#Divariant[-CapsBoth[_[-_,+_]],-CapsLeft[_],-CapsRight[_],-R]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/laws\/ZLawfulF2$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/laws\/ZLawfulF2$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/laws\/ZLawfulF2$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/laws\/ZLawfulF2$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/laws\/ZLawfulF2$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/laws\/ZLawfulF2$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/laws\/ZLawfulF2$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/laws\/ZLawfulF2$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/laws\/ZLawfulF2$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/laws\/ZLawfulF2$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/laws\/ZLawfulF2$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/laws\/ZLawfulF2$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLawfulF2$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLawfulF2$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLawfulF2$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/laws\/ZLawfulF2$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/laws\/ZLawfulF2$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/laws\/ZLawfulF2$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/laws\/ZLawfulF2$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.laws.ZLaws", "shortDescription" : "ZLaws[Caps, R] represents a set of laws that values with capabilitiesCaps are expected to satisfy.", "object" : "zio\/test\/laws\/ZLaws$.html", "members_class" : [{"label" : "+", "tail" : "(that: ZLaws[Caps1, R1]): ZLaws[Caps1, R1]", "member" : "zio.test.laws.ZLaws.+", "link" : "zio\/test\/laws\/ZLaws.html#+[Caps1[x]<:Caps[x],R1<:R](that:zio.test.laws.ZLaws[Caps1,R1]):zio.test.laws.ZLaws[Caps1,R1]", "kind" : "def"}, {"member" : "zio.test.laws.ZLaws#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/laws\/ZLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/laws\/ZLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/laws\/ZLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/laws\/ZLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/laws\/ZLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/laws\/ZLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/laws\/ZLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/laws\/ZLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/laws\/ZLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/laws\/ZLaws.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/laws\/ZLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/laws\/ZLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/laws\/ZLaws.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/laws\/ZLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/laws\/ZLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/laws\/ZLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "run", "tail" : "(gen: Gen[R1, A])(arg0: Caps[A], trace: Trace): ZIO[R1, Nothing, TestResult]", "member" : "zio.test.laws.ZLaws.run", "link" : "zio\/test\/laws\/ZLaws.html#run[R1<:R,A](gen:zio.test.Gen[R1,A])(implicitevidence$1:Caps[A],implicittrace:zio.Trace):zio.ZIO[R1,Nothing,zio.test.TestResult]", "kind" : "abstract def"}], "members_object" : [{"label" : "Law3ZIO", "tail" : "", "member" : "zio.test.laws.ZLaws.Law3ZIO", "link" : "zio\/test\/laws\/ZLaws$.html#Law3ZIO[-Caps[_],-R]extendsZLaws[Caps,R]", "kind" : "abstract class"}, {"label" : "Law3", "tail" : "", "member" : "zio.test.laws.ZLaws.Law3", "link" : "zio\/test\/laws\/ZLaws$.html#Law3[-Caps[_]]extendsZLaws[Caps,Any]", "kind" : "abstract class"}, {"label" : "Law2ZIO", "tail" : "", "member" : "zio.test.laws.ZLaws.Law2ZIO", "link" : "zio\/test\/laws\/ZLaws$.html#Law2ZIO[-Caps[_],-R]extendsZLaws[Caps,R]", "kind" : "abstract class"}, {"label" : "Law2", "tail" : "", "member" : "zio.test.laws.ZLaws.Law2", "link" : "zio\/test\/laws\/ZLaws$.html#Law2[-Caps[_]]extendsZLaws[Caps,Any]", "kind" : "abstract class"}, {"label" : "Law1ZIO", "tail" : "", "member" : "zio.test.laws.ZLaws.Law1ZIO", "link" : "zio\/test\/laws\/ZLaws$.html#Law1ZIO[-Caps[_],-R]extendsZLaws[Caps,R]", "kind" : "abstract class"}, {"label" : "Law1", "tail" : "", "member" : "zio.test.laws.ZLaws.Law1", "link" : "zio\/test\/laws\/ZLaws$.html#Law1[-Caps[_]]extendsZLaws[Caps,Any]", "kind" : "abstract class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/laws\/ZLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/laws\/ZLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/laws\/ZLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/laws\/ZLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/laws\/ZLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/laws\/ZLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/laws\/ZLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/laws\/ZLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/laws\/ZLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/laws\/ZLaws$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/laws\/ZLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/laws\/ZLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/laws\/ZLaws$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/laws\/ZLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/laws\/ZLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/laws\/ZLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/test\/laws\/ZLaws.html", "kind" : "class"}, {"name" : "zio.test.laws.ZLaws2", "shortDescription" : "", "object" : "zio\/test\/laws\/ZLaws2$.html", "members_class" : [{"label" : "+", "tail" : "(that: ZLaws2[CapsBoth1, CapsLeft1, CapsRight1, R1]): ZLaws2[CapsBoth1, CapsLeft1, CapsRight1, R1]", "member" : "zio.test.laws.ZLaws2.+", "link" : "zio\/test\/laws\/ZLaws2.html#+[CapsBoth1[x,y]<:CapsBoth[x,y],CapsLeft1[x]<:CapsLeft[x],CapsRight1[x]<:CapsRight[x],R1<:R](that:zio.test.laws.ZLaws2[CapsBoth1,CapsLeft1,CapsRight1,R1]):zio.test.laws.ZLaws2[CapsBoth1,CapsLeft1,CapsRight1,R1]", "kind" : "def"}, {"member" : "zio.test.laws.ZLaws2#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/laws\/ZLaws2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/laws\/ZLaws2.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/laws\/ZLaws2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/laws\/ZLaws2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/laws\/ZLaws2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/laws\/ZLaws2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/laws\/ZLaws2.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/laws\/ZLaws2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/laws\/ZLaws2.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/laws\/ZLaws2.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/laws\/ZLaws2.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/laws\/ZLaws2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLaws2.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLaws2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLaws2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/laws\/ZLaws2.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/laws\/ZLaws2.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/laws\/ZLaws2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/laws\/ZLaws2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "run", "tail" : "(left: Gen[R1, A], right: Gen[R1, B])(arg0: CapsLeft[A], arg1: CapsRight[B], CapsBoth: CapsBoth[A, B], trace: Trace): ZIO[R1, Nothing, TestResult]", "member" : "zio.test.laws.ZLaws2.run", "link" : "zio\/test\/laws\/ZLaws2.html#run[R1<:R,A,B](left:zio.test.Gen[R1,A],right:zio.test.Gen[R1,B])(implicitevidence$1:CapsLeft[A],implicitevidence$2:CapsRight[B],implicitCapsBoth:CapsBoth[A,B],implicittrace:zio.Trace):zio.ZIO[R1,Nothing,zio.test.TestResult]", "kind" : "abstract def"}], "members_object" : [{"label" : "Law1Right", "tail" : "", "member" : "zio.test.laws.ZLaws2.Law1Right", "link" : "zio\/test\/laws\/ZLaws2$.html#Law1Right[-CapsBoth[_,_],-CapsLeft[_],-CapsRight[_]]extendsZLaws2[CapsBoth,CapsLeft,CapsRight,Any]", "kind" : "abstract class"}, {"label" : "Law1Left", "tail" : "", "member" : "zio.test.laws.ZLaws2.Law1Left", "link" : "zio\/test\/laws\/ZLaws2$.html#Law1Left[-CapsBoth[_,_],-CapsLeft[_],-CapsRight[_]]extendsZLaws2[CapsBoth,CapsLeft,CapsRight,Any]", "kind" : "abstract class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/laws\/ZLaws2$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/laws\/ZLaws2$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/laws\/ZLaws2$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/laws\/ZLaws2$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/laws\/ZLaws2$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/laws\/ZLaws2$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/laws\/ZLaws2$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/laws\/ZLaws2$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/laws\/ZLaws2$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/laws\/ZLaws2$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/laws\/ZLaws2$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/laws\/ZLaws2$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLaws2$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLaws2$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLaws2$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/laws\/ZLaws2$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/laws\/ZLaws2$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/laws\/ZLaws2$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/laws\/ZLaws2$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/test\/laws\/ZLaws2.html", "kind" : "class"}, {"name" : "zio.test.laws.ZLawsF", "shortDescription" : "ZLaws[CapsF, Caps, R] describes a set of laws that a parameterized typeF[A] with capabilities CapsF is expected to satisfy with respect to alltypes A that have capabilities Caps.", "object" : "zio\/test\/laws\/ZLawsF$.html", "members_object" : [{"label" : "Invariant", "tail" : "", "member" : "zio.test.laws.ZLawsF.Invariant", "link" : "zio\/test\/laws\/ZLawsF$.html#Invariant", "kind" : "object"}, {"label" : "Invariant", "tail" : "", "member" : "zio.test.laws.ZLawsF.Invariant", "link" : "zio\/test\/laws\/ZLawsF$.html#Invariant[-CapsF[_[_]],-Caps[_],-R]extendsAnyRef", "kind" : "abstract class"}, {"label" : "Contravariant", "tail" : "", "member" : "zio.test.laws.ZLawsF.Contravariant", "link" : "zio\/test\/laws\/ZLawsF$.html#Contravariant", "kind" : "object"}, {"label" : "Contravariant", "tail" : "", "member" : "zio.test.laws.ZLawsF.Contravariant", "link" : "zio\/test\/laws\/ZLawsF$.html#Contravariant[-CapsF[_[-_]],-Caps[_],-R]extendsAnyRef", "kind" : "abstract class"}, {"label" : "Covariant", "tail" : "", "member" : "zio.test.laws.ZLawsF.Covariant", "link" : "zio\/test\/laws\/ZLawsF$.html#Covariant", "kind" : "object"}, {"label" : "Covariant", "tail" : "", "member" : "zio.test.laws.ZLawsF.Covariant", "link" : "zio\/test\/laws\/ZLawsF$.html#Covariant[-CapsF[_[+_]],-Caps[_],-R]extendsAnyRef", "kind" : "abstract class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/laws\/ZLawsF$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/laws\/ZLawsF$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/laws\/ZLawsF$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/laws\/ZLawsF$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/laws\/ZLawsF$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/laws\/ZLawsF$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/laws\/ZLawsF$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/laws\/ZLawsF$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/laws\/ZLawsF$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/laws\/ZLawsF$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/laws\/ZLawsF$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/laws\/ZLawsF$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLawsF$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLawsF$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLawsF$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/laws\/ZLawsF$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/laws\/ZLawsF$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/laws\/ZLawsF$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/laws\/ZLawsF$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.laws.ZLawsF2", "shortDescription" : "", "object" : "zio\/test\/laws\/ZLawsF2$.html", "members_object" : [{"label" : "Divariant", "tail" : "", "member" : "zio.test.laws.ZLawsF2.Divariant", "link" : "zio\/test\/laws\/ZLawsF2$.html#Divariant", "kind" : "object"}, {"label" : "Divariant", "tail" : "", "member" : "zio.test.laws.ZLawsF2.Divariant", "link" : "zio\/test\/laws\/ZLawsF2$.html#Divariant[-CapsF[_[-_,+_]],-CapsLeft[_],-CapsRight[_],-R]extendsAnyRef", "kind" : "abstract class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/laws\/ZLawsF2$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/laws\/ZLawsF2$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/laws\/ZLawsF2$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/laws\/ZLawsF2$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/laws\/ZLawsF2$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/laws\/ZLawsF2$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/laws\/ZLawsF2$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/laws\/ZLawsF2$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/laws\/ZLawsF2$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/laws\/ZLawsF2$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/laws\/ZLawsF2$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/laws\/ZLawsF2$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLawsF2$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLawsF2$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/laws\/ZLawsF2$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/laws\/ZLawsF2$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/laws\/ZLawsF2$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/laws\/ZLawsF2$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/laws\/ZLawsF2$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "zio.test.poly" : [{"name" : "zio.test.poly.GenFractionalPoly", "object" : "zio\/test\/poly\/GenFractionalPoly$.html", "members_object" : [{"label" : "genFractionalPoly", "tail" : "(trace: Trace): Gen[Any, GenFractionalPoly]", "member" : "zio.test.poly.GenFractionalPoly.genFractionalPoly", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#genFractionalPoly(implicittrace:zio.Trace):zio.test.Gen[Any,zio.test.poly.GenFractionalPoly]", "kind" : "def"}, {"label" : "float", "tail" : "(trace: Trace): GenFractionalPoly", "member" : "zio.test.poly.GenFractionalPoly.float", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#float(implicittrace:zio.Trace):zio.test.poly.GenFractionalPoly", "kind" : "def"}, {"label" : "double", "tail" : "(trace: Trace): GenFractionalPoly", "member" : "zio.test.poly.GenFractionalPoly.double", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#double(implicittrace:zio.Trace):zio.test.poly.GenFractionalPoly", "kind" : "def"}, {"label" : "apply", "tail" : "(gen: Gen[Any, A], num: Fractional[A]): GenFractionalPoly", "member" : "zio.test.poly.GenFractionalPoly.apply", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#apply[A](gen:zio.test.Gen[Any,A],num:Fractional[A]):zio.test.poly.GenFractionalPoly", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/poly\/GenFractionalPoly$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/poly\/GenFractionalPoly$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/poly\/GenFractionalPoly.html", "kind" : "trait", "members_trait" : [{"label" : "ordT", "tail" : ": Ordering[T]", "member" : "zio.test.poly.GenNumericPoly.ordT", "link" : "zio\/test\/poly\/GenFractionalPoly.html#ordT:Ordering[GenNumericPoly.this.T]", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/poly\/GenFractionalPoly.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/poly\/GenFractionalPoly.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/poly\/GenFractionalPoly.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/poly\/GenFractionalPoly.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/poly\/GenFractionalPoly.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/poly\/GenFractionalPoly.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/poly\/GenFractionalPoly.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/poly\/GenFractionalPoly.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/poly\/GenFractionalPoly.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/poly\/GenFractionalPoly.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/poly\/GenFractionalPoly.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/poly\/GenFractionalPoly.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenFractionalPoly.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenFractionalPoly.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenFractionalPoly.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/poly\/GenFractionalPoly.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/poly\/GenFractionalPoly.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/poly\/GenFractionalPoly.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/poly\/GenFractionalPoly.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "numT", "tail" : ": Fractional[T]", "member" : "zio.test.poly.GenFractionalPoly.numT", "link" : "zio\/test\/poly\/GenFractionalPoly.html#numT:Fractional[GenFractionalPoly.this.T]", "kind" : "abstract val"}, {"label" : "genT", "tail" : ": Gen[Any, T]", "member" : "zio.test.poly.GenPoly.genT", "link" : "zio\/test\/poly\/GenFractionalPoly.html#genT:zio.test.Gen[Any,GenPoly.this.T]", "kind" : "abstract val"}, {"member" : "zio.test.poly.GenPoly.T", "error" : "unsupported entity"}], "shortDescription" : "GenFractionalPoly provides evidence that instances of Gen[T] andFractional[T] exist for some concrete but unknown type T."}, {"name" : "zio.test.poly.GenIntegralPoly", "object" : "zio\/test\/poly\/GenIntegralPoly$.html", "members_object" : [{"label" : "short", "tail" : "(trace: Trace): GenIntegralPoly", "member" : "zio.test.poly.GenIntegralPoly.short", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#short(implicittrace:zio.Trace):zio.test.poly.GenIntegralPoly", "kind" : "def"}, {"label" : "long", "tail" : "(trace: Trace): GenIntegralPoly", "member" : "zio.test.poly.GenIntegralPoly.long", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#long(implicittrace:zio.Trace):zio.test.poly.GenIntegralPoly", "kind" : "def"}, {"label" : "int", "tail" : "(trace: Trace): GenIntegralPoly", "member" : "zio.test.poly.GenIntegralPoly.int", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#int(implicittrace:zio.Trace):zio.test.poly.GenIntegralPoly", "kind" : "def"}, {"label" : "genIntegralPoly", "tail" : "(trace: Trace): Gen[Any, GenIntegralPoly]", "member" : "zio.test.poly.GenIntegralPoly.genIntegralPoly", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#genIntegralPoly(implicittrace:zio.Trace):zio.test.Gen[Any,zio.test.poly.GenIntegralPoly]", "kind" : "def"}, {"label" : "char", "tail" : "(trace: Trace): GenIntegralPoly", "member" : "zio.test.poly.GenIntegralPoly.char", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#char(implicittrace:zio.Trace):zio.test.poly.GenIntegralPoly", "kind" : "def"}, {"label" : "byte", "tail" : "(trace: Trace): GenIntegralPoly", "member" : "zio.test.poly.GenIntegralPoly.byte", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#byte(implicittrace:zio.Trace):zio.test.poly.GenIntegralPoly", "kind" : "def"}, {"label" : "apply", "tail" : "(gen: Gen[Any, A], num: Integral[A]): GenIntegralPoly", "member" : "zio.test.poly.GenIntegralPoly.apply", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#apply[A](gen:zio.test.Gen[Any,A],num:Integral[A]):zio.test.poly.GenIntegralPoly", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/poly\/GenIntegralPoly$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/poly\/GenIntegralPoly$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/poly\/GenIntegralPoly.html", "kind" : "trait", "members_trait" : [{"label" : "ordT", "tail" : ": Ordering[T]", "member" : "zio.test.poly.GenNumericPoly.ordT", "link" : "zio\/test\/poly\/GenIntegralPoly.html#ordT:Ordering[GenNumericPoly.this.T]", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/poly\/GenIntegralPoly.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/poly\/GenIntegralPoly.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/poly\/GenIntegralPoly.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/poly\/GenIntegralPoly.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/poly\/GenIntegralPoly.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/poly\/GenIntegralPoly.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/poly\/GenIntegralPoly.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/poly\/GenIntegralPoly.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/poly\/GenIntegralPoly.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/poly\/GenIntegralPoly.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/poly\/GenIntegralPoly.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/poly\/GenIntegralPoly.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenIntegralPoly.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenIntegralPoly.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenIntegralPoly.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/poly\/GenIntegralPoly.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/poly\/GenIntegralPoly.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/poly\/GenIntegralPoly.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/poly\/GenIntegralPoly.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "numT", "tail" : ": Integral[T]", "member" : "zio.test.poly.GenIntegralPoly.numT", "link" : "zio\/test\/poly\/GenIntegralPoly.html#numT:Integral[GenIntegralPoly.this.T]", "kind" : "abstract val"}, {"label" : "genT", "tail" : ": Gen[Any, T]", "member" : "zio.test.poly.GenPoly.genT", "link" : "zio\/test\/poly\/GenIntegralPoly.html#genT:zio.test.Gen[Any,GenPoly.this.T]", "kind" : "abstract val"}, {"member" : "zio.test.poly.GenPoly.T", "error" : "unsupported entity"}], "shortDescription" : "GenIntegralPoly provides evidence that instances of Gen[T] andIntegral[T] exist for some concrete but unknown type T."}, {"name" : "zio.test.poly.GenNumericPoly", "object" : "zio\/test\/poly\/GenNumericPoly$.html", "members_object" : [{"label" : "short", "tail" : "(trace: Trace): GenNumericPoly", "member" : "zio.test.poly.GenNumericPoly.short", "link" : "zio\/test\/poly\/GenNumericPoly$.html#short(implicittrace:zio.Trace):zio.test.poly.GenNumericPoly", "kind" : "def"}, {"label" : "long", "tail" : "(trace: Trace): GenNumericPoly", "member" : "zio.test.poly.GenNumericPoly.long", "link" : "zio\/test\/poly\/GenNumericPoly$.html#long(implicittrace:zio.Trace):zio.test.poly.GenNumericPoly", "kind" : "def"}, {"label" : "int", "tail" : "(trace: Trace): GenNumericPoly", "member" : "zio.test.poly.GenNumericPoly.int", "link" : "zio\/test\/poly\/GenNumericPoly$.html#int(implicittrace:zio.Trace):zio.test.poly.GenNumericPoly", "kind" : "def"}, {"label" : "genNumericPoly", "tail" : "(trace: Trace): Gen[Any, GenNumericPoly]", "member" : "zio.test.poly.GenNumericPoly.genNumericPoly", "link" : "zio\/test\/poly\/GenNumericPoly$.html#genNumericPoly(implicittrace:zio.Trace):zio.test.Gen[Any,zio.test.poly.GenNumericPoly]", "kind" : "def"}, {"label" : "float", "tail" : "(trace: Trace): GenNumericPoly", "member" : "zio.test.poly.GenNumericPoly.float", "link" : "zio\/test\/poly\/GenNumericPoly$.html#float(implicittrace:zio.Trace):zio.test.poly.GenNumericPoly", "kind" : "def"}, {"label" : "double", "tail" : "(trace: Trace): GenNumericPoly", "member" : "zio.test.poly.GenNumericPoly.double", "link" : "zio\/test\/poly\/GenNumericPoly$.html#double(implicittrace:zio.Trace):zio.test.poly.GenNumericPoly", "kind" : "def"}, {"label" : "char", "tail" : "(trace: Trace): GenNumericPoly", "member" : "zio.test.poly.GenNumericPoly.char", "link" : "zio\/test\/poly\/GenNumericPoly$.html#char(implicittrace:zio.Trace):zio.test.poly.GenNumericPoly", "kind" : "def"}, {"label" : "byte", "tail" : "(trace: Trace): GenNumericPoly", "member" : "zio.test.poly.GenNumericPoly.byte", "link" : "zio\/test\/poly\/GenNumericPoly$.html#byte(implicittrace:zio.Trace):zio.test.poly.GenNumericPoly", "kind" : "def"}, {"label" : "apply", "tail" : "(gen: Gen[Any, A], num: Numeric[A]): GenNumericPoly", "member" : "zio.test.poly.GenNumericPoly.apply", "link" : "zio\/test\/poly\/GenNumericPoly$.html#apply[A](gen:zio.test.Gen[Any,A],num:Numeric[A]):zio.test.poly.GenNumericPoly", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/poly\/GenNumericPoly$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/poly\/GenNumericPoly$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/poly\/GenNumericPoly$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/poly\/GenNumericPoly$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/poly\/GenNumericPoly$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/poly\/GenNumericPoly$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/poly\/GenNumericPoly$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/poly\/GenNumericPoly$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/poly\/GenNumericPoly$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/poly\/GenNumericPoly$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/poly\/GenNumericPoly$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/poly\/GenNumericPoly$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenNumericPoly$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenNumericPoly$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenNumericPoly$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/poly\/GenNumericPoly$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/poly\/GenNumericPoly$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/poly\/GenNumericPoly$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/poly\/GenNumericPoly$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/poly\/GenNumericPoly.html", "kind" : "trait", "members_trait" : [{"label" : "ordT", "tail" : ": Ordering[T]", "member" : "zio.test.poly.GenNumericPoly.ordT", "link" : "zio\/test\/poly\/GenNumericPoly.html#ordT:Ordering[GenNumericPoly.this.T]", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/poly\/GenNumericPoly.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/poly\/GenNumericPoly.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/poly\/GenNumericPoly.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/poly\/GenNumericPoly.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/poly\/GenNumericPoly.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/poly\/GenNumericPoly.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/poly\/GenNumericPoly.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/poly\/GenNumericPoly.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/poly\/GenNumericPoly.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/poly\/GenNumericPoly.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/poly\/GenNumericPoly.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/poly\/GenNumericPoly.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenNumericPoly.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenNumericPoly.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenNumericPoly.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/poly\/GenNumericPoly.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/poly\/GenNumericPoly.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/poly\/GenNumericPoly.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/poly\/GenNumericPoly.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "numT", "tail" : ": Numeric[T]", "member" : "zio.test.poly.GenNumericPoly.numT", "link" : "zio\/test\/poly\/GenNumericPoly.html#numT:Numeric[GenNumericPoly.this.T]", "kind" : "abstract val"}, {"label" : "genT", "tail" : ": Gen[Any, T]", "member" : "zio.test.poly.GenPoly.genT", "link" : "zio\/test\/poly\/GenNumericPoly.html#genT:zio.test.Gen[Any,GenPoly.this.T]", "kind" : "abstract val"}, {"member" : "zio.test.poly.GenPoly.T", "error" : "unsupported entity"}], "shortDescription" : "GenNumericPoly provides evidence that instances of Gen[T] andNumeric[T] exist for some concrete but unknown type T."}, {"name" : "zio.test.poly.GenOrderingPoly", "object" : "zio\/test\/poly\/GenOrderingPoly$.html", "members_object" : [{"label" : "vector", "tail" : "(poly: GenOrderingPoly)(trace: Trace): GenOrderingPoly", "member" : "zio.test.poly.GenOrderingPoly.vector", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#vector(poly:zio.test.poly.GenOrderingPoly)(implicittrace:zio.Trace):zio.test.poly.GenOrderingPoly", "kind" : "def"}, {"label" : "unit", "tail" : "(trace: Trace): GenOrderingPoly", "member" : "zio.test.poly.GenOrderingPoly.unit", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#unit(implicittrace:zio.Trace):zio.test.poly.GenOrderingPoly", "kind" : "def"}, {"label" : "string", "tail" : "(trace: Trace): GenOrderingPoly", "member" : "zio.test.poly.GenOrderingPoly.string", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#string(implicittrace:zio.Trace):zio.test.poly.GenOrderingPoly", "kind" : "def"}, {"label" : "short", "tail" : "(trace: Trace): GenOrderingPoly", "member" : "zio.test.poly.GenOrderingPoly.short", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#short(implicittrace:zio.Trace):zio.test.poly.GenOrderingPoly", "kind" : "def"}, {"label" : "option", "tail" : "(poly: GenOrderingPoly)(trace: Trace): GenOrderingPoly", "member" : "zio.test.poly.GenOrderingPoly.option", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#option(poly:zio.test.poly.GenOrderingPoly)(implicittrace:zio.Trace):zio.test.poly.GenOrderingPoly", "kind" : "def"}, {"label" : "long", "tail" : "(trace: Trace): GenOrderingPoly", "member" : "zio.test.poly.GenOrderingPoly.long", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#long(implicittrace:zio.Trace):zio.test.poly.GenOrderingPoly", "kind" : "def"}, {"label" : "list", "tail" : "(poly: GenOrderingPoly)(trace: Trace): GenOrderingPoly", "member" : "zio.test.poly.GenOrderingPoly.list", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#list(poly:zio.test.poly.GenOrderingPoly)(implicittrace:zio.Trace):zio.test.poly.GenOrderingPoly", "kind" : "def"}, {"label" : "int", "tail" : "(trace: Trace): GenOrderingPoly", "member" : "zio.test.poly.GenOrderingPoly.int", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#int(implicittrace:zio.Trace):zio.test.poly.GenOrderingPoly", "kind" : "def"}, {"label" : "genOrderingPoly", "tail" : "(trace: Trace): Gen[Any, GenOrderingPoly]", "member" : "zio.test.poly.GenOrderingPoly.genOrderingPoly", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#genOrderingPoly(implicittrace:zio.Trace):zio.test.Gen[Any,zio.test.poly.GenOrderingPoly]", "kind" : "def"}, {"label" : "float", "tail" : "(trace: Trace): GenOrderingPoly", "member" : "zio.test.poly.GenOrderingPoly.float", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#float(implicittrace:zio.Trace):zio.test.poly.GenOrderingPoly", "kind" : "def"}, {"label" : "double", "tail" : "(trace: Trace): GenOrderingPoly", "member" : "zio.test.poly.GenOrderingPoly.double", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#double(implicittrace:zio.Trace):zio.test.poly.GenOrderingPoly", "kind" : "def"}, {"label" : "char", "tail" : "(trace: Trace): GenOrderingPoly", "member" : "zio.test.poly.GenOrderingPoly.char", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#char(implicittrace:zio.Trace):zio.test.poly.GenOrderingPoly", "kind" : "def"}, {"label" : "byte", "tail" : "(trace: Trace): GenOrderingPoly", "member" : "zio.test.poly.GenOrderingPoly.byte", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#byte(implicittrace:zio.Trace):zio.test.poly.GenOrderingPoly", "kind" : "def"}, {"label" : "boolean", "tail" : "(trace: Trace): GenOrderingPoly", "member" : "zio.test.poly.GenOrderingPoly.boolean", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#boolean(implicittrace:zio.Trace):zio.test.poly.GenOrderingPoly", "kind" : "def"}, {"label" : "apply", "tail" : "(gen: Gen[Any, A], ord: Ordering[A]): GenOrderingPoly", "member" : "zio.test.poly.GenOrderingPoly.apply", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#apply[A](gen:zio.test.Gen[Any,A],ord:Ordering[A]):zio.test.poly.GenOrderingPoly", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/poly\/GenOrderingPoly$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/poly\/GenOrderingPoly$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/poly\/GenOrderingPoly.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/poly\/GenOrderingPoly.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/poly\/GenOrderingPoly.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/poly\/GenOrderingPoly.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/poly\/GenOrderingPoly.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/poly\/GenOrderingPoly.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/poly\/GenOrderingPoly.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/poly\/GenOrderingPoly.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/poly\/GenOrderingPoly.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/poly\/GenOrderingPoly.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/poly\/GenOrderingPoly.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/poly\/GenOrderingPoly.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/poly\/GenOrderingPoly.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenOrderingPoly.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenOrderingPoly.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenOrderingPoly.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/poly\/GenOrderingPoly.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/poly\/GenOrderingPoly.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/poly\/GenOrderingPoly.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/poly\/GenOrderingPoly.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "ordT", "tail" : ": Ordering[T]", "member" : "zio.test.poly.GenOrderingPoly.ordT", "link" : "zio\/test\/poly\/GenOrderingPoly.html#ordT:Ordering[GenOrderingPoly.this.T]", "kind" : "abstract val"}, {"label" : "genT", "tail" : ": Gen[Any, T]", "member" : "zio.test.poly.GenPoly.genT", "link" : "zio\/test\/poly\/GenOrderingPoly.html#genT:zio.test.Gen[Any,GenPoly.this.T]", "kind" : "abstract val"}, {"member" : "zio.test.poly.GenPoly.T", "error" : "unsupported entity"}], "shortDescription" : "GenOrderingPoly provides evidence that instances of Gen[T] andOrdering[T] exist for some concrete but unknown type T."}, {"name" : "zio.test.poly.GenPoly", "object" : "zio\/test\/poly\/GenPoly$.html", "members_object" : [{"label" : "vector", "tail" : "(poly: GenPoly)(trace: Trace): GenPoly", "member" : "zio.test.poly.GenPoly.vector", "link" : "zio\/test\/poly\/GenPoly$.html#vector(poly:zio.test.poly.GenPoly)(implicittrace:zio.Trace):zio.test.poly.GenPoly", "kind" : "def"}, {"label" : "unit", "tail" : "(trace: Trace): GenPoly", "member" : "zio.test.poly.GenPoly.unit", "link" : "zio\/test\/poly\/GenPoly$.html#unit(implicittrace:zio.Trace):zio.test.poly.GenPoly", "kind" : "def"}, {"label" : "string", "tail" : "(trace: Trace): GenPoly", "member" : "zio.test.poly.GenPoly.string", "link" : "zio\/test\/poly\/GenPoly$.html#string(implicittrace:zio.Trace):zio.test.poly.GenPoly", "kind" : "def"}, {"label" : "short", "tail" : "(trace: Trace): GenPoly", "member" : "zio.test.poly.GenPoly.short", "link" : "zio\/test\/poly\/GenPoly$.html#short(implicittrace:zio.Trace):zio.test.poly.GenPoly", "kind" : "def"}, {"label" : "option", "tail" : "(poly: GenPoly)(trace: Trace): GenPoly", "member" : "zio.test.poly.GenPoly.option", "link" : "zio\/test\/poly\/GenPoly$.html#option(poly:zio.test.poly.GenPoly)(implicittrace:zio.Trace):zio.test.poly.GenPoly", "kind" : "def"}, {"label" : "long", "tail" : "(trace: Trace): GenPoly", "member" : "zio.test.poly.GenPoly.long", "link" : "zio\/test\/poly\/GenPoly$.html#long(implicittrace:zio.Trace):zio.test.poly.GenPoly", "kind" : "def"}, {"label" : "list", "tail" : "(poly: GenPoly)(trace: Trace): GenPoly", "member" : "zio.test.poly.GenPoly.list", "link" : "zio\/test\/poly\/GenPoly$.html#list(poly:zio.test.poly.GenPoly)(implicittrace:zio.Trace):zio.test.poly.GenPoly", "kind" : "def"}, {"label" : "int", "tail" : "(trace: Trace): GenPoly", "member" : "zio.test.poly.GenPoly.int", "link" : "zio\/test\/poly\/GenPoly$.html#int(implicittrace:zio.Trace):zio.test.poly.GenPoly", "kind" : "def"}, {"label" : "genPoly", "tail" : "(trace: Trace): Gen[Any, GenPoly]", "member" : "zio.test.poly.GenPoly.genPoly", "link" : "zio\/test\/poly\/GenPoly$.html#genPoly(implicittrace:zio.Trace):zio.test.Gen[Any,zio.test.poly.GenPoly]", "kind" : "def"}, {"label" : "float", "tail" : "(trace: Trace): GenPoly", "member" : "zio.test.poly.GenPoly.float", "link" : "zio\/test\/poly\/GenPoly$.html#float(implicittrace:zio.Trace):zio.test.poly.GenPoly", "kind" : "def"}, {"label" : "double", "tail" : "(trace: Trace): GenPoly", "member" : "zio.test.poly.GenPoly.double", "link" : "zio\/test\/poly\/GenPoly$.html#double(implicittrace:zio.Trace):zio.test.poly.GenPoly", "kind" : "def"}, {"label" : "char", "tail" : "(trace: Trace): GenPoly", "member" : "zio.test.poly.GenPoly.char", "link" : "zio\/test\/poly\/GenPoly$.html#char(implicittrace:zio.Trace):zio.test.poly.GenPoly", "kind" : "def"}, {"label" : "byte", "tail" : "(trace: Trace): GenPoly", "member" : "zio.test.poly.GenPoly.byte", "link" : "zio\/test\/poly\/GenPoly$.html#byte(implicittrace:zio.Trace):zio.test.poly.GenPoly", "kind" : "def"}, {"label" : "boolean", "tail" : "(trace: Trace): GenPoly", "member" : "zio.test.poly.GenPoly.boolean", "link" : "zio\/test\/poly\/GenPoly$.html#boolean(implicittrace:zio.Trace):zio.test.poly.GenPoly", "kind" : "def"}, {"label" : "apply", "tail" : "(gen: Gen[Any, A]): GenPoly", "member" : "zio.test.poly.GenPoly.apply", "link" : "zio\/test\/poly\/GenPoly$.html#apply[A](gen:zio.test.Gen[Any,A]):zio.test.poly.GenPoly", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/poly\/GenPoly$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/poly\/GenPoly$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/poly\/GenPoly$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/poly\/GenPoly$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/poly\/GenPoly$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/poly\/GenPoly$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/poly\/GenPoly$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/poly\/GenPoly$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/poly\/GenPoly$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/poly\/GenPoly$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/poly\/GenPoly$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/poly\/GenPoly$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenPoly$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenPoly$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenPoly$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/poly\/GenPoly$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/poly\/GenPoly$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/poly\/GenPoly$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/poly\/GenPoly$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/poly\/GenPoly.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/poly\/GenPoly.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/poly\/GenPoly.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/poly\/GenPoly.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/poly\/GenPoly.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/poly\/GenPoly.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/poly\/GenPoly.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/poly\/GenPoly.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/poly\/GenPoly.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/poly\/GenPoly.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/poly\/GenPoly.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/poly\/GenPoly.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/poly\/GenPoly.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenPoly.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenPoly.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/poly\/GenPoly.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/poly\/GenPoly.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/poly\/GenPoly.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/poly\/GenPoly.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/poly\/GenPoly.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "genT", "tail" : ": Gen[Any, T]", "member" : "zio.test.poly.GenPoly.genT", "link" : "zio\/test\/poly\/GenPoly.html#genT:zio.test.Gen[Any,GenPoly.this.T]", "kind" : "abstract val"}, {"member" : "zio.test.poly.GenPoly.T", "error" : "unsupported entity"}], "shortDescription" : "GenPoly provides evidence that an instance of Gen[T] exists for someconcrete but unknown type T."}], "zio.test.internal.myers" : [{"name" : "zio.test.internal.myers.Action", "object" : "zio\/test\/internal\/myers\/Action$.html", "members_object" : [{"label" : "Keep", "tail" : "", "member" : "zio.test.internal.myers.Action.Keep", "link" : "zio\/test\/internal\/myers\/Action$.html#Keep[A]extendsAction[A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Insert", "tail" : "", "member" : "zio.test.internal.myers.Action.Insert", "link" : "zio\/test\/internal\/myers\/Action$.html#Insert[A]extendsAction[A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Delete", "tail" : "", "member" : "zio.test.internal.myers.Action.Delete", "link" : "zio\/test\/internal\/myers\/Action$.html#Delete[A]extendsAction[A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/internal\/myers\/Action$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/internal\/myers\/Action$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/internal\/myers\/Action$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/internal\/myers\/Action$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/internal\/myers\/Action$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/internal\/myers\/Action$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/internal\/myers\/Action$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/internal\/myers\/Action$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/internal\/myers\/Action$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/internal\/myers\/Action$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/internal\/myers\/Action$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/internal\/myers\/Action$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/myers\/Action$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/myers\/Action$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/myers\/Action$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/internal\/myers\/Action$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/internal\/myers\/Action$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/internal\/myers\/Action$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/internal\/myers\/Action$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/internal\/myers\/Action.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/internal\/myers\/Action.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/internal\/myers\/Action.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/internal\/myers\/Action.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/internal\/myers\/Action.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/internal\/myers\/Action.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/internal\/myers\/Action.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/internal\/myers\/Action.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/internal\/myers\/Action.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/internal\/myers\/Action.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/internal\/myers\/Action.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/internal\/myers\/Action.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/internal\/myers\/Action.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/myers\/Action.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/myers\/Action.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/myers\/Action.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/internal\/myers\/Action.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/internal\/myers\/Action.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/internal\/myers\/Action.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/internal\/myers\/Action.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.internal.myers.DiffResult", "shortDescription" : "", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "zio.test.internal.myers.DiffResult.toString", "link" : "zio\/test\/internal\/myers\/DiffResult.html#toString():String", "kind" : "def"}, {"label" : "renderLine", "tail" : "(): String", "member" : "zio.test.internal.myers.DiffResult.renderLine", "link" : "zio\/test\/internal\/myers\/DiffResult.html#renderLine:String", "kind" : "def"}, {"label" : "isIdentical", "tail" : "(): Boolean", "member" : "zio.test.internal.myers.DiffResult.isIdentical", "link" : "zio\/test\/internal\/myers\/DiffResult.html#isIdentical:Boolean", "kind" : "def"}, {"label" : "invert", "tail" : "(): DiffResult[A]", "member" : "zio.test.internal.myers.DiffResult.invert", "link" : "zio\/test\/internal\/myers\/DiffResult.html#invert:zio.test.internal.myers.DiffResult[A]", "kind" : "def"}, {"label" : "applyChanges", "tail" : "(original: String): String", "member" : "zio.test.internal.myers.DiffResult.applyChanges", "link" : "zio\/test\/internal\/myers\/DiffResult.html#applyChanges(original:String):String", "kind" : "def"}, {"member" : "zio.test.internal.myers.DiffResult#<init>", "error" : "unsupported entity"}, {"label" : "actions", "tail" : ": Chunk[Action[A]]", "member" : "zio.test.internal.myers.DiffResult.actions", "link" : "zio\/test\/internal\/myers\/DiffResult.html#actions:zio.Chunk[zio.test.internal.myers.Action[A]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/test\/internal\/myers\/DiffResult.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/internal\/myers\/DiffResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/internal\/myers\/DiffResult.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/internal\/myers\/DiffResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/internal\/myers\/DiffResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/internal\/myers\/DiffResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/internal\/myers\/DiffResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/internal\/myers\/DiffResult.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/internal\/myers\/DiffResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/internal\/myers\/DiffResult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/internal\/myers\/DiffResult.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/internal\/myers\/DiffResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/myers\/DiffResult.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/myers\/DiffResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/myers\/DiffResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/internal\/myers\/DiffResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/internal\/myers\/DiffResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/test\/internal\/myers\/DiffResult.html", "kind" : "case class"}, {"name" : "zio.test.internal.myers.MyersDiff", "shortDescription" : "", "object" : "zio\/test\/internal\/myers\/MyersDiff$.html", "members_object" : [{"label" : "getLongestCommonSubsequence", "tail" : "(original: Chunk[A], modified: Chunk[A]): Chunk[A]", "member" : "zio.test.internal.myers.MyersDiff.getLongestCommonSubsequence", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#getLongestCommonSubsequence[A](original:zio.Chunk[A],modified:zio.Chunk[A]):zio.Chunk[A]", "kind" : "def"}, {"label" : "diff", "tail" : "(original: Chunk[A], modified: Chunk[A]): DiffResult[A]", "member" : "zio.test.internal.myers.MyersDiff.diff", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#diff[A](original:zio.Chunk[A],modified:zio.Chunk[A]):zio.test.internal.myers.DiffResult[A]", "kind" : "def"}, {"label" : "diff", "tail" : "(original: String, modified: String): DiffResult[String]", "member" : "zio.test.internal.myers.MyersDiff.diff", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#diff(original:String,modified:String):zio.test.internal.myers.DiffResult[String]", "kind" : "def"}, {"label" : "diffChars", "tail" : "(original: String, modified: String): DiffResult[String]", "member" : "zio.test.internal.myers.MyersDiff.diffChars", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#diffChars(original:String,modified:String):zio.test.internal.myers.DiffResult[String]", "kind" : "def"}, {"label" : "diffWords", "tail" : "(original: String, modified: String): DiffResult[String]", "member" : "zio.test.internal.myers.MyersDiff.diffWords", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#diffWords(original:String,modified:String):zio.test.internal.myers.DiffResult[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/internal\/myers\/MyersDiff$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "zio.stream.encoding" : [{"name" : "zio.stream.encoding.EncodingException", "shortDescription" : "Signals that exception occurred in encoding\/decoding", "object" : "zio\/stream\/encoding\/EncodingException$.html", "members_object" : [{"label" : "apply", "tail" : "(cause: Exception): EncodingException", "member" : "zio.stream.encoding.EncodingException.apply", "link" : "zio\/stream\/encoding\/EncodingException$.html#apply(cause:Exception):zio.stream.encoding.EncodingException", "kind" : "def"}, {"label" : "apply", "tail" : "(message: String, cause: Option[Exception]): EncodingException", "member" : "zio.stream.encoding.EncodingException.apply", "link" : "zio\/stream\/encoding\/EncodingException$.html#apply(message:String,cause:Option[Exception]):zio.stream.encoding.EncodingException", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/encoding\/EncodingException$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/encoding\/EncodingException$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/encoding\/EncodingException$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/encoding\/EncodingException$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/encoding\/EncodingException$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/encoding\/EncodingException$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/encoding\/EncodingException$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/encoding\/EncodingException$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/encoding\/EncodingException$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/encoding\/EncodingException$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/stream\/encoding\/EncodingException$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/encoding\/EncodingException$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/encoding\/EncodingException$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/encoding\/EncodingException$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/encoding\/EncodingException$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/stream\/encoding\/EncodingException$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/stream\/encoding\/EncodingException$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/encoding\/EncodingException$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/encoding\/EncodingException$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "cause", "tail" : ": Exception", "member" : "zio.stream.encoding.EncodingException.cause", "link" : "zio\/stream\/encoding\/EncodingException.html#cause:Exception", "kind" : "val"}, {"label" : "message", "tail" : ": String", "member" : "zio.stream.encoding.EncodingException.message", "link" : "zio\/stream\/encoding\/EncodingException.html#message:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/stream\/encoding\/EncodingException.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "zio\/stream\/encoding\/EncodingException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "zio\/stream\/encoding\/EncodingException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "zio\/stream\/encoding\/EncodingException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "zio\/stream\/encoding\/EncodingException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "zio\/stream\/encoding\/EncodingException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "zio\/stream\/encoding\/EncodingException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "zio\/stream\/encoding\/EncodingException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "zio\/stream\/encoding\/EncodingException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "zio\/stream\/encoding\/EncodingException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "zio\/stream\/encoding\/EncodingException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "zio\/stream\/encoding\/EncodingException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "zio\/stream\/encoding\/EncodingException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "zio\/stream\/encoding\/EncodingException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/stream\/encoding\/EncodingException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/stream\/encoding\/EncodingException.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/stream\/encoding\/EncodingException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/stream\/encoding\/EncodingException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/stream\/encoding\/EncodingException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/stream\/encoding\/EncodingException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/stream\/encoding\/EncodingException.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/stream\/encoding\/EncodingException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/stream\/encoding\/EncodingException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/stream\/encoding\/EncodingException.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/stream\/encoding\/EncodingException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/encoding\/EncodingException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/encoding\/EncodingException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/stream\/encoding\/EncodingException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/stream\/encoding\/EncodingException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/stream\/encoding\/EncodingException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/stream\/encoding\/EncodingException.html", "kind" : "case class"}], "zio.test.refined.types" : [{"name" : "zio.test.refined.types.all", "shortDescription" : "", "object" : "zio\/test\/refined\/types\/all$.html", "members_object" : [{"label" : "FiniteStringPartiallyApplied", "tail" : "", "member" : "zio.test.refined.types.StringInstance.FiniteStringPartiallyApplied", "link" : "zio\/test\/refined\/types\/StringInstance.html#FiniteStringPartiallyApplied[N<:Int,P]extendsAnyRef", "kind" : "class"}, {"label" : "millsDeriveGen", "tail" : "(): DeriveGen[Millis]", "member" : "zio.test.refined.types.TimeInstances.millsDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#millsDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Millis]", "kind" : "implicit def"}, {"label" : "secondDeriveGen", "tail" : "(): DeriveGen[Second]", "member" : "zio.test.refined.types.TimeInstances.secondDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#secondDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Second]", "kind" : "implicit def"}, {"label" : "minuteDeriveGen", "tail" : "(): DeriveGen[Minute]", "member" : "zio.test.refined.types.TimeInstances.minuteDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#minuteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Minute]", "kind" : "implicit def"}, {"label" : "hourDeriveGen", "tail" : "(): DeriveGen[Hour]", "member" : "zio.test.refined.types.TimeInstances.hourDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#hourDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Hour]", "kind" : "implicit def"}, {"label" : "dayDeriveGen", "tail" : "(): DeriveGen[Day]", "member" : "zio.test.refined.types.TimeInstances.dayDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#dayDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Day]", "kind" : "implicit def"}, {"label" : "monthDeriveGen", "tail" : "(): DeriveGen[Month]", "member" : "zio.test.refined.types.TimeInstances.monthDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#monthDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Month]", "kind" : "implicit def"}, {"label" : "millsGen", "tail" : ": Gen[Any, Millis]", "member" : "zio.test.refined.types.TimeInstances.millsGen", "link" : "zio\/test\/refined\/types\/all$.html#millsGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Millis]", "kind" : "val"}, {"label" : "secondGen", "tail" : ": Gen[Any, Second]", "member" : "zio.test.refined.types.TimeInstances.secondGen", "link" : "zio\/test\/refined\/types\/all$.html#secondGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Second]", "kind" : "val"}, {"label" : "minuteGen", "tail" : ": Gen[Any, Minute]", "member" : "zio.test.refined.types.TimeInstances.minuteGen", "link" : "zio\/test\/refined\/types\/all$.html#minuteGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Minute]", "kind" : "val"}, {"label" : "hourGen", "tail" : ": Gen[Any, Hour]", "member" : "zio.test.refined.types.TimeInstances.hourGen", "link" : "zio\/test\/refined\/types\/all$.html#hourGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Hour]", "kind" : "val"}, {"label" : "dayGen", "tail" : ": Gen[Any, Day]", "member" : "zio.test.refined.types.TimeInstances.dayGen", "link" : "zio\/test\/refined\/types\/all$.html#dayGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Day]", "kind" : "val"}, {"label" : "monthGen", "tail" : ": Gen[Any, Month]", "member" : "zio.test.refined.types.TimeInstances.monthGen", "link" : "zio\/test\/refined\/types\/all$.html#monthGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Month]", "kind" : "val"}, {"label" : "hexStringDeriveGen", "tail" : "(): DeriveGen[HexString]", "member" : "zio.test.refined.types.StringInstance.hexStringDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#hexStringDeriveGen[R]:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.HexString]", "kind" : "implicit def"}, {"label" : "trimmedStringDeriveGen", "tail" : "(charGen: DeriveGen[Char]): DeriveGen[TrimmedString]", "member" : "zio.test.refined.types.StringInstance.trimmedStringDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#trimmedStringDeriveGen[R](implicitcharGen:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.TrimmedString]", "kind" : "implicit def"}, {"label" : "nonEmptyFiniteStringDeriveGen", "tail" : "(ws: Aux[N], charGen: DeriveGen[Char]): DeriveGen[NonEmptyFiniteString[N]]", "member" : "zio.test.refined.types.StringInstance.nonEmptyFiniteStringDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#nonEmptyFiniteStringDeriveGen[N<:Int](implicitws:shapeless.Witness.Aux[N],implicitcharGen:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.NonEmptyFiniteString[N]]", "kind" : "implicit def"}, {"label" : "nonEmptyStringDeriveGen", "tail" : "(charGen: DeriveGen[Char]): DeriveGen[NonEmptyString]", "member" : "zio.test.refined.types.StringInstance.nonEmptyStringDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#nonEmptyStringDeriveGen[R](implicitcharGen:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.NonEmptyString]", "kind" : "implicit def"}, {"label" : "finiteStringDeriveGen", "tail" : "(ws: Aux[N], charGen: DeriveGen[Char]): DeriveGen[FiniteString[N]]", "member" : "zio.test.refined.types.StringInstance.finiteStringDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#finiteStringDeriveGen[N<:Int](implicitws:shapeless.Witness.Aux[N],implicitcharGen:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.FiniteString[N]]", "kind" : "implicit def"}, {"label" : "hexStringGen", "tail" : "(): Gen[Any, HexString]", "member" : "zio.test.refined.types.StringInstance.hexStringGen", "link" : "zio\/test\/refined\/types\/all$.html#hexStringGen:zio.test.Gen[Any,eu.timepit.refined.types.string.HexString]", "kind" : "def"}, {"label" : "trimmedStringGen", "tail" : "(charGen: Gen[R, Char]): Gen[R, TrimmedString]", "member" : "zio.test.refined.types.StringInstance.trimmedStringGen", "link" : "zio\/test\/refined\/types\/all$.html#trimmedStringGen[R](charGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.types.string.TrimmedString]", "kind" : "def"}, {"label" : "nonEmptyFiniteStringGen", "tail" : "(): FiniteStringPartiallyApplied[N, Size[Closed[shapeless.Nat._1, N]]]", "member" : "zio.test.refined.types.StringInstance.nonEmptyFiniteStringGen", "link" : "zio\/test\/refined\/types\/all$.html#nonEmptyFiniteStringGen[N<:Int]:StringInstance.this.FiniteStringPartiallyApplied[N,eu.timepit.refined.collection.Size[eu.timepit.refined.numeric.Interval.Closed[shapeless.Nat._1,N]]]", "kind" : "def"}, {"label" : "nonEmptyStringGen", "tail" : "(charGen: Gen[R, Char]): Gen[R, NonEmptyString]", "member" : "zio.test.refined.types.StringInstance.nonEmptyStringGen", "link" : "zio\/test\/refined\/types\/all$.html#nonEmptyStringGen[R](charGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.types.string.NonEmptyString]", "kind" : "def"}, {"label" : "finiteStringGen", "tail" : "(): FiniteStringPartiallyApplied[N, MaxSize[N]]", "member" : "zio.test.refined.types.StringInstance.finiteStringGen", "link" : "zio\/test\/refined\/types\/all$.html#finiteStringGen[N<:Int]:StringInstance.this.FiniteStringPartiallyApplied[N,eu.timepit.refined.collection.MaxSize[N]]", "kind" : "def"}, {"label" : "nonNanDoubleDeriveGen", "tail" : ": DeriveGen[NonNaNDouble]", "member" : "zio.test.refined.types.NumericInstances.nonNanDoubleDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#nonNanDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNaNDouble]", "kind" : "implicit val"}, {"label" : "nonNanFloatDeriveGen", "tail" : ": DeriveGen[NonNaNFloat]", "member" : "zio.test.refined.types.NumericInstances.nonNanFloatDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#nonNanFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNaNFloat]", "kind" : "implicit val"}, {"label" : "nonPosBigDecimalDeriveGen", "tail" : ": DeriveGen[NonPosBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.nonPosBigDecimalDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#nonPosBigDecimalDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosBigDecimal]", "kind" : "implicit val"}, {"label" : "negBigDecimalDeriveGen", "tail" : ": DeriveGen[NegBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.negBigDecimalDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#negBigDecimalDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegBigDecimal]", "kind" : "implicit val"}, {"label" : "nonNegBigDecimalDeriveGen", "tail" : ": DeriveGen[NonNegBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.nonNegBigDecimalDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#nonNegBigDecimalDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegBigDecimal]", "kind" : "implicit val"}, {"label" : "posBigDecimalDeriveGen", "tail" : ": DeriveGen[PosBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.posBigDecimalDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#posBigDecimalDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosBigDecimal]", "kind" : "implicit val"}, {"label" : "nonPosDoubleDeriveGen", "tail" : ": DeriveGen[NonPosDouble]", "member" : "zio.test.refined.types.NumericInstances.nonPosDoubleDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#nonPosDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosDouble]", "kind" : "implicit val"}, {"label" : "negDoubleDeriveGen", "tail" : ": DeriveGen[NegDouble]", "member" : "zio.test.refined.types.NumericInstances.negDoubleDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#negDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegDouble]", "kind" : "implicit val"}, {"label" : "nonNegDoubleDeriveGen", "tail" : ": DeriveGen[NonNegDouble]", "member" : "zio.test.refined.types.NumericInstances.nonNegDoubleDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#nonNegDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegDouble]", "kind" : "implicit val"}, {"label" : "posDoubleDeriveGen", "tail" : ": DeriveGen[PosDouble]", "member" : "zio.test.refined.types.NumericInstances.posDoubleDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#posDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosDouble]", "kind" : "implicit val"}, {"label" : "nonPosFloatDeriveGen", "tail" : ": DeriveGen[NonPosFloat]", "member" : "zio.test.refined.types.NumericInstances.nonPosFloatDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#nonPosFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosFloat]", "kind" : "implicit val"}, {"label" : "negFloatDeriveGen", "tail" : ": DeriveGen[NegFloat]", "member" : "zio.test.refined.types.NumericInstances.negFloatDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#negFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegFloat]", "kind" : "implicit val"}, {"label" : "nonNegFloatDeriveGen", "tail" : ": DeriveGen[NonNegFloat]", "member" : "zio.test.refined.types.NumericInstances.nonNegFloatDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#nonNegFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegFloat]", "kind" : "implicit val"}, {"label" : "posFloatDeriveGen", "tail" : ": DeriveGen[PosFloat]", "member" : "zio.test.refined.types.NumericInstances.posFloatDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#posFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosFloat]", "kind" : "implicit val"}, {"label" : "nonPosBigIntDeriveGen", "tail" : ": DeriveGen[NonPosBigInt]", "member" : "zio.test.refined.types.NumericInstances.nonPosBigIntDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#nonPosBigIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosBigInt]", "kind" : "implicit val"}, {"label" : "negBigIntDeriveGen", "tail" : ": DeriveGen[NegBigInt]", "member" : "zio.test.refined.types.NumericInstances.negBigIntDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#negBigIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegBigInt]", "kind" : "implicit val"}, {"label" : "nonNegBigIntDeriveGen", "tail" : ": DeriveGen[NonNegBigInt]", "member" : "zio.test.refined.types.NumericInstances.nonNegBigIntDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#nonNegBigIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegBigInt]", "kind" : "implicit val"}, {"label" : "posBigIntDeriveGen", "tail" : ": DeriveGen[PosBigInt]", "member" : "zio.test.refined.types.NumericInstances.posBigIntDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#posBigIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosBigInt]", "kind" : "implicit val"}, {"label" : "nonPosLongDeriveGen", "tail" : ": DeriveGen[NonPosLong]", "member" : "zio.test.refined.types.NumericInstances.nonPosLongDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#nonPosLongDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosLong]", "kind" : "implicit val"}, {"label" : "negLongDeriveGen", "tail" : ": DeriveGen[NegLong]", "member" : "zio.test.refined.types.NumericInstances.negLongDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#negLongDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegLong]", "kind" : "implicit val"}, {"label" : "nonNegLongDeriveGen", "tail" : ": DeriveGen[NonNegLong]", "member" : "zio.test.refined.types.NumericInstances.nonNegLongDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#nonNegLongDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegLong]", "kind" : "implicit val"}, {"label" : "posLongDeriveGen", "tail" : ": DeriveGen[PosLong]", "member" : "zio.test.refined.types.NumericInstances.posLongDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#posLongDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosLong]", "kind" : "implicit val"}, {"label" : "nonPosIntDeriveGen", "tail" : ": DeriveGen[NonPosInt]", "member" : "zio.test.refined.types.NumericInstances.nonPosIntDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#nonPosIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosInt]", "kind" : "implicit val"}, {"label" : "negIntDeriveGen", "tail" : ": DeriveGen[NegInt]", "member" : "zio.test.refined.types.NumericInstances.negIntDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#negIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegInt]", "kind" : "implicit val"}, {"label" : "nonNegIntDeriveGen", "tail" : ": DeriveGen[NonNegInt]", "member" : "zio.test.refined.types.NumericInstances.nonNegIntDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#nonNegIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegInt]", "kind" : "implicit val"}, {"label" : "posIntDeriveGen", "tail" : ": DeriveGen[PosInt]", "member" : "zio.test.refined.types.NumericInstances.posIntDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#posIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosInt]", "kind" : "implicit val"}, {"label" : "nonPosShortDeriveGen", "tail" : ": DeriveGen[NonPosShort]", "member" : "zio.test.refined.types.NumericInstances.nonPosShortDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#nonPosShortDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosShort]", "kind" : "implicit val"}, {"label" : "negShortDeriveGen", "tail" : ": DeriveGen[NegShort]", "member" : "zio.test.refined.types.NumericInstances.negShortDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#negShortDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegShort]", "kind" : "implicit val"}, {"label" : "nonNegShortDeriveGen", "tail" : ": DeriveGen[NonNegShort]", "member" : "zio.test.refined.types.NumericInstances.nonNegShortDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#nonNegShortDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegShort]", "kind" : "implicit val"}, {"label" : "posShortDeriveGen", "tail" : ": DeriveGen[PosShort]", "member" : "zio.test.refined.types.NumericInstances.posShortDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#posShortDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosShort]", "kind" : "implicit val"}, {"label" : "nonPosByteDeriveGen", "tail" : ": DeriveGen[NonPosByte]", "member" : "zio.test.refined.types.NumericInstances.nonPosByteDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#nonPosByteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosByte]", "kind" : "implicit val"}, {"label" : "negByteDeriveGen", "tail" : ": DeriveGen[NegByte]", "member" : "zio.test.refined.types.NumericInstances.negByteDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#negByteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegByte]", "kind" : "implicit val"}, {"label" : "nonNegByteDeriveGen", "tail" : ": DeriveGen[NonNegByte]", "member" : "zio.test.refined.types.NumericInstances.nonNegByteDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#nonNegByteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegByte]", "kind" : "implicit val"}, {"label" : "posByteDeriveGen", "tail" : ": DeriveGen[PosByte]", "member" : "zio.test.refined.types.NumericInstances.posByteDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#posByteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosByte]", "kind" : "implicit val"}, {"label" : "nonNanDoubleGen", "tail" : ": Gen[Any, NonNaNDouble]", "member" : "zio.test.refined.types.NumericInstances.nonNanDoubleGen", "link" : "zio\/test\/refined\/types\/all$.html#nonNanDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNaNDouble]", "kind" : "val"}, {"label" : "nonNanFloatGen", "tail" : ": Gen[Any, NonNaNFloat]", "member" : "zio.test.refined.types.NumericInstances.nonNanFloatGen", "link" : "zio\/test\/refined\/types\/all$.html#nonNanFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNaNFloat]", "kind" : "val"}, {"label" : "nonPosBigDecimalGen", "tail" : ": Gen[Any, NonPosBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.nonPosBigDecimalGen", "link" : "zio\/test\/refined\/types\/all$.html#nonPosBigDecimalGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosBigDecimal]", "kind" : "val"}, {"label" : "negBigDecimalGen", "tail" : ": Gen[Any, NegBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.negBigDecimalGen", "link" : "zio\/test\/refined\/types\/all$.html#negBigDecimalGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegBigDecimal]", "kind" : "val"}, {"label" : "nonNegBigDecimalGen", "tail" : ": Gen[Any, NonNegBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.nonNegBigDecimalGen", "link" : "zio\/test\/refined\/types\/all$.html#nonNegBigDecimalGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegBigDecimal]", "kind" : "val"}, {"label" : "posBigDecimalGen", "tail" : ": Gen[Any, PosBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.posBigDecimalGen", "link" : "zio\/test\/refined\/types\/all$.html#posBigDecimalGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosBigDecimal]", "kind" : "val"}, {"label" : "nonPosDoubleGen", "tail" : ": Gen[Any, NonPosDouble]", "member" : "zio.test.refined.types.NumericInstances.nonPosDoubleGen", "link" : "zio\/test\/refined\/types\/all$.html#nonPosDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosDouble]", "kind" : "val"}, {"label" : "negDoubleGen", "tail" : ": Gen[Any, NegDouble]", "member" : "zio.test.refined.types.NumericInstances.negDoubleGen", "link" : "zio\/test\/refined\/types\/all$.html#negDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegDouble]", "kind" : "val"}, {"label" : "nonNegDoubleGen", "tail" : ": Gen[Any, NonNegDouble]", "member" : "zio.test.refined.types.NumericInstances.nonNegDoubleGen", "link" : "zio\/test\/refined\/types\/all$.html#nonNegDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegDouble]", "kind" : "val"}, {"label" : "posDoubleGen", "tail" : ": Gen[Any, PosDouble]", "member" : "zio.test.refined.types.NumericInstances.posDoubleGen", "link" : "zio\/test\/refined\/types\/all$.html#posDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosDouble]", "kind" : "val"}, {"label" : "nonPosFloatGen", "tail" : ": Gen[Any, NonPosFloat]", "member" : "zio.test.refined.types.NumericInstances.nonPosFloatGen", "link" : "zio\/test\/refined\/types\/all$.html#nonPosFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosFloat]", "kind" : "val"}, {"label" : "negFloatGen", "tail" : ": Gen[Any, NegFloat]", "member" : "zio.test.refined.types.NumericInstances.negFloatGen", "link" : "zio\/test\/refined\/types\/all$.html#negFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegFloat]", "kind" : "val"}, {"label" : "nonNegFloatGen", "tail" : ": Gen[Any, NonNegFloat]", "member" : "zio.test.refined.types.NumericInstances.nonNegFloatGen", "link" : "zio\/test\/refined\/types\/all$.html#nonNegFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegFloat]", "kind" : "val"}, {"label" : "posFloatGen", "tail" : ": Gen[Any, PosFloat]", "member" : "zio.test.refined.types.NumericInstances.posFloatGen", "link" : "zio\/test\/refined\/types\/all$.html#posFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosFloat]", "kind" : "val"}, {"label" : "nonPosBigIntGen", "tail" : ": Gen[Any, NonPosBigInt]", "member" : "zio.test.refined.types.NumericInstances.nonPosBigIntGen", "link" : "zio\/test\/refined\/types\/all$.html#nonPosBigIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosBigInt]", "kind" : "val"}, {"label" : "negBigIntGen", "tail" : ": Gen[Any, NegBigInt]", "member" : "zio.test.refined.types.NumericInstances.negBigIntGen", "link" : "zio\/test\/refined\/types\/all$.html#negBigIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegBigInt]", "kind" : "val"}, {"label" : "nonNegBigIntGen", "tail" : ": Gen[Any, NonNegBigInt]", "member" : "zio.test.refined.types.NumericInstances.nonNegBigIntGen", "link" : "zio\/test\/refined\/types\/all$.html#nonNegBigIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegBigInt]", "kind" : "val"}, {"label" : "posBigIntGen", "tail" : ": Gen[Any, PosBigInt]", "member" : "zio.test.refined.types.NumericInstances.posBigIntGen", "link" : "zio\/test\/refined\/types\/all$.html#posBigIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosBigInt]", "kind" : "val"}, {"label" : "nonPosLongGen", "tail" : ": Gen[Any, NonPosLong]", "member" : "zio.test.refined.types.NumericInstances.nonPosLongGen", "link" : "zio\/test\/refined\/types\/all$.html#nonPosLongGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosLong]", "kind" : "val"}, {"label" : "negLongGen", "tail" : ": Gen[Any, NegLong]", "member" : "zio.test.refined.types.NumericInstances.negLongGen", "link" : "zio\/test\/refined\/types\/all$.html#negLongGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegLong]", "kind" : "val"}, {"label" : "nonNegLongGen", "tail" : ": Gen[Any, NonNegLong]", "member" : "zio.test.refined.types.NumericInstances.nonNegLongGen", "link" : "zio\/test\/refined\/types\/all$.html#nonNegLongGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegLong]", "kind" : "val"}, {"label" : "posLongGen", "tail" : ": Gen[Any, PosLong]", "member" : "zio.test.refined.types.NumericInstances.posLongGen", "link" : "zio\/test\/refined\/types\/all$.html#posLongGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosLong]", "kind" : "val"}, {"label" : "nonPosIntGen", "tail" : ": Gen[Any, NonPosInt]", "member" : "zio.test.refined.types.NumericInstances.nonPosIntGen", "link" : "zio\/test\/refined\/types\/all$.html#nonPosIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosInt]", "kind" : "val"}, {"label" : "negIntGen", "tail" : ": Gen[Any, NegInt]", "member" : "zio.test.refined.types.NumericInstances.negIntGen", "link" : "zio\/test\/refined\/types\/all$.html#negIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegInt]", "kind" : "val"}, {"label" : "nonNegIntGen", "tail" : ": Gen[Any, NonNegInt]", "member" : "zio.test.refined.types.NumericInstances.nonNegIntGen", "link" : "zio\/test\/refined\/types\/all$.html#nonNegIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegInt]", "kind" : "val"}, {"label" : "posIntGen", "tail" : ": Gen[Any, PosInt]", "member" : "zio.test.refined.types.NumericInstances.posIntGen", "link" : "zio\/test\/refined\/types\/all$.html#posIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosInt]", "kind" : "val"}, {"label" : "nonPosShortGen", "tail" : ": Gen[Any, NonPosShort]", "member" : "zio.test.refined.types.NumericInstances.nonPosShortGen", "link" : "zio\/test\/refined\/types\/all$.html#nonPosShortGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosShort]", "kind" : "val"}, {"label" : "negShortGen", "tail" : ": Gen[Any, NegShort]", "member" : "zio.test.refined.types.NumericInstances.negShortGen", "link" : "zio\/test\/refined\/types\/all$.html#negShortGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegShort]", "kind" : "val"}, {"label" : "nonNegShortGen", "tail" : ": Gen[Any, NonNegShort]", "member" : "zio.test.refined.types.NumericInstances.nonNegShortGen", "link" : "zio\/test\/refined\/types\/all$.html#nonNegShortGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegShort]", "kind" : "val"}, {"label" : "posShortGen", "tail" : ": Gen[Any, PosShort]", "member" : "zio.test.refined.types.NumericInstances.posShortGen", "link" : "zio\/test\/refined\/types\/all$.html#posShortGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosShort]", "kind" : "val"}, {"label" : "nonPosByteGen", "tail" : ": Gen[Any, NonPosByte]", "member" : "zio.test.refined.types.NumericInstances.nonPosByteGen", "link" : "zio\/test\/refined\/types\/all$.html#nonPosByteGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosByte]", "kind" : "val"}, {"label" : "negByteGen", "tail" : ": Gen[Any, NegByte]", "member" : "zio.test.refined.types.NumericInstances.negByteGen", "link" : "zio\/test\/refined\/types\/all$.html#negByteGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegByte]", "kind" : "val"}, {"label" : "nonNegByteGen", "tail" : ": Gen[Any, NonNegByte]", "member" : "zio.test.refined.types.NumericInstances.nonNegByteGen", "link" : "zio\/test\/refined\/types\/all$.html#nonNegByteGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegByte]", "kind" : "val"}, {"label" : "posByteGen", "tail" : ": Gen[Any, PosByte]", "member" : "zio.test.refined.types.NumericInstances.posByteGen", "link" : "zio\/test\/refined\/types\/all$.html#posByteGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosByte]", "kind" : "val"}, {"label" : "privateNetworkDeriveGen", "tail" : ": DeriveGen[PrivateNetwork]", "member" : "zio.test.refined.types.NetInstances.privateNetworkDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#privateNetworkDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.PrivateNetwork]", "kind" : "implicit val"}, {"label" : "rfc2544BenchmarkDeriveGen", "tail" : ": DeriveGen[Rfc2544Benchmark]", "member" : "zio.test.refined.types.NetInstances.rfc2544BenchmarkDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#rfc2544BenchmarkDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc2544Benchmark]", "kind" : "implicit val"}, {"label" : "rfc3927LocalLinkDeriveGen", "tail" : ": DeriveGen[Rfc3927LocalLink]", "member" : "zio.test.refined.types.NetInstances.rfc3927LocalLinkDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#rfc3927LocalLinkDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc3927LocalLink]", "kind" : "implicit val"}, {"label" : "rfc5737TestnetDeriveGen", "tail" : ": DeriveGen[Rfc5737Testnet]", "member" : "zio.test.refined.types.NetInstances.rfc5737TestnetDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#rfc5737TestnetDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc5737Testnet]", "kind" : "implicit val"}, {"label" : "rfc5737Testnet3DeriveGen", "tail" : ": DeriveGen[Rfc5737Testnet3]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet3DeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#rfc5737Testnet3DeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc5737Testnet3]", "kind" : "implicit val"}, {"label" : "rfc5737Testnet2DeriveGen", "tail" : ": DeriveGen[Rfc5737Testnet2]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet2DeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#rfc5737Testnet2DeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc5737Testnet2]", "kind" : "implicit val"}, {"label" : "rfc5737Testnet1DeriveGen", "tail" : ": DeriveGen[Rfc5737Testnet1]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet1DeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#rfc5737Testnet1DeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc5737Testnet1]", "kind" : "implicit val"}, {"label" : "rfc1918PrivateDeriveGen", "tail" : ": DeriveGen[Rfc1918Private]", "member" : "zio.test.refined.types.NetInstances.rfc1918PrivateDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#rfc1918PrivateDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc1918Private]", "kind" : "implicit val"}, {"label" : "rfc1918ClassCPrivateDeriveGen", "tail" : ": DeriveGen[Rfc1918ClassCPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassCPrivateDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#rfc1918ClassCPrivateDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc1918ClassCPrivate]", "kind" : "implicit val"}, {"label" : "rfc1918ClassBPrivateDeriveGen", "tail" : ": DeriveGen[Rfc1918ClassBPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassBPrivateDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#rfc1918ClassBPrivateDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc1918ClassBPrivate]", "kind" : "implicit val"}, {"label" : "rfc1918ClassAPrivateDeriveGen", "tail" : ": DeriveGen[Rfc1918ClassAPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassAPrivateDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#rfc1918ClassAPrivateDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc1918ClassAPrivate]", "kind" : "implicit val"}, {"label" : "nonSystemPortNumberDeriveGen", "tail" : ": DeriveGen[NonSystemPortNumber]", "member" : "zio.test.refined.types.NetInstances.nonSystemPortNumberDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#nonSystemPortNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.NonSystemPortNumber]", "kind" : "implicit val"}, {"label" : "dynamicPortNumberDeriveGen", "tail" : ": DeriveGen[DynamicPortNumber]", "member" : "zio.test.refined.types.NetInstances.dynamicPortNumberDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#dynamicPortNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.DynamicPortNumber]", "kind" : "implicit val"}, {"label" : "userPortNumberDeriveGen", "tail" : ": DeriveGen[UserPortNumber]", "member" : "zio.test.refined.types.NetInstances.userPortNumberDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#userPortNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.UserPortNumber]", "kind" : "implicit val"}, {"label" : "systemPortNumberDeriveGen", "tail" : ": DeriveGen[SystemPortNumber]", "member" : "zio.test.refined.types.NetInstances.systemPortNumberDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#systemPortNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.SystemPortNumber]", "kind" : "implicit val"}, {"label" : "portNumberDeriveGen", "tail" : ": DeriveGen[PortNumber]", "member" : "zio.test.refined.types.NetInstances.portNumberDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#portNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.PortNumber]", "kind" : "implicit val"}, {"label" : "privateNetworkGen", "tail" : ": Gen[Any, PrivateNetwork]", "member" : "zio.test.refined.types.NetInstances.privateNetworkGen", "link" : "zio\/test\/refined\/types\/all$.html#privateNetworkGen:zio.test.Gen[Any,eu.timepit.refined.types.net.PrivateNetwork]", "kind" : "val"}, {"label" : "rfc2544BenchmarkGen", "tail" : ": Gen[Any, Rfc2544Benchmark]", "member" : "zio.test.refined.types.NetInstances.rfc2544BenchmarkGen", "link" : "zio\/test\/refined\/types\/all$.html#rfc2544BenchmarkGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc2544Benchmark]", "kind" : "val"}, {"label" : "rfc3927LocalLinkGen", "tail" : ": Gen[Any, Rfc3927LocalLink]", "member" : "zio.test.refined.types.NetInstances.rfc3927LocalLinkGen", "link" : "zio\/test\/refined\/types\/all$.html#rfc3927LocalLinkGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc3927LocalLink]", "kind" : "val"}, {"label" : "rfc5737TestnetGen", "tail" : ": Gen[Any, Rfc5737Testnet]", "member" : "zio.test.refined.types.NetInstances.rfc5737TestnetGen", "link" : "zio\/test\/refined\/types\/all$.html#rfc5737TestnetGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc5737Testnet]", "kind" : "val"}, {"label" : "rfc5737Testnet3Gen", "tail" : ": Gen[Any, Rfc5737Testnet3]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet3Gen", "link" : "zio\/test\/refined\/types\/all$.html#rfc5737Testnet3Gen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc5737Testnet3]", "kind" : "val"}, {"label" : "rfc5737Testnet2Gen", "tail" : ": Gen[Any, Rfc5737Testnet2]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet2Gen", "link" : "zio\/test\/refined\/types\/all$.html#rfc5737Testnet2Gen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc5737Testnet2]", "kind" : "val"}, {"label" : "rfc5737Testnet1Gen", "tail" : ": Gen[Any, Rfc5737Testnet1]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet1Gen", "link" : "zio\/test\/refined\/types\/all$.html#rfc5737Testnet1Gen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc5737Testnet1]", "kind" : "val"}, {"label" : "rfc1918PrivateGen", "tail" : ": Gen[Any, Rfc1918Private]", "member" : "zio.test.refined.types.NetInstances.rfc1918PrivateGen", "link" : "zio\/test\/refined\/types\/all$.html#rfc1918PrivateGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc1918Private]", "kind" : "val"}, {"label" : "rfc1918ClassCPrivateGen", "tail" : ": Gen[Any, Rfc1918ClassCPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassCPrivateGen", "link" : "zio\/test\/refined\/types\/all$.html#rfc1918ClassCPrivateGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc1918ClassCPrivate]", "kind" : "val"}, {"label" : "rfc1918ClassBPrivateGen", "tail" : ": Gen[Any, Rfc1918ClassBPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassBPrivateGen", "link" : "zio\/test\/refined\/types\/all$.html#rfc1918ClassBPrivateGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc1918ClassBPrivate]", "kind" : "val"}, {"label" : "rfc1918ClassAPrivateGen", "tail" : ": Gen[Any, Rfc1918ClassAPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassAPrivateGen", "link" : "zio\/test\/refined\/types\/all$.html#rfc1918ClassAPrivateGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc1918ClassAPrivate]", "kind" : "val"}, {"label" : "nonSystemPortNumberGen", "tail" : ": Gen[Any, NonSystemPortNumber]", "member" : "zio.test.refined.types.NetInstances.nonSystemPortNumberGen", "link" : "zio\/test\/refined\/types\/all$.html#nonSystemPortNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.NonSystemPortNumber]", "kind" : "val"}, {"label" : "dynamicPortNumberGen", "tail" : ": Gen[Any, DynamicPortNumber]", "member" : "zio.test.refined.types.NetInstances.dynamicPortNumberGen", "link" : "zio\/test\/refined\/types\/all$.html#dynamicPortNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.DynamicPortNumber]", "kind" : "val"}, {"label" : "userPortNumberGen", "tail" : ": Gen[Any, UserPortNumber]", "member" : "zio.test.refined.types.NetInstances.userPortNumberGen", "link" : "zio\/test\/refined\/types\/all$.html#userPortNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.UserPortNumber]", "kind" : "val"}, {"label" : "systemPortNumberGen", "tail" : ": Gen[Any, SystemPortNumber]", "member" : "zio.test.refined.types.NetInstances.systemPortNumberGen", "link" : "zio\/test\/refined\/types\/all$.html#systemPortNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.SystemPortNumber]", "kind" : "val"}, {"label" : "portNumberGen", "tail" : ": Gen[Any, PortNumber]", "member" : "zio.test.refined.types.NetInstances.portNumberGen", "link" : "zio\/test\/refined\/types\/all$.html#portNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.PortNumber]", "kind" : "val"}, {"label" : "sha512Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA512]", "member" : "zio.test.refined.types.DigitInstances.sha512Arbitrary", "link" : "zio\/test\/refined\/types\/all$.html#sha512Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA512]", "kind" : "implicit val"}, {"label" : "sha384Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA384]", "member" : "zio.test.refined.types.DigitInstances.sha384Arbitrary", "link" : "zio\/test\/refined\/types\/all$.html#sha384Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA384]", "kind" : "implicit val"}, {"label" : "sha256Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA256]", "member" : "zio.test.refined.types.DigitInstances.sha256Arbitrary", "link" : "zio\/test\/refined\/types\/all$.html#sha256Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA256]", "kind" : "implicit val"}, {"label" : "sha224Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA224]", "member" : "zio.test.refined.types.DigitInstances.sha224Arbitrary", "link" : "zio\/test\/refined\/types\/all$.html#sha224Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA224]", "kind" : "implicit val"}, {"label" : "sha1Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA1]", "member" : "zio.test.refined.types.DigitInstances.sha1Arbitrary", "link" : "zio\/test\/refined\/types\/all$.html#sha1Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA1]", "kind" : "implicit val"}, {"label" : "md5Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.MD5]", "member" : "zio.test.refined.types.DigitInstances.md5Arbitrary", "link" : "zio\/test\/refined\/types\/all$.html#md5Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.MD5]", "kind" : "implicit val"}, {"label" : "sha512Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA512]", "member" : "zio.test.refined.types.DigitInstances.sha512Gen", "link" : "zio\/test\/refined\/types\/all$.html#sha512Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA512]", "kind" : "val"}, {"label" : "sha384Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA384]", "member" : "zio.test.refined.types.DigitInstances.sha384Gen", "link" : "zio\/test\/refined\/types\/all$.html#sha384Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA384]", "kind" : "val"}, {"label" : "sha256Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA256]", "member" : "zio.test.refined.types.DigitInstances.sha256Gen", "link" : "zio\/test\/refined\/types\/all$.html#sha256Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA256]", "kind" : "val"}, {"label" : "sha224Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA224]", "member" : "zio.test.refined.types.DigitInstances.sha224Gen", "link" : "zio\/test\/refined\/types\/all$.html#sha224Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA224]", "kind" : "val"}, {"label" : "sha1Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA1]", "member" : "zio.test.refined.types.DigitInstances.sha1Gen", "link" : "zio\/test\/refined\/types\/all$.html#sha1Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA1]", "kind" : "val"}, {"label" : "md5Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.MD5]", "member" : "zio.test.refined.types.DigitInstances.md5Gen", "link" : "zio\/test\/refined\/types\/all$.html#md5Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.MD5]", "kind" : "val"}, {"label" : "upperCaseCharDeriveGen", "tail" : ": DeriveGen[UpperCaseChar]", "member" : "zio.test.refined.types.CharInstances.upperCaseCharDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#upperCaseCharDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.char.UpperCaseChar]", "kind" : "implicit val"}, {"label" : "lowerCaseCharDeriveGen", "tail" : ": DeriveGen[LowerCaseChar]", "member" : "zio.test.refined.types.CharInstances.lowerCaseCharDeriveGen", "link" : "zio\/test\/refined\/types\/all$.html#lowerCaseCharDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.char.LowerCaseChar]", "kind" : "implicit val"}, {"label" : "upperCaseCharGen", "tail" : ": Gen[Any, UpperCaseChar]", "member" : "zio.test.refined.types.CharInstances.upperCaseCharGen", "link" : "zio\/test\/refined\/types\/all$.html#upperCaseCharGen:zio.test.Gen[Any,eu.timepit.refined.types.char.UpperCaseChar]", "kind" : "val"}, {"label" : "lowerCaseCharGen", "tail" : ": Gen[Any, LowerCaseChar]", "member" : "zio.test.refined.types.CharInstances.lowerCaseCharGen", "link" : "zio\/test\/refined\/types\/all$.html#lowerCaseCharGen:zio.test.Gen[Any,eu.timepit.refined.types.char.LowerCaseChar]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/types\/all$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/types\/all$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/types\/all$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/types\/all$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/types\/all$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/types\/all$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/types\/all$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/types\/all$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/types\/all$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/types\/all$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/types\/all$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/types\/all$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/all$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/all$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/all$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/types\/all$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/types\/all$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/types\/all$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/types\/all$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.refined.types.AllTypesInstances", "trait" : "zio\/test\/refined\/types\/AllTypesInstances.html", "kind" : "trait", "members_trait" : [{"label" : "FiniteStringPartiallyApplied", "tail" : "", "member" : "zio.test.refined.types.StringInstance.FiniteStringPartiallyApplied", "link" : "zio\/test\/refined\/types\/StringInstance.html#FiniteStringPartiallyApplied[N<:Int,P]extendsAnyRef", "kind" : "class"}, {"label" : "millsDeriveGen", "tail" : "(): DeriveGen[Millis]", "member" : "zio.test.refined.types.TimeInstances.millsDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#millsDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Millis]", "kind" : "implicit def"}, {"label" : "secondDeriveGen", "tail" : "(): DeriveGen[Second]", "member" : "zio.test.refined.types.TimeInstances.secondDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#secondDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Second]", "kind" : "implicit def"}, {"label" : "minuteDeriveGen", "tail" : "(): DeriveGen[Minute]", "member" : "zio.test.refined.types.TimeInstances.minuteDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#minuteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Minute]", "kind" : "implicit def"}, {"label" : "hourDeriveGen", "tail" : "(): DeriveGen[Hour]", "member" : "zio.test.refined.types.TimeInstances.hourDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#hourDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Hour]", "kind" : "implicit def"}, {"label" : "dayDeriveGen", "tail" : "(): DeriveGen[Day]", "member" : "zio.test.refined.types.TimeInstances.dayDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#dayDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Day]", "kind" : "implicit def"}, {"label" : "monthDeriveGen", "tail" : "(): DeriveGen[Month]", "member" : "zio.test.refined.types.TimeInstances.monthDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#monthDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Month]", "kind" : "implicit def"}, {"label" : "millsGen", "tail" : ": Gen[Any, Millis]", "member" : "zio.test.refined.types.TimeInstances.millsGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#millsGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Millis]", "kind" : "val"}, {"label" : "secondGen", "tail" : ": Gen[Any, Second]", "member" : "zio.test.refined.types.TimeInstances.secondGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#secondGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Second]", "kind" : "val"}, {"label" : "minuteGen", "tail" : ": Gen[Any, Minute]", "member" : "zio.test.refined.types.TimeInstances.minuteGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#minuteGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Minute]", "kind" : "val"}, {"label" : "hourGen", "tail" : ": Gen[Any, Hour]", "member" : "zio.test.refined.types.TimeInstances.hourGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#hourGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Hour]", "kind" : "val"}, {"label" : "dayGen", "tail" : ": Gen[Any, Day]", "member" : "zio.test.refined.types.TimeInstances.dayGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#dayGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Day]", "kind" : "val"}, {"label" : "monthGen", "tail" : ": Gen[Any, Month]", "member" : "zio.test.refined.types.TimeInstances.monthGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#monthGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Month]", "kind" : "val"}, {"label" : "hexStringDeriveGen", "tail" : "(): DeriveGen[HexString]", "member" : "zio.test.refined.types.StringInstance.hexStringDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#hexStringDeriveGen[R]:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.HexString]", "kind" : "implicit def"}, {"label" : "trimmedStringDeriveGen", "tail" : "(charGen: DeriveGen[Char]): DeriveGen[TrimmedString]", "member" : "zio.test.refined.types.StringInstance.trimmedStringDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#trimmedStringDeriveGen[R](implicitcharGen:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.TrimmedString]", "kind" : "implicit def"}, {"label" : "nonEmptyFiniteStringDeriveGen", "tail" : "(ws: Aux[N], charGen: DeriveGen[Char]): DeriveGen[NonEmptyFiniteString[N]]", "member" : "zio.test.refined.types.StringInstance.nonEmptyFiniteStringDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonEmptyFiniteStringDeriveGen[N<:Int](implicitws:shapeless.Witness.Aux[N],implicitcharGen:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.NonEmptyFiniteString[N]]", "kind" : "implicit def"}, {"label" : "nonEmptyStringDeriveGen", "tail" : "(charGen: DeriveGen[Char]): DeriveGen[NonEmptyString]", "member" : "zio.test.refined.types.StringInstance.nonEmptyStringDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonEmptyStringDeriveGen[R](implicitcharGen:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.NonEmptyString]", "kind" : "implicit def"}, {"label" : "finiteStringDeriveGen", "tail" : "(ws: Aux[N], charGen: DeriveGen[Char]): DeriveGen[FiniteString[N]]", "member" : "zio.test.refined.types.StringInstance.finiteStringDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#finiteStringDeriveGen[N<:Int](implicitws:shapeless.Witness.Aux[N],implicitcharGen:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.FiniteString[N]]", "kind" : "implicit def"}, {"label" : "hexStringGen", "tail" : "(): Gen[Any, HexString]", "member" : "zio.test.refined.types.StringInstance.hexStringGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#hexStringGen:zio.test.Gen[Any,eu.timepit.refined.types.string.HexString]", "kind" : "def"}, {"label" : "trimmedStringGen", "tail" : "(charGen: Gen[R, Char]): Gen[R, TrimmedString]", "member" : "zio.test.refined.types.StringInstance.trimmedStringGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#trimmedStringGen[R](charGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.types.string.TrimmedString]", "kind" : "def"}, {"label" : "nonEmptyFiniteStringGen", "tail" : "(): FiniteStringPartiallyApplied[N, Size[Closed[shapeless.Nat._1, N]]]", "member" : "zio.test.refined.types.StringInstance.nonEmptyFiniteStringGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonEmptyFiniteStringGen[N<:Int]:StringInstance.this.FiniteStringPartiallyApplied[N,eu.timepit.refined.collection.Size[eu.timepit.refined.numeric.Interval.Closed[shapeless.Nat._1,N]]]", "kind" : "def"}, {"label" : "nonEmptyStringGen", "tail" : "(charGen: Gen[R, Char]): Gen[R, NonEmptyString]", "member" : "zio.test.refined.types.StringInstance.nonEmptyStringGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonEmptyStringGen[R](charGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.types.string.NonEmptyString]", "kind" : "def"}, {"label" : "finiteStringGen", "tail" : "(): FiniteStringPartiallyApplied[N, MaxSize[N]]", "member" : "zio.test.refined.types.StringInstance.finiteStringGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#finiteStringGen[N<:Int]:StringInstance.this.FiniteStringPartiallyApplied[N,eu.timepit.refined.collection.MaxSize[N]]", "kind" : "def"}, {"label" : "nonNanDoubleDeriveGen", "tail" : ": DeriveGen[NonNaNDouble]", "member" : "zio.test.refined.types.NumericInstances.nonNanDoubleDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonNanDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNaNDouble]", "kind" : "implicit val"}, {"label" : "nonNanFloatDeriveGen", "tail" : ": DeriveGen[NonNaNFloat]", "member" : "zio.test.refined.types.NumericInstances.nonNanFloatDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonNanFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNaNFloat]", "kind" : "implicit val"}, {"label" : "nonPosBigDecimalDeriveGen", "tail" : ": DeriveGen[NonPosBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.nonPosBigDecimalDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonPosBigDecimalDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosBigDecimal]", "kind" : "implicit val"}, {"label" : "negBigDecimalDeriveGen", "tail" : ": DeriveGen[NegBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.negBigDecimalDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#negBigDecimalDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegBigDecimal]", "kind" : "implicit val"}, {"label" : "nonNegBigDecimalDeriveGen", "tail" : ": DeriveGen[NonNegBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.nonNegBigDecimalDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonNegBigDecimalDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegBigDecimal]", "kind" : "implicit val"}, {"label" : "posBigDecimalDeriveGen", "tail" : ": DeriveGen[PosBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.posBigDecimalDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#posBigDecimalDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosBigDecimal]", "kind" : "implicit val"}, {"label" : "nonPosDoubleDeriveGen", "tail" : ": DeriveGen[NonPosDouble]", "member" : "zio.test.refined.types.NumericInstances.nonPosDoubleDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonPosDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosDouble]", "kind" : "implicit val"}, {"label" : "negDoubleDeriveGen", "tail" : ": DeriveGen[NegDouble]", "member" : "zio.test.refined.types.NumericInstances.negDoubleDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#negDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegDouble]", "kind" : "implicit val"}, {"label" : "nonNegDoubleDeriveGen", "tail" : ": DeriveGen[NonNegDouble]", "member" : "zio.test.refined.types.NumericInstances.nonNegDoubleDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonNegDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegDouble]", "kind" : "implicit val"}, {"label" : "posDoubleDeriveGen", "tail" : ": DeriveGen[PosDouble]", "member" : "zio.test.refined.types.NumericInstances.posDoubleDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#posDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosDouble]", "kind" : "implicit val"}, {"label" : "nonPosFloatDeriveGen", "tail" : ": DeriveGen[NonPosFloat]", "member" : "zio.test.refined.types.NumericInstances.nonPosFloatDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonPosFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosFloat]", "kind" : "implicit val"}, {"label" : "negFloatDeriveGen", "tail" : ": DeriveGen[NegFloat]", "member" : "zio.test.refined.types.NumericInstances.negFloatDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#negFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegFloat]", "kind" : "implicit val"}, {"label" : "nonNegFloatDeriveGen", "tail" : ": DeriveGen[NonNegFloat]", "member" : "zio.test.refined.types.NumericInstances.nonNegFloatDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonNegFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegFloat]", "kind" : "implicit val"}, {"label" : "posFloatDeriveGen", "tail" : ": DeriveGen[PosFloat]", "member" : "zio.test.refined.types.NumericInstances.posFloatDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#posFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosFloat]", "kind" : "implicit val"}, {"label" : "nonPosBigIntDeriveGen", "tail" : ": DeriveGen[NonPosBigInt]", "member" : "zio.test.refined.types.NumericInstances.nonPosBigIntDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonPosBigIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosBigInt]", "kind" : "implicit val"}, {"label" : "negBigIntDeriveGen", "tail" : ": DeriveGen[NegBigInt]", "member" : "zio.test.refined.types.NumericInstances.negBigIntDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#negBigIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegBigInt]", "kind" : "implicit val"}, {"label" : "nonNegBigIntDeriveGen", "tail" : ": DeriveGen[NonNegBigInt]", "member" : "zio.test.refined.types.NumericInstances.nonNegBigIntDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonNegBigIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegBigInt]", "kind" : "implicit val"}, {"label" : "posBigIntDeriveGen", "tail" : ": DeriveGen[PosBigInt]", "member" : "zio.test.refined.types.NumericInstances.posBigIntDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#posBigIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosBigInt]", "kind" : "implicit val"}, {"label" : "nonPosLongDeriveGen", "tail" : ": DeriveGen[NonPosLong]", "member" : "zio.test.refined.types.NumericInstances.nonPosLongDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonPosLongDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosLong]", "kind" : "implicit val"}, {"label" : "negLongDeriveGen", "tail" : ": DeriveGen[NegLong]", "member" : "zio.test.refined.types.NumericInstances.negLongDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#negLongDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegLong]", "kind" : "implicit val"}, {"label" : "nonNegLongDeriveGen", "tail" : ": DeriveGen[NonNegLong]", "member" : "zio.test.refined.types.NumericInstances.nonNegLongDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonNegLongDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegLong]", "kind" : "implicit val"}, {"label" : "posLongDeriveGen", "tail" : ": DeriveGen[PosLong]", "member" : "zio.test.refined.types.NumericInstances.posLongDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#posLongDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosLong]", "kind" : "implicit val"}, {"label" : "nonPosIntDeriveGen", "tail" : ": DeriveGen[NonPosInt]", "member" : "zio.test.refined.types.NumericInstances.nonPosIntDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonPosIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosInt]", "kind" : "implicit val"}, {"label" : "negIntDeriveGen", "tail" : ": DeriveGen[NegInt]", "member" : "zio.test.refined.types.NumericInstances.negIntDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#negIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegInt]", "kind" : "implicit val"}, {"label" : "nonNegIntDeriveGen", "tail" : ": DeriveGen[NonNegInt]", "member" : "zio.test.refined.types.NumericInstances.nonNegIntDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonNegIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegInt]", "kind" : "implicit val"}, {"label" : "posIntDeriveGen", "tail" : ": DeriveGen[PosInt]", "member" : "zio.test.refined.types.NumericInstances.posIntDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#posIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosInt]", "kind" : "implicit val"}, {"label" : "nonPosShortDeriveGen", "tail" : ": DeriveGen[NonPosShort]", "member" : "zio.test.refined.types.NumericInstances.nonPosShortDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonPosShortDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosShort]", "kind" : "implicit val"}, {"label" : "negShortDeriveGen", "tail" : ": DeriveGen[NegShort]", "member" : "zio.test.refined.types.NumericInstances.negShortDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#negShortDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegShort]", "kind" : "implicit val"}, {"label" : "nonNegShortDeriveGen", "tail" : ": DeriveGen[NonNegShort]", "member" : "zio.test.refined.types.NumericInstances.nonNegShortDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonNegShortDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegShort]", "kind" : "implicit val"}, {"label" : "posShortDeriveGen", "tail" : ": DeriveGen[PosShort]", "member" : "zio.test.refined.types.NumericInstances.posShortDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#posShortDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosShort]", "kind" : "implicit val"}, {"label" : "nonPosByteDeriveGen", "tail" : ": DeriveGen[NonPosByte]", "member" : "zio.test.refined.types.NumericInstances.nonPosByteDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonPosByteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosByte]", "kind" : "implicit val"}, {"label" : "negByteDeriveGen", "tail" : ": DeriveGen[NegByte]", "member" : "zio.test.refined.types.NumericInstances.negByteDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#negByteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegByte]", "kind" : "implicit val"}, {"label" : "nonNegByteDeriveGen", "tail" : ": DeriveGen[NonNegByte]", "member" : "zio.test.refined.types.NumericInstances.nonNegByteDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonNegByteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegByte]", "kind" : "implicit val"}, {"label" : "posByteDeriveGen", "tail" : ": DeriveGen[PosByte]", "member" : "zio.test.refined.types.NumericInstances.posByteDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#posByteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosByte]", "kind" : "implicit val"}, {"label" : "nonNanDoubleGen", "tail" : ": Gen[Any, NonNaNDouble]", "member" : "zio.test.refined.types.NumericInstances.nonNanDoubleGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonNanDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNaNDouble]", "kind" : "val"}, {"label" : "nonNanFloatGen", "tail" : ": Gen[Any, NonNaNFloat]", "member" : "zio.test.refined.types.NumericInstances.nonNanFloatGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonNanFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNaNFloat]", "kind" : "val"}, {"label" : "nonPosBigDecimalGen", "tail" : ": Gen[Any, NonPosBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.nonPosBigDecimalGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonPosBigDecimalGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosBigDecimal]", "kind" : "val"}, {"label" : "negBigDecimalGen", "tail" : ": Gen[Any, NegBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.negBigDecimalGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#negBigDecimalGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegBigDecimal]", "kind" : "val"}, {"label" : "nonNegBigDecimalGen", "tail" : ": Gen[Any, NonNegBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.nonNegBigDecimalGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonNegBigDecimalGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegBigDecimal]", "kind" : "val"}, {"label" : "posBigDecimalGen", "tail" : ": Gen[Any, PosBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.posBigDecimalGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#posBigDecimalGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosBigDecimal]", "kind" : "val"}, {"label" : "nonPosDoubleGen", "tail" : ": Gen[Any, NonPosDouble]", "member" : "zio.test.refined.types.NumericInstances.nonPosDoubleGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonPosDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosDouble]", "kind" : "val"}, {"label" : "negDoubleGen", "tail" : ": Gen[Any, NegDouble]", "member" : "zio.test.refined.types.NumericInstances.negDoubleGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#negDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegDouble]", "kind" : "val"}, {"label" : "nonNegDoubleGen", "tail" : ": Gen[Any, NonNegDouble]", "member" : "zio.test.refined.types.NumericInstances.nonNegDoubleGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonNegDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegDouble]", "kind" : "val"}, {"label" : "posDoubleGen", "tail" : ": Gen[Any, PosDouble]", "member" : "zio.test.refined.types.NumericInstances.posDoubleGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#posDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosDouble]", "kind" : "val"}, {"label" : "nonPosFloatGen", "tail" : ": Gen[Any, NonPosFloat]", "member" : "zio.test.refined.types.NumericInstances.nonPosFloatGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonPosFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosFloat]", "kind" : "val"}, {"label" : "negFloatGen", "tail" : ": Gen[Any, NegFloat]", "member" : "zio.test.refined.types.NumericInstances.negFloatGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#negFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegFloat]", "kind" : "val"}, {"label" : "nonNegFloatGen", "tail" : ": Gen[Any, NonNegFloat]", "member" : "zio.test.refined.types.NumericInstances.nonNegFloatGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonNegFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegFloat]", "kind" : "val"}, {"label" : "posFloatGen", "tail" : ": Gen[Any, PosFloat]", "member" : "zio.test.refined.types.NumericInstances.posFloatGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#posFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosFloat]", "kind" : "val"}, {"label" : "nonPosBigIntGen", "tail" : ": Gen[Any, NonPosBigInt]", "member" : "zio.test.refined.types.NumericInstances.nonPosBigIntGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonPosBigIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosBigInt]", "kind" : "val"}, {"label" : "negBigIntGen", "tail" : ": Gen[Any, NegBigInt]", "member" : "zio.test.refined.types.NumericInstances.negBigIntGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#negBigIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegBigInt]", "kind" : "val"}, {"label" : "nonNegBigIntGen", "tail" : ": Gen[Any, NonNegBigInt]", "member" : "zio.test.refined.types.NumericInstances.nonNegBigIntGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonNegBigIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegBigInt]", "kind" : "val"}, {"label" : "posBigIntGen", "tail" : ": Gen[Any, PosBigInt]", "member" : "zio.test.refined.types.NumericInstances.posBigIntGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#posBigIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosBigInt]", "kind" : "val"}, {"label" : "nonPosLongGen", "tail" : ": Gen[Any, NonPosLong]", "member" : "zio.test.refined.types.NumericInstances.nonPosLongGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonPosLongGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosLong]", "kind" : "val"}, {"label" : "negLongGen", "tail" : ": Gen[Any, NegLong]", "member" : "zio.test.refined.types.NumericInstances.negLongGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#negLongGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegLong]", "kind" : "val"}, {"label" : "nonNegLongGen", "tail" : ": Gen[Any, NonNegLong]", "member" : "zio.test.refined.types.NumericInstances.nonNegLongGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonNegLongGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegLong]", "kind" : "val"}, {"label" : "posLongGen", "tail" : ": Gen[Any, PosLong]", "member" : "zio.test.refined.types.NumericInstances.posLongGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#posLongGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosLong]", "kind" : "val"}, {"label" : "nonPosIntGen", "tail" : ": Gen[Any, NonPosInt]", "member" : "zio.test.refined.types.NumericInstances.nonPosIntGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonPosIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosInt]", "kind" : "val"}, {"label" : "negIntGen", "tail" : ": Gen[Any, NegInt]", "member" : "zio.test.refined.types.NumericInstances.negIntGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#negIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegInt]", "kind" : "val"}, {"label" : "nonNegIntGen", "tail" : ": Gen[Any, NonNegInt]", "member" : "zio.test.refined.types.NumericInstances.nonNegIntGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonNegIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegInt]", "kind" : "val"}, {"label" : "posIntGen", "tail" : ": Gen[Any, PosInt]", "member" : "zio.test.refined.types.NumericInstances.posIntGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#posIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosInt]", "kind" : "val"}, {"label" : "nonPosShortGen", "tail" : ": Gen[Any, NonPosShort]", "member" : "zio.test.refined.types.NumericInstances.nonPosShortGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonPosShortGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosShort]", "kind" : "val"}, {"label" : "negShortGen", "tail" : ": Gen[Any, NegShort]", "member" : "zio.test.refined.types.NumericInstances.negShortGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#negShortGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegShort]", "kind" : "val"}, {"label" : "nonNegShortGen", "tail" : ": Gen[Any, NonNegShort]", "member" : "zio.test.refined.types.NumericInstances.nonNegShortGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonNegShortGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegShort]", "kind" : "val"}, {"label" : "posShortGen", "tail" : ": Gen[Any, PosShort]", "member" : "zio.test.refined.types.NumericInstances.posShortGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#posShortGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosShort]", "kind" : "val"}, {"label" : "nonPosByteGen", "tail" : ": Gen[Any, NonPosByte]", "member" : "zio.test.refined.types.NumericInstances.nonPosByteGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonPosByteGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosByte]", "kind" : "val"}, {"label" : "negByteGen", "tail" : ": Gen[Any, NegByte]", "member" : "zio.test.refined.types.NumericInstances.negByteGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#negByteGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegByte]", "kind" : "val"}, {"label" : "nonNegByteGen", "tail" : ": Gen[Any, NonNegByte]", "member" : "zio.test.refined.types.NumericInstances.nonNegByteGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonNegByteGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegByte]", "kind" : "val"}, {"label" : "posByteGen", "tail" : ": Gen[Any, PosByte]", "member" : "zio.test.refined.types.NumericInstances.posByteGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#posByteGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosByte]", "kind" : "val"}, {"label" : "privateNetworkDeriveGen", "tail" : ": DeriveGen[PrivateNetwork]", "member" : "zio.test.refined.types.NetInstances.privateNetworkDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#privateNetworkDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.PrivateNetwork]", "kind" : "implicit val"}, {"label" : "rfc2544BenchmarkDeriveGen", "tail" : ": DeriveGen[Rfc2544Benchmark]", "member" : "zio.test.refined.types.NetInstances.rfc2544BenchmarkDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#rfc2544BenchmarkDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc2544Benchmark]", "kind" : "implicit val"}, {"label" : "rfc3927LocalLinkDeriveGen", "tail" : ": DeriveGen[Rfc3927LocalLink]", "member" : "zio.test.refined.types.NetInstances.rfc3927LocalLinkDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#rfc3927LocalLinkDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc3927LocalLink]", "kind" : "implicit val"}, {"label" : "rfc5737TestnetDeriveGen", "tail" : ": DeriveGen[Rfc5737Testnet]", "member" : "zio.test.refined.types.NetInstances.rfc5737TestnetDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#rfc5737TestnetDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc5737Testnet]", "kind" : "implicit val"}, {"label" : "rfc5737Testnet3DeriveGen", "tail" : ": DeriveGen[Rfc5737Testnet3]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet3DeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#rfc5737Testnet3DeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc5737Testnet3]", "kind" : "implicit val"}, {"label" : "rfc5737Testnet2DeriveGen", "tail" : ": DeriveGen[Rfc5737Testnet2]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet2DeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#rfc5737Testnet2DeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc5737Testnet2]", "kind" : "implicit val"}, {"label" : "rfc5737Testnet1DeriveGen", "tail" : ": DeriveGen[Rfc5737Testnet1]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet1DeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#rfc5737Testnet1DeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc5737Testnet1]", "kind" : "implicit val"}, {"label" : "rfc1918PrivateDeriveGen", "tail" : ": DeriveGen[Rfc1918Private]", "member" : "zio.test.refined.types.NetInstances.rfc1918PrivateDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#rfc1918PrivateDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc1918Private]", "kind" : "implicit val"}, {"label" : "rfc1918ClassCPrivateDeriveGen", "tail" : ": DeriveGen[Rfc1918ClassCPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassCPrivateDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#rfc1918ClassCPrivateDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc1918ClassCPrivate]", "kind" : "implicit val"}, {"label" : "rfc1918ClassBPrivateDeriveGen", "tail" : ": DeriveGen[Rfc1918ClassBPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassBPrivateDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#rfc1918ClassBPrivateDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc1918ClassBPrivate]", "kind" : "implicit val"}, {"label" : "rfc1918ClassAPrivateDeriveGen", "tail" : ": DeriveGen[Rfc1918ClassAPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassAPrivateDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#rfc1918ClassAPrivateDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc1918ClassAPrivate]", "kind" : "implicit val"}, {"label" : "nonSystemPortNumberDeriveGen", "tail" : ": DeriveGen[NonSystemPortNumber]", "member" : "zio.test.refined.types.NetInstances.nonSystemPortNumberDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonSystemPortNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.NonSystemPortNumber]", "kind" : "implicit val"}, {"label" : "dynamicPortNumberDeriveGen", "tail" : ": DeriveGen[DynamicPortNumber]", "member" : "zio.test.refined.types.NetInstances.dynamicPortNumberDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#dynamicPortNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.DynamicPortNumber]", "kind" : "implicit val"}, {"label" : "userPortNumberDeriveGen", "tail" : ": DeriveGen[UserPortNumber]", "member" : "zio.test.refined.types.NetInstances.userPortNumberDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#userPortNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.UserPortNumber]", "kind" : "implicit val"}, {"label" : "systemPortNumberDeriveGen", "tail" : ": DeriveGen[SystemPortNumber]", "member" : "zio.test.refined.types.NetInstances.systemPortNumberDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#systemPortNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.SystemPortNumber]", "kind" : "implicit val"}, {"label" : "portNumberDeriveGen", "tail" : ": DeriveGen[PortNumber]", "member" : "zio.test.refined.types.NetInstances.portNumberDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#portNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.PortNumber]", "kind" : "implicit val"}, {"label" : "privateNetworkGen", "tail" : ": Gen[Any, PrivateNetwork]", "member" : "zio.test.refined.types.NetInstances.privateNetworkGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#privateNetworkGen:zio.test.Gen[Any,eu.timepit.refined.types.net.PrivateNetwork]", "kind" : "val"}, {"label" : "rfc2544BenchmarkGen", "tail" : ": Gen[Any, Rfc2544Benchmark]", "member" : "zio.test.refined.types.NetInstances.rfc2544BenchmarkGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#rfc2544BenchmarkGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc2544Benchmark]", "kind" : "val"}, {"label" : "rfc3927LocalLinkGen", "tail" : ": Gen[Any, Rfc3927LocalLink]", "member" : "zio.test.refined.types.NetInstances.rfc3927LocalLinkGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#rfc3927LocalLinkGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc3927LocalLink]", "kind" : "val"}, {"label" : "rfc5737TestnetGen", "tail" : ": Gen[Any, Rfc5737Testnet]", "member" : "zio.test.refined.types.NetInstances.rfc5737TestnetGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#rfc5737TestnetGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc5737Testnet]", "kind" : "val"}, {"label" : "rfc5737Testnet3Gen", "tail" : ": Gen[Any, Rfc5737Testnet3]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet3Gen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#rfc5737Testnet3Gen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc5737Testnet3]", "kind" : "val"}, {"label" : "rfc5737Testnet2Gen", "tail" : ": Gen[Any, Rfc5737Testnet2]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet2Gen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#rfc5737Testnet2Gen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc5737Testnet2]", "kind" : "val"}, {"label" : "rfc5737Testnet1Gen", "tail" : ": Gen[Any, Rfc5737Testnet1]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet1Gen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#rfc5737Testnet1Gen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc5737Testnet1]", "kind" : "val"}, {"label" : "rfc1918PrivateGen", "tail" : ": Gen[Any, Rfc1918Private]", "member" : "zio.test.refined.types.NetInstances.rfc1918PrivateGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#rfc1918PrivateGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc1918Private]", "kind" : "val"}, {"label" : "rfc1918ClassCPrivateGen", "tail" : ": Gen[Any, Rfc1918ClassCPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassCPrivateGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#rfc1918ClassCPrivateGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc1918ClassCPrivate]", "kind" : "val"}, {"label" : "rfc1918ClassBPrivateGen", "tail" : ": Gen[Any, Rfc1918ClassBPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassBPrivateGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#rfc1918ClassBPrivateGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc1918ClassBPrivate]", "kind" : "val"}, {"label" : "rfc1918ClassAPrivateGen", "tail" : ": Gen[Any, Rfc1918ClassAPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassAPrivateGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#rfc1918ClassAPrivateGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc1918ClassAPrivate]", "kind" : "val"}, {"label" : "nonSystemPortNumberGen", "tail" : ": Gen[Any, NonSystemPortNumber]", "member" : "zio.test.refined.types.NetInstances.nonSystemPortNumberGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#nonSystemPortNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.NonSystemPortNumber]", "kind" : "val"}, {"label" : "dynamicPortNumberGen", "tail" : ": Gen[Any, DynamicPortNumber]", "member" : "zio.test.refined.types.NetInstances.dynamicPortNumberGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#dynamicPortNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.DynamicPortNumber]", "kind" : "val"}, {"label" : "userPortNumberGen", "tail" : ": Gen[Any, UserPortNumber]", "member" : "zio.test.refined.types.NetInstances.userPortNumberGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#userPortNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.UserPortNumber]", "kind" : "val"}, {"label" : "systemPortNumberGen", "tail" : ": Gen[Any, SystemPortNumber]", "member" : "zio.test.refined.types.NetInstances.systemPortNumberGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#systemPortNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.SystemPortNumber]", "kind" : "val"}, {"label" : "portNumberGen", "tail" : ": Gen[Any, PortNumber]", "member" : "zio.test.refined.types.NetInstances.portNumberGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#portNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.PortNumber]", "kind" : "val"}, {"label" : "sha512Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA512]", "member" : "zio.test.refined.types.DigitInstances.sha512Arbitrary", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#sha512Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA512]", "kind" : "implicit val"}, {"label" : "sha384Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA384]", "member" : "zio.test.refined.types.DigitInstances.sha384Arbitrary", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#sha384Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA384]", "kind" : "implicit val"}, {"label" : "sha256Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA256]", "member" : "zio.test.refined.types.DigitInstances.sha256Arbitrary", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#sha256Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA256]", "kind" : "implicit val"}, {"label" : "sha224Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA224]", "member" : "zio.test.refined.types.DigitInstances.sha224Arbitrary", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#sha224Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA224]", "kind" : "implicit val"}, {"label" : "sha1Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA1]", "member" : "zio.test.refined.types.DigitInstances.sha1Arbitrary", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#sha1Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA1]", "kind" : "implicit val"}, {"label" : "md5Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.MD5]", "member" : "zio.test.refined.types.DigitInstances.md5Arbitrary", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#md5Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.MD5]", "kind" : "implicit val"}, {"label" : "sha512Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA512]", "member" : "zio.test.refined.types.DigitInstances.sha512Gen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#sha512Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA512]", "kind" : "val"}, {"label" : "sha384Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA384]", "member" : "zio.test.refined.types.DigitInstances.sha384Gen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#sha384Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA384]", "kind" : "val"}, {"label" : "sha256Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA256]", "member" : "zio.test.refined.types.DigitInstances.sha256Gen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#sha256Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA256]", "kind" : "val"}, {"label" : "sha224Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA224]", "member" : "zio.test.refined.types.DigitInstances.sha224Gen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#sha224Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA224]", "kind" : "val"}, {"label" : "sha1Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA1]", "member" : "zio.test.refined.types.DigitInstances.sha1Gen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#sha1Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA1]", "kind" : "val"}, {"label" : "md5Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.MD5]", "member" : "zio.test.refined.types.DigitInstances.md5Gen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#md5Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.MD5]", "kind" : "val"}, {"label" : "upperCaseCharDeriveGen", "tail" : ": DeriveGen[UpperCaseChar]", "member" : "zio.test.refined.types.CharInstances.upperCaseCharDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#upperCaseCharDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.char.UpperCaseChar]", "kind" : "implicit val"}, {"label" : "lowerCaseCharDeriveGen", "tail" : ": DeriveGen[LowerCaseChar]", "member" : "zio.test.refined.types.CharInstances.lowerCaseCharDeriveGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#lowerCaseCharDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.char.LowerCaseChar]", "kind" : "implicit val"}, {"label" : "upperCaseCharGen", "tail" : ": Gen[Any, UpperCaseChar]", "member" : "zio.test.refined.types.CharInstances.upperCaseCharGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#upperCaseCharGen:zio.test.Gen[Any,eu.timepit.refined.types.char.UpperCaseChar]", "kind" : "val"}, {"label" : "lowerCaseCharGen", "tail" : ": Gen[Any, LowerCaseChar]", "member" : "zio.test.refined.types.CharInstances.lowerCaseCharGen", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#lowerCaseCharGen:zio.test.Gen[Any,eu.timepit.refined.types.char.LowerCaseChar]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/types\/AllTypesInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.refined.types.char", "shortDescription" : "", "object" : "zio\/test\/refined\/types\/char$.html", "members_object" : [{"label" : "upperCaseCharDeriveGen", "tail" : ": DeriveGen[UpperCaseChar]", "member" : "zio.test.refined.types.CharInstances.upperCaseCharDeriveGen", "link" : "zio\/test\/refined\/types\/char$.html#upperCaseCharDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.char.UpperCaseChar]", "kind" : "implicit val"}, {"label" : "lowerCaseCharDeriveGen", "tail" : ": DeriveGen[LowerCaseChar]", "member" : "zio.test.refined.types.CharInstances.lowerCaseCharDeriveGen", "link" : "zio\/test\/refined\/types\/char$.html#lowerCaseCharDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.char.LowerCaseChar]", "kind" : "implicit val"}, {"label" : "upperCaseCharGen", "tail" : ": Gen[Any, UpperCaseChar]", "member" : "zio.test.refined.types.CharInstances.upperCaseCharGen", "link" : "zio\/test\/refined\/types\/char$.html#upperCaseCharGen:zio.test.Gen[Any,eu.timepit.refined.types.char.UpperCaseChar]", "kind" : "val"}, {"label" : "lowerCaseCharGen", "tail" : ": Gen[Any, LowerCaseChar]", "member" : "zio.test.refined.types.CharInstances.lowerCaseCharGen", "link" : "zio\/test\/refined\/types\/char$.html#lowerCaseCharGen:zio.test.Gen[Any,eu.timepit.refined.types.char.LowerCaseChar]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/types\/char$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/types\/char$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/types\/char$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/types\/char$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/types\/char$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/types\/char$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/types\/char$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/types\/char$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/types\/char$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/types\/char$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/types\/char$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/types\/char$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/char$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/char$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/char$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/types\/char$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/types\/char$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/types\/char$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/types\/char$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.refined.types.CharInstances", "trait" : "zio\/test\/refined\/types\/CharInstances.html", "kind" : "trait", "members_trait" : [{"label" : "upperCaseCharDeriveGen", "tail" : ": DeriveGen[UpperCaseChar]", "member" : "zio.test.refined.types.CharInstances.upperCaseCharDeriveGen", "link" : "zio\/test\/refined\/types\/CharInstances.html#upperCaseCharDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.char.UpperCaseChar]", "kind" : "implicit val"}, {"label" : "lowerCaseCharDeriveGen", "tail" : ": DeriveGen[LowerCaseChar]", "member" : "zio.test.refined.types.CharInstances.lowerCaseCharDeriveGen", "link" : "zio\/test\/refined\/types\/CharInstances.html#lowerCaseCharDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.char.LowerCaseChar]", "kind" : "implicit val"}, {"label" : "upperCaseCharGen", "tail" : ": Gen[Any, UpperCaseChar]", "member" : "zio.test.refined.types.CharInstances.upperCaseCharGen", "link" : "zio\/test\/refined\/types\/CharInstances.html#upperCaseCharGen:zio.test.Gen[Any,eu.timepit.refined.types.char.UpperCaseChar]", "kind" : "val"}, {"label" : "lowerCaseCharGen", "tail" : ": Gen[Any, LowerCaseChar]", "member" : "zio.test.refined.types.CharInstances.lowerCaseCharGen", "link" : "zio\/test\/refined\/types\/CharInstances.html#lowerCaseCharGen:zio.test.Gen[Any,eu.timepit.refined.types.char.LowerCaseChar]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/types\/CharInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/types\/CharInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/types\/CharInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/types\/CharInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/types\/CharInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/types\/CharInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/types\/CharInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/types\/CharInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/types\/CharInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/types\/CharInstances.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/types\/CharInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/types\/CharInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/CharInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/CharInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/CharInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/types\/CharInstances.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/types\/CharInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/types\/CharInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/types\/CharInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.refined.types.digit", "shortDescription" : "", "object" : "zio\/test\/refined\/types\/digit$.html", "members_object" : [{"label" : "sha512Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA512]", "member" : "zio.test.refined.types.DigitInstances.sha512Arbitrary", "link" : "zio\/test\/refined\/types\/digit$.html#sha512Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA512]", "kind" : "implicit val"}, {"label" : "sha384Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA384]", "member" : "zio.test.refined.types.DigitInstances.sha384Arbitrary", "link" : "zio\/test\/refined\/types\/digit$.html#sha384Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA384]", "kind" : "implicit val"}, {"label" : "sha256Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA256]", "member" : "zio.test.refined.types.DigitInstances.sha256Arbitrary", "link" : "zio\/test\/refined\/types\/digit$.html#sha256Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA256]", "kind" : "implicit val"}, {"label" : "sha224Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA224]", "member" : "zio.test.refined.types.DigitInstances.sha224Arbitrary", "link" : "zio\/test\/refined\/types\/digit$.html#sha224Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA224]", "kind" : "implicit val"}, {"label" : "sha1Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA1]", "member" : "zio.test.refined.types.DigitInstances.sha1Arbitrary", "link" : "zio\/test\/refined\/types\/digit$.html#sha1Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA1]", "kind" : "implicit val"}, {"label" : "md5Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.MD5]", "member" : "zio.test.refined.types.DigitInstances.md5Arbitrary", "link" : "zio\/test\/refined\/types\/digit$.html#md5Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.MD5]", "kind" : "implicit val"}, {"label" : "sha512Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA512]", "member" : "zio.test.refined.types.DigitInstances.sha512Gen", "link" : "zio\/test\/refined\/types\/digit$.html#sha512Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA512]", "kind" : "val"}, {"label" : "sha384Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA384]", "member" : "zio.test.refined.types.DigitInstances.sha384Gen", "link" : "zio\/test\/refined\/types\/digit$.html#sha384Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA384]", "kind" : "val"}, {"label" : "sha256Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA256]", "member" : "zio.test.refined.types.DigitInstances.sha256Gen", "link" : "zio\/test\/refined\/types\/digit$.html#sha256Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA256]", "kind" : "val"}, {"label" : "sha224Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA224]", "member" : "zio.test.refined.types.DigitInstances.sha224Gen", "link" : "zio\/test\/refined\/types\/digit$.html#sha224Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA224]", "kind" : "val"}, {"label" : "sha1Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA1]", "member" : "zio.test.refined.types.DigitInstances.sha1Gen", "link" : "zio\/test\/refined\/types\/digit$.html#sha1Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA1]", "kind" : "val"}, {"label" : "md5Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.MD5]", "member" : "zio.test.refined.types.DigitInstances.md5Gen", "link" : "zio\/test\/refined\/types\/digit$.html#md5Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.MD5]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/types\/digit$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/types\/digit$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/types\/digit$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/types\/digit$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/types\/digit$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/types\/digit$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/types\/digit$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/types\/digit$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/types\/digit$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/types\/digit$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/types\/digit$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/types\/digit$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/digit$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/digit$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/digit$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/types\/digit$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/types\/digit$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/types\/digit$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/types\/digit$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.refined.types.DigitInstances", "trait" : "zio\/test\/refined\/types\/DigitInstances.html", "kind" : "trait", "members_trait" : [{"label" : "sha512Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA512]", "member" : "zio.test.refined.types.DigitInstances.sha512Arbitrary", "link" : "zio\/test\/refined\/types\/DigitInstances.html#sha512Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA512]", "kind" : "implicit val"}, {"label" : "sha384Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA384]", "member" : "zio.test.refined.types.DigitInstances.sha384Arbitrary", "link" : "zio\/test\/refined\/types\/DigitInstances.html#sha384Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA384]", "kind" : "implicit val"}, {"label" : "sha256Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA256]", "member" : "zio.test.refined.types.DigitInstances.sha256Arbitrary", "link" : "zio\/test\/refined\/types\/DigitInstances.html#sha256Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA256]", "kind" : "implicit val"}, {"label" : "sha224Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA224]", "member" : "zio.test.refined.types.DigitInstances.sha224Arbitrary", "link" : "zio\/test\/refined\/types\/DigitInstances.html#sha224Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA224]", "kind" : "implicit val"}, {"label" : "sha1Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.SHA1]", "member" : "zio.test.refined.types.DigitInstances.sha1Arbitrary", "link" : "zio\/test\/refined\/types\/DigitInstances.html#sha1Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.SHA1]", "kind" : "implicit val"}, {"label" : "md5Arbitrary", "tail" : ": DeriveGen[eu.timepit.refined.types.all.MD5]", "member" : "zio.test.refined.types.DigitInstances.md5Arbitrary", "link" : "zio\/test\/refined\/types\/DigitInstances.html#md5Arbitrary:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.all.MD5]", "kind" : "implicit val"}, {"label" : "sha512Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA512]", "member" : "zio.test.refined.types.DigitInstances.sha512Gen", "link" : "zio\/test\/refined\/types\/DigitInstances.html#sha512Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA512]", "kind" : "val"}, {"label" : "sha384Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA384]", "member" : "zio.test.refined.types.DigitInstances.sha384Gen", "link" : "zio\/test\/refined\/types\/DigitInstances.html#sha384Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA384]", "kind" : "val"}, {"label" : "sha256Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA256]", "member" : "zio.test.refined.types.DigitInstances.sha256Gen", "link" : "zio\/test\/refined\/types\/DigitInstances.html#sha256Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA256]", "kind" : "val"}, {"label" : "sha224Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA224]", "member" : "zio.test.refined.types.DigitInstances.sha224Gen", "link" : "zio\/test\/refined\/types\/DigitInstances.html#sha224Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA224]", "kind" : "val"}, {"label" : "sha1Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.SHA1]", "member" : "zio.test.refined.types.DigitInstances.sha1Gen", "link" : "zio\/test\/refined\/types\/DigitInstances.html#sha1Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.SHA1]", "kind" : "val"}, {"label" : "md5Gen", "tail" : ": Gen[Any, eu.timepit.refined.types.all.MD5]", "member" : "zio.test.refined.types.DigitInstances.md5Gen", "link" : "zio\/test\/refined\/types\/DigitInstances.html#md5Gen:zio.test.Gen[Any,eu.timepit.refined.types.all.MD5]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/types\/DigitInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/types\/DigitInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/types\/DigitInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/types\/DigitInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/types\/DigitInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/types\/DigitInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/types\/DigitInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/types\/DigitInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/types\/DigitInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/types\/DigitInstances.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/types\/DigitInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/types\/DigitInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/DigitInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/DigitInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/DigitInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/types\/DigitInstances.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/types\/DigitInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/types\/DigitInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/types\/DigitInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.refined.types.net", "shortDescription" : "", "object" : "zio\/test\/refined\/types\/net$.html", "members_object" : [{"label" : "privateNetworkDeriveGen", "tail" : ": DeriveGen[PrivateNetwork]", "member" : "zio.test.refined.types.NetInstances.privateNetworkDeriveGen", "link" : "zio\/test\/refined\/types\/net$.html#privateNetworkDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.PrivateNetwork]", "kind" : "implicit val"}, {"label" : "rfc2544BenchmarkDeriveGen", "tail" : ": DeriveGen[Rfc2544Benchmark]", "member" : "zio.test.refined.types.NetInstances.rfc2544BenchmarkDeriveGen", "link" : "zio\/test\/refined\/types\/net$.html#rfc2544BenchmarkDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc2544Benchmark]", "kind" : "implicit val"}, {"label" : "rfc3927LocalLinkDeriveGen", "tail" : ": DeriveGen[Rfc3927LocalLink]", "member" : "zio.test.refined.types.NetInstances.rfc3927LocalLinkDeriveGen", "link" : "zio\/test\/refined\/types\/net$.html#rfc3927LocalLinkDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc3927LocalLink]", "kind" : "implicit val"}, {"label" : "rfc5737TestnetDeriveGen", "tail" : ": DeriveGen[Rfc5737Testnet]", "member" : "zio.test.refined.types.NetInstances.rfc5737TestnetDeriveGen", "link" : "zio\/test\/refined\/types\/net$.html#rfc5737TestnetDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc5737Testnet]", "kind" : "implicit val"}, {"label" : "rfc5737Testnet3DeriveGen", "tail" : ": DeriveGen[Rfc5737Testnet3]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet3DeriveGen", "link" : "zio\/test\/refined\/types\/net$.html#rfc5737Testnet3DeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc5737Testnet3]", "kind" : "implicit val"}, {"label" : "rfc5737Testnet2DeriveGen", "tail" : ": DeriveGen[Rfc5737Testnet2]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet2DeriveGen", "link" : "zio\/test\/refined\/types\/net$.html#rfc5737Testnet2DeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc5737Testnet2]", "kind" : "implicit val"}, {"label" : "rfc5737Testnet1DeriveGen", "tail" : ": DeriveGen[Rfc5737Testnet1]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet1DeriveGen", "link" : "zio\/test\/refined\/types\/net$.html#rfc5737Testnet1DeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc5737Testnet1]", "kind" : "implicit val"}, {"label" : "rfc1918PrivateDeriveGen", "tail" : ": DeriveGen[Rfc1918Private]", "member" : "zio.test.refined.types.NetInstances.rfc1918PrivateDeriveGen", "link" : "zio\/test\/refined\/types\/net$.html#rfc1918PrivateDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc1918Private]", "kind" : "implicit val"}, {"label" : "rfc1918ClassCPrivateDeriveGen", "tail" : ": DeriveGen[Rfc1918ClassCPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassCPrivateDeriveGen", "link" : "zio\/test\/refined\/types\/net$.html#rfc1918ClassCPrivateDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc1918ClassCPrivate]", "kind" : "implicit val"}, {"label" : "rfc1918ClassBPrivateDeriveGen", "tail" : ": DeriveGen[Rfc1918ClassBPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassBPrivateDeriveGen", "link" : "zio\/test\/refined\/types\/net$.html#rfc1918ClassBPrivateDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc1918ClassBPrivate]", "kind" : "implicit val"}, {"label" : "rfc1918ClassAPrivateDeriveGen", "tail" : ": DeriveGen[Rfc1918ClassAPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassAPrivateDeriveGen", "link" : "zio\/test\/refined\/types\/net$.html#rfc1918ClassAPrivateDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc1918ClassAPrivate]", "kind" : "implicit val"}, {"label" : "nonSystemPortNumberDeriveGen", "tail" : ": DeriveGen[NonSystemPortNumber]", "member" : "zio.test.refined.types.NetInstances.nonSystemPortNumberDeriveGen", "link" : "zio\/test\/refined\/types\/net$.html#nonSystemPortNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.NonSystemPortNumber]", "kind" : "implicit val"}, {"label" : "dynamicPortNumberDeriveGen", "tail" : ": DeriveGen[DynamicPortNumber]", "member" : "zio.test.refined.types.NetInstances.dynamicPortNumberDeriveGen", "link" : "zio\/test\/refined\/types\/net$.html#dynamicPortNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.DynamicPortNumber]", "kind" : "implicit val"}, {"label" : "userPortNumberDeriveGen", "tail" : ": DeriveGen[UserPortNumber]", "member" : "zio.test.refined.types.NetInstances.userPortNumberDeriveGen", "link" : "zio\/test\/refined\/types\/net$.html#userPortNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.UserPortNumber]", "kind" : "implicit val"}, {"label" : "systemPortNumberDeriveGen", "tail" : ": DeriveGen[SystemPortNumber]", "member" : "zio.test.refined.types.NetInstances.systemPortNumberDeriveGen", "link" : "zio\/test\/refined\/types\/net$.html#systemPortNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.SystemPortNumber]", "kind" : "implicit val"}, {"label" : "portNumberDeriveGen", "tail" : ": DeriveGen[PortNumber]", "member" : "zio.test.refined.types.NetInstances.portNumberDeriveGen", "link" : "zio\/test\/refined\/types\/net$.html#portNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.PortNumber]", "kind" : "implicit val"}, {"label" : "privateNetworkGen", "tail" : ": Gen[Any, PrivateNetwork]", "member" : "zio.test.refined.types.NetInstances.privateNetworkGen", "link" : "zio\/test\/refined\/types\/net$.html#privateNetworkGen:zio.test.Gen[Any,eu.timepit.refined.types.net.PrivateNetwork]", "kind" : "val"}, {"label" : "rfc2544BenchmarkGen", "tail" : ": Gen[Any, Rfc2544Benchmark]", "member" : "zio.test.refined.types.NetInstances.rfc2544BenchmarkGen", "link" : "zio\/test\/refined\/types\/net$.html#rfc2544BenchmarkGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc2544Benchmark]", "kind" : "val"}, {"label" : "rfc3927LocalLinkGen", "tail" : ": Gen[Any, Rfc3927LocalLink]", "member" : "zio.test.refined.types.NetInstances.rfc3927LocalLinkGen", "link" : "zio\/test\/refined\/types\/net$.html#rfc3927LocalLinkGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc3927LocalLink]", "kind" : "val"}, {"label" : "rfc5737TestnetGen", "tail" : ": Gen[Any, Rfc5737Testnet]", "member" : "zio.test.refined.types.NetInstances.rfc5737TestnetGen", "link" : "zio\/test\/refined\/types\/net$.html#rfc5737TestnetGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc5737Testnet]", "kind" : "val"}, {"label" : "rfc5737Testnet3Gen", "tail" : ": Gen[Any, Rfc5737Testnet3]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet3Gen", "link" : "zio\/test\/refined\/types\/net$.html#rfc5737Testnet3Gen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc5737Testnet3]", "kind" : "val"}, {"label" : "rfc5737Testnet2Gen", "tail" : ": Gen[Any, Rfc5737Testnet2]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet2Gen", "link" : "zio\/test\/refined\/types\/net$.html#rfc5737Testnet2Gen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc5737Testnet2]", "kind" : "val"}, {"label" : "rfc5737Testnet1Gen", "tail" : ": Gen[Any, Rfc5737Testnet1]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet1Gen", "link" : "zio\/test\/refined\/types\/net$.html#rfc5737Testnet1Gen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc5737Testnet1]", "kind" : "val"}, {"label" : "rfc1918PrivateGen", "tail" : ": Gen[Any, Rfc1918Private]", "member" : "zio.test.refined.types.NetInstances.rfc1918PrivateGen", "link" : "zio\/test\/refined\/types\/net$.html#rfc1918PrivateGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc1918Private]", "kind" : "val"}, {"label" : "rfc1918ClassCPrivateGen", "tail" : ": Gen[Any, Rfc1918ClassCPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassCPrivateGen", "link" : "zio\/test\/refined\/types\/net$.html#rfc1918ClassCPrivateGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc1918ClassCPrivate]", "kind" : "val"}, {"label" : "rfc1918ClassBPrivateGen", "tail" : ": Gen[Any, Rfc1918ClassBPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassBPrivateGen", "link" : "zio\/test\/refined\/types\/net$.html#rfc1918ClassBPrivateGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc1918ClassBPrivate]", "kind" : "val"}, {"label" : "rfc1918ClassAPrivateGen", "tail" : ": Gen[Any, Rfc1918ClassAPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassAPrivateGen", "link" : "zio\/test\/refined\/types\/net$.html#rfc1918ClassAPrivateGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc1918ClassAPrivate]", "kind" : "val"}, {"label" : "nonSystemPortNumberGen", "tail" : ": Gen[Any, NonSystemPortNumber]", "member" : "zio.test.refined.types.NetInstances.nonSystemPortNumberGen", "link" : "zio\/test\/refined\/types\/net$.html#nonSystemPortNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.NonSystemPortNumber]", "kind" : "val"}, {"label" : "dynamicPortNumberGen", "tail" : ": Gen[Any, DynamicPortNumber]", "member" : "zio.test.refined.types.NetInstances.dynamicPortNumberGen", "link" : "zio\/test\/refined\/types\/net$.html#dynamicPortNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.DynamicPortNumber]", "kind" : "val"}, {"label" : "userPortNumberGen", "tail" : ": Gen[Any, UserPortNumber]", "member" : "zio.test.refined.types.NetInstances.userPortNumberGen", "link" : "zio\/test\/refined\/types\/net$.html#userPortNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.UserPortNumber]", "kind" : "val"}, {"label" : "systemPortNumberGen", "tail" : ": Gen[Any, SystemPortNumber]", "member" : "zio.test.refined.types.NetInstances.systemPortNumberGen", "link" : "zio\/test\/refined\/types\/net$.html#systemPortNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.SystemPortNumber]", "kind" : "val"}, {"label" : "portNumberGen", "tail" : ": Gen[Any, PortNumber]", "member" : "zio.test.refined.types.NetInstances.portNumberGen", "link" : "zio\/test\/refined\/types\/net$.html#portNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.PortNumber]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/types\/net$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/types\/net$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/types\/net$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/types\/net$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/types\/net$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/types\/net$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/types\/net$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/types\/net$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/types\/net$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/types\/net$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/types\/net$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/types\/net$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/net$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/net$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/net$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/types\/net$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/types\/net$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/types\/net$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/types\/net$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.refined.types.NetInstances", "trait" : "zio\/test\/refined\/types\/NetInstances.html", "kind" : "trait", "members_trait" : [{"label" : "privateNetworkDeriveGen", "tail" : ": DeriveGen[PrivateNetwork]", "member" : "zio.test.refined.types.NetInstances.privateNetworkDeriveGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#privateNetworkDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.PrivateNetwork]", "kind" : "implicit val"}, {"label" : "rfc2544BenchmarkDeriveGen", "tail" : ": DeriveGen[Rfc2544Benchmark]", "member" : "zio.test.refined.types.NetInstances.rfc2544BenchmarkDeriveGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#rfc2544BenchmarkDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc2544Benchmark]", "kind" : "implicit val"}, {"label" : "rfc3927LocalLinkDeriveGen", "tail" : ": DeriveGen[Rfc3927LocalLink]", "member" : "zio.test.refined.types.NetInstances.rfc3927LocalLinkDeriveGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#rfc3927LocalLinkDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc3927LocalLink]", "kind" : "implicit val"}, {"label" : "rfc5737TestnetDeriveGen", "tail" : ": DeriveGen[Rfc5737Testnet]", "member" : "zio.test.refined.types.NetInstances.rfc5737TestnetDeriveGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#rfc5737TestnetDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc5737Testnet]", "kind" : "implicit val"}, {"label" : "rfc5737Testnet3DeriveGen", "tail" : ": DeriveGen[Rfc5737Testnet3]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet3DeriveGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#rfc5737Testnet3DeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc5737Testnet3]", "kind" : "implicit val"}, {"label" : "rfc5737Testnet2DeriveGen", "tail" : ": DeriveGen[Rfc5737Testnet2]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet2DeriveGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#rfc5737Testnet2DeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc5737Testnet2]", "kind" : "implicit val"}, {"label" : "rfc5737Testnet1DeriveGen", "tail" : ": DeriveGen[Rfc5737Testnet1]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet1DeriveGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#rfc5737Testnet1DeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc5737Testnet1]", "kind" : "implicit val"}, {"label" : "rfc1918PrivateDeriveGen", "tail" : ": DeriveGen[Rfc1918Private]", "member" : "zio.test.refined.types.NetInstances.rfc1918PrivateDeriveGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#rfc1918PrivateDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc1918Private]", "kind" : "implicit val"}, {"label" : "rfc1918ClassCPrivateDeriveGen", "tail" : ": DeriveGen[Rfc1918ClassCPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassCPrivateDeriveGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#rfc1918ClassCPrivateDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc1918ClassCPrivate]", "kind" : "implicit val"}, {"label" : "rfc1918ClassBPrivateDeriveGen", "tail" : ": DeriveGen[Rfc1918ClassBPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassBPrivateDeriveGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#rfc1918ClassBPrivateDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc1918ClassBPrivate]", "kind" : "implicit val"}, {"label" : "rfc1918ClassAPrivateDeriveGen", "tail" : ": DeriveGen[Rfc1918ClassAPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassAPrivateDeriveGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#rfc1918ClassAPrivateDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.Rfc1918ClassAPrivate]", "kind" : "implicit val"}, {"label" : "nonSystemPortNumberDeriveGen", "tail" : ": DeriveGen[NonSystemPortNumber]", "member" : "zio.test.refined.types.NetInstances.nonSystemPortNumberDeriveGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#nonSystemPortNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.NonSystemPortNumber]", "kind" : "implicit val"}, {"label" : "dynamicPortNumberDeriveGen", "tail" : ": DeriveGen[DynamicPortNumber]", "member" : "zio.test.refined.types.NetInstances.dynamicPortNumberDeriveGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#dynamicPortNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.DynamicPortNumber]", "kind" : "implicit val"}, {"label" : "userPortNumberDeriveGen", "tail" : ": DeriveGen[UserPortNumber]", "member" : "zio.test.refined.types.NetInstances.userPortNumberDeriveGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#userPortNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.UserPortNumber]", "kind" : "implicit val"}, {"label" : "systemPortNumberDeriveGen", "tail" : ": DeriveGen[SystemPortNumber]", "member" : "zio.test.refined.types.NetInstances.systemPortNumberDeriveGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#systemPortNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.SystemPortNumber]", "kind" : "implicit val"}, {"label" : "portNumberDeriveGen", "tail" : ": DeriveGen[PortNumber]", "member" : "zio.test.refined.types.NetInstances.portNumberDeriveGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#portNumberDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.net.PortNumber]", "kind" : "implicit val"}, {"label" : "privateNetworkGen", "tail" : ": Gen[Any, PrivateNetwork]", "member" : "zio.test.refined.types.NetInstances.privateNetworkGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#privateNetworkGen:zio.test.Gen[Any,eu.timepit.refined.types.net.PrivateNetwork]", "kind" : "val"}, {"label" : "rfc2544BenchmarkGen", "tail" : ": Gen[Any, Rfc2544Benchmark]", "member" : "zio.test.refined.types.NetInstances.rfc2544BenchmarkGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#rfc2544BenchmarkGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc2544Benchmark]", "kind" : "val"}, {"label" : "rfc3927LocalLinkGen", "tail" : ": Gen[Any, Rfc3927LocalLink]", "member" : "zio.test.refined.types.NetInstances.rfc3927LocalLinkGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#rfc3927LocalLinkGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc3927LocalLink]", "kind" : "val"}, {"label" : "rfc5737TestnetGen", "tail" : ": Gen[Any, Rfc5737Testnet]", "member" : "zio.test.refined.types.NetInstances.rfc5737TestnetGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#rfc5737TestnetGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc5737Testnet]", "kind" : "val"}, {"label" : "rfc5737Testnet3Gen", "tail" : ": Gen[Any, Rfc5737Testnet3]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet3Gen", "link" : "zio\/test\/refined\/types\/NetInstances.html#rfc5737Testnet3Gen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc5737Testnet3]", "kind" : "val"}, {"label" : "rfc5737Testnet2Gen", "tail" : ": Gen[Any, Rfc5737Testnet2]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet2Gen", "link" : "zio\/test\/refined\/types\/NetInstances.html#rfc5737Testnet2Gen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc5737Testnet2]", "kind" : "val"}, {"label" : "rfc5737Testnet1Gen", "tail" : ": Gen[Any, Rfc5737Testnet1]", "member" : "zio.test.refined.types.NetInstances.rfc5737Testnet1Gen", "link" : "zio\/test\/refined\/types\/NetInstances.html#rfc5737Testnet1Gen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc5737Testnet1]", "kind" : "val"}, {"label" : "rfc1918PrivateGen", "tail" : ": Gen[Any, Rfc1918Private]", "member" : "zio.test.refined.types.NetInstances.rfc1918PrivateGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#rfc1918PrivateGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc1918Private]", "kind" : "val"}, {"label" : "rfc1918ClassCPrivateGen", "tail" : ": Gen[Any, Rfc1918ClassCPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassCPrivateGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#rfc1918ClassCPrivateGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc1918ClassCPrivate]", "kind" : "val"}, {"label" : "rfc1918ClassBPrivateGen", "tail" : ": Gen[Any, Rfc1918ClassBPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassBPrivateGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#rfc1918ClassBPrivateGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc1918ClassBPrivate]", "kind" : "val"}, {"label" : "rfc1918ClassAPrivateGen", "tail" : ": Gen[Any, Rfc1918ClassAPrivate]", "member" : "zio.test.refined.types.NetInstances.rfc1918ClassAPrivateGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#rfc1918ClassAPrivateGen:zio.test.Gen[Any,eu.timepit.refined.types.net.Rfc1918ClassAPrivate]", "kind" : "val"}, {"label" : "nonSystemPortNumberGen", "tail" : ": Gen[Any, NonSystemPortNumber]", "member" : "zio.test.refined.types.NetInstances.nonSystemPortNumberGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#nonSystemPortNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.NonSystemPortNumber]", "kind" : "val"}, {"label" : "dynamicPortNumberGen", "tail" : ": Gen[Any, DynamicPortNumber]", "member" : "zio.test.refined.types.NetInstances.dynamicPortNumberGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#dynamicPortNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.DynamicPortNumber]", "kind" : "val"}, {"label" : "userPortNumberGen", "tail" : ": Gen[Any, UserPortNumber]", "member" : "zio.test.refined.types.NetInstances.userPortNumberGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#userPortNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.UserPortNumber]", "kind" : "val"}, {"label" : "systemPortNumberGen", "tail" : ": Gen[Any, SystemPortNumber]", "member" : "zio.test.refined.types.NetInstances.systemPortNumberGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#systemPortNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.SystemPortNumber]", "kind" : "val"}, {"label" : "portNumberGen", "tail" : ": Gen[Any, PortNumber]", "member" : "zio.test.refined.types.NetInstances.portNumberGen", "link" : "zio\/test\/refined\/types\/NetInstances.html#portNumberGen:zio.test.Gen[Any,eu.timepit.refined.types.net.PortNumber]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/types\/NetInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/types\/NetInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/types\/NetInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/types\/NetInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/types\/NetInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/types\/NetInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/types\/NetInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/types\/NetInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/types\/NetInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/types\/NetInstances.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/types\/NetInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/types\/NetInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/NetInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/NetInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/NetInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/types\/NetInstances.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/types\/NetInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/types\/NetInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/types\/NetInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.refined.types.numeric", "shortDescription" : "", "object" : "zio\/test\/refined\/types\/numeric$.html", "members_object" : [{"label" : "nonNanDoubleDeriveGen", "tail" : ": DeriveGen[NonNaNDouble]", "member" : "zio.test.refined.types.NumericInstances.nonNanDoubleDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonNanDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNaNDouble]", "kind" : "implicit val"}, {"label" : "nonNanFloatDeriveGen", "tail" : ": DeriveGen[NonNaNFloat]", "member" : "zio.test.refined.types.NumericInstances.nonNanFloatDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonNanFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNaNFloat]", "kind" : "implicit val"}, {"label" : "nonPosBigDecimalDeriveGen", "tail" : ": DeriveGen[NonPosBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.nonPosBigDecimalDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonPosBigDecimalDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosBigDecimal]", "kind" : "implicit val"}, {"label" : "negBigDecimalDeriveGen", "tail" : ": DeriveGen[NegBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.negBigDecimalDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#negBigDecimalDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegBigDecimal]", "kind" : "implicit val"}, {"label" : "nonNegBigDecimalDeriveGen", "tail" : ": DeriveGen[NonNegBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.nonNegBigDecimalDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonNegBigDecimalDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegBigDecimal]", "kind" : "implicit val"}, {"label" : "posBigDecimalDeriveGen", "tail" : ": DeriveGen[PosBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.posBigDecimalDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#posBigDecimalDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosBigDecimal]", "kind" : "implicit val"}, {"label" : "nonPosDoubleDeriveGen", "tail" : ": DeriveGen[NonPosDouble]", "member" : "zio.test.refined.types.NumericInstances.nonPosDoubleDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonPosDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosDouble]", "kind" : "implicit val"}, {"label" : "negDoubleDeriveGen", "tail" : ": DeriveGen[NegDouble]", "member" : "zio.test.refined.types.NumericInstances.negDoubleDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#negDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegDouble]", "kind" : "implicit val"}, {"label" : "nonNegDoubleDeriveGen", "tail" : ": DeriveGen[NonNegDouble]", "member" : "zio.test.refined.types.NumericInstances.nonNegDoubleDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonNegDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegDouble]", "kind" : "implicit val"}, {"label" : "posDoubleDeriveGen", "tail" : ": DeriveGen[PosDouble]", "member" : "zio.test.refined.types.NumericInstances.posDoubleDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#posDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosDouble]", "kind" : "implicit val"}, {"label" : "nonPosFloatDeriveGen", "tail" : ": DeriveGen[NonPosFloat]", "member" : "zio.test.refined.types.NumericInstances.nonPosFloatDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonPosFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosFloat]", "kind" : "implicit val"}, {"label" : "negFloatDeriveGen", "tail" : ": DeriveGen[NegFloat]", "member" : "zio.test.refined.types.NumericInstances.negFloatDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#negFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegFloat]", "kind" : "implicit val"}, {"label" : "nonNegFloatDeriveGen", "tail" : ": DeriveGen[NonNegFloat]", "member" : "zio.test.refined.types.NumericInstances.nonNegFloatDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonNegFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegFloat]", "kind" : "implicit val"}, {"label" : "posFloatDeriveGen", "tail" : ": DeriveGen[PosFloat]", "member" : "zio.test.refined.types.NumericInstances.posFloatDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#posFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosFloat]", "kind" : "implicit val"}, {"label" : "nonPosBigIntDeriveGen", "tail" : ": DeriveGen[NonPosBigInt]", "member" : "zio.test.refined.types.NumericInstances.nonPosBigIntDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonPosBigIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosBigInt]", "kind" : "implicit val"}, {"label" : "negBigIntDeriveGen", "tail" : ": DeriveGen[NegBigInt]", "member" : "zio.test.refined.types.NumericInstances.negBigIntDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#negBigIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegBigInt]", "kind" : "implicit val"}, {"label" : "nonNegBigIntDeriveGen", "tail" : ": DeriveGen[NonNegBigInt]", "member" : "zio.test.refined.types.NumericInstances.nonNegBigIntDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonNegBigIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegBigInt]", "kind" : "implicit val"}, {"label" : "posBigIntDeriveGen", "tail" : ": DeriveGen[PosBigInt]", "member" : "zio.test.refined.types.NumericInstances.posBigIntDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#posBigIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosBigInt]", "kind" : "implicit val"}, {"label" : "nonPosLongDeriveGen", "tail" : ": DeriveGen[NonPosLong]", "member" : "zio.test.refined.types.NumericInstances.nonPosLongDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonPosLongDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosLong]", "kind" : "implicit val"}, {"label" : "negLongDeriveGen", "tail" : ": DeriveGen[NegLong]", "member" : "zio.test.refined.types.NumericInstances.negLongDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#negLongDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegLong]", "kind" : "implicit val"}, {"label" : "nonNegLongDeriveGen", "tail" : ": DeriveGen[NonNegLong]", "member" : "zio.test.refined.types.NumericInstances.nonNegLongDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonNegLongDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegLong]", "kind" : "implicit val"}, {"label" : "posLongDeriveGen", "tail" : ": DeriveGen[PosLong]", "member" : "zio.test.refined.types.NumericInstances.posLongDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#posLongDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosLong]", "kind" : "implicit val"}, {"label" : "nonPosIntDeriveGen", "tail" : ": DeriveGen[NonPosInt]", "member" : "zio.test.refined.types.NumericInstances.nonPosIntDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonPosIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosInt]", "kind" : "implicit val"}, {"label" : "negIntDeriveGen", "tail" : ": DeriveGen[NegInt]", "member" : "zio.test.refined.types.NumericInstances.negIntDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#negIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegInt]", "kind" : "implicit val"}, {"label" : "nonNegIntDeriveGen", "tail" : ": DeriveGen[NonNegInt]", "member" : "zio.test.refined.types.NumericInstances.nonNegIntDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonNegIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegInt]", "kind" : "implicit val"}, {"label" : "posIntDeriveGen", "tail" : ": DeriveGen[PosInt]", "member" : "zio.test.refined.types.NumericInstances.posIntDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#posIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosInt]", "kind" : "implicit val"}, {"label" : "nonPosShortDeriveGen", "tail" : ": DeriveGen[NonPosShort]", "member" : "zio.test.refined.types.NumericInstances.nonPosShortDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonPosShortDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosShort]", "kind" : "implicit val"}, {"label" : "negShortDeriveGen", "tail" : ": DeriveGen[NegShort]", "member" : "zio.test.refined.types.NumericInstances.negShortDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#negShortDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegShort]", "kind" : "implicit val"}, {"label" : "nonNegShortDeriveGen", "tail" : ": DeriveGen[NonNegShort]", "member" : "zio.test.refined.types.NumericInstances.nonNegShortDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonNegShortDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegShort]", "kind" : "implicit val"}, {"label" : "posShortDeriveGen", "tail" : ": DeriveGen[PosShort]", "member" : "zio.test.refined.types.NumericInstances.posShortDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#posShortDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosShort]", "kind" : "implicit val"}, {"label" : "nonPosByteDeriveGen", "tail" : ": DeriveGen[NonPosByte]", "member" : "zio.test.refined.types.NumericInstances.nonPosByteDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonPosByteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosByte]", "kind" : "implicit val"}, {"label" : "negByteDeriveGen", "tail" : ": DeriveGen[NegByte]", "member" : "zio.test.refined.types.NumericInstances.negByteDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#negByteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegByte]", "kind" : "implicit val"}, {"label" : "nonNegByteDeriveGen", "tail" : ": DeriveGen[NonNegByte]", "member" : "zio.test.refined.types.NumericInstances.nonNegByteDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonNegByteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegByte]", "kind" : "implicit val"}, {"label" : "posByteDeriveGen", "tail" : ": DeriveGen[PosByte]", "member" : "zio.test.refined.types.NumericInstances.posByteDeriveGen", "link" : "zio\/test\/refined\/types\/numeric$.html#posByteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosByte]", "kind" : "implicit val"}, {"label" : "nonNanDoubleGen", "tail" : ": Gen[Any, NonNaNDouble]", "member" : "zio.test.refined.types.NumericInstances.nonNanDoubleGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonNanDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNaNDouble]", "kind" : "val"}, {"label" : "nonNanFloatGen", "tail" : ": Gen[Any, NonNaNFloat]", "member" : "zio.test.refined.types.NumericInstances.nonNanFloatGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonNanFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNaNFloat]", "kind" : "val"}, {"label" : "nonPosBigDecimalGen", "tail" : ": Gen[Any, NonPosBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.nonPosBigDecimalGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonPosBigDecimalGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosBigDecimal]", "kind" : "val"}, {"label" : "negBigDecimalGen", "tail" : ": Gen[Any, NegBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.negBigDecimalGen", "link" : "zio\/test\/refined\/types\/numeric$.html#negBigDecimalGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegBigDecimal]", "kind" : "val"}, {"label" : "nonNegBigDecimalGen", "tail" : ": Gen[Any, NonNegBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.nonNegBigDecimalGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonNegBigDecimalGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegBigDecimal]", "kind" : "val"}, {"label" : "posBigDecimalGen", "tail" : ": Gen[Any, PosBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.posBigDecimalGen", "link" : "zio\/test\/refined\/types\/numeric$.html#posBigDecimalGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosBigDecimal]", "kind" : "val"}, {"label" : "nonPosDoubleGen", "tail" : ": Gen[Any, NonPosDouble]", "member" : "zio.test.refined.types.NumericInstances.nonPosDoubleGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonPosDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosDouble]", "kind" : "val"}, {"label" : "negDoubleGen", "tail" : ": Gen[Any, NegDouble]", "member" : "zio.test.refined.types.NumericInstances.negDoubleGen", "link" : "zio\/test\/refined\/types\/numeric$.html#negDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegDouble]", "kind" : "val"}, {"label" : "nonNegDoubleGen", "tail" : ": Gen[Any, NonNegDouble]", "member" : "zio.test.refined.types.NumericInstances.nonNegDoubleGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonNegDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegDouble]", "kind" : "val"}, {"label" : "posDoubleGen", "tail" : ": Gen[Any, PosDouble]", "member" : "zio.test.refined.types.NumericInstances.posDoubleGen", "link" : "zio\/test\/refined\/types\/numeric$.html#posDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosDouble]", "kind" : "val"}, {"label" : "nonPosFloatGen", "tail" : ": Gen[Any, NonPosFloat]", "member" : "zio.test.refined.types.NumericInstances.nonPosFloatGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonPosFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosFloat]", "kind" : "val"}, {"label" : "negFloatGen", "tail" : ": Gen[Any, NegFloat]", "member" : "zio.test.refined.types.NumericInstances.negFloatGen", "link" : "zio\/test\/refined\/types\/numeric$.html#negFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegFloat]", "kind" : "val"}, {"label" : "nonNegFloatGen", "tail" : ": Gen[Any, NonNegFloat]", "member" : "zio.test.refined.types.NumericInstances.nonNegFloatGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonNegFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegFloat]", "kind" : "val"}, {"label" : "posFloatGen", "tail" : ": Gen[Any, PosFloat]", "member" : "zio.test.refined.types.NumericInstances.posFloatGen", "link" : "zio\/test\/refined\/types\/numeric$.html#posFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosFloat]", "kind" : "val"}, {"label" : "nonPosBigIntGen", "tail" : ": Gen[Any, NonPosBigInt]", "member" : "zio.test.refined.types.NumericInstances.nonPosBigIntGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonPosBigIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosBigInt]", "kind" : "val"}, {"label" : "negBigIntGen", "tail" : ": Gen[Any, NegBigInt]", "member" : "zio.test.refined.types.NumericInstances.negBigIntGen", "link" : "zio\/test\/refined\/types\/numeric$.html#negBigIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegBigInt]", "kind" : "val"}, {"label" : "nonNegBigIntGen", "tail" : ": Gen[Any, NonNegBigInt]", "member" : "zio.test.refined.types.NumericInstances.nonNegBigIntGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonNegBigIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegBigInt]", "kind" : "val"}, {"label" : "posBigIntGen", "tail" : ": Gen[Any, PosBigInt]", "member" : "zio.test.refined.types.NumericInstances.posBigIntGen", "link" : "zio\/test\/refined\/types\/numeric$.html#posBigIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosBigInt]", "kind" : "val"}, {"label" : "nonPosLongGen", "tail" : ": Gen[Any, NonPosLong]", "member" : "zio.test.refined.types.NumericInstances.nonPosLongGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonPosLongGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosLong]", "kind" : "val"}, {"label" : "negLongGen", "tail" : ": Gen[Any, NegLong]", "member" : "zio.test.refined.types.NumericInstances.negLongGen", "link" : "zio\/test\/refined\/types\/numeric$.html#negLongGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegLong]", "kind" : "val"}, {"label" : "nonNegLongGen", "tail" : ": Gen[Any, NonNegLong]", "member" : "zio.test.refined.types.NumericInstances.nonNegLongGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonNegLongGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegLong]", "kind" : "val"}, {"label" : "posLongGen", "tail" : ": Gen[Any, PosLong]", "member" : "zio.test.refined.types.NumericInstances.posLongGen", "link" : "zio\/test\/refined\/types\/numeric$.html#posLongGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosLong]", "kind" : "val"}, {"label" : "nonPosIntGen", "tail" : ": Gen[Any, NonPosInt]", "member" : "zio.test.refined.types.NumericInstances.nonPosIntGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonPosIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosInt]", "kind" : "val"}, {"label" : "negIntGen", "tail" : ": Gen[Any, NegInt]", "member" : "zio.test.refined.types.NumericInstances.negIntGen", "link" : "zio\/test\/refined\/types\/numeric$.html#negIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegInt]", "kind" : "val"}, {"label" : "nonNegIntGen", "tail" : ": Gen[Any, NonNegInt]", "member" : "zio.test.refined.types.NumericInstances.nonNegIntGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonNegIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegInt]", "kind" : "val"}, {"label" : "posIntGen", "tail" : ": Gen[Any, PosInt]", "member" : "zio.test.refined.types.NumericInstances.posIntGen", "link" : "zio\/test\/refined\/types\/numeric$.html#posIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosInt]", "kind" : "val"}, {"label" : "nonPosShortGen", "tail" : ": Gen[Any, NonPosShort]", "member" : "zio.test.refined.types.NumericInstances.nonPosShortGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonPosShortGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosShort]", "kind" : "val"}, {"label" : "negShortGen", "tail" : ": Gen[Any, NegShort]", "member" : "zio.test.refined.types.NumericInstances.negShortGen", "link" : "zio\/test\/refined\/types\/numeric$.html#negShortGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegShort]", "kind" : "val"}, {"label" : "nonNegShortGen", "tail" : ": Gen[Any, NonNegShort]", "member" : "zio.test.refined.types.NumericInstances.nonNegShortGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonNegShortGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegShort]", "kind" : "val"}, {"label" : "posShortGen", "tail" : ": Gen[Any, PosShort]", "member" : "zio.test.refined.types.NumericInstances.posShortGen", "link" : "zio\/test\/refined\/types\/numeric$.html#posShortGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosShort]", "kind" : "val"}, {"label" : "nonPosByteGen", "tail" : ": Gen[Any, NonPosByte]", "member" : "zio.test.refined.types.NumericInstances.nonPosByteGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonPosByteGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosByte]", "kind" : "val"}, {"label" : "negByteGen", "tail" : ": Gen[Any, NegByte]", "member" : "zio.test.refined.types.NumericInstances.negByteGen", "link" : "zio\/test\/refined\/types\/numeric$.html#negByteGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegByte]", "kind" : "val"}, {"label" : "nonNegByteGen", "tail" : ": Gen[Any, NonNegByte]", "member" : "zio.test.refined.types.NumericInstances.nonNegByteGen", "link" : "zio\/test\/refined\/types\/numeric$.html#nonNegByteGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegByte]", "kind" : "val"}, {"label" : "posByteGen", "tail" : ": Gen[Any, PosByte]", "member" : "zio.test.refined.types.NumericInstances.posByteGen", "link" : "zio\/test\/refined\/types\/numeric$.html#posByteGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosByte]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/types\/numeric$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/types\/numeric$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/types\/numeric$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/types\/numeric$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/types\/numeric$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/types\/numeric$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/types\/numeric$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/types\/numeric$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/types\/numeric$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/types\/numeric$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/types\/numeric$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/types\/numeric$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/numeric$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/numeric$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/numeric$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/types\/numeric$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/types\/numeric$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/types\/numeric$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/types\/numeric$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.refined.types.NumericInstances", "trait" : "zio\/test\/refined\/types\/NumericInstances.html", "kind" : "trait", "members_trait" : [{"label" : "nonNanDoubleDeriveGen", "tail" : ": DeriveGen[NonNaNDouble]", "member" : "zio.test.refined.types.NumericInstances.nonNanDoubleDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonNanDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNaNDouble]", "kind" : "implicit val"}, {"label" : "nonNanFloatDeriveGen", "tail" : ": DeriveGen[NonNaNFloat]", "member" : "zio.test.refined.types.NumericInstances.nonNanFloatDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonNanFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNaNFloat]", "kind" : "implicit val"}, {"label" : "nonPosBigDecimalDeriveGen", "tail" : ": DeriveGen[NonPosBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.nonPosBigDecimalDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonPosBigDecimalDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosBigDecimal]", "kind" : "implicit val"}, {"label" : "negBigDecimalDeriveGen", "tail" : ": DeriveGen[NegBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.negBigDecimalDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#negBigDecimalDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegBigDecimal]", "kind" : "implicit val"}, {"label" : "nonNegBigDecimalDeriveGen", "tail" : ": DeriveGen[NonNegBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.nonNegBigDecimalDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonNegBigDecimalDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegBigDecimal]", "kind" : "implicit val"}, {"label" : "posBigDecimalDeriveGen", "tail" : ": DeriveGen[PosBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.posBigDecimalDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#posBigDecimalDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosBigDecimal]", "kind" : "implicit val"}, {"label" : "nonPosDoubleDeriveGen", "tail" : ": DeriveGen[NonPosDouble]", "member" : "zio.test.refined.types.NumericInstances.nonPosDoubleDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonPosDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosDouble]", "kind" : "implicit val"}, {"label" : "negDoubleDeriveGen", "tail" : ": DeriveGen[NegDouble]", "member" : "zio.test.refined.types.NumericInstances.negDoubleDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#negDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegDouble]", "kind" : "implicit val"}, {"label" : "nonNegDoubleDeriveGen", "tail" : ": DeriveGen[NonNegDouble]", "member" : "zio.test.refined.types.NumericInstances.nonNegDoubleDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonNegDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegDouble]", "kind" : "implicit val"}, {"label" : "posDoubleDeriveGen", "tail" : ": DeriveGen[PosDouble]", "member" : "zio.test.refined.types.NumericInstances.posDoubleDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#posDoubleDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosDouble]", "kind" : "implicit val"}, {"label" : "nonPosFloatDeriveGen", "tail" : ": DeriveGen[NonPosFloat]", "member" : "zio.test.refined.types.NumericInstances.nonPosFloatDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonPosFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosFloat]", "kind" : "implicit val"}, {"label" : "negFloatDeriveGen", "tail" : ": DeriveGen[NegFloat]", "member" : "zio.test.refined.types.NumericInstances.negFloatDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#negFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegFloat]", "kind" : "implicit val"}, {"label" : "nonNegFloatDeriveGen", "tail" : ": DeriveGen[NonNegFloat]", "member" : "zio.test.refined.types.NumericInstances.nonNegFloatDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonNegFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegFloat]", "kind" : "implicit val"}, {"label" : "posFloatDeriveGen", "tail" : ": DeriveGen[PosFloat]", "member" : "zio.test.refined.types.NumericInstances.posFloatDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#posFloatDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosFloat]", "kind" : "implicit val"}, {"label" : "nonPosBigIntDeriveGen", "tail" : ": DeriveGen[NonPosBigInt]", "member" : "zio.test.refined.types.NumericInstances.nonPosBigIntDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonPosBigIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosBigInt]", "kind" : "implicit val"}, {"label" : "negBigIntDeriveGen", "tail" : ": DeriveGen[NegBigInt]", "member" : "zio.test.refined.types.NumericInstances.negBigIntDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#negBigIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegBigInt]", "kind" : "implicit val"}, {"label" : "nonNegBigIntDeriveGen", "tail" : ": DeriveGen[NonNegBigInt]", "member" : "zio.test.refined.types.NumericInstances.nonNegBigIntDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonNegBigIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegBigInt]", "kind" : "implicit val"}, {"label" : "posBigIntDeriveGen", "tail" : ": DeriveGen[PosBigInt]", "member" : "zio.test.refined.types.NumericInstances.posBigIntDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#posBigIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosBigInt]", "kind" : "implicit val"}, {"label" : "nonPosLongDeriveGen", "tail" : ": DeriveGen[NonPosLong]", "member" : "zio.test.refined.types.NumericInstances.nonPosLongDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonPosLongDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosLong]", "kind" : "implicit val"}, {"label" : "negLongDeriveGen", "tail" : ": DeriveGen[NegLong]", "member" : "zio.test.refined.types.NumericInstances.negLongDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#negLongDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegLong]", "kind" : "implicit val"}, {"label" : "nonNegLongDeriveGen", "tail" : ": DeriveGen[NonNegLong]", "member" : "zio.test.refined.types.NumericInstances.nonNegLongDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonNegLongDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegLong]", "kind" : "implicit val"}, {"label" : "posLongDeriveGen", "tail" : ": DeriveGen[PosLong]", "member" : "zio.test.refined.types.NumericInstances.posLongDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#posLongDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosLong]", "kind" : "implicit val"}, {"label" : "nonPosIntDeriveGen", "tail" : ": DeriveGen[NonPosInt]", "member" : "zio.test.refined.types.NumericInstances.nonPosIntDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonPosIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosInt]", "kind" : "implicit val"}, {"label" : "negIntDeriveGen", "tail" : ": DeriveGen[NegInt]", "member" : "zio.test.refined.types.NumericInstances.negIntDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#negIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegInt]", "kind" : "implicit val"}, {"label" : "nonNegIntDeriveGen", "tail" : ": DeriveGen[NonNegInt]", "member" : "zio.test.refined.types.NumericInstances.nonNegIntDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonNegIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegInt]", "kind" : "implicit val"}, {"label" : "posIntDeriveGen", "tail" : ": DeriveGen[PosInt]", "member" : "zio.test.refined.types.NumericInstances.posIntDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#posIntDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosInt]", "kind" : "implicit val"}, {"label" : "nonPosShortDeriveGen", "tail" : ": DeriveGen[NonPosShort]", "member" : "zio.test.refined.types.NumericInstances.nonPosShortDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonPosShortDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosShort]", "kind" : "implicit val"}, {"label" : "negShortDeriveGen", "tail" : ": DeriveGen[NegShort]", "member" : "zio.test.refined.types.NumericInstances.negShortDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#negShortDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegShort]", "kind" : "implicit val"}, {"label" : "nonNegShortDeriveGen", "tail" : ": DeriveGen[NonNegShort]", "member" : "zio.test.refined.types.NumericInstances.nonNegShortDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonNegShortDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegShort]", "kind" : "implicit val"}, {"label" : "posShortDeriveGen", "tail" : ": DeriveGen[PosShort]", "member" : "zio.test.refined.types.NumericInstances.posShortDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#posShortDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosShort]", "kind" : "implicit val"}, {"label" : "nonPosByteDeriveGen", "tail" : ": DeriveGen[NonPosByte]", "member" : "zio.test.refined.types.NumericInstances.nonPosByteDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonPosByteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonPosByte]", "kind" : "implicit val"}, {"label" : "negByteDeriveGen", "tail" : ": DeriveGen[NegByte]", "member" : "zio.test.refined.types.NumericInstances.negByteDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#negByteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NegByte]", "kind" : "implicit val"}, {"label" : "nonNegByteDeriveGen", "tail" : ": DeriveGen[NonNegByte]", "member" : "zio.test.refined.types.NumericInstances.nonNegByteDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonNegByteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.NonNegByte]", "kind" : "implicit val"}, {"label" : "posByteDeriveGen", "tail" : ": DeriveGen[PosByte]", "member" : "zio.test.refined.types.NumericInstances.posByteDeriveGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#posByteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.numeric.PosByte]", "kind" : "implicit val"}, {"label" : "nonNanDoubleGen", "tail" : ": Gen[Any, NonNaNDouble]", "member" : "zio.test.refined.types.NumericInstances.nonNanDoubleGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonNanDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNaNDouble]", "kind" : "val"}, {"label" : "nonNanFloatGen", "tail" : ": Gen[Any, NonNaNFloat]", "member" : "zio.test.refined.types.NumericInstances.nonNanFloatGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonNanFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNaNFloat]", "kind" : "val"}, {"label" : "nonPosBigDecimalGen", "tail" : ": Gen[Any, NonPosBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.nonPosBigDecimalGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonPosBigDecimalGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosBigDecimal]", "kind" : "val"}, {"label" : "negBigDecimalGen", "tail" : ": Gen[Any, NegBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.negBigDecimalGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#negBigDecimalGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegBigDecimal]", "kind" : "val"}, {"label" : "nonNegBigDecimalGen", "tail" : ": Gen[Any, NonNegBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.nonNegBigDecimalGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonNegBigDecimalGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegBigDecimal]", "kind" : "val"}, {"label" : "posBigDecimalGen", "tail" : ": Gen[Any, PosBigDecimal]", "member" : "zio.test.refined.types.NumericInstances.posBigDecimalGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#posBigDecimalGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosBigDecimal]", "kind" : "val"}, {"label" : "nonPosDoubleGen", "tail" : ": Gen[Any, NonPosDouble]", "member" : "zio.test.refined.types.NumericInstances.nonPosDoubleGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonPosDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosDouble]", "kind" : "val"}, {"label" : "negDoubleGen", "tail" : ": Gen[Any, NegDouble]", "member" : "zio.test.refined.types.NumericInstances.negDoubleGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#negDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegDouble]", "kind" : "val"}, {"label" : "nonNegDoubleGen", "tail" : ": Gen[Any, NonNegDouble]", "member" : "zio.test.refined.types.NumericInstances.nonNegDoubleGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonNegDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegDouble]", "kind" : "val"}, {"label" : "posDoubleGen", "tail" : ": Gen[Any, PosDouble]", "member" : "zio.test.refined.types.NumericInstances.posDoubleGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#posDoubleGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosDouble]", "kind" : "val"}, {"label" : "nonPosFloatGen", "tail" : ": Gen[Any, NonPosFloat]", "member" : "zio.test.refined.types.NumericInstances.nonPosFloatGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonPosFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosFloat]", "kind" : "val"}, {"label" : "negFloatGen", "tail" : ": Gen[Any, NegFloat]", "member" : "zio.test.refined.types.NumericInstances.negFloatGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#negFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegFloat]", "kind" : "val"}, {"label" : "nonNegFloatGen", "tail" : ": Gen[Any, NonNegFloat]", "member" : "zio.test.refined.types.NumericInstances.nonNegFloatGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonNegFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegFloat]", "kind" : "val"}, {"label" : "posFloatGen", "tail" : ": Gen[Any, PosFloat]", "member" : "zio.test.refined.types.NumericInstances.posFloatGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#posFloatGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosFloat]", "kind" : "val"}, {"label" : "nonPosBigIntGen", "tail" : ": Gen[Any, NonPosBigInt]", "member" : "zio.test.refined.types.NumericInstances.nonPosBigIntGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonPosBigIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosBigInt]", "kind" : "val"}, {"label" : "negBigIntGen", "tail" : ": Gen[Any, NegBigInt]", "member" : "zio.test.refined.types.NumericInstances.negBigIntGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#negBigIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegBigInt]", "kind" : "val"}, {"label" : "nonNegBigIntGen", "tail" : ": Gen[Any, NonNegBigInt]", "member" : "zio.test.refined.types.NumericInstances.nonNegBigIntGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonNegBigIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegBigInt]", "kind" : "val"}, {"label" : "posBigIntGen", "tail" : ": Gen[Any, PosBigInt]", "member" : "zio.test.refined.types.NumericInstances.posBigIntGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#posBigIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosBigInt]", "kind" : "val"}, {"label" : "nonPosLongGen", "tail" : ": Gen[Any, NonPosLong]", "member" : "zio.test.refined.types.NumericInstances.nonPosLongGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonPosLongGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosLong]", "kind" : "val"}, {"label" : "negLongGen", "tail" : ": Gen[Any, NegLong]", "member" : "zio.test.refined.types.NumericInstances.negLongGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#negLongGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegLong]", "kind" : "val"}, {"label" : "nonNegLongGen", "tail" : ": Gen[Any, NonNegLong]", "member" : "zio.test.refined.types.NumericInstances.nonNegLongGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonNegLongGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegLong]", "kind" : "val"}, {"label" : "posLongGen", "tail" : ": Gen[Any, PosLong]", "member" : "zio.test.refined.types.NumericInstances.posLongGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#posLongGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosLong]", "kind" : "val"}, {"label" : "nonPosIntGen", "tail" : ": Gen[Any, NonPosInt]", "member" : "zio.test.refined.types.NumericInstances.nonPosIntGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonPosIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosInt]", "kind" : "val"}, {"label" : "negIntGen", "tail" : ": Gen[Any, NegInt]", "member" : "zio.test.refined.types.NumericInstances.negIntGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#negIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegInt]", "kind" : "val"}, {"label" : "nonNegIntGen", "tail" : ": Gen[Any, NonNegInt]", "member" : "zio.test.refined.types.NumericInstances.nonNegIntGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonNegIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegInt]", "kind" : "val"}, {"label" : "posIntGen", "tail" : ": Gen[Any, PosInt]", "member" : "zio.test.refined.types.NumericInstances.posIntGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#posIntGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosInt]", "kind" : "val"}, {"label" : "nonPosShortGen", "tail" : ": Gen[Any, NonPosShort]", "member" : "zio.test.refined.types.NumericInstances.nonPosShortGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonPosShortGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosShort]", "kind" : "val"}, {"label" : "negShortGen", "tail" : ": Gen[Any, NegShort]", "member" : "zio.test.refined.types.NumericInstances.negShortGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#negShortGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegShort]", "kind" : "val"}, {"label" : "nonNegShortGen", "tail" : ": Gen[Any, NonNegShort]", "member" : "zio.test.refined.types.NumericInstances.nonNegShortGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonNegShortGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegShort]", "kind" : "val"}, {"label" : "posShortGen", "tail" : ": Gen[Any, PosShort]", "member" : "zio.test.refined.types.NumericInstances.posShortGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#posShortGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosShort]", "kind" : "val"}, {"label" : "nonPosByteGen", "tail" : ": Gen[Any, NonPosByte]", "member" : "zio.test.refined.types.NumericInstances.nonPosByteGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonPosByteGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonPosByte]", "kind" : "val"}, {"label" : "negByteGen", "tail" : ": Gen[Any, NegByte]", "member" : "zio.test.refined.types.NumericInstances.negByteGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#negByteGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NegByte]", "kind" : "val"}, {"label" : "nonNegByteGen", "tail" : ": Gen[Any, NonNegByte]", "member" : "zio.test.refined.types.NumericInstances.nonNegByteGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#nonNegByteGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.NonNegByte]", "kind" : "val"}, {"label" : "posByteGen", "tail" : ": Gen[Any, PosByte]", "member" : "zio.test.refined.types.NumericInstances.posByteGen", "link" : "zio\/test\/refined\/types\/NumericInstances.html#posByteGen:zio.test.Gen[Any,eu.timepit.refined.types.numeric.PosByte]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/types\/NumericInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/types\/NumericInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/types\/NumericInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/types\/NumericInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/types\/NumericInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/types\/NumericInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/types\/NumericInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/types\/NumericInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/types\/NumericInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/types\/NumericInstances.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/types\/NumericInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/types\/NumericInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/NumericInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/NumericInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/NumericInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/types\/NumericInstances.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/types\/NumericInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/types\/NumericInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/types\/NumericInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.refined.types.string", "shortDescription" : "", "object" : "zio\/test\/refined\/types\/string$.html", "members_object" : [{"label" : "FiniteStringPartiallyApplied", "tail" : "", "member" : "zio.test.refined.types.StringInstance.FiniteStringPartiallyApplied", "link" : "zio\/test\/refined\/types\/StringInstance.html#FiniteStringPartiallyApplied[N<:Int,P]extendsAnyRef", "kind" : "class"}, {"label" : "hexStringDeriveGen", "tail" : "(): DeriveGen[HexString]", "member" : "zio.test.refined.types.StringInstance.hexStringDeriveGen", "link" : "zio\/test\/refined\/types\/string$.html#hexStringDeriveGen[R]:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.HexString]", "kind" : "implicit def"}, {"label" : "trimmedStringDeriveGen", "tail" : "(charGen: DeriveGen[Char]): DeriveGen[TrimmedString]", "member" : "zio.test.refined.types.StringInstance.trimmedStringDeriveGen", "link" : "zio\/test\/refined\/types\/string$.html#trimmedStringDeriveGen[R](implicitcharGen:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.TrimmedString]", "kind" : "implicit def"}, {"label" : "nonEmptyFiniteStringDeriveGen", "tail" : "(ws: Aux[N], charGen: DeriveGen[Char]): DeriveGen[NonEmptyFiniteString[N]]", "member" : "zio.test.refined.types.StringInstance.nonEmptyFiniteStringDeriveGen", "link" : "zio\/test\/refined\/types\/string$.html#nonEmptyFiniteStringDeriveGen[N<:Int](implicitws:shapeless.Witness.Aux[N],implicitcharGen:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.NonEmptyFiniteString[N]]", "kind" : "implicit def"}, {"label" : "nonEmptyStringDeriveGen", "tail" : "(charGen: DeriveGen[Char]): DeriveGen[NonEmptyString]", "member" : "zio.test.refined.types.StringInstance.nonEmptyStringDeriveGen", "link" : "zio\/test\/refined\/types\/string$.html#nonEmptyStringDeriveGen[R](implicitcharGen:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.NonEmptyString]", "kind" : "implicit def"}, {"label" : "finiteStringDeriveGen", "tail" : "(ws: Aux[N], charGen: DeriveGen[Char]): DeriveGen[FiniteString[N]]", "member" : "zio.test.refined.types.StringInstance.finiteStringDeriveGen", "link" : "zio\/test\/refined\/types\/string$.html#finiteStringDeriveGen[N<:Int](implicitws:shapeless.Witness.Aux[N],implicitcharGen:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.FiniteString[N]]", "kind" : "implicit def"}, {"label" : "hexStringGen", "tail" : "(): Gen[Any, HexString]", "member" : "zio.test.refined.types.StringInstance.hexStringGen", "link" : "zio\/test\/refined\/types\/string$.html#hexStringGen:zio.test.Gen[Any,eu.timepit.refined.types.string.HexString]", "kind" : "def"}, {"label" : "trimmedStringGen", "tail" : "(charGen: Gen[R, Char]): Gen[R, TrimmedString]", "member" : "zio.test.refined.types.StringInstance.trimmedStringGen", "link" : "zio\/test\/refined\/types\/string$.html#trimmedStringGen[R](charGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.types.string.TrimmedString]", "kind" : "def"}, {"label" : "nonEmptyFiniteStringGen", "tail" : "(): FiniteStringPartiallyApplied[N, Size[Closed[shapeless.Nat._1, N]]]", "member" : "zio.test.refined.types.StringInstance.nonEmptyFiniteStringGen", "link" : "zio\/test\/refined\/types\/string$.html#nonEmptyFiniteStringGen[N<:Int]:StringInstance.this.FiniteStringPartiallyApplied[N,eu.timepit.refined.collection.Size[eu.timepit.refined.numeric.Interval.Closed[shapeless.Nat._1,N]]]", "kind" : "def"}, {"label" : "nonEmptyStringGen", "tail" : "(charGen: Gen[R, Char]): Gen[R, NonEmptyString]", "member" : "zio.test.refined.types.StringInstance.nonEmptyStringGen", "link" : "zio\/test\/refined\/types\/string$.html#nonEmptyStringGen[R](charGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.types.string.NonEmptyString]", "kind" : "def"}, {"label" : "finiteStringGen", "tail" : "(): FiniteStringPartiallyApplied[N, MaxSize[N]]", "member" : "zio.test.refined.types.StringInstance.finiteStringGen", "link" : "zio\/test\/refined\/types\/string$.html#finiteStringGen[N<:Int]:StringInstance.this.FiniteStringPartiallyApplied[N,eu.timepit.refined.collection.MaxSize[N]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/types\/string$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/types\/string$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/types\/string$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/types\/string$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/types\/string$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/types\/string$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/types\/string$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/types\/string$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/types\/string$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/types\/string$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/types\/string$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/types\/string$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/string$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/string$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/string$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/types\/string$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/types\/string$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/types\/string$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/types\/string$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.refined.types.StringInstance", "trait" : "zio\/test\/refined\/types\/StringInstance.html", "kind" : "trait", "members_trait" : [{"label" : "hexStringDeriveGen", "tail" : "(): DeriveGen[HexString]", "member" : "zio.test.refined.types.StringInstance.hexStringDeriveGen", "link" : "zio\/test\/refined\/types\/StringInstance.html#hexStringDeriveGen[R]:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.HexString]", "kind" : "implicit def"}, {"label" : "trimmedStringDeriveGen", "tail" : "(charGen: DeriveGen[Char]): DeriveGen[TrimmedString]", "member" : "zio.test.refined.types.StringInstance.trimmedStringDeriveGen", "link" : "zio\/test\/refined\/types\/StringInstance.html#trimmedStringDeriveGen[R](implicitcharGen:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.TrimmedString]", "kind" : "implicit def"}, {"label" : "nonEmptyFiniteStringDeriveGen", "tail" : "(ws: Aux[N], charGen: DeriveGen[Char]): DeriveGen[NonEmptyFiniteString[N]]", "member" : "zio.test.refined.types.StringInstance.nonEmptyFiniteStringDeriveGen", "link" : "zio\/test\/refined\/types\/StringInstance.html#nonEmptyFiniteStringDeriveGen[N<:Int](implicitws:shapeless.Witness.Aux[N],implicitcharGen:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.NonEmptyFiniteString[N]]", "kind" : "implicit def"}, {"label" : "nonEmptyStringDeriveGen", "tail" : "(charGen: DeriveGen[Char]): DeriveGen[NonEmptyString]", "member" : "zio.test.refined.types.StringInstance.nonEmptyStringDeriveGen", "link" : "zio\/test\/refined\/types\/StringInstance.html#nonEmptyStringDeriveGen[R](implicitcharGen:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.NonEmptyString]", "kind" : "implicit def"}, {"label" : "finiteStringDeriveGen", "tail" : "(ws: Aux[N], charGen: DeriveGen[Char]): DeriveGen[FiniteString[N]]", "member" : "zio.test.refined.types.StringInstance.finiteStringDeriveGen", "link" : "zio\/test\/refined\/types\/StringInstance.html#finiteStringDeriveGen[N<:Int](implicitws:shapeless.Witness.Aux[N],implicitcharGen:zio.test.magnolia.DeriveGen[Char]):zio.test.magnolia.DeriveGen[eu.timepit.refined.types.string.FiniteString[N]]", "kind" : "implicit def"}, {"label" : "hexStringGen", "tail" : "(): Gen[Any, HexString]", "member" : "zio.test.refined.types.StringInstance.hexStringGen", "link" : "zio\/test\/refined\/types\/StringInstance.html#hexStringGen:zio.test.Gen[Any,eu.timepit.refined.types.string.HexString]", "kind" : "def"}, {"label" : "trimmedStringGen", "tail" : "(charGen: Gen[R, Char]): Gen[R, TrimmedString]", "member" : "zio.test.refined.types.StringInstance.trimmedStringGen", "link" : "zio\/test\/refined\/types\/StringInstance.html#trimmedStringGen[R](charGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.types.string.TrimmedString]", "kind" : "def"}, {"label" : "nonEmptyFiniteStringGen", "tail" : "(): FiniteStringPartiallyApplied[N, Size[Closed[shapeless.Nat._1, N]]]", "member" : "zio.test.refined.types.StringInstance.nonEmptyFiniteStringGen", "link" : "zio\/test\/refined\/types\/StringInstance.html#nonEmptyFiniteStringGen[N<:Int]:StringInstance.this.FiniteStringPartiallyApplied[N,eu.timepit.refined.collection.Size[eu.timepit.refined.numeric.Interval.Closed[shapeless.Nat._1,N]]]", "kind" : "def"}, {"label" : "nonEmptyStringGen", "tail" : "(charGen: Gen[R, Char]): Gen[R, NonEmptyString]", "member" : "zio.test.refined.types.StringInstance.nonEmptyStringGen", "link" : "zio\/test\/refined\/types\/StringInstance.html#nonEmptyStringGen[R](charGen:zio.test.Gen[R,Char]):zio.test.Gen[R,eu.timepit.refined.types.string.NonEmptyString]", "kind" : "def"}, {"label" : "finiteStringGen", "tail" : "(): FiniteStringPartiallyApplied[N, MaxSize[N]]", "member" : "zio.test.refined.types.StringInstance.finiteStringGen", "link" : "zio\/test\/refined\/types\/StringInstance.html#finiteStringGen[N<:Int]:StringInstance.this.FiniteStringPartiallyApplied[N,eu.timepit.refined.collection.MaxSize[N]]", "kind" : "def"}, {"label" : "FiniteStringPartiallyApplied", "tail" : "", "member" : "zio.test.refined.types.StringInstance.FiniteStringPartiallyApplied", "link" : "zio\/test\/refined\/types\/StringInstance.html#FiniteStringPartiallyApplied[N<:Int,P]extendsAnyRef", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/types\/StringInstance.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/types\/StringInstance.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/types\/StringInstance.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/types\/StringInstance.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/types\/StringInstance.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/types\/StringInstance.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/types\/StringInstance.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/types\/StringInstance.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/types\/StringInstance.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/types\/StringInstance.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/types\/StringInstance.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/types\/StringInstance.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/StringInstance.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/StringInstance.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/StringInstance.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/types\/StringInstance.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/types\/StringInstance.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/types\/StringInstance.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/types\/StringInstance.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.refined.types.time", "shortDescription" : "", "object" : "zio\/test\/refined\/types\/time$.html", "members_object" : [{"label" : "millsDeriveGen", "tail" : "(): DeriveGen[Millis]", "member" : "zio.test.refined.types.TimeInstances.millsDeriveGen", "link" : "zio\/test\/refined\/types\/time$.html#millsDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Millis]", "kind" : "implicit def"}, {"label" : "secondDeriveGen", "tail" : "(): DeriveGen[Second]", "member" : "zio.test.refined.types.TimeInstances.secondDeriveGen", "link" : "zio\/test\/refined\/types\/time$.html#secondDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Second]", "kind" : "implicit def"}, {"label" : "minuteDeriveGen", "tail" : "(): DeriveGen[Minute]", "member" : "zio.test.refined.types.TimeInstances.minuteDeriveGen", "link" : "zio\/test\/refined\/types\/time$.html#minuteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Minute]", "kind" : "implicit def"}, {"label" : "hourDeriveGen", "tail" : "(): DeriveGen[Hour]", "member" : "zio.test.refined.types.TimeInstances.hourDeriveGen", "link" : "zio\/test\/refined\/types\/time$.html#hourDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Hour]", "kind" : "implicit def"}, {"label" : "dayDeriveGen", "tail" : "(): DeriveGen[Day]", "member" : "zio.test.refined.types.TimeInstances.dayDeriveGen", "link" : "zio\/test\/refined\/types\/time$.html#dayDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Day]", "kind" : "implicit def"}, {"label" : "monthDeriveGen", "tail" : "(): DeriveGen[Month]", "member" : "zio.test.refined.types.TimeInstances.monthDeriveGen", "link" : "zio\/test\/refined\/types\/time$.html#monthDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Month]", "kind" : "implicit def"}, {"label" : "millsGen", "tail" : ": Gen[Any, Millis]", "member" : "zio.test.refined.types.TimeInstances.millsGen", "link" : "zio\/test\/refined\/types\/time$.html#millsGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Millis]", "kind" : "val"}, {"label" : "secondGen", "tail" : ": Gen[Any, Second]", "member" : "zio.test.refined.types.TimeInstances.secondGen", "link" : "zio\/test\/refined\/types\/time$.html#secondGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Second]", "kind" : "val"}, {"label" : "minuteGen", "tail" : ": Gen[Any, Minute]", "member" : "zio.test.refined.types.TimeInstances.minuteGen", "link" : "zio\/test\/refined\/types\/time$.html#minuteGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Minute]", "kind" : "val"}, {"label" : "hourGen", "tail" : ": Gen[Any, Hour]", "member" : "zio.test.refined.types.TimeInstances.hourGen", "link" : "zio\/test\/refined\/types\/time$.html#hourGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Hour]", "kind" : "val"}, {"label" : "dayGen", "tail" : ": Gen[Any, Day]", "member" : "zio.test.refined.types.TimeInstances.dayGen", "link" : "zio\/test\/refined\/types\/time$.html#dayGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Day]", "kind" : "val"}, {"label" : "monthGen", "tail" : ": Gen[Any, Month]", "member" : "zio.test.refined.types.TimeInstances.monthGen", "link" : "zio\/test\/refined\/types\/time$.html#monthGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Month]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/types\/time$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/types\/time$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/types\/time$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/types\/time$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/types\/time$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/types\/time$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/types\/time$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/types\/time$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/types\/time$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/types\/time$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/types\/time$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/types\/time$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/time$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/time$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/time$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/types\/time$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/types\/time$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/types\/time$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/types\/time$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.refined.types.TimeInstances", "trait" : "zio\/test\/refined\/types\/TimeInstances.html", "kind" : "trait", "members_trait" : [{"label" : "millsDeriveGen", "tail" : "(): DeriveGen[Millis]", "member" : "zio.test.refined.types.TimeInstances.millsDeriveGen", "link" : "zio\/test\/refined\/types\/TimeInstances.html#millsDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Millis]", "kind" : "implicit def"}, {"label" : "secondDeriveGen", "tail" : "(): DeriveGen[Second]", "member" : "zio.test.refined.types.TimeInstances.secondDeriveGen", "link" : "zio\/test\/refined\/types\/TimeInstances.html#secondDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Second]", "kind" : "implicit def"}, {"label" : "minuteDeriveGen", "tail" : "(): DeriveGen[Minute]", "member" : "zio.test.refined.types.TimeInstances.minuteDeriveGen", "link" : "zio\/test\/refined\/types\/TimeInstances.html#minuteDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Minute]", "kind" : "implicit def"}, {"label" : "hourDeriveGen", "tail" : "(): DeriveGen[Hour]", "member" : "zio.test.refined.types.TimeInstances.hourDeriveGen", "link" : "zio\/test\/refined\/types\/TimeInstances.html#hourDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Hour]", "kind" : "implicit def"}, {"label" : "dayDeriveGen", "tail" : "(): DeriveGen[Day]", "member" : "zio.test.refined.types.TimeInstances.dayDeriveGen", "link" : "zio\/test\/refined\/types\/TimeInstances.html#dayDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Day]", "kind" : "implicit def"}, {"label" : "monthDeriveGen", "tail" : "(): DeriveGen[Month]", "member" : "zio.test.refined.types.TimeInstances.monthDeriveGen", "link" : "zio\/test\/refined\/types\/TimeInstances.html#monthDeriveGen:zio.test.magnolia.DeriveGen[eu.timepit.refined.types.time.Month]", "kind" : "implicit def"}, {"label" : "millsGen", "tail" : ": Gen[Any, Millis]", "member" : "zio.test.refined.types.TimeInstances.millsGen", "link" : "zio\/test\/refined\/types\/TimeInstances.html#millsGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Millis]", "kind" : "val"}, {"label" : "secondGen", "tail" : ": Gen[Any, Second]", "member" : "zio.test.refined.types.TimeInstances.secondGen", "link" : "zio\/test\/refined\/types\/TimeInstances.html#secondGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Second]", "kind" : "val"}, {"label" : "minuteGen", "tail" : ": Gen[Any, Minute]", "member" : "zio.test.refined.types.TimeInstances.minuteGen", "link" : "zio\/test\/refined\/types\/TimeInstances.html#minuteGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Minute]", "kind" : "val"}, {"label" : "hourGen", "tail" : ": Gen[Any, Hour]", "member" : "zio.test.refined.types.TimeInstances.hourGen", "link" : "zio\/test\/refined\/types\/TimeInstances.html#hourGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Hour]", "kind" : "val"}, {"label" : "dayGen", "tail" : ": Gen[Any, Day]", "member" : "zio.test.refined.types.TimeInstances.dayGen", "link" : "zio\/test\/refined\/types\/TimeInstances.html#dayGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Day]", "kind" : "val"}, {"label" : "monthGen", "tail" : ": Gen[Any, Month]", "member" : "zio.test.refined.types.TimeInstances.monthGen", "link" : "zio\/test\/refined\/types\/TimeInstances.html#monthGen:zio.test.Gen[Any,eu.timepit.refined.types.time.Month]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/refined\/types\/TimeInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/refined\/types\/TimeInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/refined\/types\/TimeInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/refined\/types\/TimeInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/refined\/types\/TimeInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/refined\/types\/TimeInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/refined\/types\/TimeInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/refined\/types\/TimeInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/refined\/types\/TimeInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/refined\/types\/TimeInstances.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/refined\/types\/TimeInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/refined\/types\/TimeInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/TimeInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/TimeInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/refined\/types\/TimeInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/refined\/types\/TimeInstances.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/refined\/types\/TimeInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/refined\/types\/TimeInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/refined\/types\/TimeInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}], "zio.internal" : [{"name" : "zio.internal.Blocking", "shortDescription" : "", "object" : "zio\/internal\/Blocking$.html", "members_object" : [{"label" : "blockingExecutor", "tail" : ": Executor", "member" : "zio.internal.Blocking.blockingExecutor", "link" : "zio\/internal\/Blocking$.html#blockingExecutor:zio.Executor", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/internal\/Blocking$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/internal\/Blocking$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/internal\/Blocking$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/internal\/Blocking$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/internal\/Blocking$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/internal\/Blocking$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/internal\/Blocking$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/internal\/Blocking$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/internal\/Blocking$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/internal\/Blocking$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/internal\/Blocking$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/internal\/Blocking$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/Blocking$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/Blocking$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/Blocking$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/internal\/Blocking$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/internal\/Blocking$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/internal\/Blocking$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/internal\/Blocking$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.internal.ExecutionMetrics", "shortDescription" : "", "members_class" : [{"member" : "zio.internal.ExecutionMetrics#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/internal\/ExecutionMetrics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/internal\/ExecutionMetrics.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/internal\/ExecutionMetrics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/internal\/ExecutionMetrics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/internal\/ExecutionMetrics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/internal\/ExecutionMetrics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/internal\/ExecutionMetrics.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/internal\/ExecutionMetrics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/internal\/ExecutionMetrics.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/internal\/ExecutionMetrics.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/internal\/ExecutionMetrics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/internal\/ExecutionMetrics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/ExecutionMetrics.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/ExecutionMetrics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/ExecutionMetrics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/internal\/ExecutionMetrics.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/internal\/ExecutionMetrics.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/internal\/ExecutionMetrics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/internal\/ExecutionMetrics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "workersCount", "tail" : "(): Int", "member" : "zio.internal.ExecutionMetrics.workersCount", "link" : "zio\/internal\/ExecutionMetrics.html#workersCount:Int", "kind" : "abstract def"}, {"label" : "dequeuedCount", "tail" : "(): Long", "member" : "zio.internal.ExecutionMetrics.dequeuedCount", "link" : "zio\/internal\/ExecutionMetrics.html#dequeuedCount:Long", "kind" : "abstract def"}, {"label" : "enqueuedCount", "tail" : "(): Long", "member" : "zio.internal.ExecutionMetrics.enqueuedCount", "link" : "zio\/internal\/ExecutionMetrics.html#enqueuedCount:Long", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): Int", "member" : "zio.internal.ExecutionMetrics.size", "link" : "zio\/internal\/ExecutionMetrics.html#size:Int", "kind" : "abstract def"}, {"label" : "capacity", "tail" : "(): Int", "member" : "zio.internal.ExecutionMetrics.capacity", "link" : "zio\/internal\/ExecutionMetrics.html#capacity:Int", "kind" : "abstract def"}, {"label" : "concurrency", "tail" : "(): Int", "member" : "zio.internal.ExecutionMetrics.concurrency", "link" : "zio\/internal\/ExecutionMetrics.html#concurrency:Int", "kind" : "abstract def"}], "class" : "zio\/internal\/ExecutionMetrics.html", "kind" : "class"}, {"name" : "zio.internal.FiberRuntime", "shortDescription" : "", "object" : "zio\/internal\/FiberRuntime$.html", "members_class" : [{"label" : "UnsafeAPI", "tail" : "", "member" : "zio.Fiber.Runtime.UnsafeAPI", "link" : "zio\/Fiber$$Runtime.html#UnsafeAPIextendsAnyRef", "kind" : "trait"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "zio.internal.FiberRuntime.hashCode", "link" : "zio\/internal\/FiberRuntime.html#hashCode():Int", "kind" : "def"}, {"label" : "unsafe", "tail" : "(): UnsafeAPI", "member" : "zio.internal.FiberRuntime.unsafe", "link" : "zio\/internal\/FiberRuntime.html#unsafe:FiberRuntime.this.UnsafeAPI", "kind" : "def"}, {"label" : "trace", "tail" : "(trace: Trace): UIO[StackTrace]", "member" : "zio.internal.FiberRuntime.trace", "link" : "zio\/internal\/FiberRuntime.html#trace(implicittrace:zio.Trace):zio.UIO[zio.StackTrace]", "kind" : "def"}, {"label" : "status", "tail" : "(trace: Trace): UIO[Status]", "member" : "zio.internal.FiberRuntime.status", "link" : "zio\/internal\/FiberRuntime.html#status(implicittrace:zio.Trace):zio.UIO[zio.Fiber.Status]", "kind" : "def"}, {"label" : "scope", "tail" : ": FiberScope", "member" : "zio.internal.FiberRuntime.scope", "link" : "zio\/internal\/FiberRuntime.html#scope:zio.internal.FiberScope", "kind" : "lazy val"}, {"label" : "runtimeFlags", "tail" : "(trace: Trace): UIO[RuntimeFlags]", "member" : "zio.internal.FiberRuntime.runtimeFlags", "link" : "zio\/internal\/FiberRuntime.html#runtimeFlags(implicittrace:zio.Trace):zio.UIO[zio.RuntimeFlags]", "kind" : "def"}, {"label" : "run", "tail" : "(depth: Int): Unit", "member" : "zio.internal.FiberRuntime.run", "link" : "zio\/internal\/FiberRuntime.html#run(depth:Int):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "zio.internal.FiberRuntime.run", "link" : "zio\/internal\/FiberRuntime.html#run():Unit", "kind" : "def"}, {"label" : "poll", "tail" : "(trace: Trace): UIO[Option[Exit[E, A]]]", "member" : "zio.internal.FiberRuntime.poll", "link" : "zio\/internal\/FiberRuntime.html#poll(implicittrace:zio.Trace):zio.UIO[Option[zio.Exit[E,A]]]", "kind" : "def"}, {"label" : "location", "tail" : "(): Trace", "member" : "zio.internal.FiberRuntime.location", "link" : "zio\/internal\/FiberRuntime.html#location:zio.Trace", "kind" : "def"}, {"label" : "interruptAsFork", "tail" : "(fiberId: FiberId)(trace: Trace): UIO[Unit]", "member" : "zio.internal.FiberRuntime.interruptAsFork", "link" : "zio\/internal\/FiberRuntime.html#interruptAsFork(fiberId:zio.FiberId)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "inheritAll", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.internal.FiberRuntime.inheritAll", "link" : "zio\/internal\/FiberRuntime.html#inheritAll(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "id", "tail" : "(): FiberId.Runtime", "member" : "zio.internal.FiberRuntime.id", "link" : "zio\/internal\/FiberRuntime.html#id:zio.FiberId.Runtime", "kind" : "def"}, {"label" : "fiberRefs", "tail" : "(trace: Trace): UIO[FiberRefs]", "member" : "zio.internal.FiberRuntime.fiberRefs", "link" : "zio\/internal\/FiberRuntime.html#fiberRefs(implicittrace:zio.Trace):zio.UIO[zio.FiberRefs]", "kind" : "def"}, {"label" : "children", "tail" : "(trace: Trace): UIO[Chunk[Fiber.Runtime[_, _]]]", "member" : "zio.internal.FiberRuntime.children", "link" : "zio\/internal\/FiberRuntime.html#children(implicittrace:zio.Trace):zio.UIO[zio.Chunk[zio.Fiber.Runtime[_,_]]]", "kind" : "def"}, {"label" : "await", "tail" : "(trace: Trace): UIO[Exit[E, A]]", "member" : "zio.internal.FiberRuntime.await", "link" : "zio\/internal\/FiberRuntime.html#await(implicittrace:zio.Trace):zio.UIO[zio.Exit[E,A]]", "kind" : "def"}, {"label" : "Erased", "tail" : "", "member" : "zio.internal.FiberRuntime.Erased", "link" : "zio\/internal\/FiberRuntime.html#Erased=zio.ZIO.Erased", "kind" : "type"}, {"member" : "zio.internal.FiberRuntime#<init>", "error" : "unsupported entity"}, {"label" : "dump", "tail" : "(trace: Trace): UIO[Dump]", "member" : "zio.Fiber.Runtime.dump", "link" : "zio\/internal\/FiberRuntime.html#dump(implicittrace:zio.Trace):zio.UIO[zio.Fiber.Dump]", "kind" : "final def"}, {"label" : "zipWith", "tail" : "(that: => Fiber[E1, B])(f: (A, B) => C): Synthetic[E1, C]", "member" : "zio.Fiber.zipWith", "link" : "zio\/internal\/FiberRuntime.html#zipWith[E1>:E,B,C](that:=>zio.Fiber[E1,B])(f:(A,B)=>C):zio.Fiber.Synthetic[E1,C]", "kind" : "final def"}, {"label" : "zipRight", "tail" : "(that: Fiber[E1, B]): Synthetic[E1, B]", "member" : "zio.Fiber.zipRight", "link" : "zio\/internal\/FiberRuntime.html#zipRight[E1>:E,B](that:zio.Fiber[E1,B]):zio.Fiber.Synthetic[E1,B]", "kind" : "final def"}, {"label" : "zipLeft", "tail" : "(that: Fiber[E1, B]): Synthetic[E1, A]", "member" : "zio.Fiber.zipLeft", "link" : "zio\/internal\/FiberRuntime.html#zipLeft[E1>:E,B](that:zio.Fiber[E1,B]):zio.Fiber.Synthetic[E1,A]", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: => Fiber[E1, B])(zippable: Zippable[A, B]): Synthetic[E1, Out]", "member" : "zio.Fiber.zip", "link" : "zio\/internal\/FiberRuntime.html#zip[E1>:E,B](that:=>zio.Fiber[E1,B])(implicitzippable:zio.Zippable[A,B]):zio.Fiber.Synthetic[E1,zippable.Out]", "kind" : "final def"}, {"label" : "unit", "tail" : "(): Synthetic[E, Unit]", "member" : "zio.Fiber.unit", "link" : "zio\/internal\/FiberRuntime.html#unit:zio.Fiber.Synthetic[E,Unit]", "kind" : "final def"}, {"label" : "toFutureWith", "tail" : "(f: (E) => Throwable)(trace: Trace): UIO[CancelableFuture[A]]", "member" : "zio.Fiber.toFutureWith", "link" : "zio\/internal\/FiberRuntime.html#toFutureWith(f:E=>Throwable)(implicittrace:zio.Trace):zio.UIO[zio.CancelableFuture[A]]", "kind" : "final def"}, {"label" : "toFuture", "tail" : "(ev: IsSubtypeOfError[E, Throwable], trace: Trace): UIO[CancelableFuture[A]]", "member" : "zio.Fiber.toFuture", "link" : "zio\/internal\/FiberRuntime.html#toFuture(implicitev:zio.IsSubtypeOfError[E,Throwable],implicittrace:zio.Trace):zio.UIO[zio.CancelableFuture[A]]", "kind" : "final def"}, {"label" : "scoped", "tail" : "(trace: Trace): ZIO[Scope, Nothing, Fiber[E, A]]", "member" : "zio.Fiber.scoped", "link" : "zio\/internal\/FiberRuntime.html#scoped(implicittrace:zio.Trace):zio.ZIO[zio.Scope,Nothing,zio.Fiber[E,A]]", "kind" : "final def"}, {"label" : "orElseEither", "tail" : "(that: => Fiber[E1, B]): Synthetic[E1, Either[A, B]]", "member" : "zio.Fiber.orElseEither", "link" : "zio\/internal\/FiberRuntime.html#orElseEither[E1,B](that:=>zio.Fiber[E1,B]):zio.Fiber.Synthetic[E1,Either[A,B]]", "kind" : "final def"}, {"label" : "orElse", "tail" : "(that: => Fiber[E1, A1])(ev: CanFail[E]): Synthetic[E1, A1]", "member" : "zio.Fiber.orElse", "link" : "zio\/internal\/FiberRuntime.html#orElse[E1,A1>:A](that:=>zio.Fiber[E1,A1])(implicitev:zio.CanFail[E]):zio.Fiber.Synthetic[E1,A1]", "kind" : "def"}, {"label" : "mapZIO", "tail" : "(f: (A) => IO[E1, B]): Synthetic[E1, B]", "member" : "zio.Fiber.mapZIO", "link" : "zio\/internal\/FiberRuntime.html#mapZIO[E1>:E,B](f:A=>zio.IO[E1,B]):zio.Fiber.Synthetic[E1,B]", "kind" : "final def"}, {"label" : "mapFiber", "tail" : "(f: (A) => Fiber[E1, B])(trace: Trace): UIO[Fiber[E1, B]]", "member" : "zio.Fiber.mapFiber", "link" : "zio\/internal\/FiberRuntime.html#mapFiber[E1>:E,B](f:A=>zio.Fiber[E1,B])(implicittrace:zio.Trace):zio.UIO[zio.Fiber[E1,B]]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (A) => B): Synthetic[E, B]", "member" : "zio.Fiber.map", "link" : "zio\/internal\/FiberRuntime.html#map[B](f:A=>B):zio.Fiber.Synthetic[E,B]", "kind" : "final def"}, {"label" : "join", "tail" : "(trace: Trace): IO[E, A]", "member" : "zio.Fiber.join", "link" : "zio\/internal\/FiberRuntime.html#join(implicittrace:zio.Trace):zio.IO[E,A]", "kind" : "final def"}, {"label" : "interruptFork", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.Fiber.interruptFork", "link" : "zio\/internal\/FiberRuntime.html#interruptFork(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "final def"}, {"label" : "interruptAs", "tail" : "(fiberId: FiberId)(trace: Trace): UIO[Exit[E, A]]", "member" : "zio.Fiber.interruptAs", "link" : "zio\/internal\/FiberRuntime.html#interruptAs(fiberId:zio.FiberId)(implicittrace:zio.Trace):zio.UIO[zio.Exit[E,A]]", "kind" : "final def"}, {"label" : "interrupt", "tail" : "(trace: Trace): UIO[Exit[E, A]]", "member" : "zio.Fiber.interrupt", "link" : "zio\/internal\/FiberRuntime.html#interrupt(implicittrace:zio.Trace):zio.UIO[zio.Exit[E,A]]", "kind" : "final def"}, {"label" : "fold", "tail" : "(runtime: (Fiber.Runtime[E, A]) => Z, synthetic: (Synthetic[E, A]) => Z): Z", "member" : "zio.Fiber.fold", "link" : "zio\/internal\/FiberRuntime.html#fold[Z](runtime:zio.Fiber.Runtime[E,A]=>Z,synthetic:zio.Fiber.Synthetic[E,A]=>Z):Z", "kind" : "final def"}, {"label" : "as", "tail" : "(b: => B): Synthetic[E, B]", "member" : "zio.Fiber.as", "link" : "zio\/internal\/FiberRuntime.html#as[B](b:=>B):zio.Fiber.Synthetic[E,B]", "kind" : "final def"}, {"label" : "<>", "tail" : "(that: => Fiber[E1, A1])(ev: CanFail[E]): Synthetic[E1, A1]", "member" : "zio.Fiber.<>", "link" : "zio\/internal\/FiberRuntime.html#<>[E1,A1>:A](that:=>zio.Fiber[E1,A1])(implicitev:zio.CanFail[E]):zio.Fiber.Synthetic[E1,A1]", "kind" : "def"}, {"label" : "<+>", "tail" : "(that: => Fiber[E1, B])(ev: CanFail[E]): Synthetic[E1, Either[A, B]]", "member" : "zio.Fiber.<+>", "link" : "zio\/internal\/FiberRuntime.html#<+>[E1>:E,B](that:=>zio.Fiber[E1,B])(implicitev:zio.CanFail[E]):zio.Fiber.Synthetic[E1,Either[A,B]]", "kind" : "final def"}, {"label" : "<*>", "tail" : "(that: => Fiber[E1, B])(zippable: Zippable[A, B]): Synthetic[E1, Out]", "member" : "zio.Fiber.<*>", "link" : "zio\/internal\/FiberRuntime.html#<*>[E1>:E,B](that:=>zio.Fiber[E1,B])(implicitzippable:zio.Zippable[A,B]):zio.Fiber.Synthetic[E1,zippable.Out]", "kind" : "final def"}, {"label" : "<*", "tail" : "(that: Fiber[E1, B]): Synthetic[E1, A]", "member" : "zio.Fiber.<*", "link" : "zio\/internal\/FiberRuntime.html#<*[E1>:E,B](that:zio.Fiber[E1,B]):zio.Fiber.Synthetic[E1,A]", "kind" : "final def"}, {"label" : "*>", "tail" : "(that: Fiber[E1, B]): Synthetic[E1, B]", "member" : "zio.Fiber.*>", "link" : "zio\/internal\/FiberRuntime.html#*>[E1>:E,B](that:zio.Fiber[E1,B]):zio.Fiber.Synthetic[E1,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/internal\/FiberRuntime.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/internal\/FiberRuntime.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/internal\/FiberRuntime.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/internal\/FiberRuntime.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/internal\/FiberRuntime.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/internal\/FiberRuntime.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/internal\/FiberRuntime.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/internal\/FiberRuntime.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/internal\/FiberRuntime.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/internal\/FiberRuntime.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/internal\/FiberRuntime.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/FiberRuntime.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/FiberRuntime.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/FiberRuntime.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/internal\/FiberRuntime.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/internal\/FiberRuntime.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/internal\/FiberRuntime.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/internal\/FiberRuntime.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(fiberId: FiberId.Runtime, fiberRefs: FiberRefs, runtimeFlags: RuntimeFlags): FiberRuntime[E, A]", "member" : "zio.internal.FiberRuntime.apply", "link" : "zio\/internal\/FiberRuntime$.html#apply[E,A](fiberId:zio.FiberId.Runtime,fiberRefs:zio.FiberRefs,runtimeFlags:zio.RuntimeFlags):zio.internal.FiberRuntime[E,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/internal\/FiberRuntime$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/internal\/FiberRuntime$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/internal\/FiberRuntime$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/internal\/FiberRuntime$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/internal\/FiberRuntime$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/internal\/FiberRuntime$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/internal\/FiberRuntime$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/internal\/FiberRuntime$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/internal\/FiberRuntime$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/internal\/FiberRuntime$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/internal\/FiberRuntime$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/internal\/FiberRuntime$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/FiberRuntime$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/FiberRuntime$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/FiberRuntime$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/internal\/FiberRuntime$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/internal\/FiberRuntime$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/internal\/FiberRuntime$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/internal\/FiberRuntime$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/internal\/FiberRuntime.html", "kind" : "class"}, {"name" : "zio.internal.IsFatal", "object" : "zio\/internal\/IsFatal$.html", "members_object" : [{"label" : "Patch", "tail" : "", "member" : "zio.internal.IsFatal.Patch", "link" : "zio\/internal\/IsFatal$.html#Patch", "kind" : "object"}, {"label" : "Patch", "tail" : "", "member" : "zio.internal.IsFatal.Patch", "link" : "zio\/internal\/IsFatal$.html#PatchextendsAnyRef", "kind" : "sealed trait"}, {"label" : "empty", "tail" : ": IsFatal", "member" : "zio.internal.IsFatal.empty", "link" : "zio\/internal\/IsFatal$.html#empty:zio.internal.IsFatal", "kind" : "val"}, {"label" : "apply", "tail" : "(tag: Class[_ <: Throwable]): IsFatal", "member" : "zio.internal.IsFatal.apply", "link" : "zio\/internal\/IsFatal$.html#apply(tag:Class[_<:Throwable]):zio.internal.IsFatal", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/internal\/IsFatal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/internal\/IsFatal$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/internal\/IsFatal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/internal\/IsFatal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/internal\/IsFatal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/internal\/IsFatal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/internal\/IsFatal$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/internal\/IsFatal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/internal\/IsFatal$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/internal\/IsFatal$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/internal\/IsFatal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/internal\/IsFatal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/IsFatal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/IsFatal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/IsFatal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/internal\/IsFatal$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/internal\/IsFatal$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/internal\/IsFatal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/internal\/IsFatal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/internal\/IsFatal.html", "kind" : "trait", "members_trait" : [{"label" : "|", "tail" : "(that: IsFatal): IsFatal", "member" : "zio.internal.IsFatal.|", "link" : "zio\/internal\/IsFatal.html#|(that:zio.internal.IsFatal):zio.internal.IsFatal", "kind" : "def"}, {"label" : "apply", "tail" : "(t: Throwable): Boolean", "member" : "zio.internal.IsFatal.apply", "link" : "zio\/internal\/IsFatal.html#apply(t:Throwable):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "zio\/internal\/IsFatal.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Boolean) => A): (Throwable) => A", "member" : "scala.Function1.andThen", "link" : "zio\/internal\/IsFatal.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Throwable): (A) => Boolean", "member" : "scala.Function1.compose", "link" : "zio\/internal\/IsFatal.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/internal\/IsFatal.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/internal\/IsFatal.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/internal\/IsFatal.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/internal\/IsFatal.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/internal\/IsFatal.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/internal\/IsFatal.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/internal\/IsFatal.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/internal\/IsFatal.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/internal\/IsFatal.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/internal\/IsFatal.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/internal\/IsFatal.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/internal\/IsFatal.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/IsFatal.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/IsFatal.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/IsFatal.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/internal\/IsFatal.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/internal\/IsFatal.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/internal\/IsFatal.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.internal.LoomSupport", "shortDescription" : "", "object" : "zio\/internal\/LoomSupport$.html", "members_object" : [{"label" : "LoomNotAvailableException", "tail" : "", "member" : "zio.internal.LoomSupport.LoomNotAvailableException", "link" : "zio\/internal\/LoomSupport$.html#LoomNotAvailableExceptionextendsRuntimeExceptionwithProductwithSerializable", "kind" : "final case class"}, {"label" : "createVirtualThread", "tail" : "(runnable: Runnable): Boolean", "member" : "zio.internal.LoomSupport.createVirtualThread", "link" : "zio\/internal\/LoomSupport$.html#createVirtualThread(runnable:Runnable):Boolean", "kind" : "def"}, {"label" : "newVirtualThreadPerTaskExecutor", "tail" : "(): Option[java.util.concurrent.Executor]", "member" : "zio.internal.LoomSupport.newVirtualThreadPerTaskExecutor", "link" : "zio\/internal\/LoomSupport$.html#newVirtualThreadPerTaskExecutor():Option[java.util.concurrent.Executor]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/internal\/LoomSupport$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/internal\/LoomSupport$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/internal\/LoomSupport$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/internal\/LoomSupport$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/internal\/LoomSupport$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/internal\/LoomSupport$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/internal\/LoomSupport$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/internal\/LoomSupport$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/internal\/LoomSupport$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/internal\/LoomSupport$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/internal\/LoomSupport$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/internal\/LoomSupport$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/LoomSupport$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/LoomSupport$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/LoomSupport$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/internal\/LoomSupport$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/internal\/LoomSupport$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/internal\/LoomSupport$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/internal\/LoomSupport$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.internal.MutableQueueFieldsPadding", "shortDescription" : "", "members_class" : [{"member" : "zio.internal.MutableQueueFieldsPadding#<init>", "error" : "unsupported entity"}, {"label" : "pollUpTo", "tail" : "(n: Int): Chunk[A]", "member" : "zio.internal.MutableConcurrentQueue.pollUpTo", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#pollUpTo(n:Int):zio.Chunk[A]", "kind" : "def"}, {"label" : "offerAll", "tail" : "(as: Iterable[A1]): Chunk[A1]", "member" : "zio.internal.MutableConcurrentQueue.offerAll", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#offerAll[A1<:A](as:Iterable[A1]):zio.Chunk[A1]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/internal\/MutableQueueFieldsPadding.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "isFull", "tail" : "(): Boolean", "member" : "zio.internal.MutableConcurrentQueue.isFull", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#isFull():Boolean", "kind" : "abstract def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "zio.internal.MutableConcurrentQueue.isEmpty", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#isEmpty():Boolean", "kind" : "abstract def"}, {"label" : "dequeuedCount", "tail" : "(): Long", "member" : "zio.internal.MutableConcurrentQueue.dequeuedCount", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#dequeuedCount():Long", "kind" : "abstract def"}, {"label" : "enqueuedCount", "tail" : "(): Long", "member" : "zio.internal.MutableConcurrentQueue.enqueuedCount", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#enqueuedCount():Long", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): Int", "member" : "zio.internal.MutableConcurrentQueue.size", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#size():Int", "kind" : "abstract def"}, {"label" : "poll", "tail" : "(default: A): A", "member" : "zio.internal.MutableConcurrentQueue.poll", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#poll(default:A):A", "kind" : "abstract def"}, {"label" : "offer", "tail" : "(a: A): Boolean", "member" : "zio.internal.MutableConcurrentQueue.offer", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#offer(a:A):Boolean", "kind" : "abstract def"}, {"label" : "capacity", "tail" : ": Int", "member" : "zio.internal.MutableConcurrentQueue.capacity", "link" : "zio\/internal\/MutableQueueFieldsPadding.html#capacity:Int", "kind" : "abstract val"}], "class" : "zio\/internal\/MutableQueueFieldsPadding.html", "kind" : "class"}, {"name" : "zio.internal.MutableSetCompat", "trait" : "zio\/internal\/MutableSetCompat.html", "kind" : "trait", "members_trait" : [{"label" : "subtractOne", "tail" : "(element: V): MutableSetCompat.this.type", "member" : "zio.internal.MutableSetCompat.subtractOne", "link" : "zio\/internal\/MutableSetCompat.html#subtractOne(element:V):MutableSetCompat.this.type", "kind" : "def"}, {"label" : "addOne", "tail" : "(element: V): MutableSetCompat.this.type", "member" : "zio.internal.MutableSetCompat.addOne", "link" : "zio\/internal\/MutableSetCompat.html#addOne(element:V):MutableSetCompat.this.type", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): IterableFactory[Set]", "member" : "scala.collection.mutable.Set.iterableFactory", "link" : "zio\/internal\/MutableSetCompat.html#iterableFactory:scala.collection.IterableFactory[scala.collection.mutable.Set]", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.mutable.SetOps.knownSize", "link" : "zio\/internal\/MutableSetCompat.html#knownSize:Int", "kind" : "def"}, {"label" : "clone", "tail" : "(): Set[V]", "member" : "scala.collection.mutable.SetOps.clone", "link" : "zio\/internal\/MutableSetCompat.html#clone():C", "kind" : "def"}, {"label" : "filterInPlace", "tail" : "(p: (V) => Boolean): MutableSetCompat.this.type", "member" : "scala.collection.mutable.SetOps.filterInPlace", "link" : "zio\/internal\/MutableSetCompat.html#filterInPlace(p:A=>Boolean):SetOps.this.type", "kind" : "def"}, {"label" : "retain", "tail" : "(p: (V) => Boolean): Unit", "member" : "scala.collection.mutable.SetOps.retain", "link" : "zio\/internal\/MutableSetCompat.html#retain(p:A=>Boolean):Unit", "kind" : "final def"}, {"label" : "diff", "tail" : "(that: Set[V]): Set[V]", "member" : "scala.collection.mutable.SetOps.diff", "link" : "zio\/internal\/MutableSetCompat.html#diff(that:scala.collection.Set[A]):C", "kind" : "def"}, {"label" : "remove", "tail" : "(elem: V): Boolean", "member" : "scala.collection.mutable.SetOps.remove", "link" : "zio\/internal\/MutableSetCompat.html#remove(elem:A):Boolean", "kind" : "def"}, {"label" : "update", "tail" : "(elem: V, included: Boolean): Unit", "member" : "scala.collection.mutable.SetOps.update", "link" : "zio\/internal\/MutableSetCompat.html#update(elem:A,included:Boolean):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(elem: V): Boolean", "member" : "scala.collection.mutable.SetOps.add", "link" : "zio\/internal\/MutableSetCompat.html#add(elem:A):Boolean", "kind" : "def"}, {"label" : "result", "tail" : "(): Set[V]", "member" : "scala.collection.mutable.SetOps.result", "link" : "zio\/internal\/MutableSetCompat.html#result():C", "kind" : "def"}, {"label" : "--=", "tail" : "(xs: IterableOnce[V]): MutableSetCompat.this.type", "member" : "scala.collection.mutable.Shrinkable.--=", "link" : "zio\/internal\/MutableSetCompat.html#--=(xs:scala.collection.IterableOnce[A]):Shrinkable.this.type", "kind" : "final def"}, {"label" : "subtractAll", "tail" : "(xs: IterableOnce[V]): MutableSetCompat.this.type", "member" : "scala.collection.mutable.Shrinkable.subtractAll", "link" : "zio\/internal\/MutableSetCompat.html#subtractAll(xs:scala.collection.IterableOnce[A]):Shrinkable.this.type", "kind" : "def"}, {"label" : "-=", "tail" : "(elem1: V, elem2: V, elems: V*): MutableSetCompat.this.type", "member" : "scala.collection.mutable.Shrinkable.-=", "link" : "zio\/internal\/MutableSetCompat.html#-=(elem1:A,elem2:A,elems:A*):Shrinkable.this.type", "kind" : "def"}, {"label" : "-=", "tail" : "(elem: V): MutableSetCompat.this.type", "member" : "scala.collection.mutable.Shrinkable.-=", "link" : "zio\/internal\/MutableSetCompat.html#-=(elem:A):Shrinkable.this.type", "kind" : "final def"}, {"label" : "mapResult", "tail" : "(f: (Set[V]) => NewTo): Builder[V, NewTo]", "member" : "scala.collection.mutable.Builder.mapResult", "link" : "zio\/internal\/MutableSetCompat.html#mapResult[NewTo](f:To=>NewTo):scala.collection.mutable.Builder[A,NewTo]", "kind" : "def"}, {"label" : "sizeHintBounded", "tail" : "(size: Int, boundingColl: Iterable[_]): Unit", "member" : "scala.collection.mutable.Builder.sizeHintBounded", "link" : "zio\/internal\/MutableSetCompat.html#sizeHintBounded(size:Int,boundingColl:Iterable[_]):Unit", "kind" : "final def"}, {"label" : "sizeHint", "tail" : "(coll: IterableOnce[_], delta: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "zio\/internal\/MutableSetCompat.html#sizeHint(coll:scala.collection.IterableOnce[_],delta:Int):Unit", "kind" : "final def"}, {"label" : "sizeHint", "tail" : "(size: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "zio\/internal\/MutableSetCompat.html#sizeHint(size:Int):Unit", "kind" : "def"}, {"label" : "++=", "tail" : "(elems: IterableOnce[V]): MutableSetCompat.this.type", "member" : "scala.collection.mutable.Growable.++=", "link" : "zio\/internal\/MutableSetCompat.html#++=(elems:scala.collection.IterableOnce[A]):Growable.this.type", "kind" : "final def"}, {"label" : "addAll", "tail" : "(elems: IterableOnce[V]): MutableSetCompat.this.type", "member" : "scala.collection.mutable.Growable.addAll", "link" : "zio\/internal\/MutableSetCompat.html#addAll(elems:scala.collection.IterableOnce[A]):Growable.this.type", "kind" : "def"}, {"label" : "+=", "tail" : "(elem1: V, elem2: V, elems: V*): MutableSetCompat.this.type", "member" : "scala.collection.mutable.Growable.+=", "link" : "zio\/internal\/MutableSetCompat.html#+=(elem1:A,elem2:A,elems:A*):Growable.this.type", "kind" : "final def"}, {"label" : "+=", "tail" : "(elem: V): MutableSetCompat.this.type", "member" : "scala.collection.mutable.Growable.+=", "link" : "zio\/internal\/MutableSetCompat.html#+=(elem:A):Growable.this.type", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Set.toString", "link" : "zio\/internal\/MutableSetCompat.html#toString():String", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Set.stringPrefix", "link" : "zio\/internal\/MutableSetCompat.html#stringPrefix:String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.Set.hashCode", "link" : "zio\/internal\/MutableSetCompat.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.Set.equals", "link" : "zio\/internal\/MutableSetCompat.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.Set.canEqual", "link" : "zio\/internal\/MutableSetCompat.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "|", "tail" : "(that: Set[V]): Set[V]", "member" : "scala.collection.SetOps.|", "link" : "zio\/internal\/MutableSetCompat.html#|(that:scala.collection.Set[A]):C", "kind" : "final def"}, {"label" : "union", "tail" : "(that: Set[V]): Set[V]", "member" : "scala.collection.SetOps.union", "link" : "zio\/internal\/MutableSetCompat.html#union(that:scala.collection.Set[A]):C", "kind" : "final def"}, {"label" : "++", "tail" : "(that: IterableOnce[V]): Set[V]", "member" : "scala.collection.SetOps.++", "link" : "zio\/internal\/MutableSetCompat.html#++(that:scala.collection.IterableOnce[A]):C", "kind" : "final def"}, {"label" : "+", "tail" : "(elem1: V, elem2: V, elems: V*): Set[V]", "member" : "scala.collection.SetOps.+", "link" : "zio\/internal\/MutableSetCompat.html#+(elem1:A,elem2:A,elems:A*):C", "kind" : "def"}, {"label" : "+", "tail" : "(elem: V): Set[V]", "member" : "scala.collection.SetOps.+", "link" : "zio\/internal\/MutableSetCompat.html#+(elem:A):C", "kind" : "def"}, {"label" : "concat", "tail" : "(that: IterableOnce[V]): Set[V]", "member" : "scala.collection.SetOps.concat", "link" : "zio\/internal\/MutableSetCompat.html#concat(that:scala.collection.IterableOnce[A]):C", "kind" : "def"}, {"label" : "-", "tail" : "(elem1: V, elem2: V, elems: V*): Set[V]", "member" : "scala.collection.SetOps.-", "link" : "zio\/internal\/MutableSetCompat.html#-(elem1:A,elem2:A,elems:A*):C", "kind" : "def"}, {"label" : "-", "tail" : "(elem: V): Set[V]", "member" : "scala.collection.SetOps.-", "link" : "zio\/internal\/MutableSetCompat.html#-(elem:A):C", "kind" : "def"}, {"label" : "--", "tail" : "(that: IterableOnce[V]): Set[V]", "member" : "scala.collection.SetOps.--", "link" : "zio\/internal\/MutableSetCompat.html#--(that:scala.collection.IterableOnce[A]):C", "kind" : "def"}, {"label" : "&~", "tail" : "(that: Set[V]): Set[V]", "member" : "scala.collection.SetOps.&~", "link" : "zio\/internal\/MutableSetCompat.html#&~(that:scala.collection.Set[A]):C", "kind" : "final def"}, {"label" : "&", "tail" : "(that: Set[V]): Set[V]", "member" : "scala.collection.SetOps.&", "link" : "zio\/internal\/MutableSetCompat.html#&(that:scala.collection.Set[A]):C", "kind" : "final def"}, {"label" : "intersect", "tail" : "(that: Set[V]): Set[V]", "member" : "scala.collection.SetOps.intersect", "link" : "zio\/internal\/MutableSetCompat.html#intersect(that:scala.collection.Set[A]):C", "kind" : "def"}, {"label" : "subsets", "tail" : "(): Iterator[Set[V]]", "member" : "scala.collection.SetOps.subsets", "link" : "zio\/internal\/MutableSetCompat.html#subsets():Iterator[C]", "kind" : "def"}, {"label" : "subsets", "tail" : "(len: Int): Iterator[Set[V]]", "member" : "scala.collection.SetOps.subsets", "link" : "zio\/internal\/MutableSetCompat.html#subsets(len:Int):Iterator[C]", "kind" : "def"}, {"label" : "subsetOf", "tail" : "(that: Set[V]): Boolean", "member" : "scala.collection.SetOps.subsetOf", "link" : "zio\/internal\/MutableSetCompat.html#subsetOf(that:scala.collection.Set[A]):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(elem: V): Boolean", "member" : "scala.collection.SetOps.apply", "link" : "zio\/internal\/MutableSetCompat.html#apply(elem:A):Boolean", "kind" : "final def"}, {"label" : "andThen", "tail" : "(g: (Boolean) => A): (V) => A", "member" : "scala.Function1.andThen", "link" : "zio\/internal\/MutableSetCompat.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => V): (A) => Boolean", "member" : "scala.Function1.compose", "link" : "zio\/internal\/MutableSetCompat.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: Iterable[B]): LazyZip2[V, B, MutableSetCompat.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "zio\/internal\/MutableSetCompat.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "zio\/internal\/MutableSetCompat.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): MutableSetCompat.this.type", "member" : "scala.collection.Iterable.seq", "link" : "zio\/internal\/MutableSetCompat.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): MutableSetCompat.this.type", "member" : "scala.collection.Iterable.coll", "link" : "zio\/internal\/MutableSetCompat.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): MutableSetCompat.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "zio\/internal\/MutableSetCompat.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Set[V]", "member" : "scala.collection.IterableFactoryDefaults.empty", "link" : "zio\/internal\/MutableSetCompat.html#empty:CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[V, Set[V]]", "member" : "scala.collection.IterableFactoryDefaults.newSpecificBuilder", "link" : "zio\/internal\/MutableSetCompat.html#newSpecificBuilder:scala.collection.mutable.Builder[A@scala.annotation.unchecked.uncheckedVariance,CC[A@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: IterableOnce[V]): Set[V]", "member" : "scala.collection.IterableFactoryDefaults.fromSpecific", "link" : "zio\/internal\/MutableSetCompat.html#fromSpecific(coll:scala.collection.IterableOnce[A@scala.annotation.unchecked.uncheckedVariance]):CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "++:", "tail" : "(that: IterableOnce[B]): Set[B]", "member" : "scala.collection.IterableOps.++:", "link" : "zio\/internal\/MutableSetCompat.html#++:[B>:A](that:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (V) => U): Set[V]", "member" : "scala.collection.IterableOps.tapEach", "link" : "zio\/internal\/MutableSetCompat.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Set[V]]", "member" : "scala.collection.IterableOps.inits", "link" : "zio\/internal\/MutableSetCompat.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Set[V]]", "member" : "scala.collection.IterableOps.tails", "link" : "zio\/internal\/MutableSetCompat.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (V) => (A1, A2, A3)): (Set[A1], Set[A2], Set[A3])", "member" : "scala.collection.IterableOps.unzip3", "link" : "zio\/internal\/MutableSetCompat.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (V) => (A1, A2)): (Set[A1], Set[A2])", "member" : "scala.collection.IterableOps.unzip", "link" : "zio\/internal\/MutableSetCompat.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: Iterable[B], thisElem: A1, thatElem: B): Set[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "zio\/internal\/MutableSetCompat.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): Set[(V, Int)]", "member" : "scala.collection.IterableOps.zipWithIndex", "link" : "zio\/internal\/MutableSetCompat.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: IterableOnce[B]): Set[(V, B)]", "member" : "scala.collection.IterableOps.zip", "link" : "zio\/internal\/MutableSetCompat.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: IterableOnce[B]): Set[B]", "member" : "scala.collection.IterableOps.++", "link" : "zio\/internal\/MutableSetCompat.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: IterableOnce[B]): Set[B]", "member" : "scala.collection.IterableOps.concat", "link" : "zio\/internal\/MutableSetCompat.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (V) => Either[A1, A2]): (Set[A1], Set[A2])", "member" : "scala.collection.IterableOps.partitionMap", "link" : "zio\/internal\/MutableSetCompat.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[V, B]): Set[B]", "member" : "scala.collection.IterableOps.collect", "link" : "zio\/internal\/MutableSetCompat.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asIterable: (V) => IterableOnce[B]): Set[B]", "member" : "scala.collection.IterableOps.flatten", "link" : "zio\/internal\/MutableSetCompat.html#flatten[B](implicitasIterable:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (V) => IterableOnce[B]): Set[B]", "member" : "scala.collection.IterableOps.flatMap", "link" : "zio\/internal\/MutableSetCompat.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (V) => B): Set[B]", "member" : "scala.collection.IterableOps.map", "link" : "zio\/internal\/MutableSetCompat.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (V, B) => B): Set[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "zio\/internal\/MutableSetCompat.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, V) => B): Set[B]", "member" : "scala.collection.IterableOps.scanLeft", "link" : "zio\/internal\/MutableSetCompat.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): Set[B]", "member" : "scala.collection.IterableOps.scan", "link" : "zio\/internal\/MutableSetCompat.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (V) => K)(f: (V) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "zio\/internal\/MutableSetCompat.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (V) => K)(f: (V) => B): Map[K, Set[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "zio\/internal\/MutableSetCompat.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (V) => K): Map[K, Set[V]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "zio\/internal\/MutableSetCompat.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Set[V]", "member" : "scala.collection.IterableOps.slice", "link" : "zio\/internal\/MutableSetCompat.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): Set[V]", "member" : "scala.collection.IterableOps.init", "link" : "zio\/internal\/MutableSetCompat.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): Set[V]", "member" : "scala.collection.IterableOps.tail", "link" : "zio\/internal\/MutableSetCompat.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Set[V]]", "member" : "scala.collection.IterableOps.sliding", "link" : "zio\/internal\/MutableSetCompat.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Set[V]]", "member" : "scala.collection.IterableOps.sliding", "link" : "zio\/internal\/MutableSetCompat.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Set[V]]", "member" : "scala.collection.IterableOps.grouped", "link" : "zio\/internal\/MutableSetCompat.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (V) => Boolean): Set[V]", "member" : "scala.collection.IterableOps.dropWhile", "link" : "zio\/internal\/MutableSetCompat.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Set[V]", "member" : "scala.collection.IterableOps.dropRight", "link" : "zio\/internal\/MutableSetCompat.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Set[V]", "member" : "scala.collection.IterableOps.drop", "link" : "zio\/internal\/MutableSetCompat.html#drop(n:Int):C", "kind" : "def"}, {"label" : "span", "tail" : "(p: (V) => Boolean): (Set[V], Set[V])", "member" : "scala.collection.IterableOps.span", "link" : "zio\/internal\/MutableSetCompat.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (V) => Boolean): Set[V]", "member" : "scala.collection.IterableOps.takeWhile", "link" : "zio\/internal\/MutableSetCompat.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Set[V]", "member" : "scala.collection.IterableOps.takeRight", "link" : "zio\/internal\/MutableSetCompat.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Set[V]", "member" : "scala.collection.IterableOps.take", "link" : "zio\/internal\/MutableSetCompat.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Set[V], Set[V])", "member" : "scala.collection.IterableOps.splitAt", "link" : "zio\/internal\/MutableSetCompat.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (V) => Boolean): (Set[V], Set[V])", "member" : "scala.collection.IterableOps.partition", "link" : "zio\/internal\/MutableSetCompat.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (V) => Boolean): WithFilter[V, [_]Set[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "zio\/internal\/MutableSetCompat.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (V) => Boolean): Set[V]", "member" : "scala.collection.IterableOps.filterNot", "link" : "zio\/internal\/MutableSetCompat.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (V) => Boolean): Set[V]", "member" : "scala.collection.IterableOps.filter", "link" : "zio\/internal\/MutableSetCompat.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (V) => Iterable[B]): Set[Set[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "zio\/internal\/MutableSetCompat.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[V]", "member" : "scala.collection.IterableOps.view", "link" : "zio\/internal\/MutableSetCompat.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: Iterable[_]): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "zio\/internal\/MutableSetCompat.html#sizeCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "zio\/internal\/MutableSetCompat.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "zio\/internal\/MutableSetCompat.html#sizeCompare(otherSize:Int):Int", "kind" : "def"}, {"label" : "view", "tail" : "(): View[V]", "member" : "scala.collection.IterableOps.view", "link" : "zio\/internal\/MutableSetCompat.html#view:scala.collection.View[A]", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[V]", "member" : "scala.collection.IterableOps.lastOption", "link" : "zio\/internal\/MutableSetCompat.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): V", "member" : "scala.collection.IterableOps.last", "link" : "zio\/internal\/MutableSetCompat.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[V]", "member" : "scala.collection.IterableOps.headOption", "link" : "zio\/internal\/MutableSetCompat.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): V", "member" : "scala.collection.IterableOps.head", "link" : "zio\/internal\/MutableSetCompat.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]Set[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "zio\/internal\/MutableSetCompat.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): Set[V]", "member" : "scala.collection.IterableOps.repr", "link" : "zio\/internal\/MutableSetCompat.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "zio\/internal\/MutableSetCompat.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[V]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "zio\/internal\/MutableSetCompat.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iterable[V]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "zio\/internal\/MutableSetCompat.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "zio\/internal\/MutableSetCompat.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "zio\/internal\/MutableSetCompat.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): Stream[V]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "zio\/internal\/MutableSetCompat.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[V]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "zio\/internal\/MutableSetCompat.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[V]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "zio\/internal\/MutableSetCompat.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "zio\/internal\/MutableSetCompat.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[V, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "zio\/internal\/MutableSetCompat.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[V]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "zio\/internal\/MutableSetCompat.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[V]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "zio\/internal\/MutableSetCompat.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[V]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "zio\/internal\/MutableSetCompat.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[V, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "zio\/internal\/MutableSetCompat.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): b.type", "member" : "scala.collection.IterableOnceOps.addString", "link" : "zio\/internal\/MutableSetCompat.html#addString(b:StringBuilder):b.type", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): b.type", "member" : "scala.collection.IterableOnceOps.addString", "link" : "zio\/internal\/MutableSetCompat.html#addString(b:StringBuilder,sep:String):b.type", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): b.type", "member" : "scala.collection.IterableOnceOps.addString", "link" : "zio\/internal\/MutableSetCompat.html#addString(b:StringBuilder,start:String,sep:String,end:String):b.type", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "zio\/internal\/MutableSetCompat.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "zio\/internal\/MutableSetCompat.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "zio\/internal\/MutableSetCompat.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: IterableOnce[B])(p: (V, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "zio\/internal\/MutableSetCompat.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, V) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "zio\/internal\/MutableSetCompat.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[V, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "zio\/internal\/MutableSetCompat.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (V) => B)(ord: Ordering[B]): Option[V]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "zio\/internal\/MutableSetCompat.html#minByOption[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (V) => B)(ord: Ordering[B]): V", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "zio\/internal\/MutableSetCompat.html#minBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (V) => B)(ord: Ordering[B]): Option[V]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "zio\/internal\/MutableSetCompat.html#maxByOption[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (V) => B)(ord: Ordering[B]): V", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "zio\/internal\/MutableSetCompat.html#maxBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: Ordering[B]): Option[V]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "zio\/internal\/MutableSetCompat.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: Ordering[B]): V", "member" : "scala.collection.IterableOnceOps.max", "link" : "zio\/internal\/MutableSetCompat.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: Ordering[B]): Option[V]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "zio\/internal\/MutableSetCompat.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: Ordering[B]): V", "member" : "scala.collection.IterableOnceOps.min", "link" : "zio\/internal\/MutableSetCompat.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "zio\/internal\/MutableSetCompat.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "zio\/internal\/MutableSetCompat.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "zio\/internal\/MutableSetCompat.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "zio\/internal\/MutableSetCompat.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "zio\/internal\/MutableSetCompat.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "zio\/internal\/MutableSetCompat.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.IterableOnceOps.size", "link" : "zio\/internal\/MutableSetCompat.html#size:Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "zio\/internal\/MutableSetCompat.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.isEmpty", "link" : "zio\/internal\/MutableSetCompat.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (V, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "zio\/internal\/MutableSetCompat.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, V) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "zio\/internal\/MutableSetCompat.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (V, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "zio\/internal\/MutableSetCompat.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, V) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "zio\/internal\/MutableSetCompat.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "zio\/internal\/MutableSetCompat.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "zio\/internal\/MutableSetCompat.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "zio\/internal\/MutableSetCompat.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (V, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "zio\/internal\/MutableSetCompat.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, V) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "zio\/internal\/MutableSetCompat.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (V, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "zio\/internal\/MutableSetCompat.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, V) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "zio\/internal\/MutableSetCompat.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (V) => Boolean): Option[V]", "member" : "scala.collection.IterableOnceOps.find", "link" : "zio\/internal\/MutableSetCompat.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (V) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "zio\/internal\/MutableSetCompat.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (V) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "zio\/internal\/MutableSetCompat.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (V) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "zio\/internal\/MutableSetCompat.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (V) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "zio\/internal\/MutableSetCompat.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "zio\/internal\/MutableSetCompat.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[V, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "zio\/internal\/MutableSetCompat.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/internal\/MutableSetCompat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/internal\/MutableSetCompat.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/internal\/MutableSetCompat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/internal\/MutableSetCompat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/internal\/MutableSetCompat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/internal\/MutableSetCompat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/internal\/MutableSetCompat.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/internal\/MutableSetCompat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/internal\/MutableSetCompat.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/internal\/MutableSetCompat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/MutableSetCompat.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/MutableSetCompat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/MutableSetCompat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/internal\/MutableSetCompat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/internal\/MutableSetCompat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "scala.collection.mutable.Builder.clear", "link" : "zio\/internal\/MutableSetCompat.html#clear():Unit", "kind" : "abstract def"}, {"label" : "contains", "tail" : "(elem: V): Boolean", "member" : "scala.collection.SetOps.contains", "link" : "zio\/internal\/MutableSetCompat.html#contains(elem:A):Boolean", "kind" : "abstract def"}, {"label" : "iterator", "tail" : "(): Iterator[V]", "member" : "scala.collection.IterableOnce.iterator", "link" : "zio\/internal\/MutableSetCompat.html#iterator:Iterator[A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.internal.Platform", "shortDescription" : "", "object" : "zio\/internal\/Platform$.html", "members_object" : [{"label" : "newWeakReference", "tail" : "(value: A)(unsafe: Unsafe): () => A", "member" : "zio.internal.PlatformSpecific.newWeakReference", "link" : "zio\/internal\/Platform$.html#newWeakReference[A](value:A)(implicitunsafe:zio.Unsafe):()=>A", "kind" : "final def"}, {"label" : "newConcurrentSet", "tail" : "(initialCapacity: Int)(unsafe: Unsafe): Set[A]", "member" : "zio.internal.PlatformSpecific.newConcurrentSet", "link" : "zio\/internal\/Platform$.html#newConcurrentSet[A](initialCapacity:Int)(implicitunsafe:zio.Unsafe):java.util.Set[A]", "kind" : "final def"}, {"label" : "newConcurrentSet", "tail" : "()(unsafe: Unsafe): Set[A]", "member" : "zio.internal.PlatformSpecific.newConcurrentSet", "link" : "zio\/internal\/Platform$.html#newConcurrentSet[A]()(implicitunsafe:zio.Unsafe):java.util.Set[A]", "kind" : "final def"}, {"label" : "newWeakSet", "tail" : "()(unsafe: Unsafe): Set[A]", "member" : "zio.internal.PlatformSpecific.newWeakSet", "link" : "zio\/internal\/Platform$.html#newWeakSet[A]()(implicitunsafe:zio.Unsafe):java.util.Set[A]", "kind" : "final def"}, {"label" : "newConcurrentWeakSet", "tail" : "()(unsafe: Unsafe): Set[A]", "member" : "zio.internal.PlatformSpecific.newConcurrentWeakSet", "link" : "zio\/internal\/Platform$.html#newConcurrentWeakSet[A]()(implicitunsafe:zio.Unsafe):java.util.Set[A]", "kind" : "final def"}, {"label" : "newConcurrentMap", "tail" : "()(unsafe: Unsafe): Map[A, B]", "member" : "zio.internal.PlatformSpecific.newConcurrentMap", "link" : "zio\/internal\/Platform$.html#newConcurrentMap[A,B]()(implicitunsafe:zio.Unsafe):java.util.Map[A,B]", "kind" : "final def"}, {"label" : "newWeakHashMap", "tail" : "()(unsafe: Unsafe): Map[A, B]", "member" : "zio.internal.PlatformSpecific.newWeakHashMap", "link" : "zio\/internal\/Platform$.html#newWeakHashMap[A,B]()(implicitunsafe:zio.Unsafe):java.util.Map[A,B]", "kind" : "final def"}, {"label" : "isNative", "tail" : ": Boolean(false)", "member" : "zio.internal.PlatformSpecific.isNative", "link" : "zio\/internal\/Platform$.html#isNative:Boolean(false)", "kind" : "final val"}, {"label" : "isJVM", "tail" : ": Boolean(true)", "member" : "zio.internal.PlatformSpecific.isJVM", "link" : "zio\/internal\/Platform$.html#isJVM:Boolean(true)", "kind" : "final val"}, {"label" : "isJS", "tail" : ": Boolean(false)", "member" : "zio.internal.PlatformSpecific.isJS", "link" : "zio\/internal\/Platform$.html#isJS:Boolean(false)", "kind" : "final val"}, {"label" : "hasGreenThreads", "tail" : ": Boolean", "member" : "zio.internal.PlatformSpecific.hasGreenThreads", "link" : "zio\/internal\/Platform$.html#hasGreenThreads:Boolean", "kind" : "final val"}, {"label" : "getCurrentThreadGroup", "tail" : "()(unsafe: Unsafe): String", "member" : "zio.internal.PlatformSpecific.getCurrentThreadGroup", "link" : "zio\/internal\/Platform$.html#getCurrentThreadGroup()(implicitunsafe:zio.Unsafe):String", "kind" : "final def"}, {"label" : "exit", "tail" : "(code: Int)(unsafe: Unsafe): Unit", "member" : "zio.internal.PlatformSpecific.exit", "link" : "zio\/internal\/Platform$.html#exit(code:Int)(implicitunsafe:zio.Unsafe):Unit", "kind" : "final def"}, {"label" : "addSignalHandler", "tail" : "(signal: String, action: () => Unit)(unsafe: Unsafe): Unit", "member" : "zio.internal.PlatformSpecific.addSignalHandler", "link" : "zio\/internal\/Platform$.html#addSignalHandler(signal:String,action:()=>Unit)(implicitunsafe:zio.Unsafe):Unit", "kind" : "final def"}, {"label" : "addShutdownHook", "tail" : "(action: () => Unit)(unsafe: Unsafe): Unit", "member" : "zio.internal.PlatformSpecific.addShutdownHook", "link" : "zio\/internal\/Platform$.html#addShutdownHook(action:()=>Unit)(implicitunsafe:zio.Unsafe):Unit", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/internal\/Platform$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/internal\/Platform$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/internal\/Platform$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/internal\/Platform$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/internal\/Platform$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/internal\/Platform$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/internal\/Platform$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/internal\/Platform$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/internal\/Platform$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/internal\/Platform$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/internal\/Platform$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/internal\/Platform$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/Platform$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/Platform$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/internal\/Platform$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/internal\/Platform$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/internal\/Platform$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/internal\/Platform$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/internal\/Platform$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "zio.test" : [{"name" : "zio.test.Annotations", "object" : "zio\/test\/Annotations$.html", "members_object" : [{"label" : "withAnnotation", "tail" : "(zio: ZIO[R, TestFailure[E], TestSuccess])(trace: Trace): ZIO[R, TestFailure[E], TestSuccess]", "member" : "zio.test.Annotations.withAnnotation", "link" : "zio\/test\/Annotations$.html#withAnnotation[R,E](zio:zio.ZIO[R,zio.test.TestFailure[E],zio.test.TestSuccess])(implicittrace:zio.Trace):zio.ZIO[R,zio.test.TestFailure[E],zio.test.TestSuccess]", "kind" : "def"}, {"label" : "live", "tail" : ": ULayer[Annotations]", "member" : "zio.test.Annotations.live", "link" : "zio\/test\/Annotations$.html#live:zio.ULayer[zio.test.Annotations]", "kind" : "val"}, {"label" : "supervisedFibers", "tail" : "(trace: Trace): UIO[SortedSet[Fiber.Runtime[Any, Any]]]", "member" : "zio.test.Annotations.supervisedFibers", "link" : "zio\/test\/Annotations$.html#supervisedFibers(implicittrace:zio.Trace):zio.UIO[scala.collection.immutable.SortedSet[zio.Fiber.Runtime[Any,Any]]]", "kind" : "def"}, {"label" : "get", "tail" : "(key: TestAnnotation[V])(trace: Trace): UIO[V]", "member" : "zio.test.Annotations.get", "link" : "zio\/test\/Annotations$.html#get[V](key:zio.test.TestAnnotation[V])(implicittrace:zio.Trace):zio.UIO[V]", "kind" : "def"}, {"label" : "annotate", "tail" : "(key: TestAnnotation[V], value: V)(trace: Trace): UIO[Unit]", "member" : "zio.test.Annotations.annotate", "link" : "zio\/test\/Annotations$.html#annotate[V](key:zio.test.TestAnnotation[V],value:V)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "Test", "tail" : "", "member" : "zio.test.Annotations.Test", "link" : "zio\/test\/Annotations$.html#TestextendsAnnotationswithProductwithSerializable", "kind" : "final case class"}, {"label" : "tag", "tail" : ": Tag[Annotations]", "member" : "zio.test.Annotations.tag", "link" : "zio\/test\/Annotations$.html#tag:zio.Tag[zio.test.Annotations]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/Annotations$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/Annotations$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/Annotations$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/Annotations$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/Annotations$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/Annotations$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/Annotations$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/Annotations$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/Annotations$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/Annotations$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/Annotations$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/Annotations$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Annotations$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Annotations$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Annotations$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/Annotations$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/Annotations$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/Annotations$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/Annotations$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/Annotations.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/Annotations.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/Annotations.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/Annotations.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/Annotations.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/Annotations.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/Annotations.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/Annotations.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/Annotations.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/Annotations.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/Annotations.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/Annotations.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/Annotations.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Annotations.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Annotations.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Annotations.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/Annotations.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/Annotations.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/Annotations.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/Annotations.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "supervisedFibers", "tail" : "(trace: Trace): UIO[SortedSet[Fiber.Runtime[Any, Any]]]", "member" : "zio.test.Annotations.supervisedFibers", "link" : "zio\/test\/Annotations.html#supervisedFibers(implicittrace:zio.Trace):zio.UIO[scala.collection.immutable.SortedSet[zio.Fiber.Runtime[Any,Any]]]", "kind" : "abstract def"}, {"label" : "withAnnotation", "tail" : "(zio: ZIO[R, TestFailure[E], TestSuccess])(trace: Trace): ZIO[R, TestFailure[E], TestSuccess]", "member" : "zio.test.Annotations.withAnnotation", "link" : "zio\/test\/Annotations.html#withAnnotation[R,E](zio:zio.ZIO[R,zio.test.TestFailure[E],zio.test.TestSuccess])(implicittrace:zio.Trace):zio.ZIO[R,zio.test.TestFailure[E],zio.test.TestSuccess]", "kind" : "abstract def"}, {"label" : "get", "tail" : "(key: TestAnnotation[V])(trace: Trace): UIO[V]", "member" : "zio.test.Annotations.get", "link" : "zio\/test\/Annotations.html#get[V](key:zio.test.TestAnnotation[V])(implicittrace:zio.Trace):zio.UIO[V]", "kind" : "abstract def"}, {"label" : "annotate", "tail" : "(key: TestAnnotation[V], value: V)(trace: Trace): UIO[Unit]", "member" : "zio.test.Annotations.annotate", "link" : "zio\/test\/Annotations.html#annotate[V](key:zio.test.TestAnnotation[V],value:V)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}], "shortDescription" : "The Annotations trait provides access to an annotation map that tests canadd arbitrary annotations to."}, {"name" : "zio.test.Assertion", "shortDescription" : "", "object" : "zio\/test\/Assertion$.html", "members_object" : [{"label" : "Arguments", "tail" : "", "member" : "zio.test.Assertion.Arguments", "link" : "zio\/test\/Assertion$.html#Arguments", "kind" : "object"}, {"label" : "Arguments", "tail" : "", "member" : "zio.test.Assertion.Arguments", "link" : "zio\/test\/Assertion$.html#ArgumentsextendsAnyRef", "kind" : "sealed trait"}, {"label" : "isJustInterrupted", "tail" : "(): Assertion[Exit[Any, Any]]", "member" : "zio.test.Assertion.isJustInterrupted", "link" : "zio\/test\/Assertion$.html#isJustInterrupted:zio.test.Assertion[zio.Exit[Any,Any]]", "kind" : "def"}, {"label" : "isInterrupted", "tail" : "(): Assertion[Exit[Any, Any]]", "member" : "zio.test.Assertion.isInterrupted", "link" : "zio\/test\/Assertion$.html#isInterrupted:zio.test.Assertion[zio.Exit[Any,Any]]", "kind" : "def"}, {"label" : "throwsA", "tail" : "(arg0: ClassTag[E]): Assertion[Any]", "member" : "zio.test.Assertion.throwsA", "link" : "zio\/test\/Assertion$.html#throwsA[E](implicitevidence$4:scala.reflect.ClassTag[E]):zio.test.Assertion[Any]", "kind" : "def"}, {"label" : "throws", "tail" : "(assertion: Assertion[Throwable]): Assertion[A]", "member" : "zio.test.Assertion.throws", "link" : "zio\/test\/Assertion$.html#throws[A](assertion:zio.test.Assertion[Throwable]):zio.test.Assertion[A]", "kind" : "def"}, {"label" : "succeeds", "tail" : "(assertion: Assertion[A]): Assertion[Exit[Any, A]]", "member" : "zio.test.Assertion.succeeds", "link" : "zio\/test\/Assertion$.html#succeeds[A](assertion:zio.test.Assertion[A]):zio.test.Assertion[zio.Exit[Any,A]]", "kind" : "def"}, {"label" : "startsWithString", "tail" : "(prefix: String): Assertion[String]", "member" : "zio.test.Assertion.startsWithString", "link" : "zio\/test\/Assertion$.html#startsWithString(prefix:String):zio.test.Assertion[String]", "kind" : "def"}, {"label" : "startsWith", "tail" : "(prefix: Seq[A]): Assertion[Seq[A]]", "member" : "zio.test.Assertion.startsWith", "link" : "zio\/test\/Assertion$.html#startsWith[A](prefix:Seq[A]):zio.test.Assertion[Seq[A]]", "kind" : "def"}, {"label" : "nothing", "tail" : ": Assertion[Any]", "member" : "zio.test.Assertion.nothing", "link" : "zio\/test\/Assertion$.html#nothing:zio.test.Assertion[Any]", "kind" : "val"}, {"label" : "not", "tail" : "(assertion: Assertion[A]): Assertion[A]", "member" : "zio.test.Assertion.not", "link" : "zio\/test\/Assertion$.html#not[A](assertion:zio.test.Assertion[A]):zio.test.Assertion[A]", "kind" : "def"}, {"label" : "nonPositive", "tail" : "(num: Numeric[A]): Assertion[A]", "member" : "zio.test.Assertion.nonPositive", "link" : "zio\/test\/Assertion$.html#nonPositive[A](implicitnum:Numeric[A]):zio.test.Assertion[A]", "kind" : "def"}, {"label" : "nonNegative", "tail" : "(num: Numeric[A]): Assertion[A]", "member" : "zio.test.Assertion.nonNegative", "link" : "zio\/test\/Assertion$.html#nonNegative[A](implicitnum:Numeric[A]):zio.test.Assertion[A]", "kind" : "def"}, {"label" : "matchesRegex", "tail" : "(regex: String): Assertion[String]", "member" : "zio.test.Assertion.matchesRegex", "link" : "zio\/test\/Assertion$.html#matchesRegex(regex:String):zio.test.Assertion[String]", "kind" : "def"}, {"label" : "isZero", "tail" : "(num: Numeric[A]): Assertion[A]", "member" : "zio.test.Assertion.isZero", "link" : "zio\/test\/Assertion$.html#isZero[A](implicitnum:Numeric[A]):zio.test.Assertion[A]", "kind" : "def"}, {"label" : "isNull", "tail" : ": Assertion[Any]", "member" : "zio.test.Assertion.isNull", "link" : "zio\/test\/Assertion$.html#isNull:zio.test.Assertion[Any]", "kind" : "val"}, {"label" : "isNonEmptyString", "tail" : ": Assertion[String]", "member" : "zio.test.Assertion.isNonEmptyString", "link" : "zio\/test\/Assertion$.html#isNonEmptyString:zio.test.Assertion[String]", "kind" : "val"}, {"label" : "isDistinct", "tail" : ": Assertion[Iterable[Any]]", "member" : "zio.test.Assertion.isDistinct", "link" : "zio\/test\/Assertion$.html#isDistinct:zio.test.Assertion[Iterable[Any]]", "kind" : "val"}, {"label" : "isCase", "tail" : "(termName: String, term: (Sum) => Option[Proj], assertion: Assertion[Proj]): Assertion[Sum]", "member" : "zio.test.Assertion.isCase", "link" : "zio\/test\/Assertion$.html#isCase[Sum,Proj](termName:String,term:Sum=>Option[Proj],assertion:zio.test.Assertion[Proj]):zio.test.Assertion[Sum]", "kind" : "def"}, {"label" : "hasValues", "tail" : "(assertion: Assertion[Iterable[V]]): Assertion[Map[K, V]]", "member" : "zio.test.Assertion.hasValues", "link" : "zio\/test\/Assertion$.html#hasValues[K,V](assertion:zio.test.Assertion[Iterable[V]]):zio.test.Assertion[Map[K,V]]", "kind" : "def"}, {"label" : "hasSubset", "tail" : "(other: Iterable[A]): Assertion[Iterable[A]]", "member" : "zio.test.Assertion.hasSubset", "link" : "zio\/test\/Assertion$.html#hasSubset[A](other:Iterable[A]):zio.test.Assertion[Iterable[A]]", "kind" : "def"}, {"label" : "hasSameElements", "tail" : "(other: Iterable[A]): Assertion[Iterable[A]]", "member" : "zio.test.Assertion.hasSameElements", "link" : "zio\/test\/Assertion$.html#hasSameElements[A](other:Iterable[A]):zio.test.Assertion[Iterable[A]]", "kind" : "def"}, {"label" : "hasOneOf", "tail" : "(other: Iterable[A]): Assertion[Iterable[A]]", "member" : "zio.test.Assertion.hasOneOf", "link" : "zio\/test\/Assertion$.html#hasOneOf[A](other:Iterable[A]):zio.test.Assertion[Iterable[A]]", "kind" : "def"}, {"label" : "hasNoneOf", "tail" : "(other: Iterable[A]): Assertion[Iterable[A]]", "member" : "zio.test.Assertion.hasNoneOf", "link" : "zio\/test\/Assertion$.html#hasNoneOf[A](other:Iterable[A]):zio.test.Assertion[Iterable[A]]", "kind" : "def"}, {"label" : "hasKeys", "tail" : "(assertion: Assertion[Iterable[K]]): Assertion[Map[K, V]]", "member" : "zio.test.Assertion.hasKeys", "link" : "zio\/test\/Assertion$.html#hasKeys[K,V](assertion:zio.test.Assertion[Iterable[K]]):zio.test.Assertion[Map[K,V]]", "kind" : "def"}, {"label" : "hasKey", "tail" : "(key: K): Assertion[Map[K, V]]", "member" : "zio.test.Assertion.hasKey", "link" : "zio\/test\/Assertion$.html#hasKey[K,V](key:K):zio.test.Assertion[Map[K,V]]", "kind" : "def"}, {"label" : "hasKey", "tail" : "(key: K, assertion: Assertion[V]): Assertion[Map[K, V]]", "member" : "zio.test.Assertion.hasKey", "link" : "zio\/test\/Assertion$.html#hasKey[K,V](key:K,assertion:zio.test.Assertion[V]):zio.test.Assertion[Map[K,V]]", "kind" : "def"}, {"label" : "isEmptyString", "tail" : ": Assertion[String]", "member" : "zio.test.Assertion.isEmptyString", "link" : "zio\/test\/Assertion$.html#isEmptyString:zio.test.Assertion[String]", "kind" : "val"}, {"label" : "isEmpty", "tail" : ": Assertion[Iterable[Any]]", "member" : "zio.test.Assertion.isEmpty", "link" : "zio\/test\/Assertion$.html#isEmpty:zio.test.Assertion[Iterable[Any]]", "kind" : "val"}, {"label" : "hasLast", "tail" : "(assertion: Assertion[A]): Assertion[Iterable[A]]", "member" : "zio.test.Assertion.hasLast", "link" : "zio\/test\/Assertion$.html#hasLast[A](assertion:zio.test.Assertion[A]):zio.test.Assertion[Iterable[A]]", "kind" : "def"}, {"label" : "hasFirst", "tail" : "(assertion: Assertion[A]): Assertion[Iterable[A]]", "member" : "zio.test.Assertion.hasFirst", "link" : "zio\/test\/Assertion$.html#hasFirst[A](assertion:zio.test.Assertion[A]):zio.test.Assertion[Iterable[A]]", "kind" : "def"}, {"label" : "hasAtMostOneOf", "tail" : "(other: Iterable[A]): Assertion[Iterable[A]]", "member" : "zio.test.Assertion.hasAtMostOneOf", "link" : "zio\/test\/Assertion$.html#hasAtMostOneOf[A](other:Iterable[A]):zio.test.Assertion[Iterable[A]]", "kind" : "def"}, {"label" : "hasAtLeastOneOf", "tail" : "(other: Iterable[A]): Assertion[Iterable[A]]", "member" : "zio.test.Assertion.hasAtLeastOneOf", "link" : "zio\/test\/Assertion$.html#hasAtLeastOneOf[A](other:Iterable[A]):zio.test.Assertion[Iterable[A]]", "kind" : "def"}, {"label" : "hasIntersection", "tail" : "(other: Iterable[A])(assertion: Assertion[Iterable[A]]): Assertion[Iterable[A]]", "member" : "zio.test.Assertion.hasIntersection", "link" : "zio\/test\/Assertion$.html#hasIntersection[A](other:Iterable[A])(assertion:zio.test.Assertion[Iterable[A]]):zio.test.Assertion[Iterable[A]]", "kind" : "def"}, {"label" : "hasSizeString", "tail" : "(assertion: Assertion[Int]): Assertion[String]", "member" : "zio.test.Assertion.hasSizeString", "link" : "zio\/test\/Assertion$.html#hasSizeString(assertion:zio.test.Assertion[Int]):zio.test.Assertion[String]", "kind" : "def"}, {"label" : "hasSize", "tail" : "(assertion: Assertion[Int]): Assertion[Iterable[A]]", "member" : "zio.test.Assertion.hasSize", "link" : "zio\/test\/Assertion$.html#hasSize[A](assertion:zio.test.Assertion[Int]):zio.test.Assertion[Iterable[A]]", "kind" : "def"}, {"label" : "hasSameElementsDistinct", "tail" : "(other: Iterable[A]): Assertion[Iterable[A]]", "member" : "zio.test.Assertion.hasSameElementsDistinct", "link" : "zio\/test\/Assertion$.html#hasSameElementsDistinct[A](other:Iterable[A]):zio.test.Assertion[Iterable[A]]", "kind" : "def"}, {"label" : "forall", "tail" : "(assertion: Assertion[A]): Assertion[Iterable[A]]", "member" : "zio.test.Assertion.forall", "link" : "zio\/test\/Assertion$.html#forall[A](assertion:zio.test.Assertion[A]):zio.test.Assertion[Iterable[A]]", "kind" : "def"}, {"label" : "failsCause", "tail" : "(assertion: Assertion[Cause[E]]): Assertion[Exit[E, Any]]", "member" : "zio.test.Assertion.failsCause", "link" : "zio\/test\/Assertion$.html#failsCause[E](assertion:zio.test.Assertion[zio.Cause[E]]):zio.test.Assertion[zio.Exit[E,Any]]", "kind" : "def"}, {"label" : "failsWithA", "tail" : "(arg0: ClassTag[E]): Assertion[Exit[Any, Any]]", "member" : "zio.test.Assertion.failsWithA", "link" : "zio\/test\/Assertion$.html#failsWithA[E](implicitevidence$3:scala.reflect.ClassTag[E]):zio.test.Assertion[zio.Exit[Any,Any]]", "kind" : "def"}, {"label" : "fails", "tail" : "(assertion: Assertion[E]): Assertion[Exit[E, Any]]", "member" : "zio.test.Assertion.fails", "link" : "zio\/test\/Assertion$.html#fails[E](assertion:zio.test.Assertion[E]):zio.test.Assertion[zio.Exit[E,Any]]", "kind" : "def"}, {"label" : "isWithin", "tail" : "(min: A, max: A)(ord: Ordering[A]): Assertion[A]", "member" : "zio.test.Assertion.isWithin", "link" : "zio\/test\/Assertion$.html#isWithin[A](min:A,max:A)(implicitord:Ordering[A]):zio.test.Assertion[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(assertion: Assertion[A]): Assertion[Iterable[A]]", "member" : "zio.test.Assertion.exists", "link" : "zio\/test\/Assertion$.html#exists[A](assertion:zio.test.Assertion[A]):zio.test.Assertion[Iterable[A]]", "kind" : "def"}, {"label" : "isPositive", "tail" : "(num: Numeric[A]): Assertion[A]", "member" : "zio.test.Assertion.isPositive", "link" : "zio\/test\/Assertion$.html#isPositive[A](implicitnum:Numeric[A]):zio.test.Assertion[A]", "kind" : "def"}, {"label" : "isNegative", "tail" : "(num: Numeric[A]): Assertion[A]", "member" : "zio.test.Assertion.isNegative", "link" : "zio\/test\/Assertion$.html#isNegative[A](implicitnum:Numeric[A]):zio.test.Assertion[A]", "kind" : "def"}, {"label" : "isGreaterThanEqualTo", "tail" : "(reference: A)(ord: Ordering[A]): Assertion[A]", "member" : "zio.test.Assertion.isGreaterThanEqualTo", "link" : "zio\/test\/Assertion$.html#isGreaterThanEqualTo[A](reference:A)(implicitord:Ordering[A]):zio.test.Assertion[A]", "kind" : "def"}, {"label" : "isGreaterThan", "tail" : "(reference: A)(ord: Ordering[A]): Assertion[A]", "member" : "zio.test.Assertion.isGreaterThan", "link" : "zio\/test\/Assertion$.html#isGreaterThan[A](reference:A)(implicitord:Ordering[A]):zio.test.Assertion[A]", "kind" : "def"}, {"label" : "isLessThanEqualTo", "tail" : "(reference: A)(ord: Ordering[A]): Assertion[A]", "member" : "zio.test.Assertion.isLessThanEqualTo", "link" : "zio\/test\/Assertion$.html#isLessThanEqualTo[A](reference:A)(implicitord:Ordering[A]):zio.test.Assertion[A]", "kind" : "def"}, {"label" : "isLessThan", "tail" : "(reference: A)(ord: Ordering[A]): Assertion[A]", "member" : "zio.test.Assertion.isLessThan", "link" : "zio\/test\/Assertion$.html#isLessThan[A](reference:A)(implicitord:Ordering[A]):zio.test.Assertion[A]", "kind" : "def"}, {"label" : "isUnit", "tail" : ": Assertion[Unit]", "member" : "zio.test.Assertion.isUnit", "link" : "zio\/test\/Assertion$.html#isUnit:zio.test.Assertion[Unit]", "kind" : "val"}, {"label" : "isNonEmpty", "tail" : ": Assertion[Iterable[Any]]", "member" : "zio.test.Assertion.isNonEmpty", "link" : "zio\/test\/Assertion$.html#isNonEmpty:zio.test.Assertion[Iterable[Any]]", "kind" : "val"}, {"label" : "isNone", "tail" : ": Assertion[Option[Any]]", "member" : "zio.test.Assertion.isNone", "link" : "zio\/test\/Assertion$.html#isNone:zio.test.Assertion[Option[Any]]", "kind" : "val"}, {"label" : "hasThrowableCause", "tail" : "(cause: Assertion[Throwable]): Assertion[Throwable]", "member" : "zio.test.Assertion.hasThrowableCause", "link" : "zio\/test\/Assertion$.html#hasThrowableCause(cause:zio.test.Assertion[Throwable]):zio.test.Assertion[Throwable]", "kind" : "def"}, {"label" : "hasSuppressed", "tail" : "(cause: Assertion[Iterable[Throwable]]): Assertion[Throwable]", "member" : "zio.test.Assertion.hasSuppressed", "link" : "zio\/test\/Assertion$.html#hasSuppressed(cause:zio.test.Assertion[Iterable[Throwable]]):zio.test.Assertion[Throwable]", "kind" : "def"}, {"label" : "hasMessage", "tail" : "(message: Assertion[String]): Assertion[Throwable]", "member" : "zio.test.Assertion.hasMessage", "link" : "zio\/test\/Assertion$.html#hasMessage(message:zio.test.Assertion[String]):zio.test.Assertion[Throwable]", "kind" : "def"}, {"label" : "isOneOf", "tail" : "(values: Iterable[A]): Assertion[A]", "member" : "zio.test.Assertion.isOneOf", "link" : "zio\/test\/Assertion$.html#isOneOf[A](values:Iterable[A]):zio.test.Assertion[A]", "kind" : "def"}, {"label" : "isSuccess", "tail" : ": Assertion[Try[Any]]", "member" : "zio.test.Assertion.isSuccess", "link" : "zio\/test\/Assertion$.html#isSuccess:zio.test.Assertion[scala.util.Try[Any]]", "kind" : "val"}, {"label" : "isSuccess", "tail" : "(assertion: Assertion[A]): Assertion[Try[A]]", "member" : "zio.test.Assertion.isSuccess", "link" : "zio\/test\/Assertion$.html#isSuccess[A](assertion:zio.test.Assertion[A]):zio.test.Assertion[scala.util.Try[A]]", "kind" : "def"}, {"label" : "isFailure", "tail" : ": Assertion[Try[Any]]", "member" : "zio.test.Assertion.isFailure", "link" : "zio\/test\/Assertion$.html#isFailure:zio.test.Assertion[scala.util.Try[Any]]", "kind" : "val"}, {"label" : "isFailure", "tail" : "(assertion: Assertion[Throwable]): Assertion[Try[Any]]", "member" : "zio.test.Assertion.isFailure", "link" : "zio\/test\/Assertion$.html#isFailure(assertion:zio.test.Assertion[Throwable]):zio.test.Assertion[scala.util.Try[Any]]", "kind" : "def"}, {"label" : "isFalse", "tail" : "(): Assertion[Boolean]", "member" : "zio.test.Assertion.isFalse", "link" : "zio\/test\/Assertion$.html#isFalse:zio.test.Assertion[Boolean]", "kind" : "def"}, {"label" : "isTrue", "tail" : "(): Assertion[Boolean]", "member" : "zio.test.Assertion.isTrue", "link" : "zio\/test\/Assertion$.html#isTrue:zio.test.Assertion[Boolean]", "kind" : "def"}, {"label" : "isSubtype", "tail" : "(assertion: Assertion[A])(C: ClassTag[A]): Assertion[Any]", "member" : "zio.test.Assertion.isSubtype", "link" : "zio\/test\/Assertion$.html#isSubtype[A](assertion:zio.test.Assertion[A])(implicitC:scala.reflect.ClassTag[A]):zio.test.Assertion[Any]", "kind" : "def"}, {"label" : "isSortedReverse", "tail" : "(ord: Ordering[A]): Assertion[Iterable[A]]", "member" : "zio.test.Assertion.isSortedReverse", "link" : "zio\/test\/Assertion$.html#isSortedReverse[A](implicitord:Ordering[A]):zio.test.Assertion[Iterable[A]]", "kind" : "def"}, {"label" : "isSorted", "tail" : "(ord: Ordering[A]): Assertion[Iterable[A]]", "member" : "zio.test.Assertion.isSorted", "link" : "zio\/test\/Assertion$.html#isSorted[A](implicitord:Ordering[A]):zio.test.Assertion[Iterable[A]]", "kind" : "def"}, {"label" : "isSome", "tail" : ": Assertion[Option[Any]]", "member" : "zio.test.Assertion.isSome", "link" : "zio\/test\/Assertion$.html#isSome:zio.test.Assertion[Option[Any]]", "kind" : "val"}, {"label" : "isSome", "tail" : "(assertion: Assertion[A]): Assertion[Option[A]]", "member" : "zio.test.Assertion.isSome", "link" : "zio\/test\/Assertion$.html#isSome[A](assertion:zio.test.Assertion[A]):zio.test.Assertion[Option[A]]", "kind" : "def"}, {"label" : "isLeft", "tail" : ": Assertion[Either[Any, Any]]", "member" : "zio.test.Assertion.isLeft", "link" : "zio\/test\/Assertion$.html#isLeft:zio.test.Assertion[Either[Any,Any]]", "kind" : "val"}, {"label" : "isRight", "tail" : ": Assertion[Either[Any, Any]]", "member" : "zio.test.Assertion.isRight", "link" : "zio\/test\/Assertion$.html#isRight:zio.test.Assertion[Either[Any,Any]]", "kind" : "val"}, {"label" : "isRight", "tail" : "(assertion: Assertion[A]): Assertion[Either[Any, A]]", "member" : "zio.test.Assertion.isRight", "link" : "zio\/test\/Assertion$.html#isRight[A](assertion:zio.test.Assertion[A]):zio.test.Assertion[Either[Any,A]]", "kind" : "def"}, {"label" : "isLeft", "tail" : "(assertion: Assertion[A]): Assertion[Either[A, Any]]", "member" : "zio.test.Assertion.isLeft", "link" : "zio\/test\/Assertion$.html#isLeft[A](assertion:zio.test.Assertion[A]):zio.test.Assertion[Either[A,Any]]", "kind" : "def"}, {"label" : "hasField", "tail" : "(name: String, proj: (A) => B, assertion: Assertion[B]): Assertion[A]", "member" : "zio.test.Assertion.hasField", "link" : "zio\/test\/Assertion$.html#hasField[A,B](name:String,proj:A=>B,assertion:zio.test.Assertion[B]):zio.test.Assertion[A]", "kind" : "def"}, {"label" : "equalsIgnoreCase", "tail" : "(other: String): Assertion[String]", "member" : "zio.test.Assertion.equalsIgnoreCase", "link" : "zio\/test\/Assertion$.html#equalsIgnoreCase(other:String):zio.test.Assertion[String]", "kind" : "def"}, {"label" : "endsWithString", "tail" : "(suffix: String): Assertion[String]", "member" : "zio.test.Assertion.endsWithString", "link" : "zio\/test\/Assertion$.html#endsWithString(suffix:String):zio.test.Assertion[String]", "kind" : "def"}, {"label" : "endsWith", "tail" : "(suffix: Seq[A]): Assertion[Seq[A]]", "member" : "zio.test.Assertion.endsWith", "link" : "zio\/test\/Assertion$.html#endsWith[A](suffix:Seq[A]):zio.test.Assertion[Seq[A]]", "kind" : "def"}, {"label" : "diesWithA", "tail" : "(arg0: ClassTag[E]): Assertion[Exit[Any, Any]]", "member" : "zio.test.Assertion.diesWithA", "link" : "zio\/test\/Assertion$.html#diesWithA[E](implicitevidence$2:scala.reflect.ClassTag[E]):zio.test.Assertion[zio.Exit[Any,Any]]", "kind" : "def"}, {"label" : "dies", "tail" : "(assertion: Assertion[Throwable]): Assertion[Exit[Any, Any]]", "member" : "zio.test.Assertion.dies", "link" : "zio\/test\/Assertion$.html#dies(assertion:zio.test.Assertion[Throwable]):zio.test.Assertion[zio.Exit[Any,Any]]", "kind" : "def"}, {"label" : "containsString", "tail" : "(element: String): Assertion[String]", "member" : "zio.test.Assertion.containsString", "link" : "zio\/test\/Assertion$.html#containsString(element:String):zio.test.Assertion[String]", "kind" : "def"}, {"label" : "containsCause", "tail" : "(cause: Cause[E]): Assertion[Cause[E]]", "member" : "zio.test.Assertion.containsCause", "link" : "zio\/test\/Assertion$.html#containsCause[E](cause:zio.Cause[E]):zio.test.Assertion[zio.Cause[E]]", "kind" : "def"}, {"label" : "contains", "tail" : "(element: A): Assertion[Iterable[A]]", "member" : "zio.test.Assertion.contains", "link" : "zio\/test\/Assertion$.html#contains[A](element:A):zio.test.Assertion[Iterable[A]]", "kind" : "def"}, {"label" : "approximatelyEquals", "tail" : "(reference: A, tolerance: A)(arg0: Numeric[A]): Assertion[A]", "member" : "zio.test.Assertion.approximatelyEquals", "link" : "zio\/test\/Assertion$.html#approximatelyEquals[A](reference:A,tolerance:A)(implicitevidence$1:Numeric[A]):zio.test.Assertion[A]", "kind" : "def"}, {"label" : "hasAt", "tail" : "(pos: Int)(assertion: Assertion[A]): Assertion[Seq[A]]", "member" : "zio.test.Assertion.hasAt", "link" : "zio\/test\/Assertion$.html#hasAt[A](pos:Int)(assertion:zio.test.Assertion[A]):zio.test.Assertion[Seq[A]]", "kind" : "def"}, {"label" : "anything", "tail" : ": Assertion[Any]", "member" : "zio.test.Assertion.anything", "link" : "zio\/test\/Assertion$.html#anything:zio.test.Assertion[Any]", "kind" : "val"}, {"label" : "assertionRec", "tail" : "(name: String)(assertion: Assertion[B])(get: (A) => Option[B]): Assertion[A]", "member" : "zio.test.Assertion.assertionRec", "link" : "zio\/test\/Assertion$.html#assertionRec[A,B](name:String)(assertion:zio.test.Assertion[B])(get:A=>Option[B]):zio.test.Assertion[A]", "kind" : "def"}, {"label" : "assertion", "tail" : "(name: String)(run: (=> A) => Boolean): Assertion[A]", "member" : "zio.test.Assertion.assertion", "link" : "zio\/test\/Assertion$.html#assertion[A](name:String)(run:(=>A)=>Boolean):zio.test.Assertion[A]", "kind" : "def"}, {"label" : "equalTo", "tail" : "(expected: A)(eql: Eql[A, B]): Assertion[B]", "member" : "zio.test.AssertionVariants.equalTo", "link" : "zio\/test\/Assertion$.html#equalTo[A,B](expected:A)(impliciteql:zio.test.Eql[A,B]):zio.test.Assertion[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/Assertion$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/Assertion$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/Assertion$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/Assertion$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/Assertion$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/Assertion$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/Assertion$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/Assertion$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/Assertion$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/Assertion$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/Assertion$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/Assertion$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Assertion$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Assertion$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Assertion$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/Assertion$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/Assertion$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/Assertion$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/Assertion$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "run", "tail" : "(value: => A)(sourceLocation: SourceLocation): TestResult", "member" : "zio.test.Assertion.run", "link" : "zio\/test\/Assertion.html#run(value:=>A)(implicitsourceLocation:zio.internal.stacktracer.SourceLocation):zio.test.TestResult", "kind" : "def"}, {"label" : "??", "tail" : "(message: String): Assertion[A]", "member" : "zio.test.Assertion.??", "link" : "zio\/test\/Assertion.html#??(message:String):zio.test.Assertion[A]", "kind" : "def"}, {"label" : "label", "tail" : "(message: String): Assertion[A]", "member" : "zio.test.Assertion.label", "link" : "zio\/test\/Assertion.html#label(message:String):zio.test.Assertion[A]", "kind" : "def"}, {"label" : "test", "tail" : "(value: A)(sourceLocation: SourceLocation): Boolean", "member" : "zio.test.Assertion.test", "link" : "zio\/test\/Assertion.html#test(value:A)(implicitsourceLocation:zio.internal.stacktracer.SourceLocation):Boolean", "kind" : "def"}, {"label" : "negate", "tail" : "(): Assertion[A]", "member" : "zio.test.Assertion.negate", "link" : "zio\/test\/Assertion.html#negate:zio.test.Assertion[A]", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): Assertion[A]", "member" : "zio.test.Assertion.unary_!", "link" : "zio\/test\/Assertion.html#unary_!:zio.test.Assertion[A]", "kind" : "def"}, {"label" : "||", "tail" : "(that: Assertion[A1]): Assertion[A1]", "member" : "zio.test.Assertion.||", "link" : "zio\/test\/Assertion.html#||[A1<:A](that:zio.test.Assertion[A1]):zio.test.Assertion[A1]", "kind" : "def"}, {"label" : "&&", "tail" : "(that: Assertion[A1]): Assertion[A1]", "member" : "zio.test.Assertion.&&", "link" : "zio\/test\/Assertion.html#&&[A1<:A](that:zio.test.Assertion[A1]):zio.test.Assertion[A1]", "kind" : "def"}, {"label" : "render", "tail" : "(): String", "member" : "zio.test.Assertion.render", "link" : "zio\/test\/Assertion.html#render:String", "kind" : "def"}, {"member" : "zio.test.Assertion#<init>", "error" : "unsupported entity"}, {"label" : "arrow", "tail" : ": TestArrow[A, Boolean]", "member" : "zio.test.Assertion.arrow", "link" : "zio\/test\/Assertion.html#arrow:zio.test.TestArrow[A,Boolean]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/test\/Assertion.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/Assertion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/Assertion.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/Assertion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/Assertion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/Assertion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/Assertion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/Assertion.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/Assertion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/Assertion.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/Assertion.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/Assertion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Assertion.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Assertion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Assertion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/Assertion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/Assertion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/test\/Assertion.html", "kind" : "case class"}, {"name" : "zio.test.AssertionVariants", "trait" : "zio\/test\/AssertionVariants.html", "kind" : "trait", "members_trait" : [{"label" : "equalTo", "tail" : "(expected: A)(eql: Eql[A, B]): Assertion[B]", "member" : "zio.test.AssertionVariants.equalTo", "link" : "zio\/test\/AssertionVariants.html#equalTo[A,B](expected:A)(impliciteql:zio.test.Eql[A,B]):zio.test.Assertion[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/AssertionVariants.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/AssertionVariants.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/AssertionVariants.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/AssertionVariants.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/AssertionVariants.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/AssertionVariants.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/AssertionVariants.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/AssertionVariants.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/AssertionVariants.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/AssertionVariants.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/AssertionVariants.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/AssertionVariants.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/AssertionVariants.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/AssertionVariants.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/AssertionVariants.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/AssertionVariants.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/AssertionVariants.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/AssertionVariants.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/AssertionVariants.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.CheckConstructor", "object" : "zio\/test\/CheckConstructor$.html", "members_object" : [{"label" : "AssertConstructor", "tail" : "(): WithOut[R, A, R, Nothing]", "member" : "zio.test.CheckConstructor.AssertConstructor", "link" : "zio\/test\/CheckConstructor$.html#AssertConstructor[R,A<:zio.test.TestResult]:zio.test.CheckConstructor.WithOut[R,A,R,Nothing]", "kind" : "implicit def"}, {"label" : "WithOut", "tail" : "", "member" : "zio.test.CheckConstructor.WithOut", "link" : "zio\/test\/CheckConstructor$.html#WithOut[Environment,In,OutEnvironment0,OutError0]=zio.test.CheckConstructor[Environment,In]{typeOutEnvironment=OutEnvironment0;typeOutError=OutError0}", "kind" : "type"}, {"label" : "AssertZIOConstructor", "tail" : "(): WithOut[R, ZIO[R1, E, A], R with R1, E]", "member" : "zio.test.CheckConstructorLowPriority1.AssertZIOConstructor", "link" : "zio\/test\/CheckConstructor$.html#AssertZIOConstructor[R,R1,E,A<:zio.test.TestResult]:zio.test.CheckConstructor.WithOut[R,zio.ZIO[R1,E,A],RwithR1,E]", "kind" : "implicit def"}, {"label" : "AssertZSTMConstructor", "tail" : "(): WithOut[R, ZSTM[R1, E, A], R with R1, E]", "member" : "zio.test.CheckConstructorLowPriority2.AssertZSTMConstructor", "link" : "zio\/test\/CheckConstructor$.html#AssertZSTMConstructor[R,R1,E,A<:zio.test.TestResult]:zio.test.CheckConstructor.WithOut[R,zio.stm.ZSTM[R1,E,A],RwithR1,E]", "kind" : "implicit def"}, {"label" : "AssertEitherConstructor", "tail" : "(): WithOut[R, Either[E, A], R, E]", "member" : "zio.test.CheckConstructorLowPriority3.AssertEitherConstructor", "link" : "zio\/test\/CheckConstructor$.html#AssertEitherConstructor[R,E,A<:zio.test.TestResult]:zio.test.CheckConstructor.WithOut[R,Either[E,A],R,E]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/CheckConstructor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/CheckConstructor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/CheckConstructor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/CheckConstructor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/CheckConstructor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/CheckConstructor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/CheckConstructor$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/CheckConstructor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/CheckConstructor$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/CheckConstructor$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/CheckConstructor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/CheckConstructor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CheckConstructor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CheckConstructor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CheckConstructor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/CheckConstructor$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/CheckConstructor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/CheckConstructor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/CheckConstructor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/CheckConstructor.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/CheckConstructor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/CheckConstructor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/CheckConstructor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/CheckConstructor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/CheckConstructor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/CheckConstructor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/CheckConstructor.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/CheckConstructor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/CheckConstructor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/CheckConstructor.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/CheckConstructor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/CheckConstructor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CheckConstructor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CheckConstructor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CheckConstructor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/CheckConstructor.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/CheckConstructor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/CheckConstructor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/CheckConstructor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(input: => In)(trace: Trace): ZIO[OutEnvironment, OutError, TestResult]", "member" : "zio.test.CheckConstructor.apply", "link" : "zio\/test\/CheckConstructor.html#apply(input:=>In)(implicittrace:zio.Trace):zio.ZIO[CheckConstructor.this.OutEnvironment,CheckConstructor.this.OutError,zio.test.TestResult]", "kind" : "abstract def"}, {"member" : "zio.test.CheckConstructor.OutError", "error" : "unsupported entity"}, {"member" : "zio.test.CheckConstructor.OutEnvironment", "error" : "unsupported entity"}], "shortDescription" : ""}, {"name" : "zio.test.CheckConstructorLowPriority1", "trait" : "zio\/test\/CheckConstructorLowPriority1.html", "kind" : "trait", "members_trait" : [{"label" : "AssertZIOConstructor", "tail" : "(): WithOut[R, ZIO[R1, E, A], R with R1, E]", "member" : "zio.test.CheckConstructorLowPriority1.AssertZIOConstructor", "link" : "zio\/test\/CheckConstructorLowPriority1.html#AssertZIOConstructor[R,R1,E,A<:zio.test.TestResult]:zio.test.CheckConstructor.WithOut[R,zio.ZIO[R1,E,A],RwithR1,E]", "kind" : "implicit def"}, {"label" : "AssertZSTMConstructor", "tail" : "(): WithOut[R, ZSTM[R1, E, A], R with R1, E]", "member" : "zio.test.CheckConstructorLowPriority2.AssertZSTMConstructor", "link" : "zio\/test\/CheckConstructorLowPriority1.html#AssertZSTMConstructor[R,R1,E,A<:zio.test.TestResult]:zio.test.CheckConstructor.WithOut[R,zio.stm.ZSTM[R1,E,A],RwithR1,E]", "kind" : "implicit def"}, {"label" : "AssertEitherConstructor", "tail" : "(): WithOut[R, Either[E, A], R, E]", "member" : "zio.test.CheckConstructorLowPriority3.AssertEitherConstructor", "link" : "zio\/test\/CheckConstructorLowPriority1.html#AssertEitherConstructor[R,E,A<:zio.test.TestResult]:zio.test.CheckConstructor.WithOut[R,Either[E,A],R,E]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/CheckConstructorLowPriority1.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/CheckConstructorLowPriority1.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/CheckConstructorLowPriority1.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/CheckConstructorLowPriority1.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/CheckConstructorLowPriority1.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/CheckConstructorLowPriority1.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/CheckConstructorLowPriority1.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/CheckConstructorLowPriority1.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/CheckConstructorLowPriority1.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/CheckConstructorLowPriority1.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/CheckConstructorLowPriority1.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/CheckConstructorLowPriority1.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CheckConstructorLowPriority1.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CheckConstructorLowPriority1.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CheckConstructorLowPriority1.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/CheckConstructorLowPriority1.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/CheckConstructorLowPriority1.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/CheckConstructorLowPriority1.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/CheckConstructorLowPriority1.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.CheckConstructorLowPriority2", "trait" : "zio\/test\/CheckConstructorLowPriority2.html", "kind" : "trait", "members_trait" : [{"label" : "AssertZSTMConstructor", "tail" : "(): WithOut[R, ZSTM[R1, E, A], R with R1, E]", "member" : "zio.test.CheckConstructorLowPriority2.AssertZSTMConstructor", "link" : "zio\/test\/CheckConstructorLowPriority2.html#AssertZSTMConstructor[R,R1,E,A<:zio.test.TestResult]:zio.test.CheckConstructor.WithOut[R,zio.stm.ZSTM[R1,E,A],RwithR1,E]", "kind" : "implicit def"}, {"label" : "AssertEitherConstructor", "tail" : "(): WithOut[R, Either[E, A], R, E]", "member" : "zio.test.CheckConstructorLowPriority3.AssertEitherConstructor", "link" : "zio\/test\/CheckConstructorLowPriority2.html#AssertEitherConstructor[R,E,A<:zio.test.TestResult]:zio.test.CheckConstructor.WithOut[R,Either[E,A],R,E]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/CheckConstructorLowPriority2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/CheckConstructorLowPriority2.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/CheckConstructorLowPriority2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/CheckConstructorLowPriority2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/CheckConstructorLowPriority2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/CheckConstructorLowPriority2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/CheckConstructorLowPriority2.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/CheckConstructorLowPriority2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/CheckConstructorLowPriority2.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/CheckConstructorLowPriority2.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/CheckConstructorLowPriority2.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/CheckConstructorLowPriority2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CheckConstructorLowPriority2.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CheckConstructorLowPriority2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CheckConstructorLowPriority2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/CheckConstructorLowPriority2.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/CheckConstructorLowPriority2.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/CheckConstructorLowPriority2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/CheckConstructorLowPriority2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.CheckConstructorLowPriority3", "trait" : "zio\/test\/CheckConstructorLowPriority3.html", "kind" : "trait", "members_trait" : [{"label" : "AssertEitherConstructor", "tail" : "(): WithOut[R, Either[E, A], R, E]", "member" : "zio.test.CheckConstructorLowPriority3.AssertEitherConstructor", "link" : "zio\/test\/CheckConstructorLowPriority3.html#AssertEitherConstructor[R,E,A<:zio.test.TestResult]:zio.test.CheckConstructor.WithOut[R,Either[E,A],R,E]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/CheckConstructorLowPriority3.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/CheckConstructorLowPriority3.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/CheckConstructorLowPriority3.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/CheckConstructorLowPriority3.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/CheckConstructorLowPriority3.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/CheckConstructorLowPriority3.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/CheckConstructorLowPriority3.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/CheckConstructorLowPriority3.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/CheckConstructorLowPriority3.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/CheckConstructorLowPriority3.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/CheckConstructorLowPriority3.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/CheckConstructorLowPriority3.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CheckConstructorLowPriority3.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CheckConstructorLowPriority3.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CheckConstructorLowPriority3.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/CheckConstructorLowPriority3.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/CheckConstructorLowPriority3.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/CheckConstructorLowPriority3.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/CheckConstructorLowPriority3.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.CheckVariants", "shortDescription" : "", "object" : "zio\/test\/package$$CheckVariants$.html", "members_object" : [{"label" : "CheckN", "tail" : "", "member" : "zio.test.CheckVariants.CheckN", "link" : "zio\/test\/package$$CheckVariants$.html#CheckNextendsAnyVal", "kind" : "final class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/package$$CheckVariants$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/package$$CheckVariants$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/package$$CheckVariants$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/package$$CheckVariants$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/package$$CheckVariants$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/package$$CheckVariants$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/package$$CheckVariants$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/package$$CheckVariants$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/package$$CheckVariants$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/package$$CheckVariants$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/package$$CheckVariants$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/package$$CheckVariants$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/package$$CheckVariants$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/package$$CheckVariants$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/package$$CheckVariants$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/package$$CheckVariants$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/package$$CheckVariants$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/package$$CheckVariants$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/package$$CheckVariants$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.CompileVariants", "object" : "zio\/test\/CompileVariants$.html", "members_object" : [{"label" : "assertZIOProxy", "tail" : "(effect: ZIO[R, E, A])(assertion: Assertion[A])(trace: Trace, sourceLocation: SourceLocation): ZIO[R, E, TestResult]", "member" : "zio.test.CompileVariants.assertZIOProxy", "link" : "zio\/test\/CompileVariants$.html#assertZIOProxy[R,E,A](effect:zio.ZIO[R,E,A])(assertion:zio.test.Assertion[A])(implicittrace:zio.Trace,implicitsourceLocation:zio.internal.stacktracer.SourceLocation):zio.ZIO[R,E,zio.test.TestResult]", "kind" : "def"}, {"label" : "newAssertProxy", "tail" : "(value: => A, codeString: String, assertionString: String)(assertion: Assertion[A])(trace: Trace, sourceLocation: SourceLocation): TestResult", "member" : "zio.test.CompileVariants.newAssertProxy", "link" : "zio\/test\/CompileVariants$.html#newAssertProxy[A](value:=>A,codeString:String,assertionString:String)(assertion:zio.test.Assertion[A])(implicittrace:zio.Trace,implicitsourceLocation:zio.internal.stacktracer.SourceLocation):zio.test.TestResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/CompileVariants$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/CompileVariants$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/CompileVariants$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/CompileVariants$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/CompileVariants$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/CompileVariants$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/CompileVariants$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/CompileVariants$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/CompileVariants$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/CompileVariants$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/CompileVariants$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/CompileVariants$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CompileVariants$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CompileVariants$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CompileVariants$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/CompileVariants$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/CompileVariants$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/CompileVariants$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/CompileVariants$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/CompileVariants.html", "kind" : "trait", "members_trait" : [{"label" : "assertZIO", "tail" : "(effect: ZIO[R, E, A])(assertion: Assertion[A])(trace: Trace, sourceLocation: SourceLocation): ZIO[R, E, TestResult]", "member" : "zio.test.CompileVariants.assertZIO", "link" : "zio\/test\/CompileVariants.html#assertZIO[R,E,A](effect:zio.ZIO[R,E,A])(assertion:zio.test.Assertion[A])(implicittrace:zio.Trace,implicitsourceLocation:zio.internal.stacktracer.SourceLocation):zio.ZIO[R,E,zio.test.TestResult]", "kind" : "def"}, {"label" : "assert", "tail" : "(expr: => A)(assertion: Assertion[A]): TestResult", "member" : "zio.test.CompileVariants.assert", "link" : "zio\/test\/CompileVariants.html#assert[A](expr:=>A)(assertion:zio.test.Assertion[A]):zio.test.TestResult", "kind" : "macro def"}, {"label" : "assertTrue", "tail" : "(expr: Boolean): TestResult", "member" : "zio.test.CompileVariants.assertTrue", "link" : "zio\/test\/CompileVariants.html#assertTrue(expr:Boolean):zio.test.TestResult", "kind" : "macro def"}, {"label" : "assertTrue", "tail" : "(expr: Boolean, exprs: Boolean*): TestResult", "member" : "zio.test.CompileVariants.assertTrue", "link" : "zio\/test\/CompileVariants.html#assertTrue(expr:Boolean,exprs:Boolean*):zio.test.TestResult", "kind" : "macro def"}, {"label" : "typeCheck", "tail" : "(code: String): UIO[Either[String, Unit]]", "member" : "zio.test.CompileVariants.typeCheck", "link" : "zio\/test\/CompileVariants.html#typeCheck(code:String):zio.UIO[Either[String,Unit]]", "kind" : "final macro def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/CompileVariants.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/CompileVariants.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/CompileVariants.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/CompileVariants.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/CompileVariants.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/CompileVariants.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/CompileVariants.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/CompileVariants.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/CompileVariants.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/CompileVariants.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/CompileVariants.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/CompileVariants.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CompileVariants.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CompileVariants.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CompileVariants.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/CompileVariants.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/CompileVariants.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/CompileVariants.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/CompileVariants.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.CustomAssertion", "shortDescription" : "CustomAssertion allows users to create their own custom assertions for use inassertTrue.", "object" : "zio\/test\/CustomAssertion$.html", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/CustomAssertion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/CustomAssertion.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/CustomAssertion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/CustomAssertion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/CustomAssertion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/CustomAssertion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/CustomAssertion.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/CustomAssertion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/CustomAssertion.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/CustomAssertion.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/CustomAssertion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/CustomAssertion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CustomAssertion.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CustomAssertion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CustomAssertion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/CustomAssertion.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/CustomAssertion.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/CustomAssertion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/CustomAssertion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "MakePartiallyApplied", "tail" : "", "member" : "zio.test.CustomAssertion.MakePartiallyApplied", "link" : "zio\/test\/CustomAssertion$.html#MakePartiallyApplied[A]extendsAnyRef", "kind" : "final class"}, {"label" : "make", "tail" : "(): MakePartiallyApplied[A]", "member" : "zio.test.CustomAssertion.make", "link" : "zio\/test\/CustomAssertion$.html#make[A]:zio.test.CustomAssertion.MakePartiallyApplied[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/CustomAssertion$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/CustomAssertion$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/CustomAssertion$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/CustomAssertion$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/CustomAssertion$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/CustomAssertion$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/CustomAssertion$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/CustomAssertion$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/CustomAssertion$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/CustomAssertion$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/CustomAssertion$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/CustomAssertion$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CustomAssertion$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CustomAssertion$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/CustomAssertion$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/CustomAssertion$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/CustomAssertion$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/CustomAssertion$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/CustomAssertion$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/test\/CustomAssertion.html", "kind" : "class"}, {"name" : "zio.test.Eql", "shortDescription" : "A value of type Eql[A, B] provides implicit evidence that two values withtypes A and B could potentially be equal, that is, that A is a subtypeof B or B is a subtype of A.", "object" : "zio\/test\/Eql$.html", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/Eql.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/Eql.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/Eql.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/Eql.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/Eql.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/Eql.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/Eql.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/Eql.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/Eql.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/Eql.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/Eql.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/Eql.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Eql.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Eql.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Eql.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/Eql.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/Eql.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/Eql.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/Eql.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "eqlSubtype1", "tail" : "(): Eql[A, B]", "member" : "zio.test.Eql.eqlSubtype1", "link" : "zio\/test\/Eql$.html#eqlSubtype1[A<:B,B]:zio.test.Eql[A,B]", "kind" : "implicit final def"}, {"label" : "eqlSubtype2", "tail" : "(): Eql[A, B]", "member" : "zio.test.EqlLowPriority.eqlSubtype2", "link" : "zio\/test\/Eql$.html#eqlSubtype2[A,B<:A]:zio.test.Eql[A,B]", "kind" : "implicit final def"}, {"label" : "instance", "tail" : ": Eql[Any, Any]", "member" : "zio.test.EqlLowPriority.instance", "link" : "zio\/test\/Eql$.html#instance:zio.test.Eql[Any,Any]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/Eql$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/Eql$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/Eql$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/Eql$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/Eql$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/Eql$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/Eql$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/Eql$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/Eql$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/Eql$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/Eql$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/Eql$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Eql$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Eql$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Eql$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/Eql$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/Eql$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/Eql$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/Eql$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/test\/Eql.html", "kind" : "class"}, {"name" : "zio.test.ErrorMessage", "object" : "zio\/test\/ErrorMessage$.html", "members_object" : [{"label" : "had", "tail" : ": ErrorMessage", "member" : "zio.test.ErrorMessage.had", "link" : "zio\/test\/ErrorMessage$.html#had:zio.test.ErrorMessage", "kind" : "val"}, {"label" : "was", "tail" : ": ErrorMessage", "member" : "zio.test.ErrorMessage.was", "link" : "zio\/test\/ErrorMessage$.html#was:zio.test.ErrorMessage", "kind" : "val"}, {"label" : "equals", "tail" : ": ErrorMessage", "member" : "zio.test.ErrorMessage.equals", "link" : "zio\/test\/ErrorMessage$.html#equals:zio.test.ErrorMessage", "kind" : "val"}, {"label" : "did", "tail" : ": ErrorMessage", "member" : "zio.test.ErrorMessage.did", "link" : "zio\/test\/ErrorMessage$.html#did:zio.test.ErrorMessage", "kind" : "val"}, {"label" : "value", "tail" : "(value: Any): ErrorMessage", "member" : "zio.test.ErrorMessage.value", "link" : "zio\/test\/ErrorMessage$.html#value(value:Any):zio.test.ErrorMessage", "kind" : "def"}, {"label" : "throwable", "tail" : "(throwable: Throwable): ErrorMessage", "member" : "zio.test.ErrorMessage.throwable", "link" : "zio\/test\/ErrorMessage$.html#throwable(throwable:Throwable):zio.test.ErrorMessage", "kind" : "def"}, {"label" : "text", "tail" : "(string: String): ErrorMessage", "member" : "zio.test.ErrorMessage.text", "link" : "zio\/test\/ErrorMessage$.html#text(string:String):zio.test.ErrorMessage", "kind" : "def"}, {"label" : "pretty", "tail" : "(value: Any): ErrorMessage", "member" : "zio.test.ErrorMessage.pretty", "link" : "zio\/test\/ErrorMessage$.html#pretty(value:Any):zio.test.ErrorMessage", "kind" : "def"}, {"label" : "custom", "tail" : "(string: String): ErrorMessage", "member" : "zio.test.ErrorMessage.custom", "link" : "zio\/test\/ErrorMessage$.html#custom(string:String):zio.test.ErrorMessage", "kind" : "def"}, {"label" : "choice", "tail" : "(success: String, failure: String): ErrorMessage", "member" : "zio.test.ErrorMessage.choice", "link" : "zio\/test\/ErrorMessage$.html#choice(success:String,failure:String):zio.test.ErrorMessage", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/ErrorMessage$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/ErrorMessage$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/ErrorMessage$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/ErrorMessage$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/ErrorMessage$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/ErrorMessage$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/ErrorMessage$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/ErrorMessage$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/ErrorMessage$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/ErrorMessage$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/ErrorMessage$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/ErrorMessage$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ErrorMessage$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ErrorMessage$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ErrorMessage$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/ErrorMessage$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/ErrorMessage$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/ErrorMessage$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/ErrorMessage$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/ErrorMessage.html", "kind" : "trait", "members_trait" : [{"label" : "++", "tail" : "(that: ErrorMessage): ErrorMessage", "member" : "zio.test.ErrorMessage.++", "link" : "zio\/test\/ErrorMessage.html#++(that:zio.test.ErrorMessage):zio.test.ErrorMessage", "kind" : "def"}, {"label" : "+", "tail" : "(that: ErrorMessage): ErrorMessage", "member" : "zio.test.ErrorMessage.+", "link" : "zio\/test\/ErrorMessage.html#+(that:zio.test.ErrorMessage):zio.test.ErrorMessage", "kind" : "def"}, {"label" : "+", "tail" : "(that: String): ErrorMessage", "member" : "zio.test.ErrorMessage.+", "link" : "zio\/test\/ErrorMessage.html#+(that:String):zio.test.ErrorMessage", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/ErrorMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/ErrorMessage.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/ErrorMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/ErrorMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/ErrorMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/ErrorMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/ErrorMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/ErrorMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/ErrorMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/ErrorMessage.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/ErrorMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/ErrorMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ErrorMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ErrorMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ErrorMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/ErrorMessage.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/ErrorMessage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/ErrorMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/ErrorMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.ExecutionEvent", "object" : "zio\/test\/ExecutionEvent$.html", "members_object" : [{"label" : "RuntimeFailure", "tail" : "", "member" : "zio.test.ExecutionEvent.RuntimeFailure", "link" : "zio\/test\/ExecutionEvent$.html#RuntimeFailure[+E]extendsExecutionEventwithProductwithSerializable", "kind" : "final case class"}, {"label" : "TopLevelFlush", "tail" : "", "member" : "zio.test.ExecutionEvent.TopLevelFlush", "link" : "zio\/test\/ExecutionEvent$.html#TopLevelFlushextendsExecutionEventwithProductwithSerializable", "kind" : "final case class"}, {"label" : "SectionEnd", "tail" : "", "member" : "zio.test.ExecutionEvent.SectionEnd", "link" : "zio\/test\/ExecutionEvent$.html#SectionEndextendsExecutionEventwithProductwithSerializable", "kind" : "final case class"}, {"label" : "SectionStart", "tail" : "", "member" : "zio.test.ExecutionEvent.SectionStart", "link" : "zio\/test\/ExecutionEvent$.html#SectionStartextendsExecutionEventwithProductwithSerializable", "kind" : "final case class"}, {"label" : "Test", "tail" : "", "member" : "zio.test.ExecutionEvent.Test", "link" : "zio\/test\/ExecutionEvent$.html#Test[+E]extendsExecutionEventwithProductwithSerializable", "kind" : "final case class"}, {"label" : "TestStarted", "tail" : "", "member" : "zio.test.ExecutionEvent.TestStarted", "link" : "zio\/test\/ExecutionEvent$.html#TestStartedextendsExecutionEventwithProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/ExecutionEvent$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/ExecutionEvent$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/ExecutionEvent$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/ExecutionEvent$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/ExecutionEvent$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/ExecutionEvent$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/ExecutionEvent$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/ExecutionEvent$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/ExecutionEvent$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/ExecutionEvent$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/ExecutionEvent$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/ExecutionEvent$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ExecutionEvent$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ExecutionEvent$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ExecutionEvent$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/ExecutionEvent$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/ExecutionEvent$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/ExecutionEvent$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/ExecutionEvent$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/ExecutionEvent.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/ExecutionEvent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/ExecutionEvent.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/ExecutionEvent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/ExecutionEvent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/ExecutionEvent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/ExecutionEvent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/ExecutionEvent.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/ExecutionEvent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/ExecutionEvent.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/ExecutionEvent.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/ExecutionEvent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/ExecutionEvent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ExecutionEvent.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ExecutionEvent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ExecutionEvent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/ExecutionEvent.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/ExecutionEvent.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/ExecutionEvent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/ExecutionEvent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "labels", "tail" : ": List[String]", "member" : "zio.test.ExecutionEvent.labels", "link" : "zio\/test\/ExecutionEvent.html#labels:List[String]", "kind" : "abstract val"}, {"label" : "ancestors", "tail" : ": List[SuiteId]", "member" : "zio.test.ExecutionEvent.ancestors", "link" : "zio\/test\/ExecutionEvent.html#ancestors:List[zio.test.SuiteId]", "kind" : "abstract val"}, {"label" : "id", "tail" : ": SuiteId", "member" : "zio.test.ExecutionEvent.id", "link" : "zio\/test\/ExecutionEvent.html#id:zio.test.SuiteId", "kind" : "abstract val"}], "shortDescription" : ""}, {"name" : "zio.test.ExecutionEventSink", "object" : "zio\/test\/ExecutionEventSink$.html", "members_object" : [{"label" : "silent", "tail" : ": ULayer[ExecutionEventSink]", "member" : "zio.test.ExecutionEventSink.silent", "link" : "zio\/test\/ExecutionEventSink$.html#silent:zio.ULayer[zio.test.ExecutionEventSink]", "kind" : "val"}, {"label" : "live", "tail" : ": ZLayer[TestOutput, Nothing, ExecutionEventSink]", "member" : "zio.test.ExecutionEventSink.live", "link" : "zio\/test\/ExecutionEventSink$.html#live:zio.ZLayer[zio.test.TestOutput,Nothing,zio.test.ExecutionEventSink]", "kind" : "val"}, {"label" : "live", "tail" : "(console: Console, eventRenderer: ReporterEventRenderer): ZLayer[Any, Nothing, ExecutionEventSink]", "member" : "zio.test.ExecutionEventSink.live", "link" : "zio\/test\/ExecutionEventSink$.html#live(console:zio.Console,eventRenderer:zio.test.ReporterEventRenderer):zio.ZLayer[Any,Nothing,zio.test.ExecutionEventSink]", "kind" : "def"}, {"label" : "ExecutionEventSinkLive", "tail" : "(testOutput: TestOutput): ZIO[Any, Nothing, ExecutionEventSink]", "member" : "zio.test.ExecutionEventSink.ExecutionEventSinkLive", "link" : "zio\/test\/ExecutionEventSink$.html#ExecutionEventSinkLive(testOutput:zio.test.TestOutput):zio.ZIO[Any,Nothing,zio.test.ExecutionEventSink]", "kind" : "def"}, {"label" : "process", "tail" : "(event: ExecutionEvent): ZIO[ExecutionEventSink, Nothing, Unit]", "member" : "zio.test.ExecutionEventSink.process", "link" : "zio\/test\/ExecutionEventSink$.html#process(event:zio.test.ExecutionEvent):zio.ZIO[zio.test.ExecutionEventSink,Nothing,Unit]", "kind" : "def"}, {"label" : "getSummary", "tail" : "(): ZIO[ExecutionEventSink, Nothing, Summary]", "member" : "zio.test.ExecutionEventSink.getSummary", "link" : "zio\/test\/ExecutionEventSink$.html#getSummary:zio.ZIO[zio.test.ExecutionEventSink,Nothing,zio.test.Summary]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/ExecutionEventSink$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/ExecutionEventSink$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/ExecutionEventSink$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/ExecutionEventSink$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/ExecutionEventSink$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/ExecutionEventSink$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/ExecutionEventSink$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/ExecutionEventSink$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/ExecutionEventSink$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/ExecutionEventSink$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/ExecutionEventSink$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/ExecutionEventSink$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ExecutionEventSink$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ExecutionEventSink$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ExecutionEventSink$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/ExecutionEventSink$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/ExecutionEventSink$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/ExecutionEventSink$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/ExecutionEventSink$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/ExecutionEventSink.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/ExecutionEventSink.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/ExecutionEventSink.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/ExecutionEventSink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/ExecutionEventSink.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/ExecutionEventSink.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/ExecutionEventSink.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/ExecutionEventSink.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/ExecutionEventSink.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/ExecutionEventSink.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/ExecutionEventSink.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/ExecutionEventSink.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/ExecutionEventSink.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ExecutionEventSink.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ExecutionEventSink.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ExecutionEventSink.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/ExecutionEventSink.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/ExecutionEventSink.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/ExecutionEventSink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/ExecutionEventSink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "process", "tail" : "(event: ExecutionEvent): ZIO[Any, Nothing, Unit]", "member" : "zio.test.ExecutionEventSink.process", "link" : "zio\/test\/ExecutionEventSink.html#process(event:zio.test.ExecutionEvent):zio.ZIO[Any,Nothing,Unit]", "kind" : "abstract def"}, {"label" : "getSummary", "tail" : "(): UIO[Summary]", "member" : "zio.test.ExecutionEventSink.getSummary", "link" : "zio\/test\/ExecutionEventSink.html#getSummary:zio.UIO[zio.test.Summary]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.test.FailureCase", "shortDescription" : "", "object" : "zio\/test\/FailureCase$.html", "members_object" : [{"label" : "fromTrace", "tail" : "(trace: TestTrace[Boolean], path: Chunk[(String, String)]): Chunk[FailureCase]", "member" : "zio.test.FailureCase.fromTrace", "link" : "zio\/test\/FailureCase$.html#fromTrace(trace:zio.test.TestTrace[Boolean],path:zio.Chunk[(String,String)]):zio.Chunk[zio.test.FailureCase]", "kind" : "def"}, {"label" : "getPath", "tail" : "(trace: TestTrace[_]): Chunk[(String, String)]", "member" : "zio.test.FailureCase.getPath", "link" : "zio\/test\/FailureCase$.html#getPath(trace:zio.test.TestTrace[_]):zio.Chunk[(String,String)]", "kind" : "def"}, {"label" : "rightmostNode", "tail" : "(trace: TestTrace[Boolean]): Node[Boolean]", "member" : "zio.test.FailureCase.rightmostNode", "link" : "zio\/test\/FailureCase$.html#rightmostNode(trace:zio.test.TestTrace[Boolean]):zio.test.TestTrace.Node[Boolean]", "kind" : "def"}, {"label" : "highlight", "tail" : "(string: String, span: Span, parentSpan: Option[Span], color: (String) => String, normalColor: (String) => String): String", "member" : "zio.test.FailureCase.highlight", "link" : "zio\/test\/FailureCase$.html#highlight(string:String,span:zio.test.TestArrow.Span,parentSpan:Option[zio.test.TestArrow.Span],color:String=>String,normalColor:String=>String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/FailureCase$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/FailureCase$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/FailureCase$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/FailureCase$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/FailureCase$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/FailureCase$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/FailureCase$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/FailureCase$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/FailureCase$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/FailureCase$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/FailureCase$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/FailureCase$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/FailureCase$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/FailureCase$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/FailureCase$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/FailureCase$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/FailureCase$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/FailureCase$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/FailureCase$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "zio.test.FailureCase#<init>", "error" : "unsupported entity"}, {"label" : "customLabel", "tail" : ": Option[String]", "member" : "zio.test.FailureCase.customLabel", "link" : "zio\/test\/FailureCase.html#customLabel:Option[String]", "kind" : "val"}, {"label" : "result", "tail" : ": Any", "member" : "zio.test.FailureCase.result", "link" : "zio\/test\/FailureCase.html#result:Any", "kind" : "val"}, {"label" : "nestedFailures", "tail" : ": Chunk[FailureCase]", "member" : "zio.test.FailureCase.nestedFailures", "link" : "zio\/test\/FailureCase.html#nestedFailures:zio.Chunk[zio.test.FailureCase]", "kind" : "val"}, {"label" : "span", "tail" : ": Span", "member" : "zio.test.FailureCase.span", "link" : "zio\/test\/FailureCase.html#span:zio.test.TestArrow.Span", "kind" : "val"}, {"label" : "path", "tail" : ": Chunk[(String, String)]", "member" : "zio.test.FailureCase.path", "link" : "zio\/test\/FailureCase.html#path:zio.Chunk[(String,String)]", "kind" : "val"}, {"label" : "location", "tail" : ": String", "member" : "zio.test.FailureCase.location", "link" : "zio\/test\/FailureCase.html#location:String", "kind" : "val"}, {"label" : "codeString", "tail" : ": String", "member" : "zio.test.FailureCase.codeString", "link" : "zio\/test\/FailureCase.html#codeString:String", "kind" : "val"}, {"label" : "errorMessage", "tail" : ": Message", "member" : "zio.test.FailureCase.errorMessage", "link" : "zio\/test\/FailureCase.html#errorMessage:zio.test.render.LogLine.Message", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/test\/FailureCase.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/FailureCase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/FailureCase.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/FailureCase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/FailureCase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/FailureCase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/FailureCase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/FailureCase.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/FailureCase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/FailureCase.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/FailureCase.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/FailureCase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/FailureCase.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/FailureCase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/FailureCase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/FailureCase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/FailureCase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/test\/FailureCase.html", "kind" : "case class"}, {"name" : "zio.test.FunctionVariants", "trait" : "zio\/test\/FunctionVariants.html", "kind" : "trait", "members_trait" : [{"label" : "functionWith4", "tail" : "(gen: Gen[R, E])(hash: (A, B, C, D) => Int)(trace: Trace): Gen[R, (A, B, C, D) => E]", "member" : "zio.test.FunctionVariants.functionWith4", "link" : "zio\/test\/FunctionVariants.html#functionWith4[R,A,B,C,D,E](gen:zio.test.Gen[R,E])(hash:(A,B,C,D)=>Int)(implicittrace:zio.Trace):zio.test.Gen[R,(A,B,C,D)=>E]", "kind" : "final def"}, {"label" : "functionWith3", "tail" : "(gen: Gen[R, D])(hash: (A, B, C) => Int)(trace: Trace): Gen[R, (A, B, C) => D]", "member" : "zio.test.FunctionVariants.functionWith3", "link" : "zio\/test\/FunctionVariants.html#functionWith3[R,A,B,C,D](gen:zio.test.Gen[R,D])(hash:(A,B,C)=>Int)(implicittrace:zio.Trace):zio.test.Gen[R,(A,B,C)=>D]", "kind" : "final def"}, {"label" : "functionWith2", "tail" : "(gen: Gen[R, C])(hash: (A, B) => Int)(trace: Trace): Gen[R, (A, B) => C]", "member" : "zio.test.FunctionVariants.functionWith2", "link" : "zio\/test\/FunctionVariants.html#functionWith2[R,A,B,C](gen:zio.test.Gen[R,C])(hash:(A,B)=>Int)(implicittrace:zio.Trace):zio.test.Gen[R,(A,B)=>C]", "kind" : "final def"}, {"label" : "functionWith", "tail" : "(gen: Gen[R, B])(hash: (A) => Int)(trace: Trace): Gen[R, (A) => B]", "member" : "zio.test.FunctionVariants.functionWith", "link" : "zio\/test\/FunctionVariants.html#functionWith[R,A,B](gen:zio.test.Gen[R,B])(hash:A=>Int)(implicittrace:zio.Trace):zio.test.Gen[R,A=>B]", "kind" : "final def"}, {"label" : "function4", "tail" : "(gen: Gen[R, E])(trace: Trace): Gen[R, (A, B, C, D) => E]", "member" : "zio.test.FunctionVariants.function4", "link" : "zio\/test\/FunctionVariants.html#function4[R,A,B,C,D,E](gen:zio.test.Gen[R,E])(implicittrace:zio.Trace):zio.test.Gen[R,(A,B,C,D)=>E]", "kind" : "final def"}, {"label" : "function3", "tail" : "(gen: Gen[R, D])(trace: Trace): Gen[R, (A, B, C) => D]", "member" : "zio.test.FunctionVariants.function3", "link" : "zio\/test\/FunctionVariants.html#function3[R,A,B,C,D](gen:zio.test.Gen[R,D])(implicittrace:zio.Trace):zio.test.Gen[R,(A,B,C)=>D]", "kind" : "final def"}, {"label" : "function2", "tail" : "(gen: Gen[R, C])(trace: Trace): Gen[R, (A, B) => C]", "member" : "zio.test.FunctionVariants.function2", "link" : "zio\/test\/FunctionVariants.html#function2[R,A,B,C](gen:zio.test.Gen[R,C])(implicittrace:zio.Trace):zio.test.Gen[R,(A,B)=>C]", "kind" : "final def"}, {"label" : "function", "tail" : "(gen: Gen[R, B])(trace: Trace): Gen[R, (A) => B]", "member" : "zio.test.FunctionVariants.function", "link" : "zio\/test\/FunctionVariants.html#function[R,A,B](gen:zio.test.Gen[R,B])(implicittrace:zio.Trace):zio.test.Gen[R,A=>B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/FunctionVariants.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/FunctionVariants.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/FunctionVariants.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/FunctionVariants.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/FunctionVariants.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/FunctionVariants.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/FunctionVariants.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/FunctionVariants.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/FunctionVariants.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/FunctionVariants.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/FunctionVariants.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/FunctionVariants.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/FunctionVariants.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/FunctionVariants.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/FunctionVariants.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/FunctionVariants.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/FunctionVariants.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/FunctionVariants.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/FunctionVariants.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.Gen", "shortDescription" : "A Gen[R, A] represents a generator of values of type A, which requires anenvironment R.", "object" : "zio\/test\/Gen$.html", "members_object" : [{"label" : "whitespaceChars", "tail" : "(trace: Trace): Gen[Any, Char]", "member" : "zio.test.Gen.whitespaceChars", "link" : "zio\/test\/Gen$.html#whitespaceChars(implicittrace:zio.Trace):zio.test.Gen[Any,Char]", "kind" : "def"}, {"label" : "weighted", "tail" : "(gs: (Gen[R, A], Double)*)(trace: Trace): Gen[R, A]", "member" : "zio.test.Gen.weighted", "link" : "zio\/test\/Gen$.html#weighted[R,A](gs:(zio.test.Gen[R,A],Double)*)(implicittrace:zio.Trace):zio.test.Gen[R,A]", "kind" : "def"}, {"label" : "vectorOfN", "tail" : "(n: Int)(g: Gen[R, A])(trace: Trace): Gen[R, Vector[A]]", "member" : "zio.test.Gen.vectorOfN", "link" : "zio\/test\/Gen$.html#vectorOfN[R,A](n:Int)(g:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,Vector[A]]", "kind" : "def"}, {"label" : "vectorOfBounded", "tail" : "(min: Int, max: Int)(g: Gen[R, A])(trace: Trace): Gen[R, Vector[A]]", "member" : "zio.test.Gen.vectorOfBounded", "link" : "zio\/test\/Gen$.html#vectorOfBounded[R,A](min:Int,max:Int)(g:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,Vector[A]]", "kind" : "def"}, {"label" : "vectorOf1", "tail" : "(g: Gen[R, A])(trace: Trace): Gen[R, Vector[A]]", "member" : "zio.test.Gen.vectorOf1", "link" : "zio\/test\/Gen$.html#vectorOf1[R,A](g:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,Vector[A]]", "kind" : "def"}, {"label" : "vectorOf", "tail" : "(g: Gen[R, A])(trace: Trace): Gen[R, Vector[A]]", "member" : "zio.test.Gen.vectorOf", "link" : "zio\/test\/Gen$.html#vectorOf[R,A](g:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,Vector[A]]", "kind" : "def"}, {"label" : "uuid", "tail" : "(trace: Trace): Gen[Any, UUID]", "member" : "zio.test.Gen.uuid", "link" : "zio\/test\/Gen$.html#uuid(implicittrace:zio.Trace):zio.test.Gen[Any,java.util.UUID]", "kind" : "def"}, {"label" : "unit", "tail" : "(trace: Trace): Gen[Any, Unit]", "member" : "zio.test.Gen.unit", "link" : "zio\/test\/Gen$.html#unit(implicittrace:zio.Trace):zio.test.Gen[Any,Unit]", "kind" : "def"}, {"label" : "uniform", "tail" : "(trace: Trace): Gen[Any, Double]", "member" : "zio.test.Gen.uniform", "link" : "zio\/test\/Gen$.html#uniform(implicittrace:zio.Trace):zio.test.Gen[Any,Double]", "kind" : "def"}, {"label" : "unicodeChar", "tail" : "(trace: Trace): Gen[Any, Char]", "member" : "zio.test.Gen.unicodeChar", "link" : "zio\/test\/Gen$.html#unicodeChar(implicittrace:zio.Trace):zio.test.Gen[Any,Char]", "kind" : "def"}, {"label" : "unfoldGenN", "tail" : "(n: Int)(s: S)(f: (S) => Gen[R, (S, A)])(trace: Trace): Gen[R, List[A]]", "member" : "zio.test.Gen.unfoldGenN", "link" : "zio\/test\/Gen$.html#unfoldGenN[R,S,A](n:Int)(s:S)(f:S=>zio.test.Gen[R,(S,A)])(implicittrace:zio.Trace):zio.test.Gen[R,List[A]]", "kind" : "def"}, {"label" : "unfoldGen", "tail" : "(s: S)(f: (S) => Gen[R, (S, A)])(trace: Trace): Gen[R, List[A]]", "member" : "zio.test.Gen.unfoldGen", "link" : "zio\/test\/Gen$.html#unfoldGen[R,S,A](s:S)(f:S=>zio.test.Gen[R,(S,A)])(implicittrace:zio.Trace):zio.test.Gen[R,List[A]]", "kind" : "def"}, {"label" : "throwable", "tail" : "(trace: Trace): Gen[Any, Throwable]", "member" : "zio.test.Gen.throwable", "link" : "zio\/test\/Gen$.html#throwable(implicittrace:zio.Trace):zio.test.Gen[Any,Throwable]", "kind" : "def"}, {"label" : "suspend", "tail" : "(gen: => Gen[R, A])(trace: Trace): Gen[R, A]", "member" : "zio.test.Gen.suspend", "link" : "zio\/test\/Gen$.html#suspend[R,A](gen:=>zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,A]", "kind" : "def"}, {"label" : "stringN", "tail" : "(n: Int)(char: Gen[R, Char])(trace: Trace): Gen[R, String]", "member" : "zio.test.Gen.stringN", "link" : "zio\/test\/Gen$.html#stringN[R](n:Int)(char:zio.test.Gen[R,Char])(implicittrace:zio.Trace):zio.test.Gen[R,String]", "kind" : "def"}, {"label" : "stringBounded", "tail" : "(min: Int, max: Int)(g: Gen[R, Char])(trace: Trace): Gen[R, String]", "member" : "zio.test.Gen.stringBounded", "link" : "zio\/test\/Gen$.html#stringBounded[R](min:Int,max:Int)(g:zio.test.Gen[R,Char])(implicittrace:zio.Trace):zio.test.Gen[R,String]", "kind" : "def"}, {"label" : "string1", "tail" : "(char: Gen[R, Char])(trace: Trace): Gen[R, String]", "member" : "zio.test.Gen.string1", "link" : "zio\/test\/Gen$.html#string1[R](char:zio.test.Gen[R,Char])(implicittrace:zio.Trace):zio.test.Gen[R,String]", "kind" : "def"}, {"label" : "string", "tail" : "(char: Gen[R, Char])(trace: Trace): Gen[R, String]", "member" : "zio.test.Gen.string", "link" : "zio\/test\/Gen$.html#string[R](char:zio.test.Gen[R,Char])(implicittrace:zio.Trace):zio.test.Gen[R,String]", "kind" : "def"}, {"label" : "string", "tail" : "(trace: Trace): Gen[Any, String]", "member" : "zio.test.Gen.string", "link" : "zio\/test\/Gen$.html#string(implicittrace:zio.Trace):zio.test.Gen[Any,String]", "kind" : "def"}, {"label" : "some", "tail" : "(gen: Gen[R, A])(trace: Trace): Gen[R, Option[A]]", "member" : "zio.test.Gen.some", "link" : "zio\/test\/Gen$.html#some[R,A](gen:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,Option[A]]", "kind" : "def"}, {"label" : "small", "tail" : "(f: (Int) => Gen[R, A], min: Int)(trace: Trace): Gen[R, A]", "member" : "zio.test.Gen.small", "link" : "zio\/test\/Gen$.html#small[R,A](f:Int=>zio.test.Gen[R,A],min:Int)(implicittrace:zio.Trace):zio.test.Gen[R,A]", "kind" : "def"}, {"label" : "sized", "tail" : "(f: (Int) => Gen[R, A])(trace: Trace): Gen[R, A]", "member" : "zio.test.Gen.sized", "link" : "zio\/test\/Gen$.html#sized[R,A](f:Int=>zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,A]", "kind" : "def"}, {"label" : "size", "tail" : "(trace: Trace): Gen[Any, Int]", "member" : "zio.test.Gen.size", "link" : "zio\/test\/Gen$.html#size(implicittrace:zio.Trace):zio.test.Gen[Any,Int]", "kind" : "def"}, {"label" : "short", "tail" : "(min: Short, max: Short)(trace: Trace): Gen[Any, Short]", "member" : "zio.test.Gen.short", "link" : "zio\/test\/Gen$.html#short(min:Short,max:Short)(implicittrace:zio.Trace):zio.test.Gen[Any,Short]", "kind" : "def"}, {"label" : "short", "tail" : "(trace: Trace): Gen[Any, Short]", "member" : "zio.test.Gen.short", "link" : "zio\/test\/Gen$.html#short(implicittrace:zio.Trace):zio.test.Gen[Any,Short]", "kind" : "def"}, {"label" : "setOfN", "tail" : "(n: Int)(gen: Gen[R, A])(trace: Trace): Gen[R, Set[A]]", "member" : "zio.test.Gen.setOfN", "link" : "zio\/test\/Gen$.html#setOfN[R,A](n:Int)(gen:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,Set[A]]", "kind" : "def"}, {"label" : "setOfBounded", "tail" : "(min: Int, max: Int)(g: Gen[R, A])(trace: Trace): Gen[R, Set[A]]", "member" : "zio.test.Gen.setOfBounded", "link" : "zio\/test\/Gen$.html#setOfBounded[R,A](min:Int,max:Int)(g:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,Set[A]]", "kind" : "def"}, {"label" : "setOf1", "tail" : "(gen: Gen[R, A])(trace: Trace): Gen[R, Set[A]]", "member" : "zio.test.Gen.setOf1", "link" : "zio\/test\/Gen$.html#setOf1[R,A](gen:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,Set[A]]", "kind" : "def"}, {"label" : "setOf", "tail" : "(gen: Gen[R, A])(trace: Trace): Gen[R, Set[A]]", "member" : "zio.test.Gen.setOf", "link" : "zio\/test\/Gen$.html#setOf[R,A](gen:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,Set[A]]", "kind" : "def"}, {"label" : "printableChar", "tail" : "(trace: Trace): Gen[Any, Char]", "member" : "zio.test.Gen.printableChar", "link" : "zio\/test\/Gen$.html#printableChar(implicittrace:zio.Trace):zio.test.Gen[Any,Char]", "kind" : "def"}, {"label" : "partialFunctionWith", "tail" : "(gen: Gen[R, B])(hash: (A) => Int)(trace: Trace): Gen[R, PartialFunction[A, B]]", "member" : "zio.test.Gen.partialFunctionWith", "link" : "zio\/test\/Gen$.html#partialFunctionWith[R,A,B](gen:zio.test.Gen[R,B])(hash:A=>Int)(implicittrace:zio.Trace):zio.test.Gen[R,PartialFunction[A,B]]", "kind" : "def"}, {"label" : "partialFunction", "tail" : "(gen: Gen[R, B])(trace: Trace): Gen[R, PartialFunction[A, B]]", "member" : "zio.test.Gen.partialFunction", "link" : "zio\/test\/Gen$.html#partialFunction[R,A,B](gen:zio.test.Gen[R,B])(implicittrace:zio.Trace):zio.test.Gen[R,PartialFunction[A,B]]", "kind" : "def"}, {"label" : "oneOf", "tail" : "(as: Gen[R, A]*)(trace: Trace): Gen[R, A]", "member" : "zio.test.Gen.oneOf", "link" : "zio\/test\/Gen$.html#oneOf[R,A](as:zio.test.Gen[R,A]*)(implicittrace:zio.Trace):zio.test.Gen[R,A]", "kind" : "def"}, {"label" : "option", "tail" : "(gen: Gen[R, A])(trace: Trace): Gen[R, Option[A]]", "member" : "zio.test.Gen.option", "link" : "zio\/test\/Gen$.html#option[R,A](gen:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,Option[A]]", "kind" : "def"}, {"label" : "numericChar", "tail" : "(trace: Trace): Gen[Any, Char]", "member" : "zio.test.Gen.numericChar", "link" : "zio\/test\/Gen$.html#numericChar(implicittrace:zio.Trace):zio.test.Gen[Any,Char]", "kind" : "def"}, {"label" : "none", "tail" : "(trace: Trace): Gen[Any, Option[Nothing]]", "member" : "zio.test.Gen.none", "link" : "zio\/test\/Gen$.html#none(implicittrace:zio.Trace):zio.test.Gen[Any,Option[Nothing]]", "kind" : "def"}, {"label" : "medium", "tail" : "(f: (Int) => Gen[R, A], min: Int)(trace: Trace): Gen[R, A]", "member" : "zio.test.Gen.medium", "link" : "zio\/test\/Gen$.html#medium[R,A](f:Int=>zio.test.Gen[R,A],min:Int)(implicittrace:zio.Trace):zio.test.Gen[R,A]", "kind" : "def"}, {"label" : "mapOfBounded", "tail" : "(min: Int, max: Int)(key: Gen[R, A], value: Gen[R, B])(trace: Trace): Gen[R, Map[A, B]]", "member" : "zio.test.Gen.mapOfBounded", "link" : "zio\/test\/Gen$.html#mapOfBounded[R,A,B](min:Int,max:Int)(key:zio.test.Gen[R,A],value:zio.test.Gen[R,B])(implicittrace:zio.Trace):zio.test.Gen[R,Map[A,B]]", "kind" : "def"}, {"label" : "mapOfN", "tail" : "(n: Int)(key: Gen[R, A], value: Gen[R, B])(trace: Trace): Gen[R, Map[A, B]]", "member" : "zio.test.Gen.mapOfN", "link" : "zio\/test\/Gen$.html#mapOfN[R,A,B](n:Int)(key:zio.test.Gen[R,A],value:zio.test.Gen[R,B])(implicittrace:zio.Trace):zio.test.Gen[R,Map[A,B]]", "kind" : "def"}, {"label" : "mapOf1", "tail" : "(key: Gen[R, A], value: Gen[R, B])(trace: Trace): Gen[R, Map[A, B]]", "member" : "zio.test.Gen.mapOf1", "link" : "zio\/test\/Gen$.html#mapOf1[R,A,B](key:zio.test.Gen[R,A],value:zio.test.Gen[R,B])(implicittrace:zio.Trace):zio.test.Gen[R,Map[A,B]]", "kind" : "def"}, {"label" : "mapOf", "tail" : "(key: Gen[R, A], value: Gen[R, B])(trace: Trace): Gen[R, Map[A, B]]", "member" : "zio.test.Gen.mapOf", "link" : "zio\/test\/Gen$.html#mapOf[R,A,B](key:zio.test.Gen[R,A],value:zio.test.Gen[R,B])(implicittrace:zio.Trace):zio.test.Gen[R,Map[A,B]]", "kind" : "def"}, {"label" : "long", "tail" : "(min: Long, max: Long)(trace: Trace): Gen[Any, Long]", "member" : "zio.test.Gen.long", "link" : "zio\/test\/Gen$.html#long(min:Long,max:Long)(implicittrace:zio.Trace):zio.test.Gen[Any,Long]", "kind" : "def"}, {"label" : "long", "tail" : "(trace: Trace): Gen[Any, Long]", "member" : "zio.test.Gen.long", "link" : "zio\/test\/Gen$.html#long(implicittrace:zio.Trace):zio.test.Gen[Any,Long]", "kind" : "def"}, {"label" : "listOfN", "tail" : "(n: Int)(g: Gen[R, A])(trace: Trace): Gen[R, List[A]]", "member" : "zio.test.Gen.listOfN", "link" : "zio\/test\/Gen$.html#listOfN[R,A](n:Int)(g:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,List[A]]", "kind" : "def"}, {"label" : "listOfBounded", "tail" : "(min: Int, max: Int)(g: Gen[R, A])(trace: Trace): Gen[R, List[A]]", "member" : "zio.test.Gen.listOfBounded", "link" : "zio\/test\/Gen$.html#listOfBounded[R,A](min:Int,max:Int)(g:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,List[A]]", "kind" : "def"}, {"label" : "listOf1", "tail" : "(g: Gen[R, A])(trace: Trace): Gen[R, ::[A]]", "member" : "zio.test.Gen.listOf1", "link" : "zio\/test\/Gen$.html#listOf1[R,A](g:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,::[A]]", "kind" : "def"}, {"label" : "listOf", "tail" : "(g: Gen[R, A])(trace: Trace): Gen[R, List[A]]", "member" : "zio.test.Gen.listOf", "link" : "zio\/test\/Gen$.html#listOf[R,A](g:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,List[A]]", "kind" : "def"}, {"label" : "large", "tail" : "(f: (Int) => Gen[R, A], min: Int)(trace: Trace): Gen[R, A]", "member" : "zio.test.Gen.large", "link" : "zio\/test\/Gen$.html#large[R,A](f:Int=>zio.test.Gen[R,A],min:Int)(implicittrace:zio.Trace):zio.test.Gen[R,A]", "kind" : "def"}, {"label" : "iso_8859_1", "tail" : "(trace: Trace): Gen[Any, String]", "member" : "zio.test.Gen.iso_8859_1", "link" : "zio\/test\/Gen$.html#iso_8859_1(implicittrace:zio.Trace):zio.test.Gen[Any,String]", "kind" : "def"}, {"label" : "int", "tail" : "(min: Int, max: Int)(trace: Trace): Gen[Any, Int]", "member" : "zio.test.Gen.int", "link" : "zio\/test\/Gen$.html#int(min:Int,max:Int)(implicittrace:zio.Trace):zio.test.Gen[Any,Int]", "kind" : "def"}, {"label" : "int", "tail" : "(trace: Trace): Gen[Any, Int]", "member" : "zio.test.Gen.int", "link" : "zio\/test\/Gen$.html#int(implicittrace:zio.Trace):zio.test.Gen[Any,Int]", "kind" : "def"}, {"label" : "hexCharUpper", "tail" : "(trace: Trace): Gen[Any, Char]", "member" : "zio.test.Gen.hexCharUpper", "link" : "zio\/test\/Gen$.html#hexCharUpper(implicittrace:zio.Trace):zio.test.Gen[Any,Char]", "kind" : "def"}, {"label" : "hexCharLower", "tail" : "(trace: Trace): Gen[Any, Char]", "member" : "zio.test.Gen.hexCharLower", "link" : "zio\/test\/Gen$.html#hexCharLower(implicittrace:zio.Trace):zio.test.Gen[Any,Char]", "kind" : "def"}, {"label" : "hexChar", "tail" : "(trace: Trace): Gen[Any, Char]", "member" : "zio.test.Gen.hexChar", "link" : "zio\/test\/Gen$.html#hexChar(implicittrace:zio.Trace):zio.test.Gen[Any,Char]", "kind" : "def"}, {"label" : "float", "tail" : "(trace: Trace): Gen[Any, Float]", "member" : "zio.test.Gen.float", "link" : "zio\/test\/Gen$.html#float(implicittrace:zio.Trace):zio.test.Gen[Any,Float]", "kind" : "def"}, {"label" : "fromZIOSample", "tail" : "(effect: ZIO[R, Nothing, Sample[R, A]])(trace: Trace): Gen[R, A]", "member" : "zio.test.Gen.fromZIOSample", "link" : "zio\/test\/Gen$.html#fromZIOSample[R,A](effect:zio.ZIO[R,Nothing,zio.test.Sample[R,A]])(implicittrace:zio.Trace):zio.test.Gen[R,A]", "kind" : "def"}, {"label" : "fromZIO", "tail" : "(effect: URIO[R, A])(trace: Trace): Gen[R, A]", "member" : "zio.test.Gen.fromZIO", "link" : "zio\/test\/Gen$.html#fromZIO[R,A](effect:zio.URIO[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,A]", "kind" : "def"}, {"label" : "fromRandomSample", "tail" : "(f: (Random) => UIO[Sample[R, A]])(trace: Trace): Gen[R, A]", "member" : "zio.test.Gen.fromRandomSample", "link" : "zio\/test\/Gen$.html#fromRandomSample[R,A](f:zio.Random=>zio.UIO[zio.test.Sample[R,A]])(implicittrace:zio.Trace):zio.test.Gen[R,A]", "kind" : "final def"}, {"label" : "fromRandom", "tail" : "(f: (Random) => UIO[A])(trace: Trace): Gen[Any, A]", "member" : "zio.test.Gen.fromRandom", "link" : "zio\/test\/Gen$.html#fromRandom[A](f:zio.Random=>zio.UIO[A])(implicittrace:zio.Trace):zio.test.Gen[Any,A]", "kind" : "final def"}, {"label" : "fromIterable", "tail" : "(as: Iterable[A], shrinker: (A) => ZStream[R, Nothing, A])(trace: Trace): Gen[R, A]", "member" : "zio.test.Gen.fromIterable", "link" : "zio\/test\/Gen$.html#fromIterable[R,A](as:Iterable[A],shrinker:A=>zio.stream.ZStream[R,Nothing,A])(implicittrace:zio.Trace):zio.test.Gen[R,A]", "kind" : "def"}, {"label" : "exponential", "tail" : "(trace: Trace): Gen[Any, Double]", "member" : "zio.test.Gen.exponential", "link" : "zio\/test\/Gen$.html#exponential(implicittrace:zio.Trace):zio.test.Gen[Any,Double]", "kind" : "def"}, {"label" : "empty", "tail" : "(trace: Trace): Gen[Any, Nothing]", "member" : "zio.test.Gen.empty", "link" : "zio\/test\/Gen$.html#empty(implicittrace:zio.Trace):zio.test.Gen[Any,Nothing]", "kind" : "def"}, {"label" : "elements", "tail" : "(as: A*)(trace: Trace): Gen[Any, A]", "member" : "zio.test.Gen.elements", "link" : "zio\/test\/Gen$.html#elements[A](as:A*)(implicittrace:zio.Trace):zio.test.Gen[Any,A]", "kind" : "def"}, {"label" : "either", "tail" : "(left: Gen[R, A], right: Gen[R, B])(trace: Trace): Gen[R, Either[A, B]]", "member" : "zio.test.Gen.either", "link" : "zio\/test\/Gen$.html#either[R,A,B](left:zio.test.Gen[R,A],right:zio.test.Gen[R,B])(implicittrace:zio.Trace):zio.test.Gen[R,Either[A,B]]", "kind" : "def"}, {"label" : "double", "tail" : "(min: Double, max: Double)(trace: Trace): Gen[Any, Double]", "member" : "zio.test.Gen.double", "link" : "zio\/test\/Gen$.html#double(min:Double,max:Double)(implicittrace:zio.Trace):zio.test.Gen[Any,Double]", "kind" : "def"}, {"label" : "double", "tail" : "(trace: Trace): Gen[Any, Double]", "member" : "zio.test.Gen.double", "link" : "zio\/test\/Gen$.html#double(implicittrace:zio.Trace):zio.test.Gen[Any,Double]", "kind" : "def"}, {"label" : "currency", "tail" : "(trace: Trace): Gen[Any, Currency]", "member" : "zio.test.Gen.currency", "link" : "zio\/test\/Gen$.html#currency(implicittrace:zio.Trace):zio.test.Gen[Any,java.util.Currency]", "kind" : "def"}, {"label" : "constSample", "tail" : "(sample: => Sample[R, A])(trace: Trace): Gen[R, A]", "member" : "zio.test.Gen.constSample", "link" : "zio\/test\/Gen$.html#constSample[R,A](sample:=>zio.test.Sample[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,A]", "kind" : "def"}, {"label" : "const", "tail" : "(a: => A)(trace: Trace): Gen[Any, A]", "member" : "zio.test.Gen.const", "link" : "zio\/test\/Gen$.html#const[A](a:=>A)(implicittrace:zio.Trace):zio.test.Gen[Any,A]", "kind" : "def"}, {"label" : "concatAll", "tail" : "(gens: => Iterable[Gen[R, A]])(trace: Trace): Gen[R, A]", "member" : "zio.test.Gen.concatAll", "link" : "zio\/test\/Gen$.html#concatAll[R,A](gens:=>Iterable[zio.test.Gen[R,A]])(implicittrace:zio.Trace):zio.test.Gen[R,A]", "kind" : "def"}, {"label" : "collectAll", "tail" : "(gens: Iterable[Gen[R, A]])(trace: Trace): Gen[R, List[A]]", "member" : "zio.test.Gen.collectAll", "link" : "zio\/test\/Gen$.html#collectAll[R,A](gens:Iterable[zio.test.Gen[R,A]])(implicittrace:zio.Trace):zio.test.Gen[R,List[A]]", "kind" : "def"}, {"label" : "chunkOfN", "tail" : "(n: Int)(g: Gen[R, A])(trace: Trace): Gen[R, Chunk[A]]", "member" : "zio.test.Gen.chunkOfN", "link" : "zio\/test\/Gen$.html#chunkOfN[R,A](n:Int)(g:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,zio.Chunk[A]]", "kind" : "def"}, {"label" : "chunkOfBounded", "tail" : "(min: Int, max: Int)(g: Gen[R, A])(trace: Trace): Gen[R, Chunk[A]]", "member" : "zio.test.Gen.chunkOfBounded", "link" : "zio\/test\/Gen$.html#chunkOfBounded[R,A](min:Int,max:Int)(g:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,zio.Chunk[A]]", "kind" : "def"}, {"label" : "chunkOf1", "tail" : "(g: Gen[R, A])(trace: Trace): Gen[R, NonEmptyChunk[A]]", "member" : "zio.test.Gen.chunkOf1", "link" : "zio\/test\/Gen$.html#chunkOf1[R,A](g:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,zio.NonEmptyChunk[A]]", "kind" : "def"}, {"label" : "chunkOf", "tail" : "(g: Gen[R, A])(trace: Trace): Gen[R, Chunk[A]]", "member" : "zio.test.Gen.chunkOf", "link" : "zio\/test\/Gen$.html#chunkOf[R,A](g:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,zio.Chunk[A]]", "kind" : "def"}, {"label" : "char", "tail" : "(min: Char, max: Char)(trace: Trace): Gen[Any, Char]", "member" : "zio.test.Gen.char", "link" : "zio\/test\/Gen$.html#char(min:Char,max:Char)(implicittrace:zio.Trace):zio.test.Gen[Any,Char]", "kind" : "def"}, {"label" : "char", "tail" : "(trace: Trace): Gen[Any, Char]", "member" : "zio.test.Gen.char", "link" : "zio\/test\/Gen$.html#char(implicittrace:zio.Trace):zio.test.Gen[Any,Char]", "kind" : "def"}, {"label" : "byte", "tail" : "(min: Byte, max: Byte)(trace: Trace): Gen[Any, Byte]", "member" : "zio.test.Gen.byte", "link" : "zio\/test\/Gen$.html#byte(min:Byte,max:Byte)(implicittrace:zio.Trace):zio.test.Gen[Any,Byte]", "kind" : "def"}, {"label" : "byte", "tail" : "(trace: Trace): Gen[Any, Byte]", "member" : "zio.test.Gen.byte", "link" : "zio\/test\/Gen$.html#byte(implicittrace:zio.Trace):zio.test.Gen[Any,Byte]", "kind" : "def"}, {"label" : "bounded", "tail" : "(min: Int, max: Int)(f: (Int) => Gen[R, A])(trace: Trace): Gen[R, A]", "member" : "zio.test.Gen.bounded", "link" : "zio\/test\/Gen$.html#bounded[R,A](min:Int,max:Int)(f:Int=>zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,A]", "kind" : "def"}, {"label" : "boolean", "tail" : "(trace: Trace): Gen[Any, Boolean]", "member" : "zio.test.Gen.boolean", "link" : "zio\/test\/Gen$.html#boolean(implicittrace:zio.Trace):zio.test.Gen[Any,Boolean]", "kind" : "def"}, {"label" : "bigIntegerJava", "tail" : "(min: BigInt, max: BigInt)(trace: Trace): Gen[Any, BigInteger]", "member" : "zio.test.Gen.bigIntegerJava", "link" : "zio\/test\/Gen$.html#bigIntegerJava(min:BigInt,max:BigInt)(implicittrace:zio.Trace):zio.test.Gen[Any,java.math.BigInteger]", "kind" : "def"}, {"label" : "bigInt", "tail" : "(min: BigInt, max: BigInt)(trace: Trace): Gen[Any, BigInt]", "member" : "zio.test.Gen.bigInt", "link" : "zio\/test\/Gen$.html#bigInt(min:BigInt,max:BigInt)(implicittrace:zio.Trace):zio.test.Gen[Any,BigInt]", "kind" : "def"}, {"label" : "bigDecimalJava", "tail" : "(min: BigDecimal, max: BigDecimal)(trace: Trace): Gen[Any, BigDecimal]", "member" : "zio.test.Gen.bigDecimalJava", "link" : "zio\/test\/Gen$.html#bigDecimalJava(min:BigDecimal,max:BigDecimal)(implicittrace:zio.Trace):zio.test.Gen[Any,java.math.BigDecimal]", "kind" : "def"}, {"label" : "bigDecimal", "tail" : "(min: BigDecimal, max: BigDecimal)(trace: Trace): Gen[Any, BigDecimal]", "member" : "zio.test.Gen.bigDecimal", "link" : "zio\/test\/Gen$.html#bigDecimal(min:BigDecimal,max:BigDecimal)(implicittrace:zio.Trace):zio.test.Gen[Any,BigDecimal]", "kind" : "def"}, {"label" : "asciiString", "tail" : "(trace: Trace): Gen[Any, String]", "member" : "zio.test.Gen.asciiString", "link" : "zio\/test\/Gen$.html#asciiString(implicittrace:zio.Trace):zio.test.Gen[Any,String]", "kind" : "def"}, {"label" : "asciiChar", "tail" : "(trace: Trace): Gen[Any, Char]", "member" : "zio.test.Gen.asciiChar", "link" : "zio\/test\/Gen$.html#asciiChar(implicittrace:zio.Trace):zio.test.Gen[Any,Char]", "kind" : "def"}, {"label" : "alphaNumericStringBounded", "tail" : "(min: Int, max: Int)(trace: Trace): Gen[Any, String]", "member" : "zio.test.Gen.alphaNumericStringBounded", "link" : "zio\/test\/Gen$.html#alphaNumericStringBounded(min:Int,max:Int)(implicittrace:zio.Trace):zio.test.Gen[Any,String]", "kind" : "def"}, {"label" : "alphaNumericString", "tail" : "(trace: Trace): Gen[Any, String]", "member" : "zio.test.Gen.alphaNumericString", "link" : "zio\/test\/Gen$.html#alphaNumericString(implicittrace:zio.Trace):zio.test.Gen[Any,String]", "kind" : "def"}, {"label" : "alphaNumericChar", "tail" : "(trace: Trace): Gen[Any, Char]", "member" : "zio.test.Gen.alphaNumericChar", "link" : "zio\/test\/Gen$.html#alphaNumericChar(implicittrace:zio.Trace):zio.test.Gen[Any,Char]", "kind" : "def"}, {"label" : "alphaChar", "tail" : "(trace: Trace): Gen[Any, Char]", "member" : "zio.test.Gen.alphaChar", "link" : "zio\/test\/Gen$.html#alphaChar(implicittrace:zio.Trace):zio.test.Gen[Any,Char]", "kind" : "def"}, {"label" : "zoneOffset", "tail" : "(trace: Trace): Gen[Any, ZoneOffset]", "member" : "zio.test.TimeVariants.zoneOffset", "link" : "zio\/test\/Gen$.html#zoneOffset(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.ZoneOffset]", "kind" : "final def"}, {"label" : "zoneId", "tail" : "(trace: Trace): Gen[Any, ZoneId]", "member" : "zio.test.TimeVariants.zoneId", "link" : "zio\/test\/Gen$.html#zoneId(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.ZoneId]", "kind" : "final def"}, {"label" : "zonedDateTime", "tail" : "(min: ZonedDateTime, max: ZonedDateTime)(trace: Trace): Gen[Any, ZonedDateTime]", "member" : "zio.test.TimeVariants.zonedDateTime", "link" : "zio\/test\/Gen$.html#zonedDateTime(min:java.time.ZonedDateTime,max:java.time.ZonedDateTime)(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.ZonedDateTime]", "kind" : "final def"}, {"label" : "zonedDateTime", "tail" : "(trace: Trace): Gen[Any, ZonedDateTime]", "member" : "zio.test.TimeVariants.zonedDateTime", "link" : "zio\/test\/Gen$.html#zonedDateTime(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.ZonedDateTime]", "kind" : "final def"}, {"label" : "yearMonth", "tail" : "(min: YearMonth, max: YearMonth)(trace: Trace): Gen[Any, YearMonth]", "member" : "zio.test.TimeVariants.yearMonth", "link" : "zio\/test\/Gen$.html#yearMonth(min:java.time.YearMonth,max:java.time.YearMonth)(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.YearMonth]", "kind" : "final def"}, {"label" : "yearMonth", "tail" : "(trace: Trace): Gen[Any, YearMonth]", "member" : "zio.test.TimeVariants.yearMonth", "link" : "zio\/test\/Gen$.html#yearMonth(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.YearMonth]", "kind" : "final def"}, {"label" : "year", "tail" : "(trace: Trace): Gen[Any, Year]", "member" : "zio.test.TimeVariants.year", "link" : "zio\/test\/Gen$.html#year(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.Year]", "kind" : "final def"}, {"label" : "year", "tail" : "(min: Year, max: Year)(trace: Trace): Gen[Any, Year]", "member" : "zio.test.TimeVariants.year", "link" : "zio\/test\/Gen$.html#year(min:java.time.Year,max:java.time.Year)(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.Year]", "kind" : "final def"}, {"label" : "period", "tail" : "(trace: Trace): Gen[Any, Period]", "member" : "zio.test.TimeVariants.period", "link" : "zio\/test\/Gen$.html#period(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.Period]", "kind" : "final def"}, {"label" : "offsetTime", "tail" : "(trace: Trace): Gen[Any, OffsetTime]", "member" : "zio.test.TimeVariants.offsetTime", "link" : "zio\/test\/Gen$.html#offsetTime(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.OffsetTime]", "kind" : "final def"}, {"label" : "offsetDateTime", "tail" : "(min: OffsetDateTime, max: OffsetDateTime)(trace: Trace): Gen[Any, OffsetDateTime]", "member" : "zio.test.TimeVariants.offsetDateTime", "link" : "zio\/test\/Gen$.html#offsetDateTime(min:java.time.OffsetDateTime,max:java.time.OffsetDateTime)(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.OffsetDateTime]", "kind" : "final def"}, {"label" : "offsetDateTime", "tail" : "(trace: Trace): Gen[Any, OffsetDateTime]", "member" : "zio.test.TimeVariants.offsetDateTime", "link" : "zio\/test\/Gen$.html#offsetDateTime(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.OffsetDateTime]", "kind" : "final def"}, {"label" : "monthDay", "tail" : "(trace: Trace): Gen[Any, MonthDay]", "member" : "zio.test.TimeVariants.monthDay", "link" : "zio\/test\/Gen$.html#monthDay(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.MonthDay]", "kind" : "final def"}, {"label" : "month", "tail" : "(trace: Trace): Gen[Any, Month]", "member" : "zio.test.TimeVariants.month", "link" : "zio\/test\/Gen$.html#month(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.Month]", "kind" : "final def"}, {"label" : "localTime", "tail" : "(trace: Trace): Gen[Any, LocalTime]", "member" : "zio.test.TimeVariants.localTime", "link" : "zio\/test\/Gen$.html#localTime(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.LocalTime]", "kind" : "final def"}, {"label" : "localTime", "tail" : "(min: LocalTime, max: LocalTime)(trace: Trace): Gen[Any, LocalTime]", "member" : "zio.test.TimeVariants.localTime", "link" : "zio\/test\/Gen$.html#localTime(min:java.time.LocalTime,max:java.time.LocalTime)(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.LocalTime]", "kind" : "final def"}, {"label" : "localDateTime", "tail" : "(min: LocalDateTime, max: LocalDateTime)(trace: Trace): Gen[Any, LocalDateTime]", "member" : "zio.test.TimeVariants.localDateTime", "link" : "zio\/test\/Gen$.html#localDateTime(min:java.time.LocalDateTime,max:java.time.LocalDateTime)(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.LocalDateTime]", "kind" : "final def"}, {"label" : "localDateTime", "tail" : "(trace: Trace): Gen[Any, LocalDateTime]", "member" : "zio.test.TimeVariants.localDateTime", "link" : "zio\/test\/Gen$.html#localDateTime(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.LocalDateTime]", "kind" : "final def"}, {"label" : "localDate", "tail" : "(min: LocalDate, max: LocalDate)(trace: Trace): Gen[Any, LocalDate]", "member" : "zio.test.TimeVariants.localDate", "link" : "zio\/test\/Gen$.html#localDate(min:java.time.LocalDate,max:java.time.LocalDate)(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.LocalDate]", "kind" : "final def"}, {"label" : "localDate", "tail" : "(trace: Trace): Gen[Any, LocalDate]", "member" : "zio.test.TimeVariants.localDate", "link" : "zio\/test\/Gen$.html#localDate(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.LocalDate]", "kind" : "final def"}, {"label" : "instant", "tail" : "(min: Instant, max: Instant)(trace: Trace): Gen[Any, Instant]", "member" : "zio.test.TimeVariants.instant", "link" : "zio\/test\/Gen$.html#instant(min:java.time.Instant,max:java.time.Instant)(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.Instant]", "kind" : "final def"}, {"label" : "instant", "tail" : "(trace: Trace): Gen[Any, Instant]", "member" : "zio.test.TimeVariants.instant", "link" : "zio\/test\/Gen$.html#instant(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.Instant]", "kind" : "final def"}, {"label" : "finiteDuration", "tail" : "(min: zio.Duration, max: zio.Duration)(trace: Trace): Gen[Any, zio.Duration]", "member" : "zio.test.TimeVariants.finiteDuration", "link" : "zio\/test\/Gen$.html#finiteDuration(min:zio.Duration,max:zio.Duration)(implicittrace:zio.Trace):zio.test.Gen[Any,zio.Duration]", "kind" : "final def"}, {"label" : "finiteDuration", "tail" : "(trace: Trace): Gen[Any, zio.Duration]", "member" : "zio.test.TimeVariants.finiteDuration", "link" : "zio\/test\/Gen$.html#finiteDuration(implicittrace:zio.Trace):zio.test.Gen[Any,zio.Duration]", "kind" : "final def"}, {"label" : "dayOfWeek", "tail" : "(trace: Trace): Gen[Any, DayOfWeek]", "member" : "zio.test.TimeVariants.dayOfWeek", "link" : "zio\/test\/Gen$.html#dayOfWeek(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.DayOfWeek]", "kind" : "final def"}, {"label" : "functionWith4", "tail" : "(gen: Gen[R, E])(hash: (A, B, C, D) => Int)(trace: Trace): Gen[R, (A, B, C, D) => E]", "member" : "zio.test.FunctionVariants.functionWith4", "link" : "zio\/test\/Gen$.html#functionWith4[R,A,B,C,D,E](gen:zio.test.Gen[R,E])(hash:(A,B,C,D)=>Int)(implicittrace:zio.Trace):zio.test.Gen[R,(A,B,C,D)=>E]", "kind" : "final def"}, {"label" : "functionWith3", "tail" : "(gen: Gen[R, D])(hash: (A, B, C) => Int)(trace: Trace): Gen[R, (A, B, C) => D]", "member" : "zio.test.FunctionVariants.functionWith3", "link" : "zio\/test\/Gen$.html#functionWith3[R,A,B,C,D](gen:zio.test.Gen[R,D])(hash:(A,B,C)=>Int)(implicittrace:zio.Trace):zio.test.Gen[R,(A,B,C)=>D]", "kind" : "final def"}, {"label" : "functionWith2", "tail" : "(gen: Gen[R, C])(hash: (A, B) => Int)(trace: Trace): Gen[R, (A, B) => C]", "member" : "zio.test.FunctionVariants.functionWith2", "link" : "zio\/test\/Gen$.html#functionWith2[R,A,B,C](gen:zio.test.Gen[R,C])(hash:(A,B)=>Int)(implicittrace:zio.Trace):zio.test.Gen[R,(A,B)=>C]", "kind" : "final def"}, {"label" : "functionWith", "tail" : "(gen: Gen[R, B])(hash: (A) => Int)(trace: Trace): Gen[R, (A) => B]", "member" : "zio.test.FunctionVariants.functionWith", "link" : "zio\/test\/Gen$.html#functionWith[R,A,B](gen:zio.test.Gen[R,B])(hash:A=>Int)(implicittrace:zio.Trace):zio.test.Gen[R,A=>B]", "kind" : "final def"}, {"label" : "function4", "tail" : "(gen: Gen[R, E])(trace: Trace): Gen[R, (A, B, C, D) => E]", "member" : "zio.test.FunctionVariants.function4", "link" : "zio\/test\/Gen$.html#function4[R,A,B,C,D,E](gen:zio.test.Gen[R,E])(implicittrace:zio.Trace):zio.test.Gen[R,(A,B,C,D)=>E]", "kind" : "final def"}, {"label" : "function3", "tail" : "(gen: Gen[R, D])(trace: Trace): Gen[R, (A, B, C) => D]", "member" : "zio.test.FunctionVariants.function3", "link" : "zio\/test\/Gen$.html#function3[R,A,B,C,D](gen:zio.test.Gen[R,D])(implicittrace:zio.Trace):zio.test.Gen[R,(A,B,C)=>D]", "kind" : "final def"}, {"label" : "function2", "tail" : "(gen: Gen[R, C])(trace: Trace): Gen[R, (A, B) => C]", "member" : "zio.test.FunctionVariants.function2", "link" : "zio\/test\/Gen$.html#function2[R,A,B,C](gen:zio.test.Gen[R,C])(implicittrace:zio.Trace):zio.test.Gen[R,(A,B)=>C]", "kind" : "final def"}, {"label" : "function", "tail" : "(gen: Gen[R, B])(trace: Trace): Gen[R, (A) => B]", "member" : "zio.test.FunctionVariants.function", "link" : "zio\/test\/Gen$.html#function[R,A,B](gen:zio.test.Gen[R,B])(implicittrace:zio.Trace):zio.test.Gen[R,A=>B]", "kind" : "final def"}, {"label" : "successes", "tail" : "(gen: Gen[R, A])(trace: Trace): Gen[R, UIO[A]]", "member" : "zio.test.GenZIO.successes", "link" : "zio\/test\/Gen$.html#successes[R,A](gen:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,zio.UIO[A]]", "kind" : "final def"}, {"label" : "parallel", "tail" : "(zio: ZIO[R, E, A])(trace: Trace): Gen[Any, ZIO[R, E, A]]", "member" : "zio.test.GenZIO.parallel", "link" : "zio\/test\/Gen$.html#parallel[R,E,A](zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.test.Gen[Any,zio.ZIO[R,E,A]]", "kind" : "final def"}, {"label" : "failures", "tail" : "(gen: Gen[R, E])(trace: Trace): Gen[R, IO[E, Nothing]]", "member" : "zio.test.GenZIO.failures", "link" : "zio\/test\/Gen$.html#failures[R,E](gen:zio.test.Gen[R,E])(implicittrace:zio.Trace):zio.test.Gen[R,zio.IO[E,Nothing]]", "kind" : "final def"}, {"label" : "died", "tail" : "(gen: Gen[R, Throwable])(trace: Trace): Gen[R, UIO[Nothing]]", "member" : "zio.test.GenZIO.died", "link" : "zio\/test\/Gen$.html#died[R](gen:zio.test.Gen[R,Throwable])(implicittrace:zio.Trace):zio.test.Gen[R,zio.UIO[Nothing]]", "kind" : "final def"}, {"label" : "concurrent", "tail" : "(zio: ZIO[R, E, A])(trace: Trace): Gen[Any, ZIO[R, E, A]]", "member" : "zio.test.GenZIO.concurrent", "link" : "zio\/test\/Gen$.html#concurrent[R,E,A](zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.test.Gen[Any,zio.ZIO[R,E,A]]", "kind" : "final def"}, {"label" : "chainedN", "tail" : "(n: Int)(zio: Gen[R, ZIO[Env, E, A]])(trace: Trace): Gen[R, ZIO[Env, E, A]]", "member" : "zio.test.GenZIO.chainedN", "link" : "zio\/test\/Gen$.html#chainedN[R,Env,E,A](n:Int)(zio:zio.test.Gen[R,zio.ZIO[Env,E,A]])(implicittrace:zio.Trace):zio.test.Gen[R,zio.ZIO[Env,E,A]]", "kind" : "final def"}, {"label" : "chained", "tail" : "(gen: Gen[R, ZIO[Env, E, A]])(trace: Trace): Gen[R, ZIO[Env, E, A]]", "member" : "zio.test.GenZIO.chained", "link" : "zio\/test\/Gen$.html#chained[R,Env,E,A](gen:zio.test.Gen[R,zio.ZIO[Env,E,A]])(implicittrace:zio.Trace):zio.test.Gen[R,zio.ZIO[Env,E,A]]", "kind" : "final def"}, {"label" : "causes", "tail" : "(e: Gen[R, E], t: Gen[R, Throwable])(trace: Trace): Gen[R, Cause[E]]", "member" : "zio.test.GenZIO.causes", "link" : "zio\/test\/Gen$.html#causes[R,E](e:zio.test.Gen[R,E],t:zio.test.Gen[R,Throwable])(implicittrace:zio.Trace):zio.test.Gen[R,zio.Cause[E]]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/Gen$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/Gen$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/Gen$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/Gen$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/Gen$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/Gen$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/Gen$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/Gen$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/Gen$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/Gen$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/Gen$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/Gen$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Gen$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Gen$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Gen$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/Gen$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/Gen$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/Gen$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/Gen$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "zipWith", "tail" : "(that: Gen[R1, B])(f: (A, B) => C)(trace: Trace): Gen[R1, C]", "member" : "zio.test.Gen.zipWith", "link" : "zio\/test\/Gen.html#zipWith[R1<:R,B,C](that:zio.test.Gen[R1,B])(f:(A,B)=>C)(implicittrace:zio.Trace):zio.test.Gen[R1,C]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Gen[R1, B])(zippable: Zippable[A, B], trace: Trace): Gen[R1, Out]", "member" : "zio.test.Gen.zip", "link" : "zio\/test\/Gen.html#zip[R1<:R,B](that:zio.test.Gen[R1,B])(implicitzippable:zio.Zippable[A,B],implicittrace:zio.Trace):zio.test.Gen[R1,zippable.Out]", "kind" : "def"}, {"label" : "runHead", "tail" : "(trace: Trace): ZIO[R, Nothing, Option[A]]", "member" : "zio.test.Gen.runHead", "link" : "zio\/test\/Gen.html#runHead(implicittrace:zio.Trace):zio.ZIO[R,Nothing,Option[A]]", "kind" : "def"}, {"label" : "runCollectN", "tail" : "(n: Int)(trace: Trace): ZIO[R, Nothing, List[A]]", "member" : "zio.test.Gen.runCollectN", "link" : "zio\/test\/Gen.html#runCollectN(n:Int)(implicittrace:zio.Trace):zio.ZIO[R,Nothing,List[A]]", "kind" : "def"}, {"label" : "runCollect", "tail" : "(trace: Trace): ZIO[R, Nothing, List[A]]", "member" : "zio.test.Gen.runCollect", "link" : "zio\/test\/Gen.html#runCollect(implicittrace:zio.Trace):zio.ZIO[R,Nothing,List[A]]", "kind" : "def"}, {"label" : "resize", "tail" : "(size: Int)(trace: Trace): Gen[R, A]", "member" : "zio.test.Gen.resize", "link" : "zio\/test\/Gen.html#resize(size:Int)(implicittrace:zio.Trace):zio.test.Gen[R,A]", "kind" : "def"}, {"label" : "reshrink", "tail" : "(f: (A) => Sample[R1, B])(trace: Trace): Gen[R1, B]", "member" : "zio.test.Gen.reshrink", "link" : "zio\/test\/Gen.html#reshrink[R1<:R,B](f:A=>zio.test.Sample[R1,B])(implicittrace:zio.Trace):zio.test.Gen[R1,B]", "kind" : "def"}, {"label" : "noShrink", "tail" : "(trace: Trace): Gen[R, A]", "member" : "zio.test.Gen.noShrink", "link" : "zio\/test\/Gen.html#noShrink(implicittrace:zio.Trace):zio.test.Gen[R,A]", "kind" : "def"}, {"label" : "mapZIO", "tail" : "(f: (A) => ZIO[R1, Nothing, B])(trace: Trace): Gen[R1, B]", "member" : "zio.test.Gen.mapZIO", "link" : "zio\/test\/Gen.html#mapZIO[R1<:R,B](f:A=>zio.ZIO[R1,Nothing,B])(implicittrace:zio.Trace):zio.test.Gen[R1,B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B)(trace: Trace): Gen[R, B]", "member" : "zio.test.Gen.map", "link" : "zio\/test\/Gen.html#map[B](f:A=>B)(implicittrace:zio.Trace):zio.test.Gen[R,B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: <:<[A, Gen[R1, B]], trace: Trace): Gen[R1, B]", "member" : "zio.test.Gen.flatten", "link" : "zio\/test\/Gen.html#flatten[R1<:R,B](implicitev:A<:<zio.test.Gen[R1,B],implicittrace:zio.Trace):zio.test.Gen[R1,B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) => Gen[R1, B])(trace: Trace): Gen[R1, B]", "member" : "zio.test.Gen.flatMap", "link" : "zio\/test\/Gen.html#flatMap[R1<:R,B](f:A=>zio.test.Gen[R1,B])(implicittrace:zio.Trace):zio.test.Gen[R1,B]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(f: (A) => Boolean)(trace: Trace): Gen[R, A]", "member" : "zio.test.Gen.withFilter", "link" : "zio\/test\/Gen.html#withFilter(f:A=>Boolean)(implicittrace:zio.Trace):zio.test.Gen[R,A]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(f: (A) => Boolean)(trace: Trace): Gen[R, A]", "member" : "zio.test.Gen.filterNot", "link" : "zio\/test\/Gen.html#filterNot(f:A=>Boolean)(implicittrace:zio.Trace):zio.test.Gen[R,A]", "kind" : "def"}, {"label" : "filterZIO", "tail" : "(f: (A) => ZIO[R1, Nothing, Boolean])(trace: Trace): Gen[R1, A]", "member" : "zio.test.Gen.filterZIO", "link" : "zio\/test\/Gen.html#filterZIO[R1<:R](f:A=>zio.ZIO[R1,Nothing,Boolean])(implicittrace:zio.Trace):zio.test.Gen[R1,A]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (A) => Boolean)(trace: Trace): Gen[R, A]", "member" : "zio.test.Gen.filter", "link" : "zio\/test\/Gen.html#filter(f:A=>Boolean)(implicittrace:zio.Trace):zio.test.Gen[R,A]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[A, B])(trace: Trace): Gen[R, B]", "member" : "zio.test.Gen.collect", "link" : "zio\/test\/Gen.html#collect[B](pf:PartialFunction[A,B])(implicittrace:zio.Trace):zio.test.Gen[R,B]", "kind" : "def"}, {"label" : "concat", "tail" : "(that: Gen[R1, A1])(trace: Trace): Gen[R1, A1]", "member" : "zio.test.Gen.concat", "link" : "zio\/test\/Gen.html#concat[R1<:R,A1>:A](that:zio.test.Gen[R1,A1])(implicittrace:zio.Trace):zio.test.Gen[R1,A1]", "kind" : "def"}, {"label" : "<*>", "tail" : "(that: Gen[R1, B])(zippable: Zippable[A, B], trace: Trace): Gen[R1, Out]", "member" : "zio.test.Gen.<*>", "link" : "zio\/test\/Gen.html#<*>[R1<:R,B](that:zio.test.Gen[R1,B])(implicitzippable:zio.Zippable[A,B],implicittrace:zio.Trace):zio.test.Gen[R1,zippable.Out]", "kind" : "def"}, {"label" : "++", "tail" : "(that: Gen[R1, A1])(trace: Trace): Gen[R1, A1]", "member" : "zio.test.Gen.++", "link" : "zio\/test\/Gen.html#++[R1<:R,A1>:A](that:zio.test.Gen[R1,A1])(implicittrace:zio.Trace):zio.test.Gen[R1,A1]", "kind" : "def"}, {"member" : "zio.test.Gen#<init>", "error" : "unsupported entity"}, {"label" : "sample", "tail" : ": ZStream[R, Nothing, Sample[R, A]]", "member" : "zio.test.Gen.sample", "link" : "zio\/test\/Gen.html#sample:zio.stream.ZStream[R,Nothing,zio.test.Sample[R,A]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/test\/Gen.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/Gen.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/Gen.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/Gen.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/Gen.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/Gen.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/Gen.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/Gen.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/Gen.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/Gen.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/Gen.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/Gen.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Gen.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Gen.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Gen.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/Gen.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/Gen.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/test\/Gen.html", "kind" : "case class"}, {"name" : "zio.test.GenFailureDetails", "shortDescription" : "GenFailureDetails keeps track of relevant information related to a failurein a generative test.", "object" : "zio\/test\/GenFailureDetails$.html", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/GenFailureDetails.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/GenFailureDetails.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/GenFailureDetails.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/GenFailureDetails.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/GenFailureDetails.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/GenFailureDetails.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/GenFailureDetails.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/GenFailureDetails.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/GenFailureDetails.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/GenFailureDetails.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/GenFailureDetails.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/GenFailureDetails.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/GenFailureDetails.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/GenFailureDetails.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/GenFailureDetails.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/GenFailureDetails.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/GenFailureDetails.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/GenFailureDetails.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/GenFailureDetails.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "iterations", "tail" : ": Long", "member" : "zio.test.GenFailureDetails.iterations", "link" : "zio\/test\/GenFailureDetails.html#iterations:Long", "kind" : "abstract val"}, {"label" : "shrunkenInput", "tail" : ": Value", "member" : "zio.test.GenFailureDetails.shrunkenInput", "link" : "zio\/test\/GenFailureDetails.html#shrunkenInput:GenFailureDetails.this.Value", "kind" : "abstract val"}, {"label" : "initialInput", "tail" : ": Value", "member" : "zio.test.GenFailureDetails.initialInput", "link" : "zio\/test\/GenFailureDetails.html#initialInput:GenFailureDetails.this.Value", "kind" : "abstract val"}, {"member" : "zio.test.GenFailureDetails.Value", "error" : "unsupported entity"}], "members_object" : [{"label" : "apply", "tail" : "(initialInput0: A, shrunkenInput0: A, iterations0: Long): GenFailureDetails", "member" : "zio.test.GenFailureDetails.apply", "link" : "zio\/test\/GenFailureDetails$.html#apply[A](initialInput0:A,shrunkenInput0:A,iterations0:Long):zio.test.GenFailureDetails", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/GenFailureDetails$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/GenFailureDetails$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/GenFailureDetails$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/GenFailureDetails$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/GenFailureDetails$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/GenFailureDetails$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/GenFailureDetails$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/GenFailureDetails$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/GenFailureDetails$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/GenFailureDetails$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/GenFailureDetails$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/GenFailureDetails$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/GenFailureDetails$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/GenFailureDetails$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/GenFailureDetails$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/GenFailureDetails$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/GenFailureDetails$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/GenFailureDetails$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/GenFailureDetails$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/test\/GenFailureDetails.html", "kind" : "class"}, {"name" : "zio.test.GenZIO", "trait" : "zio\/test\/GenZIO.html", "kind" : "trait", "members_trait" : [{"label" : "successes", "tail" : "(gen: Gen[R, A])(trace: Trace): Gen[R, UIO[A]]", "member" : "zio.test.GenZIO.successes", "link" : "zio\/test\/GenZIO.html#successes[R,A](gen:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,zio.UIO[A]]", "kind" : "final def"}, {"label" : "parallel", "tail" : "(zio: ZIO[R, E, A])(trace: Trace): Gen[Any, ZIO[R, E, A]]", "member" : "zio.test.GenZIO.parallel", "link" : "zio\/test\/GenZIO.html#parallel[R,E,A](zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.test.Gen[Any,zio.ZIO[R,E,A]]", "kind" : "final def"}, {"label" : "failures", "tail" : "(gen: Gen[R, E])(trace: Trace): Gen[R, IO[E, Nothing]]", "member" : "zio.test.GenZIO.failures", "link" : "zio\/test\/GenZIO.html#failures[R,E](gen:zio.test.Gen[R,E])(implicittrace:zio.Trace):zio.test.Gen[R,zio.IO[E,Nothing]]", "kind" : "final def"}, {"label" : "died", "tail" : "(gen: Gen[R, Throwable])(trace: Trace): Gen[R, UIO[Nothing]]", "member" : "zio.test.GenZIO.died", "link" : "zio\/test\/GenZIO.html#died[R](gen:zio.test.Gen[R,Throwable])(implicittrace:zio.Trace):zio.test.Gen[R,zio.UIO[Nothing]]", "kind" : "final def"}, {"label" : "concurrent", "tail" : "(zio: ZIO[R, E, A])(trace: Trace): Gen[Any, ZIO[R, E, A]]", "member" : "zio.test.GenZIO.concurrent", "link" : "zio\/test\/GenZIO.html#concurrent[R,E,A](zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.test.Gen[Any,zio.ZIO[R,E,A]]", "kind" : "final def"}, {"label" : "chainedN", "tail" : "(n: Int)(zio: Gen[R, ZIO[Env, E, A]])(trace: Trace): Gen[R, ZIO[Env, E, A]]", "member" : "zio.test.GenZIO.chainedN", "link" : "zio\/test\/GenZIO.html#chainedN[R,Env,E,A](n:Int)(zio:zio.test.Gen[R,zio.ZIO[Env,E,A]])(implicittrace:zio.Trace):zio.test.Gen[R,zio.ZIO[Env,E,A]]", "kind" : "final def"}, {"label" : "chained", "tail" : "(gen: Gen[R, ZIO[Env, E, A]])(trace: Trace): Gen[R, ZIO[Env, E, A]]", "member" : "zio.test.GenZIO.chained", "link" : "zio\/test\/GenZIO.html#chained[R,Env,E,A](gen:zio.test.Gen[R,zio.ZIO[Env,E,A]])(implicittrace:zio.Trace):zio.test.Gen[R,zio.ZIO[Env,E,A]]", "kind" : "final def"}, {"label" : "causes", "tail" : "(e: Gen[R, E], t: Gen[R, Throwable])(trace: Trace): Gen[R, Cause[E]]", "member" : "zio.test.GenZIO.causes", "link" : "zio\/test\/GenZIO.html#causes[R,E](e:zio.test.Gen[R,E],t:zio.test.Gen[R,Throwable])(implicittrace:zio.Trace):zio.test.Gen[R,zio.Cause[E]]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/GenZIO.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/GenZIO.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/GenZIO.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/GenZIO.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/GenZIO.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/GenZIO.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/GenZIO.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/GenZIO.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/GenZIO.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/GenZIO.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/GenZIO.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/GenZIO.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/GenZIO.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/GenZIO.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/GenZIO.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/GenZIO.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/GenZIO.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/GenZIO.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/GenZIO.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.Live", "object" : "zio\/test\/Live$.html", "members_object" : [{"label" : "withLive", "tail" : "(zio: ZIO[R, E, A])(f: (ZIO[R, E, A]) => ZIO[R, E1, B])(trace: Trace): ZIO[R, E1, B]", "member" : "zio.test.Live.withLive", "link" : "zio\/test\/Live$.html#withLive[R,E,E1,A,B](zio:zio.ZIO[R,E,A])(f:zio.ZIO[R,E,A]=>zio.ZIO[R,E1,B])(implicittrace:zio.Trace):zio.ZIO[R,E1,B]", "kind" : "def"}, {"label" : "live", "tail" : "(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.test.Live.live", "link" : "zio\/test\/Live$.html#live[R,E,A](zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "default", "tail" : ": ZLayer[Clock with Console with System with Random, Nothing, Live]", "member" : "zio.test.Live.default", "link" : "zio\/test\/Live$.html#default:zio.ZLayer[zio.Clockwithzio.Consolewithzio.Systemwithzio.Random,Nothing,zio.test.Live]", "kind" : "val"}, {"label" : "Test", "tail" : "", "member" : "zio.test.Live.Test", "link" : "zio\/test\/Live$.html#TestextendsLivewithProductwithSerializable", "kind" : "final case class"}, {"label" : "tag", "tail" : ": Tag[Live]", "member" : "zio.test.Live.tag", "link" : "zio\/test\/Live$.html#tag:zio.Tag[zio.test.Live]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/Live$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/Live$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/Live$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/Live$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/Live$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/Live$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/Live$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/Live$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/Live$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/Live$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/Live$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/Live$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Live$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Live$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Live$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/Live$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/Live$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/Live$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/Live$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/Live.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/Live.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/Live.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/Live.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/Live.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/Live.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/Live.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/Live.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/Live.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/Live.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/Live.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/Live.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/Live.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Live.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Live.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Live.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/Live.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/Live.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/Live.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/Live.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "provide", "tail" : "(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.test.Live.provide", "link" : "zio\/test\/Live.html#provide[R,E,A](zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "abstract def"}], "shortDescription" : "The Live trait provides access to the \"live\" default ZIO services fromwithin ZIO Test for workflows such as printing test results to the console ortiming out tests where it is necessary to access the real implementations ofthese services."}, {"name" : "zio.test.ProvideSomePartiallyApplied", "shortDescription" : "", "members_class" : [{"label" : "apply", "tail" : "(layer: ZLayer[_, E1, _]*): ZSpec[R0, E1, TestSuccess]", "member" : "zio.test.ProvideSomePartiallyApplied.apply", "link" : "zio\/test\/ProvideSomePartiallyApplied.html#apply[E1>:E](layer:zio.ZLayer[_,E1,_]*):ProvideSomePartiallyApplied.this.ZSpec[R0,E1,zio.test.TestSuccess]", "kind" : "macro def"}, {"label" : "provideLayer", "tail" : "(layer: ZLayer[R0, E1, R]): Spec[R0, E1]", "member" : "zio.test.ProvideSomePartiallyApplied.provideLayer", "link" : "zio\/test\/ProvideSomePartiallyApplied.html#provideLayer[E1>:E](layer:zio.ZLayer[R0,E1,R]):zio.test.Spec[R0,E1]", "kind" : "def"}, {"label" : "ZSpec", "tail" : "", "member" : "zio.test.ProvideSomePartiallyApplied.ZSpec", "link" : "zio\/test\/ProvideSomePartiallyApplied.html#ZSpec[-R,+E,+T]=zio.test.Spec[R,E]", "kind" : "type"}, {"member" : "zio.test.ProvideSomePartiallyApplied#<init>", "error" : "unsupported entity"}, {"label" : "self", "tail" : ": Spec[R, E]", "member" : "zio.test.ProvideSomePartiallyApplied.self", "link" : "zio\/test\/ProvideSomePartiallyApplied.html#self:zio.test.Spec[R,E]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/test\/ProvideSomePartiallyApplied.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/test\/ProvideSomePartiallyApplied.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/ProvideSomePartiallyApplied.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/ProvideSomePartiallyApplied.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/test\/ProvideSomePartiallyApplied.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/test\/ProvideSomePartiallyApplied.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/test\/ProvideSomePartiallyApplied.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "zio\/test\/ProvideSomePartiallyApplied.html", "kind" : "class"}, {"name" : "zio.test.ProvideSomeSharedPartiallyApplied", "shortDescription" : "", "members_class" : [{"label" : "apply", "tail" : "(layer: ZLayer[_, E1, _]*): Spec[R0, E1]", "member" : "zio.test.ProvideSomeSharedPartiallyApplied.apply", "link" : "zio\/test\/ProvideSomeSharedPartiallyApplied.html#apply[E1>:E](layer:zio.ZLayer[_,E1,_]*):zio.test.Spec[R0,E1]", "kind" : "macro def"}, {"label" : "provideSomeLayerShared", "tail" : "(): ProvideSomeLayerShared[R0, R, E]", "member" : "zio.test.ProvideSomeSharedPartiallyApplied.provideSomeLayerShared", "link" : "zio\/test\/ProvideSomeSharedPartiallyApplied.html#provideSomeLayerShared:zio.test.Spec.ProvideSomeLayerShared[R0,R,E]", "kind" : "def"}, {"member" : "zio.test.ProvideSomeSharedPartiallyApplied#<init>", "error" : "unsupported entity"}, {"label" : "self", "tail" : ": Spec[R, E]", "member" : "zio.test.ProvideSomeSharedPartiallyApplied.self", "link" : "zio\/test\/ProvideSomeSharedPartiallyApplied.html#self:zio.test.Spec[R,E]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/test\/ProvideSomeSharedPartiallyApplied.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/test\/ProvideSomeSharedPartiallyApplied.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/ProvideSomeSharedPartiallyApplied.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/ProvideSomeSharedPartiallyApplied.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/test\/ProvideSomeSharedPartiallyApplied.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/test\/ProvideSomeSharedPartiallyApplied.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/test\/ProvideSomeSharedPartiallyApplied.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "zio\/test\/ProvideSomeSharedPartiallyApplied.html", "kind" : "class"}, {"name" : "zio.test.ReporterEventRenderer", "object" : "zio\/test\/ReporterEventRenderer$.html", "members_object" : [{"label" : "IntelliJEventRenderer", "tail" : "", "member" : "zio.test.ReporterEventRenderer.IntelliJEventRenderer", "link" : "zio\/test\/ReporterEventRenderer$.html#IntelliJEventRenderer", "kind" : "object"}, {"label" : "ConsoleEventRenderer", "tail" : "", "member" : "zio.test.ReporterEventRenderer.ConsoleEventRenderer", "link" : "zio\/test\/ReporterEventRenderer$.html#ConsoleEventRenderer", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/ReporterEventRenderer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/ReporterEventRenderer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/ReporterEventRenderer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/ReporterEventRenderer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/ReporterEventRenderer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/ReporterEventRenderer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/ReporterEventRenderer$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/ReporterEventRenderer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/ReporterEventRenderer$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/ReporterEventRenderer$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/ReporterEventRenderer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/ReporterEventRenderer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ReporterEventRenderer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ReporterEventRenderer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ReporterEventRenderer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/ReporterEventRenderer$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/ReporterEventRenderer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/ReporterEventRenderer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/ReporterEventRenderer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/ReporterEventRenderer.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/ReporterEventRenderer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/ReporterEventRenderer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/ReporterEventRenderer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/ReporterEventRenderer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/ReporterEventRenderer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/ReporterEventRenderer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/ReporterEventRenderer.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/ReporterEventRenderer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/ReporterEventRenderer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/ReporterEventRenderer.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/ReporterEventRenderer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/ReporterEventRenderer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ReporterEventRenderer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ReporterEventRenderer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ReporterEventRenderer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/ReporterEventRenderer.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/ReporterEventRenderer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/ReporterEventRenderer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/ReporterEventRenderer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "render", "tail" : "(event: ExecutionEvent)(trace: Trace): Chunk[String]", "member" : "zio.test.ReporterEventRenderer.render", "link" : "zio\/test\/ReporterEventRenderer.html#render(event:zio.test.ExecutionEvent)(implicittrace:zio.Trace):zio.Chunk[String]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.test.Restorable", "trait" : "zio\/test\/Restorable.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/Restorable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/Restorable.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/Restorable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/Restorable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/Restorable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/Restorable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/Restorable.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/Restorable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/Restorable.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/Restorable.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/Restorable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/Restorable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Restorable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Restorable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Restorable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/Restorable.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/Restorable.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/Restorable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/Restorable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "save", "tail" : "(trace: Trace): UIO[UIO[Unit]]", "member" : "zio.test.Restorable.save", "link" : "zio\/test\/Restorable.html#save(implicittrace:zio.Trace):zio.UIO[zio.UIO[Unit]]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.test.Result", "object" : "zio\/test\/Result$.html", "members_object" : [{"label" : "Succeed", "tail" : "", "member" : "zio.test.Result.Succeed", "link" : "zio\/test\/Result$.html#Succeed[+A]extendsResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Die", "tail" : "", "member" : "zio.test.Result.Die", "link" : "zio\/test\/Result$.html#DieextendsResult[Nothing]withProductwithSerializable", "kind" : "case class"}, {"label" : "Fail", "tail" : "", "member" : "zio.test.Result.Fail", "link" : "zio\/test\/Result$.html#Fail", "kind" : "case object"}, {"label" : "die", "tail" : "(throwable: Throwable): Result[Nothing]", "member" : "zio.test.Result.die", "link" : "zio\/test\/Result$.html#die(throwable:Throwable):zio.test.Result[Nothing]", "kind" : "def"}, {"label" : "fail", "tail" : "(): Result[Nothing]", "member" : "zio.test.Result.fail", "link" : "zio\/test\/Result$.html#fail:zio.test.Result[Nothing]", "kind" : "def"}, {"label" : "succeed", "tail" : "(value: A): Result[A]", "member" : "zio.test.Result.succeed", "link" : "zio\/test\/Result$.html#succeed[A](value:A):zio.test.Result[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/Result$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/Result$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/Result$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/Result$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/Result$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/Result$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/Result$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/Result$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/Result$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/Result$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/Result$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/Result$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Result$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Result$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Result$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/Result$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/Result$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/Result$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/Result$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/Result.html", "kind" : "trait", "members_trait" : [{"label" : "zipWith", "tail" : "(that: Result[B])(f: (A, B) => C): Result[C]", "member" : "zio.test.Result.zipWith", "link" : "zio\/test\/Result.html#zipWith[B,C](that:zio.test.Result[B])(f:(A,B)=>C):zio.test.Result[C]", "kind" : "def"}, {"label" : "isDie", "tail" : "(): Boolean", "member" : "zio.test.Result.isDie", "link" : "zio\/test\/Result.html#isDie:Boolean", "kind" : "def"}, {"label" : "isFailOrDie", "tail" : "(): Boolean", "member" : "zio.test.Result.isFailOrDie", "link" : "zio\/test\/Result.html#isFailOrDie:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/Result.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/Result.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/Result.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/Result.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/Result.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/Result.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/Result.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/Result.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/Result.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/Result.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/Result.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/Result.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Result.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Result.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Result.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/Result.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/Result.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/Result.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/Result.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.Sample", "shortDescription" : "A sample is a single observation from a random variable, together with a treeof \"shrinkings\" used for minimization of \"large\" failures.", "object" : "zio\/test\/Sample$.html", "members_object" : [{"label" : "unfold", "tail" : "(s: S)(f: (S) => (A, ZStream[R, Nothing, S]))(trace: Trace): Sample[R, A]", "member" : "zio.test.Sample.unfold", "link" : "zio\/test\/Sample$.html#unfold[R,A,S](s:S)(f:S=>(A,zio.stream.ZStream[R,Nothing,S]))(implicittrace:zio.Trace):zio.test.Sample[R,A]", "kind" : "def"}, {"label" : "shrinkIntegral", "tail" : "(smallest: A)(a: A)(I: Integral[A], trace: Trace): Sample[Any, A]", "member" : "zio.test.Sample.shrinkIntegral", "link" : "zio\/test\/Sample$.html#shrinkIntegral[A](smallest:A)(a:A)(implicitI:Integral[A],implicittrace:zio.Trace):zio.test.Sample[Any,A]", "kind" : "def"}, {"label" : "shrinkFractional", "tail" : "(smallest: A)(a: A)(F: Fractional[A], trace: Trace): Sample[Any, A]", "member" : "zio.test.Sample.shrinkFractional", "link" : "zio\/test\/Sample$.html#shrinkFractional[A](smallest:A)(a:A)(implicitF:Fractional[A],implicittrace:zio.Trace):zio.test.Sample[Any,A]", "kind" : "def"}, {"label" : "noShrink", "tail" : "(a: A)(trace: Trace): Sample[Any, A]", "member" : "zio.test.Sample.noShrink", "link" : "zio\/test\/Sample$.html#noShrink[A](a:A)(implicittrace:zio.Trace):zio.test.Sample[Any,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/Sample$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/Sample$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/Sample$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/Sample$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/Sample$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/Sample$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/Sample$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/Sample$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/Sample$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/Sample$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/Sample$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/Sample$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Sample$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Sample$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Sample$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/Sample$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/Sample$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/Sample$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/Sample$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "zipWith", "tail" : "(that: Sample[R1, B])(f: (A, B) => C)(trace: Trace): Sample[R1, C]", "member" : "zio.test.Sample.zipWith", "link" : "zio\/test\/Sample.html#zipWith[R1<:R,B,C](that:zio.test.Sample[R1,B])(f:(A,B)=>C)(implicittrace:zio.Trace):zio.test.Sample[R1,C]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: Sample[R1, B])(zippable: Zippable[A, B], trace: Trace): Sample[R1, Out]", "member" : "zio.test.Sample.zip", "link" : "zio\/test\/Sample.html#zip[R1<:R,B](that:zio.test.Sample[R1,B])(implicitzippable:zio.Zippable[A,B],implicittrace:zio.Trace):zio.test.Sample[R1,zippable.Out]", "kind" : "def"}, {"label" : "shrinkSearch", "tail" : "(f: (A) => Boolean)(trace: Trace): ZStream[R, Nothing, A]", "member" : "zio.test.Sample.shrinkSearch", "link" : "zio\/test\/Sample.html#shrinkSearch(f:A=>Boolean)(implicittrace:zio.Trace):zio.stream.ZStream[R,Nothing,A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B)(trace: Trace): Sample[R, B]", "member" : "zio.test.Sample.map", "link" : "zio\/test\/Sample.html#map[B](f:A=>B)(implicittrace:zio.Trace):zio.test.Sample[R,B]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) => ZIO[R1, Nothing, B])(trace: Trace): ZIO[R1, Nothing, Sample[R1, B]]", "member" : "zio.test.Sample.foreach", "link" : "zio\/test\/Sample.html#foreach[R1<:R,B](f:A=>zio.ZIO[R1,Nothing,B])(implicittrace:zio.Trace):zio.ZIO[R1,Nothing,zio.test.Sample[R1,B]]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) => Sample[R1, B])(trace: Trace): Sample[R1, B]", "member" : "zio.test.Sample.flatMap", "link" : "zio\/test\/Sample.html#flatMap[R1<:R,B](f:A=>zio.test.Sample[R1,B])(implicittrace:zio.Trace):zio.test.Sample[R1,B]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (A) => Boolean)(trace: Trace): ZStream[R, Nothing, Sample[R, A]]", "member" : "zio.test.Sample.filter", "link" : "zio\/test\/Sample.html#filter(f:A=>Boolean)(implicittrace:zio.Trace):zio.stream.ZStream[R,Nothing,zio.test.Sample[R,A]]", "kind" : "def"}, {"label" : "<*>", "tail" : "(that: Sample[R1, B])(zippable: Zippable[A, B], trace: Trace): Sample[R1, Out]", "member" : "zio.test.Sample.<*>", "link" : "zio\/test\/Sample.html#<*>[R1<:R,B](that:zio.test.Sample[R1,B])(implicitzippable:zio.Zippable[A,B],implicittrace:zio.Trace):zio.test.Sample[R1,zippable.Out]", "kind" : "def"}, {"member" : "zio.test.Sample#<init>", "error" : "unsupported entity"}, {"label" : "shrink", "tail" : ": ZStream[R, Nothing, Sample[R, A]]", "member" : "zio.test.Sample.shrink", "link" : "zio\/test\/Sample.html#shrink:zio.stream.ZStream[R,Nothing,zio.test.Sample[R,A]]", "kind" : "val"}, {"label" : "value", "tail" : ": A", "member" : "zio.test.Sample.value", "link" : "zio\/test\/Sample.html#value:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/test\/Sample.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/Sample.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/Sample.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/Sample.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/Sample.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/Sample.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/Sample.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/Sample.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/Sample.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/Sample.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/Sample.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/Sample.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Sample.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Sample.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Sample.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/Sample.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/Sample.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/test\/Sample.html", "kind" : "case class"}, {"name" : "zio.test.Sized", "object" : "zio\/test\/Sized$.html", "members_object" : [{"label" : "withSizeGen", "tail" : "(size: Int)(gen: Gen[R, A])(trace: Trace): Gen[R, A]", "member" : "zio.test.Sized.withSizeGen", "link" : "zio\/test\/Sized$.html#withSizeGen[R,A](size:Int)(gen:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,A]", "kind" : "def"}, {"label" : "withSize", "tail" : "(size: Int)(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.test.Sized.withSize", "link" : "zio\/test\/Sized$.html#withSize[R,E,A](size:Int)(zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "size", "tail" : "(trace: Trace): UIO[Int]", "member" : "zio.test.Sized.size", "link" : "zio\/test\/Sized$.html#size(implicittrace:zio.Trace):zio.UIO[Int]", "kind" : "def"}, {"label" : "live", "tail" : "(size: Int)(trace: Trace): Layer[Nothing, Sized]", "member" : "zio.test.Sized.live", "link" : "zio\/test\/Sized$.html#live(size:Int)(implicittrace:zio.Trace):zio.Layer[Nothing,zio.test.Sized]", "kind" : "def"}, {"label" : "default", "tail" : ": ZLayer[Any, Nothing, Sized]", "member" : "zio.test.Sized.default", "link" : "zio\/test\/Sized$.html#default:zio.ZLayer[Any,Nothing,zio.test.Sized]", "kind" : "val"}, {"label" : "Test", "tail" : "", "member" : "zio.test.Sized.Test", "link" : "zio\/test\/Sized$.html#TestextendsSizedwithProductwithSerializable", "kind" : "final case class"}, {"label" : "tag", "tail" : ": Tag[Sized]", "member" : "zio.test.Sized.tag", "link" : "zio\/test\/Sized$.html#tag:zio.Tag[zio.test.Sized]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/Sized$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/Sized$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/Sized$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/Sized$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/Sized$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/Sized$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/Sized$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/Sized$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/Sized$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/Sized$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/Sized$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/Sized$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Sized$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Sized$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Sized$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/Sized$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/Sized$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/Sized$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/Sized$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/Sized.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/Sized.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/Sized.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/Sized.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/Sized.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/Sized.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/Sized.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/Sized.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/Sized.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/Sized.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/Sized.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/Sized.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/Sized.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Sized.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Sized.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Sized.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/Sized.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/Sized.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/Sized.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/Sized.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withSizeGen", "tail" : "(size: Int)(gen: Gen[R, A])(trace: Trace): Gen[R, A]", "member" : "zio.test.Sized.withSizeGen", "link" : "zio\/test\/Sized.html#withSizeGen[R,A](size:Int)(gen:zio.test.Gen[R,A])(implicittrace:zio.Trace):zio.test.Gen[R,A]", "kind" : "abstract def"}, {"label" : "withSize", "tail" : "(size: Int)(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.test.Sized.withSize", "link" : "zio\/test\/Sized.html#withSize[R,E,A](size:Int)(zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "abstract def"}, {"label" : "size", "tail" : "(trace: Trace): UIO[Int]", "member" : "zio.test.Sized.size", "link" : "zio\/test\/Sized.html#size(implicittrace:zio.Trace):zio.UIO[Int]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.test.SmartAssertionOps", "shortDescription" : "", "members_class" : [{"label" : "is", "tail" : "(f: (TestLens[A]) => TestLens[B]): B", "member" : "zio.test.SmartAssertionOps.is", "link" : "zio\/test\/package$$SmartAssertionOps.html#is[B](f:zio.test.TestLens[A]=>zio.test.TestLens[B]):B", "kind" : "def"}, {"member" : "zio.test.SmartAssertionOps#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/test\/package$$SmartAssertionOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/test\/package$$SmartAssertionOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/package$$SmartAssertionOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/package$$SmartAssertionOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/test\/package$$SmartAssertionOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/test\/package$$SmartAssertionOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/test\/package$$SmartAssertionOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "zio\/test\/package$$SmartAssertionOps.html", "kind" : "class"}, {"name" : "zio.test.SmartAssertMacros", "shortDescription" : "", "members_class" : [{"label" : "Matcher", "tail" : "", "member" : "zio.test.SmartAssertMacros.Matcher", "link" : "zio\/test\/SmartAssertMacros.html#Matcher", "kind" : "object"}, {"label" : "ASTConverter", "tail" : "", "member" : "zio.test.SmartAssertMacros.ASTConverter", "link" : "zio\/test\/SmartAssertMacros.html#ASTConverter", "kind" : "object"}, {"label" : "ASTConverter", "tail" : "", "member" : "zio.test.SmartAssertMacros.ASTConverter", "link" : "zio\/test\/SmartAssertMacros.html#ASTConverterextendsAnyRef", "kind" : "trait"}, {"label" : "IsConstructor", "tail" : "", "member" : "zio.test.SmartAssertMacros.IsConstructor", "link" : "zio\/test\/SmartAssertMacros.html#IsConstructor", "kind" : "object"}, {"label" : "MethodCall", "tail" : "", "member" : "zio.test.SmartAssertMacros.MethodCall", "link" : "zio\/test\/SmartAssertMacros.html#MethodCall", "kind" : "object"}, {"label" : "UnwrapImplicit", "tail" : "", "member" : "zio.test.SmartAssertMacros.UnwrapImplicit", "link" : "zio\/test\/SmartAssertMacros.html#UnwrapImplicit", "kind" : "object"}, {"label" : "assertOne_impl", "tail" : "(expr: scala.reflect.macros.Universe.Expr[Boolean]): scala.reflect.macros.blackbox.Context.Tree", "member" : "zio.test.SmartAssertMacros.assertOne_impl", "link" : "zio\/test\/SmartAssertMacros.html#assertOne_impl(expr:SmartAssertMacros.this.c.universe.Expr[Boolean]):SmartAssertMacros.this.c.Tree", "kind" : "def"}, {"label" : "parseExpr", "tail" : "(tree: scala.reflect.macros.blackbox.Context.Tree)(pos: PositionContext): AST", "member" : "zio.test.SmartAssertMacros.parseExpr", "link" : "zio\/test\/SmartAssertMacros.html#parseExpr(tree:SmartAssertMacros.this.c.Tree)(implicitpos:SmartAssertMacros.this.PositionContext):SmartAssertMacros.this.AST", "kind" : "def"}, {"label" : "PositionContext", "tail" : "", "member" : "zio.test.SmartAssertMacros.PositionContext", "link" : "zio\/test\/SmartAssertMacros.html#PositionContextextendsProductwithSerializable", "kind" : "case class"}, {"label" : "astToAssertion", "tail" : "(ast: AST)(positionContext: PositionContext): scala.reflect.macros.blackbox.Context.Tree", "member" : "zio.test.SmartAssertMacros.astToAssertion", "link" : "zio\/test\/SmartAssertMacros.html#astToAssertion(ast:SmartAssertMacros.this.AST)(implicitpositionContext:SmartAssertMacros.this.PositionContext):SmartAssertMacros.this.c.Tree", "kind" : "def"}, {"label" : "parseAsAssertion", "tail" : "(ast: AST)(start: scala.reflect.macros.blackbox.Context.Tree)(positionContext: PositionContext): scala.reflect.macros.blackbox.Context.Tree", "member" : "zio.test.SmartAssertMacros.parseAsAssertion", "link" : "zio\/test\/SmartAssertMacros.html#parseAsAssertion(ast:SmartAssertMacros.this.AST)(start:SmartAssertMacros.this.c.Tree)(implicitpositionContext:SmartAssertMacros.this.PositionContext):SmartAssertMacros.this.c.Tree", "kind" : "def"}, {"label" : "AssertAST", "tail" : "", "member" : "zio.test.SmartAssertMacros.AssertAST", "link" : "zio\/test\/SmartAssertMacros.html#AssertAST", "kind" : "object"}, {"label" : "AssertAST", "tail" : "", "member" : "zio.test.SmartAssertMacros.AssertAST", "link" : "zio\/test\/SmartAssertMacros.html#AssertASTextendsProductwithSerializable", "kind" : "case class"}, {"label" : "AST", "tail" : "", "member" : "zio.test.SmartAssertMacros.AST", "link" : "zio\/test\/SmartAssertMacros.html#AST", "kind" : "object"}, {"label" : "AST", "tail" : "", "member" : "zio.test.SmartAssertMacros.AST", "link" : "zio\/test\/SmartAssertMacros.html#ASTextendsAnyRef", "kind" : "sealed trait"}, {"label" : "assert_impl", "tail" : "(expr: scala.reflect.macros.blackbox.Context.Expr[Boolean], exprs: scala.reflect.macros.blackbox.Context.Expr[Boolean]*): scala.reflect.macros.blackbox.Context.Tree", "member" : "zio.test.SmartAssertMacros.assert_impl", "link" : "zio\/test\/SmartAssertMacros.html#assert_impl(expr:SmartAssertMacros.this.c.Expr[Boolean],exprs:SmartAssertMacros.this.c.Expr[Boolean]*):SmartAssertMacros.this.c.Tree", "kind" : "def"}, {"member" : "zio.test.SmartAssertMacros#<init>", "error" : "unsupported entity"}, {"label" : "c", "tail" : ": Context", "member" : "zio.test.SmartAssertMacros.c", "link" : "zio\/test\/SmartAssertMacros.html#c:scala.reflect.macros.blackbox.Context", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/SmartAssertMacros.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/SmartAssertMacros.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/SmartAssertMacros.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/SmartAssertMacros.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/SmartAssertMacros.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/SmartAssertMacros.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/SmartAssertMacros.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/SmartAssertMacros.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/SmartAssertMacros.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/SmartAssertMacros.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/SmartAssertMacros.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/SmartAssertMacros.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SmartAssertMacros.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SmartAssertMacros.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SmartAssertMacros.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/SmartAssertMacros.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/SmartAssertMacros.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/SmartAssertMacros.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/SmartAssertMacros.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/test\/SmartAssertMacros.html", "kind" : "class"}, {"name" : "zio.test.SmartSpecMacros", "shortDescription" : "", "members_class" : [{"label" : "suiteImpl", "tail" : "(name: scala.reflect.macros.whitebox.Context.Expr[String])(spec: scala.reflect.macros.whitebox.Context.Tree): scala.reflect.macros.whitebox.Context.Tree", "member" : "zio.test.SmartSpecMacros.suiteImpl", "link" : "zio\/test\/SmartSpecMacros.html#suiteImpl(name:SmartSpecMacros.this.c.Expr[String])(spec:SmartSpecMacros.this.c.Tree):SmartSpecMacros.this.c.Tree", "kind" : "def"}, {"label" : "collectTests", "tail" : "(tree: scala.reflect.macros.Universe.Tree): List[TestOrStatement]", "member" : "zio.test.SmartSpecMacros.collectTests", "link" : "zio\/test\/SmartSpecMacros.html#collectTests(tree:SmartSpecMacros.this.c.universe.Tree):List[SmartSpecMacros.this.TestOrStatement]", "kind" : "def"}, {"label" : "TestOrStatement", "tail" : "", "member" : "zio.test.SmartSpecMacros.TestOrStatement", "link" : "zio\/test\/SmartSpecMacros.html#TestOrStatement", "kind" : "object"}, {"label" : "TestOrStatement", "tail" : "", "member" : "zio.test.SmartSpecMacros.TestOrStatement", "link" : "zio\/test\/SmartSpecMacros.html#TestOrStatementextendsProductwithSerializable", "kind" : "sealed trait"}, {"member" : "zio.test.SmartSpecMacros#<init>", "error" : "unsupported entity"}, {"label" : "c", "tail" : ": Context", "member" : "zio.test.SmartSpecMacros.c", "link" : "zio\/test\/SmartSpecMacros.html#c:scala.reflect.macros.whitebox.Context", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/SmartSpecMacros.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/SmartSpecMacros.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/SmartSpecMacros.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/SmartSpecMacros.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/SmartSpecMacros.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/SmartSpecMacros.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/SmartSpecMacros.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/SmartSpecMacros.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/SmartSpecMacros.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/SmartSpecMacros.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/SmartSpecMacros.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/SmartSpecMacros.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SmartSpecMacros.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SmartSpecMacros.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SmartSpecMacros.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/SmartSpecMacros.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/SmartSpecMacros.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/SmartSpecMacros.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/SmartSpecMacros.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/test\/SmartSpecMacros.html", "kind" : "class"}, {"name" : "zio.test.Spec", "shortDescription" : "A Spec[R, E] is the backbone of _ZIO Test_.", "object" : "zio\/test\/Spec$.html", "members_object" : [{"label" : "UpdateServiceAt", "tail" : "", "member" : "zio.test.Spec.UpdateServiceAt", "link" : "zio\/test\/Spec$.html#UpdateServiceAt[-R,+E,Service]extendsAnyVal", "kind" : "final class"}, {"label" : "UpdateService", "tail" : "", "member" : "zio.test.Spec.UpdateService", "link" : "zio\/test\/Spec$.html#UpdateService[-R,+E,M]extendsAnyVal", "kind" : "final class"}, {"label" : "ScopedPartiallyApplied", "tail" : "", "member" : "zio.test.Spec.ScopedPartiallyApplied", "link" : "zio\/test\/Spec$.html#ScopedPartiallyApplied[R]extendsAnyVal", "kind" : "final class"}, {"label" : "ProvideSomeLayerShared", "tail" : "", "member" : "zio.test.Spec.ProvideSomeLayerShared", "link" : "zio\/test\/Spec$.html#ProvideSomeLayerShared[R0,-R,+E]extendsAnyVal", "kind" : "final class"}, {"label" : "ProvideSomeLayer", "tail" : "", "member" : "zio.test.Spec.ProvideSomeLayer", "link" : "zio\/test\/Spec$.html#ProvideSomeLayer[R0,-R,+E]extendsAnyVal", "kind" : "final class"}, {"label" : "empty", "tail" : ": Spec[Any, Nothing]", "member" : "zio.test.Spec.empty", "link" : "zio\/test\/Spec$.html#empty:zio.test.Spec[Any,Nothing]", "kind" : "val"}, {"label" : "test", "tail" : "(test: ZIO[R, TestFailure[E], TestSuccess], annotations: TestAnnotationMap)(trace: Trace): Spec[R, E]", "member" : "zio.test.Spec.test", "link" : "zio\/test\/Spec$.html#test[R,E](test:zio.ZIO[R,zio.test.TestFailure[E],zio.test.TestSuccess],annotations:zio.test.TestAnnotationMap)(implicittrace:zio.Trace):zio.test.Spec[R,E]", "kind" : "final def"}, {"label" : "multiple", "tail" : "(specs: Chunk[Spec[R, E]]): Spec[R, E]", "member" : "zio.test.Spec.multiple", "link" : "zio\/test\/Spec$.html#multiple[R,E](specs:zio.Chunk[zio.test.Spec[R,E]]):zio.test.Spec[R,E]", "kind" : "final def"}, {"label" : "scoped", "tail" : "(): ScopedPartiallyApplied[R]", "member" : "zio.test.Spec.scoped", "link" : "zio\/test\/Spec$.html#scoped[R]:zio.test.Spec.ScopedPartiallyApplied[R]", "kind" : "final def"}, {"label" : "labeled", "tail" : "(label: String, spec: Spec[R, E]): Spec[R, E]", "member" : "zio.test.Spec.labeled", "link" : "zio\/test\/Spec$.html#labeled[R,E](label:String,spec:zio.test.Spec[R,E]):zio.test.Spec[R,E]", "kind" : "final def"}, {"label" : "exec", "tail" : "(exec: ExecutionStrategy, spec: Spec[R, E]): Spec[R, E]", "member" : "zio.test.Spec.exec", "link" : "zio\/test\/Spec$.html#exec[R,E](exec:zio.ExecutionStrategy,spec:zio.test.Spec[R,E]):zio.test.Spec[R,E]", "kind" : "final def"}, {"label" : "TestCase", "tail" : "", "member" : "zio.test.Spec.TestCase", "link" : "zio\/test\/Spec$.html#TestCase[-R,+E]extendsSpec.SpecCase[R,E,Nothing]withProductwithSerializable", "kind" : "final case class"}, {"label" : "MultipleCase", "tail" : "", "member" : "zio.test.Spec.MultipleCase", "link" : "zio\/test\/Spec$.html#MultipleCase[+Spec]extendsSpec.SpecCase[Any,Nothing,Spec]withProductwithSerializable", "kind" : "final case class"}, {"label" : "ScopedCase", "tail" : "", "member" : "zio.test.Spec.ScopedCase", "link" : "zio\/test\/Spec$.html#ScopedCase[-R,+E,+Spec]extendsSpec.SpecCase[R,E,Spec]withProductwithSerializable", "kind" : "final case class"}, {"label" : "LabeledCase", "tail" : "", "member" : "zio.test.Spec.LabeledCase", "link" : "zio\/test\/Spec$.html#LabeledCase[+Spec]extendsSpec.SpecCase[Any,Nothing,Spec]withProductwithSerializable", "kind" : "final case class"}, {"label" : "ExecCase", "tail" : "", "member" : "zio.test.Spec.ExecCase", "link" : "zio\/test\/Spec$.html#ExecCase[+Spec]extendsSpec.SpecCase[Any,Nothing,Spec]withProductwithSerializable", "kind" : "final case class"}, {"label" : "SpecCase", "tail" : "", "member" : "zio.test.Spec.SpecCase", "link" : "zio\/test\/Spec$.html#SpecCase[-R,+E,+A]extendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/Spec$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/Spec$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/Spec$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/Spec$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/Spec$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/Spec$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/Spec$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/Spec$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/Spec$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/Spec$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/Spec$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/Spec$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Spec$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Spec$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Spec$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/Spec$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/Spec$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/Spec$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/Spec$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "whenZIO", "tail" : "(b: ZIO[R1, E1, Boolean])(trace: Trace): Spec[R1, E1]", "member" : "zio.test.Spec.whenZIO", "link" : "zio\/test\/Spec.html#whenZIO[R1<:R,E1>:E](b:zio.ZIO[R1,E1,Boolean])(implicittrace:zio.Trace):zio.test.Spec[R1,E1]", "kind" : "final def"}, {"label" : "when", "tail" : "(b: => Boolean)(trace: Trace): Spec[R, E]", "member" : "zio.test.Spec.when", "link" : "zio\/test\/Spec.html#when(b:=>Boolean)(implicittrace:zio.Trace):zio.test.Spec[R,E]", "kind" : "final def"}, {"label" : "updateServiceAt", "tail" : "(): UpdateServiceAt[R, E, Service]", "member" : "zio.test.Spec.updateServiceAt", "link" : "zio\/test\/Spec.html#updateServiceAt[Service]:zio.test.Spec.UpdateServiceAt[R,E,Service]", "kind" : "final def"}, {"label" : "updateService", "tail" : "(): UpdateService[R, E, M]", "member" : "zio.test.Spec.updateService", "link" : "zio\/test\/Spec.html#updateService[M]:zio.test.Spec.UpdateService[R,E,M]", "kind" : "final def"}, {"label" : "transform", "tail" : "(f: (SpecCase[R, E, Spec[R1, E1]]) => SpecCase[R1, E1, Spec[R1, E1]])(trace: Trace): Spec[R1, E1]", "member" : "zio.test.Spec.transform", "link" : "zio\/test\/Spec.html#transform[R1,E1](f:zio.test.Spec.SpecCase[R,E,zio.test.Spec[R1,E1]]=>zio.test.Spec.SpecCase[R1,E1,zio.test.Spec[R1,E1]])(implicittrace:zio.Trace):zio.test.Spec[R1,E1]", "kind" : "final def"}, {"label" : "provideSomeLayerShared", "tail" : "(): ProvideSomeLayerShared[R0, R, E]", "member" : "zio.test.Spec.provideSomeLayerShared", "link" : "zio\/test\/Spec.html#provideSomeLayerShared[R0]:zio.test.Spec.ProvideSomeLayerShared[R0,R,E]", "kind" : "final def"}, {"label" : "provideSomeLayer", "tail" : "(): ProvideSomeLayer[R0, R, E]", "member" : "zio.test.Spec.provideSomeLayer", "link" : "zio\/test\/Spec.html#provideSomeLayer[R0]:zio.test.Spec.ProvideSomeLayer[R0,R,E]", "kind" : "final def"}, {"label" : "provideSomeEnvironment", "tail" : "(f: (ZEnvironment[R0]) => ZEnvironment[R])(trace: Trace): Spec[R0, E]", "member" : "zio.test.Spec.provideSomeEnvironment", "link" : "zio\/test\/Spec.html#provideSomeEnvironment[R0](f:zio.ZEnvironment[R0]=>zio.ZEnvironment[R])(implicittrace:zio.Trace):zio.test.Spec[R0,E]", "kind" : "final def"}, {"label" : "provideLayerShared", "tail" : "(layer: ZLayer[R0, E1, R])(trace: Trace): Spec[R0, E1]", "member" : "zio.test.Spec.provideLayerShared", "link" : "zio\/test\/Spec.html#provideLayerShared[E1>:E,R0](layer:zio.ZLayer[R0,E1,R])(implicittrace:zio.Trace):zio.test.Spec[R0,E1]", "kind" : "final def"}, {"label" : "provideLayer", "tail" : "(layer: ZLayer[R0, E1, R])(trace: Trace): Spec[R0, E1]", "member" : "zio.test.Spec.provideLayer", "link" : "zio\/test\/Spec.html#provideLayer[E1>:E,R0](layer:zio.ZLayer[R0,E1,R])(implicittrace:zio.Trace):zio.test.Spec[R0,E1]", "kind" : "final def"}, {"label" : "provideEnvironment", "tail" : "(r: ZEnvironment[R])(trace: Trace): Spec[Any, E]", "member" : "zio.test.Spec.provideEnvironment", "link" : "zio\/test\/Spec.html#provideEnvironment(r:zio.ZEnvironment[R])(implicittrace:zio.Trace):zio.test.Spec[Any,E]", "kind" : "final def"}, {"label" : "provideCustomLayerShared", "tail" : "(layer: ZLayer[TestEnvironment, E1, R1])(ev: <:<[TestEnvironment with R1, R], tagged: zio.EnvironmentTag[R1], trace: Trace): Spec[TestEnvironment, E1]", "member" : "zio.test.Spec.provideCustomLayerShared", "link" : "zio\/test\/Spec.html#provideCustomLayerShared[E1>:E,R1](layer:zio.ZLayer[zio.test.TestEnvironment,E1,R1])(implicitev:zio.test.TestEnvironmentwithR1<:<R,implicittagged:zio.EnvironmentTag[R1],implicittrace:zio.Trace):zio.test.Spec[zio.test.TestEnvironment,E1]", "kind" : "def"}, {"label" : "provideCustomLayer", "tail" : "(layer: ZLayer[TestEnvironment, E1, R1])(ev: <:<[TestEnvironment with R1, R], tagged: zio.EnvironmentTag[R1], trace: Trace): Spec[TestEnvironment, E1]", "member" : "zio.test.Spec.provideCustomLayer", "link" : "zio\/test\/Spec.html#provideCustomLayer[E1>:E,R1](layer:zio.ZLayer[zio.test.TestEnvironment,E1,R1])(implicitev:zio.test.TestEnvironmentwithR1<:<R,implicittagged:zio.EnvironmentTag[R1],implicittrace:zio.Trace):zio.test.Spec[zio.test.TestEnvironment,E1]", "kind" : "def"}, {"label" : "mapLabel", "tail" : "(f: (String) => String)(trace: Trace): Spec[R, E]", "member" : "zio.test.Spec.mapLabel", "link" : "zio\/test\/Spec.html#mapLabel(f:String=>String)(implicittrace:zio.Trace):zio.test.Spec[R,E]", "kind" : "final def"}, {"label" : "mapError", "tail" : "(f: (E) => E1)(ev: CanFail[E], trace: Trace): Spec[R, E1]", "member" : "zio.test.Spec.mapError", "link" : "zio\/test\/Spec.html#mapError[E1](f:E=>E1)(implicitev:zio.CanFail[E],implicittrace:zio.Trace):zio.test.Spec[R,E1]", "kind" : "final def"}, {"label" : "foreachParN", "tail" : "(n: Int)(failure: (Cause[TestFailure[E]]) => ZIO[R1, TestFailure[E1], TestSuccess], success: (TestSuccess) => ZIO[R1, E1, TestSuccess])(trace: Trace): ZIO[R1 with Scope, Nothing, Spec[R1, E1]]", "member" : "zio.test.Spec.foreachParN", "link" : "zio\/test\/Spec.html#foreachParN[R1<:R,E1](n:Int)(failure:zio.Cause[zio.test.TestFailure[E]]=>zio.ZIO[R1,zio.test.TestFailure[E1],zio.test.TestSuccess],success:zio.test.TestSuccess=>zio.ZIO[R1,E1,zio.test.TestSuccess])(implicittrace:zio.Trace):zio.ZIO[R1withzio.Scope,Nothing,zio.test.Spec[R1,E1]]", "kind" : "final def"}, {"label" : "foreachPar", "tail" : "(failure: (Cause[TestFailure[E]]) => ZIO[R1, TestFailure[E1], TestSuccess], success: (TestSuccess) => ZIO[R1, E1, TestSuccess])(trace: Trace): ZIO[R1 with Scope, Nothing, Spec[R1, E1]]", "member" : "zio.test.Spec.foreachPar", "link" : "zio\/test\/Spec.html#foreachPar[R1<:R,E1](failure:zio.Cause[zio.test.TestFailure[E]]=>zio.ZIO[R1,zio.test.TestFailure[E1],zio.test.TestSuccess],success:zio.test.TestSuccess=>zio.ZIO[R1,E1,zio.test.TestSuccess])(implicittrace:zio.Trace):zio.ZIO[R1withzio.Scope,Nothing,zio.test.Spec[R1,E1]]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(failure: (Cause[TestFailure[E]]) => ZIO[R1, TestFailure[E1], TestSuccess], success: (TestSuccess) => ZIO[R1, E1, TestSuccess])(trace: Trace): ZIO[R1 with Scope, Nothing, Spec[R1, E1]]", "member" : "zio.test.Spec.foreach", "link" : "zio\/test\/Spec.html#foreach[R1<:R,E1](failure:zio.Cause[zio.test.TestFailure[E]]=>zio.ZIO[R1,zio.test.TestFailure[E1],zio.test.TestSuccess],success:zio.test.TestSuccess=>zio.ZIO[R1,E1,zio.test.TestSuccess])(implicittrace:zio.Trace):zio.ZIO[R1withzio.Scope,Nothing,zio.test.Spec[R1,E1]]", "kind" : "final def"}, {"label" : "foreachExec", "tail" : "(defExec: ExecutionStrategy)(failure: (Cause[TestFailure[E]]) => ZIO[R1, TestFailure[E1], TestSuccess], success: (TestSuccess) => ZIO[R1, E1, TestSuccess])(trace: Trace): ZIO[R1 with Scope, Nothing, Spec[R1, E1]]", "member" : "zio.test.Spec.foreachExec", "link" : "zio\/test\/Spec.html#foreachExec[R1<:R,E1](defExec:zio.ExecutionStrategy)(failure:zio.Cause[zio.test.TestFailure[E]]=>zio.ZIO[R1,zio.test.TestFailure[E1],zio.test.TestSuccess],success:zio.test.TestSuccess=>zio.ZIO[R1,E1,zio.test.TestSuccess])(implicittrace:zio.Trace):zio.ZIO[R1withzio.Scope,Nothing,zio.test.Spec[R1,E1]]", "kind" : "final def"}, {"label" : "foldScoped", "tail" : "(defExec: ExecutionStrategy)(f: (SpecCase[R, E, Z]) => ZIO[R1 with Scope, E1, Z])(trace: Trace): ZIO[R1 with Scope, E1, Z]", "member" : "zio.test.Spec.foldScoped", "link" : "zio\/test\/Spec.html#foldScoped[R1<:R,E1,Z](defExec:zio.ExecutionStrategy)(f:zio.test.Spec.SpecCase[R,E,Z]=>zio.ZIO[R1withzio.Scope,E1,Z])(implicittrace:zio.Trace):zio.ZIO[R1withzio.Scope,E1,Z]", "kind" : "final def"}, {"label" : "filterNotTags", "tail" : "(f: (String) => Boolean)(trace: Trace): Option[Spec[R, E]]", "member" : "zio.test.Spec.filterNotTags", "link" : "zio\/test\/Spec.html#filterNotTags(f:String=>Boolean)(implicittrace:zio.Trace):Option[zio.test.Spec[R,E]]", "kind" : "final def"}, {"label" : "filterTags", "tail" : "(f: (String) => Boolean)(trace: Trace): Option[Spec[R, E]]", "member" : "zio.test.Spec.filterTags", "link" : "zio\/test\/Spec.html#filterTags(f:String=>Boolean)(implicittrace:zio.Trace):Option[zio.test.Spec[R,E]]", "kind" : "final def"}, {"label" : "filterLabels", "tail" : "(f: (String) => Boolean)(trace: Trace): Option[Spec[R, E]]", "member" : "zio.test.Spec.filterLabels", "link" : "zio\/test\/Spec.html#filterLabels(f:String=>Boolean)(implicittrace:zio.Trace):Option[zio.test.Spec[R,E]]", "kind" : "final def"}, {"label" : "filterAnnotations", "tail" : "(key: TestAnnotation[V])(f: (V) => Boolean)(trace: Trace): Option[Spec[R, E]]", "member" : "zio.test.Spec.filterAnnotations", "link" : "zio\/test\/Spec.html#filterAnnotations[V](key:zio.test.TestAnnotation[V])(f:V=>Boolean)(implicittrace:zio.Trace):Option[zio.test.Spec[R,E]]", "kind" : "final def"}, {"label" : "execute", "tail" : "(defExec: ExecutionStrategy)(trace: Trace): ZIO[R with Scope, Nothing, Spec[Any, E]]", "member" : "zio.test.Spec.execute", "link" : "zio\/test\/Spec.html#execute(defExec:zio.ExecutionStrategy)(implicittrace:zio.Trace):zio.ZIO[Rwithzio.Scope,Nothing,zio.test.Spec[Any,E]]", "kind" : "final def"}, {"label" : "annotated", "tail" : "(trace: Trace): Spec[R, E]", "member" : "zio.test.Spec.annotated", "link" : "zio\/test\/Spec.html#annotated(implicittrace:zio.Trace):zio.test.Spec[R,E]", "kind" : "final def"}, {"label" : "annotate", "tail" : "(key: TestAnnotation[V], value: V)(trace: Trace): Spec[R, E]", "member" : "zio.test.Spec.annotate", "link" : "zio\/test\/Spec.html#annotate[V](key:zio.test.TestAnnotation[V],value:V)(implicittrace:zio.Trace):zio.test.Spec[R,E]", "kind" : "final def"}, {"label" : "@@", "tail" : "(aspect: TestAspect[R0, R1, E0, E1])(trace: Trace): Spec[R1, E0]", "member" : "zio.test.Spec.@@", "link" : "zio\/test\/Spec.html#@@[R0<:R1,R1<:R,E0>:E,E1>:E0](aspect:zio.test.TestAspect[R0,R1,E0,E1])(implicittrace:zio.Trace):zio.test.Spec[R1,E0]", "kind" : "final def"}, {"label" : "+", "tail" : "(that: Spec[R1, E1]): Spec[R1, E1]", "member" : "zio.test.Spec.+", "link" : "zio\/test\/Spec.html#+[R1<:R,E1>:E](that:zio.test.Spec[R1,E1]):zio.test.Spec[R1,E1]", "kind" : "def"}, {"member" : "zio.test.Spec#<init>", "error" : "unsupported entity"}, {"label" : "caseValue", "tail" : ": SpecCase[R, E, Spec[R, E]]", "member" : "zio.test.Spec.caseValue", "link" : "zio\/test\/Spec.html#caseValue:zio.test.Spec.SpecCase[R,E,zio.test.Spec[R,E]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/test\/Spec.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "provideSomeShared", "tail" : "(): ProvideSomeSharedPartiallyApplied[R0, R, E]", "member" : "zio.test.SpecVersionSpecific.provideSomeShared", "link" : "zio\/test\/Spec.html#provideSomeShared[R0]:zio.test.ProvideSomeSharedPartiallyApplied[R0,R,E]", "kind" : "final def"}, {"label" : "provideCustomShared", "tail" : "(layer: ZLayer[_, E1, _]*): Spec[TestEnvironment, E1]", "member" : "zio.test.SpecVersionSpecific.provideCustomShared", "link" : "zio\/test\/Spec.html#provideCustomShared[E1>:E](layer:zio.ZLayer[_,E1,_]*):zio.test.Spec[zio.test.TestEnvironment,E1]", "kind" : "macro def"}, {"label" : "provideShared", "tail" : "(layer: ZLayer[_, E1, _]*): Spec[Any, E1]", "member" : "zio.test.SpecVersionSpecific.provideShared", "link" : "zio\/test\/Spec.html#provideShared[E1>:E](layer:zio.ZLayer[_,E1,_]*):zio.test.Spec[Any,E1]", "kind" : "macro def"}, {"label" : "provideSome", "tail" : "(): ProvideSomePartiallyApplied[R0, R, E]", "member" : "zio.test.SpecVersionSpecific.provideSome", "link" : "zio\/test\/Spec.html#provideSome[R0]:zio.test.ProvideSomePartiallyApplied[R0,R,E]", "kind" : "def"}, {"label" : "provideCustom", "tail" : "(layer: ZLayer[_, E1, _]*): ZSpec[TestEnvironment, E1, TestSuccess]", "member" : "zio.test.SpecVersionSpecific.provideCustom", "link" : "zio\/test\/Spec.html#provideCustom[E1>:E](layer:zio.ZLayer[_,E1,_]*):SpecVersionSpecific.this.ZSpec[zio.test.TestEnvironment,E1,zio.test.TestSuccess]", "kind" : "macro def"}, {"label" : "provide", "tail" : "(layer: ZLayer[_, E1, _]*): ZSpec[Any, E1, TestSuccess]", "member" : "zio.test.SpecVersionSpecific.provide", "link" : "zio\/test\/Spec.html#provide[E1>:E](layer:zio.ZLayer[_,E1,_]*):SpecVersionSpecific.this.ZSpec[Any,E1,zio.test.TestSuccess]", "kind" : "macro def"}, {"label" : "ZSpec", "tail" : "", "member" : "zio.test.SpecVersionSpecific.ZSpec", "link" : "zio\/test\/Spec.html#ZSpec[-R,+E,+T]=zio.test.Spec[R,E]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/Spec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/Spec.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/Spec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/Spec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/Spec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/Spec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/Spec.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/Spec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/Spec.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/Spec.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/Spec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Spec.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Spec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Spec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/Spec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/Spec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/test\/Spec.html", "kind" : "case class"}, {"name" : "zio.test.SpecLayerMacros", "shortDescription" : "", "members_class" : [{"label" : "TypeOps", "tail" : "", "member" : "zio.internal.macros.LayerMacroUtils.TypeOps", "link" : "zio\/test\/SpecLayerMacros.html#TypeOpsextendsAnyRef", "kind" : "implicit class"}, {"label" : "validate", "tail" : "(spec: scala.reflect.macros.blackbox.Context.Tree)(arg0: scala.reflect.macros.blackbox.Context.WeakTypeTag[Provided], arg1: scala.reflect.macros.blackbox.Context.WeakTypeTag[Required]): scala.reflect.macros.blackbox.Context.Tree", "member" : "zio.test.SpecLayerMacros.validate", "link" : "zio\/test\/SpecLayerMacros.html#validate[Provided,Required](spec:SpecLayerMacros.this.c.Tree)(implicitevidence$5:SpecLayerMacros.this.c.WeakTypeTag[Provided],implicitevidence$6:SpecLayerMacros.this.c.WeakTypeTag[Required]):SpecLayerMacros.this.c.Tree", "kind" : "def"}, {"label" : "provideSomeSharedImpl", "tail" : "(layer: scala.reflect.macros.blackbox.Context.Expr[ZLayer[_, E, _]]*)(arg0: scala.reflect.macros.blackbox.Context.WeakTypeTag[R0], arg1: scala.reflect.macros.blackbox.Context.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Spec[R0, E]]", "member" : "zio.test.SpecLayerMacros.provideSomeSharedImpl", "link" : "zio\/test\/SpecLayerMacros.html#provideSomeSharedImpl[R0,R,E](layer:SpecLayerMacros.this.c.Expr[zio.ZLayer[_,E,_]]*)(implicitevidence$3:SpecLayerMacros.this.c.WeakTypeTag[R0],implicitevidence$4:SpecLayerMacros.this.c.WeakTypeTag[R]):SpecLayerMacros.this.c.Expr[zio.test.Spec[R0,E]]", "kind" : "def"}, {"label" : "provideCustomSharedImpl", "tail" : "(layer: scala.reflect.macros.blackbox.Context.Expr[ZLayer[_, E, _]]*)(arg0: scala.reflect.macros.blackbox.Context.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Spec[TestEnvironment, E]]", "member" : "zio.test.SpecLayerMacros.provideCustomSharedImpl", "link" : "zio\/test\/SpecLayerMacros.html#provideCustomSharedImpl[R,E](layer:SpecLayerMacros.this.c.Expr[zio.ZLayer[_,E,_]]*)(implicitevidence$2:SpecLayerMacros.this.c.WeakTypeTag[R]):SpecLayerMacros.this.c.Expr[zio.test.Spec[zio.test.TestEnvironment,E]]", "kind" : "def"}, {"label" : "provideSharedImpl", "tail" : "(layer: scala.reflect.macros.blackbox.Context.Expr[ZLayer[_, E, _]]*)(arg0: scala.reflect.macros.blackbox.Context.WeakTypeTag[R]): scala.reflect.macros.blackbox.Context.Expr[Spec[Any, E]]", "member" : "zio.test.SpecLayerMacros.provideSharedImpl", "link" : "zio\/test\/SpecLayerMacros.html#provideSharedImpl[R,E](layer:SpecLayerMacros.this.c.Expr[zio.ZLayer[_,E,_]]*)(implicitevidence$1:SpecLayerMacros.this.c.WeakTypeTag[R]):SpecLayerMacros.this.c.Expr[zio.test.Spec[Any,E]]", "kind" : "def"}, {"label" : "ZSpec", "tail" : "", "member" : "zio.test.SpecLayerMacros.ZSpec", "link" : "zio\/test\/SpecLayerMacros.html#ZSpec[-R,+E,+T]=zio.test.Spec[R,E]", "kind" : "type"}, {"member" : "zio.test.SpecLayerMacros#<init>", "error" : "unsupported entity"}, {"label" : "c", "tail" : ": Context", "member" : "zio.test.SpecLayerMacros.c", "link" : "zio\/test\/SpecLayerMacros.html#c:scala.reflect.macros.blackbox.Context", "kind" : "val"}, {"label" : "assertProperVarArgs", "tail" : "(layer: Seq[scala.reflect.macros.Universe.Expr[_]]): Unit", "member" : "zio.internal.macros.LayerMacroUtils.assertProperVarArgs", "link" : "zio\/test\/SpecLayerMacros.html#assertProperVarArgs(layer:Seq[LayerMacroUtils.this.c.universe.Expr[_]]):Unit", "kind" : "def"}, {"label" : "getRequirements", "tail" : "(tpe: scala.reflect.macros.Universe.Type): List[scala.reflect.macros.Universe.Type]", "member" : "zio.internal.macros.LayerMacroUtils.getRequirements", "link" : "zio\/test\/SpecLayerMacros.html#getRequirements(tpe:LayerMacroUtils.this.c.universe.Type):List[LayerMacroUtils.this.c.universe.Type]", "kind" : "def"}, {"label" : "getRequirements", "tail" : "(arg0: scala.reflect.macros.Universe.WeakTypeTag[T]): List[scala.reflect.macros.Universe.Type]", "member" : "zio.internal.macros.LayerMacroUtils.getRequirements", "link" : "zio\/test\/SpecLayerMacros.html#getRequirements[T](implicitevidence$5:LayerMacroUtils.this.c.universe.WeakTypeTag[T]):List[LayerMacroUtils.this.c.universe.Type]", "kind" : "def"}, {"label" : "getNode", "tail" : "(layer: LayerExpr): Node[scala.reflect.macros.Universe.Type, LayerExpr]", "member" : "zio.internal.macros.LayerMacroUtils.getNode", "link" : "zio\/test\/SpecLayerMacros.html#getNode(layer:LayerMacroUtils.this.LayerExpr):zio.internal.macros.Node[LayerMacroUtils.this.c.universe.Type,LayerMacroUtils.this.LayerExpr]", "kind" : "def"}, {"label" : "provideBaseImpl", "tail" : "(layers: Seq[LayerExpr], method: String, provideMethod: ProvideMethod)(arg0: scala.reflect.macros.Universe.WeakTypeTag[R0], arg1: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.Universe.Expr[F[R0, E, A]]", "member" : "zio.internal.macros.LayerMacroUtils.provideBaseImpl", "link" : "zio\/test\/SpecLayerMacros.html#provideBaseImpl[F[_,_,_],R0,R,E,A](layers:Seq[LayerMacroUtils.this.LayerExpr],method:String,provideMethod:zio.internal.macros.ProvideMethod)(implicitevidence$3:LayerMacroUtils.this.c.universe.WeakTypeTag[R0],implicitevidence$4:LayerMacroUtils.this.c.universe.WeakTypeTag[R]):LayerMacroUtils.this.c.universe.Expr[F[R0,E,A]]", "kind" : "def"}, {"label" : "constructLayer", "tail" : "(layers: Seq[LayerExpr], provideMethod: ProvideMethod)(arg0: scala.reflect.macros.Universe.WeakTypeTag[R0], arg1: scala.reflect.macros.Universe.WeakTypeTag[R]): scala.reflect.macros.Universe.Expr[ZLayer[R0, E, R]]", "member" : "zio.internal.macros.LayerMacroUtils.constructLayer", "link" : "zio\/test\/SpecLayerMacros.html#constructLayer[R0,R,E](layers:Seq[LayerMacroUtils.this.LayerExpr],provideMethod:zio.internal.macros.ProvideMethod)(implicitevidence$1:LayerMacroUtils.this.c.universe.WeakTypeTag[R0],implicitevidence$2:LayerMacroUtils.this.c.universe.WeakTypeTag[R]):LayerMacroUtils.this.c.universe.Expr[zio.ZLayer[R0,E,R]]", "kind" : "def"}, {"label" : "LayerExpr", "tail" : "", "member" : "zio.internal.macros.LayerMacroUtils.LayerExpr", "link" : "zio\/test\/SpecLayerMacros.html#LayerExpr=LayerMacroUtils.this.c.universe.Expr[zio.ZLayer[_,_,_]]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/SpecLayerMacros.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/SpecLayerMacros.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/SpecLayerMacros.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/SpecLayerMacros.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/SpecLayerMacros.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/SpecLayerMacros.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/SpecLayerMacros.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/SpecLayerMacros.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/SpecLayerMacros.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/SpecLayerMacros.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/SpecLayerMacros.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/SpecLayerMacros.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SpecLayerMacros.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SpecLayerMacros.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SpecLayerMacros.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/SpecLayerMacros.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/SpecLayerMacros.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/SpecLayerMacros.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/SpecLayerMacros.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/test\/SpecLayerMacros.html", "kind" : "class"}, {"name" : "zio.test.SuiteConstructor", "object" : "zio\/test\/SuiteConstructor$.html", "members_object" : [{"label" : "NothingConstructor", "tail" : ": WithOut[Nothing, Any, Nothing]", "member" : "zio.test.SuiteConstructor.NothingConstructor", "link" : "zio\/test\/SuiteConstructor$.html#NothingConstructor:zio.test.SuiteConstructor.WithOut[Nothing,Any,Nothing]", "kind" : "implicit val"}, {"label" : "WithOut", "tail" : "", "member" : "zio.test.SuiteConstructor.WithOut", "link" : "zio\/test\/SuiteConstructor$.html#WithOut[In,OutEnvironment0,OutError0]=zio.test.SuiteConstructor[In]{typeOutEnvironment=OutEnvironment0;typeOutError=OutError0}", "kind" : "type"}, {"label" : "SpecConstructor", "tail" : "(): WithOut[Spec[R, E], R, E]", "member" : "zio.test.SuiteConstructorLowPriority1.SpecConstructor", "link" : "zio\/test\/SuiteConstructor$.html#SpecConstructor[R,E]:zio.test.SuiteConstructor.WithOut[zio.test.Spec[R,E],R,E]", "kind" : "implicit def"}, {"label" : "IterableConstructor", "tail" : "(): WithOut[Collection[Spec[R, E]], R, E]", "member" : "zio.test.SuiteConstructorLowPriority2.IterableConstructor", "link" : "zio\/test\/SuiteConstructor$.html#IterableConstructor[R,E,Collection[+Element]<:Iterable[Element]]:zio.test.SuiteConstructor.WithOut[Collection[zio.test.Spec[R,E]],R,E]", "kind" : "implicit def"}, {"label" : "ZIOConstructor", "tail" : "(): WithOut[ZIO[R, E, Collection[Spec[R1, E1]]], R with R1, E2]", "member" : "zio.test.SuiteConstructorLowPriority3.ZIOConstructor", "link" : "zio\/test\/SuiteConstructor$.html#ZIOConstructor[R,R1,E<:E2,E1<:E2,E2,Collection[+Element]<:Iterable[Element]]:zio.test.SuiteConstructor.WithOut[zio.ZIO[R,E,Collection[zio.test.Spec[R1,E1]]],RwithR1,E2]", "kind" : "implicit def"}, {"label" : "ZSTMConstructor", "tail" : "(): WithOut[ZSTM[R, E, Collection[Spec[R1, E1]]], R with R1, E2]", "member" : "zio.test.SuiteConstructorLowPriority4.ZSTMConstructor", "link" : "zio\/test\/SuiteConstructor$.html#ZSTMConstructor[R,R1,E<:E2,E1<:E2,E2,Collection[+Element]<:Iterable[Element]]:zio.test.SuiteConstructor.WithOut[zio.stm.ZSTM[R,E,Collection[zio.test.Spec[R1,E1]]],RwithR1,E2]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/SuiteConstructor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/SuiteConstructor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/SuiteConstructor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/SuiteConstructor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/SuiteConstructor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/SuiteConstructor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/SuiteConstructor$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/SuiteConstructor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/SuiteConstructor$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/SuiteConstructor$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/SuiteConstructor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/SuiteConstructor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteConstructor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteConstructor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteConstructor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/SuiteConstructor$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/SuiteConstructor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/SuiteConstructor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/SuiteConstructor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/SuiteConstructor.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/SuiteConstructor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/SuiteConstructor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/SuiteConstructor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/SuiteConstructor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/SuiteConstructor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/SuiteConstructor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/SuiteConstructor.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/SuiteConstructor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/SuiteConstructor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/SuiteConstructor.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/SuiteConstructor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/SuiteConstructor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteConstructor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteConstructor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteConstructor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/SuiteConstructor.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/SuiteConstructor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/SuiteConstructor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/SuiteConstructor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(spec: In)(trace: Trace): Spec[OutEnvironment, OutError]", "member" : "zio.test.SuiteConstructor.apply", "link" : "zio\/test\/SuiteConstructor.html#apply(spec:In)(implicittrace:zio.Trace):zio.test.Spec[SuiteConstructor.this.OutEnvironment,SuiteConstructor.this.OutError]", "kind" : "abstract def"}, {"member" : "zio.test.SuiteConstructor.OutError", "error" : "unsupported entity"}, {"member" : "zio.test.SuiteConstructor.OutEnvironment", "error" : "unsupported entity"}], "shortDescription" : ""}, {"name" : "zio.test.SuiteConstructorLowPriority1", "trait" : "zio\/test\/SuiteConstructorLowPriority1.html", "kind" : "trait", "members_trait" : [{"label" : "SpecConstructor", "tail" : "(): WithOut[Spec[R, E], R, E]", "member" : "zio.test.SuiteConstructorLowPriority1.SpecConstructor", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#SpecConstructor[R,E]:zio.test.SuiteConstructor.WithOut[zio.test.Spec[R,E],R,E]", "kind" : "implicit def"}, {"label" : "IterableConstructor", "tail" : "(): WithOut[Collection[Spec[R, E]], R, E]", "member" : "zio.test.SuiteConstructorLowPriority2.IterableConstructor", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#IterableConstructor[R,E,Collection[+Element]<:Iterable[Element]]:zio.test.SuiteConstructor.WithOut[Collection[zio.test.Spec[R,E]],R,E]", "kind" : "implicit def"}, {"label" : "ZIOConstructor", "tail" : "(): WithOut[ZIO[R, E, Collection[Spec[R1, E1]]], R with R1, E2]", "member" : "zio.test.SuiteConstructorLowPriority3.ZIOConstructor", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#ZIOConstructor[R,R1,E<:E2,E1<:E2,E2,Collection[+Element]<:Iterable[Element]]:zio.test.SuiteConstructor.WithOut[zio.ZIO[R,E,Collection[zio.test.Spec[R1,E1]]],RwithR1,E2]", "kind" : "implicit def"}, {"label" : "ZSTMConstructor", "tail" : "(): WithOut[ZSTM[R, E, Collection[Spec[R1, E1]]], R with R1, E2]", "member" : "zio.test.SuiteConstructorLowPriority4.ZSTMConstructor", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#ZSTMConstructor[R,R1,E<:E2,E1<:E2,E2,Collection[+Element]<:Iterable[Element]]:zio.test.SuiteConstructor.WithOut[zio.stm.ZSTM[R,E,Collection[zio.test.Spec[R1,E1]]],RwithR1,E2]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/SuiteConstructorLowPriority1.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/SuiteConstructorLowPriority1.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.SuiteConstructorLowPriority2", "trait" : "zio\/test\/SuiteConstructorLowPriority2.html", "kind" : "trait", "members_trait" : [{"label" : "IterableConstructor", "tail" : "(): WithOut[Collection[Spec[R, E]], R, E]", "member" : "zio.test.SuiteConstructorLowPriority2.IterableConstructor", "link" : "zio\/test\/SuiteConstructorLowPriority2.html#IterableConstructor[R,E,Collection[+Element]<:Iterable[Element]]:zio.test.SuiteConstructor.WithOut[Collection[zio.test.Spec[R,E]],R,E]", "kind" : "implicit def"}, {"label" : "ZIOConstructor", "tail" : "(): WithOut[ZIO[R, E, Collection[Spec[R1, E1]]], R with R1, E2]", "member" : "zio.test.SuiteConstructorLowPriority3.ZIOConstructor", "link" : "zio\/test\/SuiteConstructorLowPriority2.html#ZIOConstructor[R,R1,E<:E2,E1<:E2,E2,Collection[+Element]<:Iterable[Element]]:zio.test.SuiteConstructor.WithOut[zio.ZIO[R,E,Collection[zio.test.Spec[R1,E1]]],RwithR1,E2]", "kind" : "implicit def"}, {"label" : "ZSTMConstructor", "tail" : "(): WithOut[ZSTM[R, E, Collection[Spec[R1, E1]]], R with R1, E2]", "member" : "zio.test.SuiteConstructorLowPriority4.ZSTMConstructor", "link" : "zio\/test\/SuiteConstructorLowPriority2.html#ZSTMConstructor[R,R1,E<:E2,E1<:E2,E2,Collection[+Element]<:Iterable[Element]]:zio.test.SuiteConstructor.WithOut[zio.stm.ZSTM[R,E,Collection[zio.test.Spec[R1,E1]]],RwithR1,E2]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/SuiteConstructorLowPriority2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/SuiteConstructorLowPriority2.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/SuiteConstructorLowPriority2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/SuiteConstructorLowPriority2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/SuiteConstructorLowPriority2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/SuiteConstructorLowPriority2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/SuiteConstructorLowPriority2.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/SuiteConstructorLowPriority2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/SuiteConstructorLowPriority2.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/SuiteConstructorLowPriority2.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/SuiteConstructorLowPriority2.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/SuiteConstructorLowPriority2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteConstructorLowPriority2.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteConstructorLowPriority2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteConstructorLowPriority2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/SuiteConstructorLowPriority2.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/SuiteConstructorLowPriority2.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/SuiteConstructorLowPriority2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/SuiteConstructorLowPriority2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.SuiteConstructorLowPriority3", "trait" : "zio\/test\/SuiteConstructorLowPriority3.html", "kind" : "trait", "members_trait" : [{"label" : "ZIOConstructor", "tail" : "(): WithOut[ZIO[R, E, Collection[Spec[R1, E1]]], R with R1, E2]", "member" : "zio.test.SuiteConstructorLowPriority3.ZIOConstructor", "link" : "zio\/test\/SuiteConstructorLowPriority3.html#ZIOConstructor[R,R1,E<:E2,E1<:E2,E2,Collection[+Element]<:Iterable[Element]]:zio.test.SuiteConstructor.WithOut[zio.ZIO[R,E,Collection[zio.test.Spec[R1,E1]]],RwithR1,E2]", "kind" : "implicit def"}, {"label" : "ZSTMConstructor", "tail" : "(): WithOut[ZSTM[R, E, Collection[Spec[R1, E1]]], R with R1, E2]", "member" : "zio.test.SuiteConstructorLowPriority4.ZSTMConstructor", "link" : "zio\/test\/SuiteConstructorLowPriority3.html#ZSTMConstructor[R,R1,E<:E2,E1<:E2,E2,Collection[+Element]<:Iterable[Element]]:zio.test.SuiteConstructor.WithOut[zio.stm.ZSTM[R,E,Collection[zio.test.Spec[R1,E1]]],RwithR1,E2]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/SuiteConstructorLowPriority3.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/SuiteConstructorLowPriority3.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/SuiteConstructorLowPriority3.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/SuiteConstructorLowPriority3.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/SuiteConstructorLowPriority3.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/SuiteConstructorLowPriority3.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/SuiteConstructorLowPriority3.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/SuiteConstructorLowPriority3.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/SuiteConstructorLowPriority3.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/SuiteConstructorLowPriority3.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/SuiteConstructorLowPriority3.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/SuiteConstructorLowPriority3.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteConstructorLowPriority3.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteConstructorLowPriority3.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteConstructorLowPriority3.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/SuiteConstructorLowPriority3.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/SuiteConstructorLowPriority3.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/SuiteConstructorLowPriority3.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/SuiteConstructorLowPriority3.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.SuiteConstructorLowPriority4", "trait" : "zio\/test\/SuiteConstructorLowPriority4.html", "kind" : "trait", "members_trait" : [{"label" : "ZSTMConstructor", "tail" : "(): WithOut[ZSTM[R, E, Collection[Spec[R1, E1]]], R with R1, E2]", "member" : "zio.test.SuiteConstructorLowPriority4.ZSTMConstructor", "link" : "zio\/test\/SuiteConstructorLowPriority4.html#ZSTMConstructor[R,R1,E<:E2,E1<:E2,E2,Collection[+Element]<:Iterable[Element]]:zio.test.SuiteConstructor.WithOut[zio.stm.ZSTM[R,E,Collection[zio.test.Spec[R1,E1]]],RwithR1,E2]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/SuiteConstructorLowPriority4.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/SuiteConstructorLowPriority4.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/SuiteConstructorLowPriority4.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/SuiteConstructorLowPriority4.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/SuiteConstructorLowPriority4.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/SuiteConstructorLowPriority4.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/SuiteConstructorLowPriority4.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/SuiteConstructorLowPriority4.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/SuiteConstructorLowPriority4.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/SuiteConstructorLowPriority4.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/SuiteConstructorLowPriority4.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/SuiteConstructorLowPriority4.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteConstructorLowPriority4.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteConstructorLowPriority4.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteConstructorLowPriority4.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/SuiteConstructorLowPriority4.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/SuiteConstructorLowPriority4.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/SuiteConstructorLowPriority4.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/SuiteConstructorLowPriority4.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.SuiteId", "shortDescription" : "", "object" : "zio\/test\/SuiteId$.html", "members_object" : [{"label" : "newRandom", "tail" : ": ZIO[Any, Nothing, SuiteId]", "member" : "zio.test.SuiteId.newRandom", "link" : "zio\/test\/SuiteId$.html#newRandom:zio.ZIO[Any,Nothing,zio.test.SuiteId]", "kind" : "val"}, {"label" : "global", "tail" : ": SuiteId", "member" : "zio.test.SuiteId.global", "link" : "zio\/test\/SuiteId$.html#global:zio.test.SuiteId", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/SuiteId$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/SuiteId$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/SuiteId$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/SuiteId$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/SuiteId$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/SuiteId$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/SuiteId$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/SuiteId$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/SuiteId$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/SuiteId$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/SuiteId$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/SuiteId$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteId$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteId$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteId$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/SuiteId$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/SuiteId$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/SuiteId$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/SuiteId$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "zio.test.SuiteId#<init>", "error" : "unsupported entity"}, {"label" : "id", "tail" : ": Int", "member" : "zio.test.SuiteId.id", "link" : "zio\/test\/SuiteId.html#id:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/test\/SuiteId.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/SuiteId.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/SuiteId.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/SuiteId.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/SuiteId.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/SuiteId.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/SuiteId.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/SuiteId.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/SuiteId.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/SuiteId.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/SuiteId.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/SuiteId.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteId.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteId.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SuiteId.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/SuiteId.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/SuiteId.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/test\/SuiteId.html", "kind" : "case class"}, {"name" : "zio.test.Summary", "shortDescription" : "", "object" : "zio\/test\/Summary$.html", "members_object" : [{"label" : "Failure", "tail" : "", "member" : "zio.test.Summary.Failure", "link" : "zio\/test\/Summary$.html#Failure", "kind" : "object"}, {"label" : "Success", "tail" : "", "member" : "zio.test.Summary.Success", "link" : "zio\/test\/Summary$.html#Success", "kind" : "object"}, {"label" : "Status", "tail" : "", "member" : "zio.test.Summary.Status", "link" : "zio\/test\/Summary$.html#StatusextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Interval", "tail" : "", "member" : "zio.test.Summary.Interval", "link" : "zio\/test\/Summary$.html#Interval", "kind" : "object"}, {"label" : "Interval", "tail" : "", "member" : "zio.test.Summary.Interval", "link" : "zio\/test\/Summary$.html#IntervalextendsAnyRef", "kind" : "sealed trait"}, {"label" : "empty", "tail" : ": Summary", "member" : "zio.test.Summary.empty", "link" : "zio\/test\/Summary$.html#empty:zio.test.Summary", "kind" : "val"}, {"label" : "apply", "tail" : "(success: Int, fail: Int, ignore: Int, failureDetails: String, interval0: Interval): Summary", "member" : "zio.test.Summary.apply", "link" : "zio\/test\/Summary$.html#apply(success:Int,fail:Int,ignore:Int,failureDetails:String,interval0:zio.test.Summary.Interval):zio.test.Summary", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/Summary$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/Summary$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/Summary$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/Summary$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/Summary$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/Summary$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/Summary$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/Summary$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/Summary$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/Summary$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/Summary$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/Summary$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Summary$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Summary$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Summary$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/Summary$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/Summary$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/Summary$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/Summary$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "total", "tail" : "(): Int", "member" : "zio.test.Summary.total", "link" : "zio\/test\/Summary.html#total:Int", "kind" : "def"}, {"label" : "timed", "tail" : "(start: Instant, end: Instant): Summary", "member" : "zio.test.Summary.timed", "link" : "zio\/test\/Summary.html#timed(start:java.time.Instant,end:java.time.Instant):zio.test.Summary", "kind" : "final def"}, {"label" : "status", "tail" : "(): Status", "member" : "zio.test.Summary.status", "link" : "zio\/test\/Summary.html#status:zio.test.Summary.Status", "kind" : "final def"}, {"label" : "interval", "tail" : "(): Interval", "member" : "zio.test.Summary.interval", "link" : "zio\/test\/Summary.html#interval:zio.test.Summary.Interval", "kind" : "def"}, {"label" : "add", "tail" : "(that: Summary): Summary", "member" : "zio.test.Summary.add", "link" : "zio\/test\/Summary.html#add(that:zio.test.Summary):zio.test.Summary", "kind" : "final def"}, {"label" : "add", "tail" : "(executionEvent: ExecutionEvent)(trace: Trace): Summary", "member" : "zio.test.Summary.add", "link" : "zio\/test\/Summary.html#add(executionEvent:zio.test.ExecutionEvent)(implicittrace:zio.Trace):zio.test.Summary", "kind" : "final def"}, {"member" : "zio.test.Summary#<init>", "error" : "unsupported entity"}, {"label" : "duration", "tail" : ": zio.Duration", "member" : "zio.test.Summary.duration", "link" : "zio\/test\/Summary.html#duration:zio.Duration", "kind" : "val"}, {"label" : "failureDetails", "tail" : ": String", "member" : "zio.test.Summary.failureDetails", "link" : "zio\/test\/Summary.html#failureDetails:String", "kind" : "val"}, {"label" : "ignore", "tail" : ": Int", "member" : "zio.test.Summary.ignore", "link" : "zio\/test\/Summary.html#ignore:Int", "kind" : "val"}, {"label" : "fail", "tail" : ": Int", "member" : "zio.test.Summary.fail", "link" : "zio\/test\/Summary.html#fail:Int", "kind" : "val"}, {"label" : "success", "tail" : ": Int", "member" : "zio.test.Summary.success", "link" : "zio\/test\/Summary.html#success:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/test\/Summary.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/Summary.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/Summary.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/Summary.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/Summary.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/Summary.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/Summary.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/Summary.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/Summary.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/Summary.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/Summary.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/Summary.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Summary.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Summary.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/Summary.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/Summary.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/Summary.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/test\/Summary.html", "kind" : "case class"}, {"name" : "zio.test.SummaryBuilder", "shortDescription" : "", "object" : "zio\/test\/SummaryBuilder$.html", "members_object" : [{"label" : "buildSummary", "tail" : "(reporterEvent: ExecutionEvent, oldSummary: Summary)(trace: Trace): Summary", "member" : "zio.test.SummaryBuilder.buildSummary", "link" : "zio\/test\/SummaryBuilder$.html#buildSummary(reporterEvent:zio.test.ExecutionEvent,oldSummary:zio.test.Summary)(implicittrace:zio.Trace):zio.test.Summary", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/SummaryBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/SummaryBuilder$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/SummaryBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/SummaryBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/SummaryBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/SummaryBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/SummaryBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/SummaryBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/SummaryBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/SummaryBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/SummaryBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/SummaryBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SummaryBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SummaryBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/SummaryBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/SummaryBuilder$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/SummaryBuilder$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/SummaryBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/SummaryBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.TestAnnotation", "shortDescription" : "A type of annotation.", "object" : "zio\/test\/TestAnnotation$.html", "members_class" : [{"label" : "hashCode", "tail" : ": Int", "member" : "zio.test.TestAnnotation.hashCode", "link" : "zio\/test\/TestAnnotation.html#hashCode:Int", "kind" : "lazy val"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "zio.test.TestAnnotation.equals", "link" : "zio\/test\/TestAnnotation.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "combine", "tail" : ": (V, V) => V", "member" : "zio.test.TestAnnotation.combine", "link" : "zio\/test\/TestAnnotation.html#combine:(V,V)=>V", "kind" : "val"}, {"label" : "initial", "tail" : ": V", "member" : "zio.test.TestAnnotation.initial", "link" : "zio\/test\/TestAnnotation.html#initial:V", "kind" : "val"}, {"label" : "identifier", "tail" : ": String", "member" : "zio.test.TestAnnotation.identifier", "link" : "zio\/test\/TestAnnotation.html#identifier:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestAnnotation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestAnnotation.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestAnnotation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestAnnotation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestAnnotation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestAnnotation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestAnnotation.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestAnnotation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestAnnotation.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestAnnotation.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestAnnotation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAnnotation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAnnotation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAnnotation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestAnnotation.html#toString():String", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestAnnotation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestAnnotation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "compose", "tail" : "(left: Either[Int, Chunk[A]], right: Either[Int, Chunk[A]]): Either[Int, Chunk[A]]", "member" : "zio.test.TestAnnotation.compose", "link" : "zio\/test\/TestAnnotation$.html#compose[A](left:Either[Int,zio.Chunk[A]],right:Either[Int,zio.Chunk[A]]):Either[Int,zio.Chunk[A]]", "kind" : "def"}, {"label" : "fibers", "tail" : ": TestAnnotation[Either[Int, Chunk[AtomicReference[SortedSet[Fiber.Runtime[Any, Any]]]]]]", "member" : "zio.test.TestAnnotation.fibers", "link" : "zio\/test\/TestAnnotation$.html#fibers:zio.test.TestAnnotation[Either[Int,zio.Chunk[java.util.concurrent.atomic.AtomicReference[scala.collection.immutable.SortedSet[zio.Fiber.Runtime[Any,Any]]]]]]", "kind" : "val"}, {"label" : "timing", "tail" : ": TestAnnotation[TestDuration]", "member" : "zio.test.TestAnnotation.timing", "link" : "zio\/test\/TestAnnotation$.html#timing:zio.test.TestAnnotation[zio.test.TestDuration]", "kind" : "val"}, {"label" : "tagged", "tail" : ": TestAnnotation[Set[String]]", "member" : "zio.test.TestAnnotation.tagged", "link" : "zio\/test\/TestAnnotation$.html#tagged:zio.test.TestAnnotation[Set[String]]", "kind" : "val"}, {"label" : "retried", "tail" : ": TestAnnotation[Int]", "member" : "zio.test.TestAnnotation.retried", "link" : "zio\/test\/TestAnnotation$.html#retried:zio.test.TestAnnotation[Int]", "kind" : "val"}, {"label" : "repeated", "tail" : ": TestAnnotation[Int]", "member" : "zio.test.TestAnnotation.repeated", "link" : "zio\/test\/TestAnnotation$.html#repeated:zio.test.TestAnnotation[Int]", "kind" : "val"}, {"label" : "output", "tail" : ": TestAnnotation[Chunk[ConsoleIO]]", "member" : "zio.test.TestAnnotation.output", "link" : "zio\/test\/TestAnnotation$.html#output:zio.test.TestAnnotation[zio.Chunk[zio.test.ConsoleIO]]", "kind" : "val"}, {"label" : "ignored", "tail" : ": TestAnnotation[Int]", "member" : "zio.test.TestAnnotation.ignored", "link" : "zio\/test\/TestAnnotation$.html#ignored:zio.test.TestAnnotation[Int]", "kind" : "val"}, {"label" : "apply", "tail" : "(identifier: String, initial: V, combine: (V, V) => V)(tag: zio.EnvironmentTag[V]): TestAnnotation[V]", "member" : "zio.test.TestAnnotation.apply", "link" : "zio\/test\/TestAnnotation$.html#apply[V](identifier:String,initial:V,combine:(V,V)=>V)(implicittag:zio.EnvironmentTag[V]):zio.test.TestAnnotation[V]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestAnnotation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestAnnotation$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestAnnotation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestAnnotation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestAnnotation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestAnnotation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestAnnotation$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestAnnotation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestAnnotation$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestAnnotation$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestAnnotation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestAnnotation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAnnotation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAnnotation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAnnotation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestAnnotation$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestAnnotation$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestAnnotation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestAnnotation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/test\/TestAnnotation.html", "kind" : "class"}, {"name" : "zio.test.TestAnnotationMap", "shortDescription" : "An annotation map keeps track of annotations of different types.", "object" : "zio\/test\/TestAnnotationMap$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "zio.test.TestAnnotationMap.toString", "link" : "zio\/test\/TestAnnotationMap.html#toString():String", "kind" : "def"}, {"label" : "get", "tail" : "(key: TestAnnotation[V]): V", "member" : "zio.test.TestAnnotationMap.get", "link" : "zio\/test\/TestAnnotationMap.html#get[V](key:zio.test.TestAnnotation[V]):V", "kind" : "def"}, {"label" : "annotate", "tail" : "(key: TestAnnotation[V], value: V): TestAnnotationMap", "member" : "zio.test.TestAnnotationMap.annotate", "link" : "zio\/test\/TestAnnotationMap.html#annotate[V](key:zio.test.TestAnnotation[V],value:V):zio.test.TestAnnotationMap", "kind" : "def"}, {"label" : "++", "tail" : "(that: TestAnnotationMap): TestAnnotationMap", "member" : "zio.test.TestAnnotationMap.++", "link" : "zio\/test\/TestAnnotationMap.html#++(that:zio.test.TestAnnotationMap):zio.test.TestAnnotationMap", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestAnnotationMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestAnnotationMap.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestAnnotationMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestAnnotationMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestAnnotationMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestAnnotationMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestAnnotationMap.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestAnnotationMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestAnnotationMap.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestAnnotationMap.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestAnnotationMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestAnnotationMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAnnotationMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAnnotationMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAnnotationMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestAnnotationMap.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestAnnotationMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestAnnotationMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "empty", "tail" : ": TestAnnotationMap", "member" : "zio.test.TestAnnotationMap.empty", "link" : "zio\/test\/TestAnnotationMap$.html#empty:zio.test.TestAnnotationMap", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestAnnotationMap$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestAnnotationMap$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestAnnotationMap$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestAnnotationMap$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestAnnotationMap$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestAnnotationMap$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestAnnotationMap$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestAnnotationMap$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestAnnotationMap$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestAnnotationMap$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestAnnotationMap$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestAnnotationMap$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAnnotationMap$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAnnotationMap$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAnnotationMap$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestAnnotationMap$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestAnnotationMap$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestAnnotationMap$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestAnnotationMap$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/test\/TestAnnotationMap.html", "kind" : "class"}, {"name" : "zio.test.TestAnnotationRenderer", "shortDescription" : "A TestAnnotationRenderer knows how to render test annotations.", "object" : "zio\/test\/TestAnnotationRenderer$.html", "members_class" : [{"label" : "combine", "tail" : "(that: TestAnnotationRenderer): TestAnnotationRenderer", "member" : "zio.test.TestAnnotationRenderer.combine", "link" : "zio\/test\/TestAnnotationRenderer.html#combine(that:zio.test.TestAnnotationRenderer):zio.test.TestAnnotationRenderer", "kind" : "final def"}, {"label" : "<>", "tail" : "(that: TestAnnotationRenderer): TestAnnotationRenderer", "member" : "zio.test.TestAnnotationRenderer.<>", "link" : "zio\/test\/TestAnnotationRenderer.html#<>(that:zio.test.TestAnnotationRenderer):zio.test.TestAnnotationRenderer", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestAnnotationRenderer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestAnnotationRenderer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestAnnotationRenderer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestAnnotationRenderer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestAnnotationRenderer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestAnnotationRenderer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestAnnotationRenderer.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestAnnotationRenderer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestAnnotationRenderer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestAnnotationRenderer.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestAnnotationRenderer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestAnnotationRenderer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAnnotationRenderer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAnnotationRenderer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAnnotationRenderer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestAnnotationRenderer.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestAnnotationRenderer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestAnnotationRenderer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestAnnotationRenderer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "run", "tail" : "(ancestors: List[TestAnnotationMap], child: TestAnnotationMap): List[String]", "member" : "zio.test.TestAnnotationRenderer.run", "link" : "zio\/test\/TestAnnotationRenderer.html#run(ancestors:List[zio.test.TestAnnotationMap],child:zio.test.TestAnnotationMap):List[String]", "kind" : "abstract def"}], "members_object" : [{"label" : "timed", "tail" : ": TestAnnotationRenderer", "member" : "zio.test.TestAnnotationRenderer.timed", "link" : "zio\/test\/TestAnnotationRenderer$.html#timed:zio.test.TestAnnotationRenderer", "kind" : "val"}, {"label" : "silent", "tail" : ": TestAnnotationRenderer", "member" : "zio.test.TestAnnotationRenderer.silent", "link" : "zio\/test\/TestAnnotationRenderer$.html#silent:zio.test.TestAnnotationRenderer", "kind" : "val"}, {"label" : "tagged", "tail" : ": TestAnnotationRenderer", "member" : "zio.test.TestAnnotationRenderer.tagged", "link" : "zio\/test\/TestAnnotationRenderer$.html#tagged:zio.test.TestAnnotationRenderer", "kind" : "val"}, {"label" : "retried", "tail" : ": TestAnnotationRenderer", "member" : "zio.test.TestAnnotationRenderer.retried", "link" : "zio\/test\/TestAnnotationRenderer$.html#retried:zio.test.TestAnnotationRenderer", "kind" : "val"}, {"label" : "repeated", "tail" : ": TestAnnotationRenderer", "member" : "zio.test.TestAnnotationRenderer.repeated", "link" : "zio\/test\/TestAnnotationRenderer$.html#repeated:zio.test.TestAnnotationRenderer", "kind" : "val"}, {"label" : "ignored", "tail" : ": TestAnnotationRenderer", "member" : "zio.test.TestAnnotationRenderer.ignored", "link" : "zio\/test\/TestAnnotationRenderer$.html#ignored:zio.test.TestAnnotationRenderer", "kind" : "val"}, {"label" : "default", "tail" : ": TestAnnotationRenderer", "member" : "zio.test.TestAnnotationRenderer.default", "link" : "zio\/test\/TestAnnotationRenderer$.html#default:zio.test.TestAnnotationRenderer", "kind" : "lazy val"}, {"label" : "CompositeRenderer", "tail" : "", "member" : "zio.test.TestAnnotationRenderer.CompositeRenderer", "link" : "zio\/test\/TestAnnotationRenderer$.html#CompositeRendererextendsTestAnnotationRendererwithProductwithSerializable", "kind" : "final case class"}, {"label" : "LeafRenderer", "tail" : "", "member" : "zio.test.TestAnnotationRenderer.LeafRenderer", "link" : "zio\/test\/TestAnnotationRenderer$.html#LeafRenderer", "kind" : "object"}, {"label" : "LeafRenderer", "tail" : "", "member" : "zio.test.TestAnnotationRenderer.LeafRenderer", "link" : "zio\/test\/TestAnnotationRenderer$.html#LeafRendererextendsTestAnnotationRenderer", "kind" : "sealed abstract class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestAnnotationRenderer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestAnnotationRenderer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestAnnotationRenderer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestAnnotationRenderer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestAnnotationRenderer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestAnnotationRenderer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestAnnotationRenderer$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestAnnotationRenderer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestAnnotationRenderer$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestAnnotationRenderer$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestAnnotationRenderer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestAnnotationRenderer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAnnotationRenderer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAnnotationRenderer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAnnotationRenderer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestAnnotationRenderer$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestAnnotationRenderer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestAnnotationRenderer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestAnnotationRenderer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/test\/TestAnnotationRenderer.html", "kind" : "class"}, {"name" : "zio.test.TestArgs", "shortDescription" : "", "object" : "zio\/test\/TestArgs$.html", "members_object" : [{"label" : "parse", "tail" : "(args: Array[String]): TestArgs", "member" : "zio.test.TestArgs.parse", "link" : "zio\/test\/TestArgs$.html#parse(args:Array[String]):zio.test.TestArgs", "kind" : "def"}, {"label" : "empty", "tail" : "(): TestArgs", "member" : "zio.test.TestArgs.empty", "link" : "zio\/test\/TestArgs$.html#empty:zio.test.TestArgs", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestArgs$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestArgs$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestArgs$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestArgs$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestArgs$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestArgs$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestArgs$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestArgs$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestArgs$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestArgs$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestArgs$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestArgs$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestArgs$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestArgs$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestArgs$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestArgs$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestArgs$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestArgs$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestArgs$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.TestArrow", "object" : "zio\/test\/TestArrow$.html", "members_object" : [{"label" : "Suspend", "tail" : "", "member" : "zio.test.TestArrow.Suspend", "link" : "zio\/test\/TestArrow$.html#Suspend[A,B]extendsTestArrow[A,B]withProductwithSerializable", "kind" : "case class"}, {"label" : "Not", "tail" : "", "member" : "zio.test.TestArrow.Not", "link" : "zio\/test\/TestArrow$.html#Not[A]extendsTestArrow[A,Boolean]withProductwithSerializable", "kind" : "case class"}, {"label" : "Or", "tail" : "", "member" : "zio.test.TestArrow.Or", "link" : "zio\/test\/TestArrow$.html#Or[A]extendsTestArrow[A,Boolean]withProductwithSerializable", "kind" : "case class"}, {"label" : "And", "tail" : "", "member" : "zio.test.TestArrow.And", "link" : "zio\/test\/TestArrow$.html#And[A]extendsTestArrow[A,Boolean]withProductwithSerializable", "kind" : "case class"}, {"label" : "AndThen", "tail" : "", "member" : "zio.test.TestArrow.AndThen", "link" : "zio\/test\/TestArrow$.html#AndThen[A,B,C]extendsTestArrow[A,C]withProductwithSerializable", "kind" : "case class"}, {"label" : "TestArrowF", "tail" : "", "member" : "zio.test.TestArrow.TestArrowF", "link" : "zio\/test\/TestArrow$.html#TestArrowF[-A,+B]extendsTestArrow[A,B]withProductwithSerializable", "kind" : "case class"}, {"label" : "Meta", "tail" : "", "member" : "zio.test.TestArrow.Meta", "link" : "zio\/test\/TestArrow$.html#Meta[-A,+B]extendsTestArrow[A,B]withProductwithSerializable", "kind" : "sealed case class"}, {"label" : "Span", "tail" : "", "member" : "zio.test.TestArrow.Span", "link" : "zio\/test\/TestArrow$.html#SpanextendsProductwithSerializable", "kind" : "case class"}, {"label" : "run", "tail" : "(arrow: TestArrow[A, B], in: Either[Throwable, A]): TestTrace[B]", "member" : "zio.test.TestArrow.run", "link" : "zio\/test\/TestArrow$.html#run[A,B](arrow:zio.test.TestArrow[A,B],in:Either[Throwable,A]):zio.test.TestTrace[B]", "kind" : "def"}, {"label" : "makeEither", "tail" : "(onFail: (Throwable) => TestTrace[B], onSucceed: (A) => TestTrace[B]): TestArrow[A, B]", "member" : "zio.test.TestArrow.makeEither", "link" : "zio\/test\/TestArrow$.html#makeEither[A,B](onFail:Throwable=>zio.test.TestTrace[B],onSucceed:A=>zio.test.TestTrace[B]):zio.test.TestArrow[A,B]", "kind" : "def"}, {"label" : "make", "tail" : "(f: (A) => TestTrace[B]): TestArrow[A, B]", "member" : "zio.test.TestArrow.make", "link" : "zio\/test\/TestArrow$.html#make[A,B](f:A=>zio.test.TestTrace[B]):zio.test.TestArrow[A,B]", "kind" : "def"}, {"label" : "suspend", "tail" : "(f: (A) => TestArrow[Any, B]): TestArrow[A, B]", "member" : "zio.test.TestArrow.suspend", "link" : "zio\/test\/TestArrow$.html#suspend[A,B](f:A=>zio.test.TestArrow[Any,B]):zio.test.TestArrow[A,B]", "kind" : "def"}, {"label" : "fromFunction", "tail" : "(f: (A) => B): TestArrow[A, B]", "member" : "zio.test.TestArrow.fromFunction", "link" : "zio\/test\/TestArrow$.html#fromFunction[A,B](f:A=>B):zio.test.TestArrow[A,B]", "kind" : "def"}, {"label" : "succeed", "tail" : "(value: => A): TestArrow[Any, A]", "member" : "zio.test.TestArrow.succeed", "link" : "zio\/test\/TestArrow$.html#succeed[A](value:=>A):zio.test.TestArrow[Any,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestArrow$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestArrow$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestArrow$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestArrow$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestArrow$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestArrow$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestArrow$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestArrow$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestArrow$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestArrow$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestArrow$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestArrow$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestArrow$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestArrow$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestArrow$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestArrow$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestArrow$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestArrow$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestArrow$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/TestArrow.html", "kind" : "trait", "members_trait" : [{"label" : "unary_!", "tail" : "(ev: <:<[B, Boolean]): TestArrow[A1, Boolean]", "member" : "zio.test.TestArrow.unary_!", "link" : "zio\/test\/TestArrow.html#unary_![A1<:A](implicitev:B<:<Boolean):zio.test.TestArrow[A1,Boolean]", "kind" : "def"}, {"label" : "||", "tail" : "(that: TestArrow[A1, Boolean])(ev: <:<[B, Boolean]): TestArrow[A1, Boolean]", "member" : "zio.test.TestArrow.||", "link" : "zio\/test\/TestArrow.html#||[A1<:A](that:zio.test.TestArrow[A1,Boolean])(implicitev:B<:<Boolean):zio.test.TestArrow[A1,Boolean]", "kind" : "def"}, {"label" : "&&", "tail" : "(that: TestArrow[A1, Boolean])(ev: <:<[B, Boolean]): TestArrow[A1, Boolean]", "member" : "zio.test.TestArrow.&&", "link" : "zio\/test\/TestArrow.html#&&[A1<:A](that:zio.test.TestArrow[A1,Boolean])(implicitev:B<:<Boolean):zio.test.TestArrow[A1,Boolean]", "kind" : "def"}, {"label" : ">>>", "tail" : "(that: TestArrow[B, C]): TestArrow[A, C]", "member" : "zio.test.TestArrow.>>>", "link" : "zio\/test\/TestArrow.html#>>>[C](that:zio.test.TestArrow[B,C]):zio.test.TestArrow[A,C]", "kind" : "def"}, {"label" : "withParentSpan", "tail" : "(span: (Int, Int)): TestArrow[A, B]", "member" : "zio.test.TestArrow.withParentSpan", "link" : "zio\/test\/TestArrow.html#withParentSpan(span:(Int,Int)):zio.test.TestArrow[A,B]", "kind" : "def"}, {"label" : "withLocation", "tail" : "(sourceLocation: SourceLocation): TestArrow[A, B]", "member" : "zio.test.TestArrow.withLocation", "link" : "zio\/test\/TestArrow.html#withLocation(implicitsourceLocation:zio.internal.stacktracer.SourceLocation):zio.test.TestArrow[A,B]", "kind" : "def"}, {"label" : "withCompleteCode", "tail" : "(completeCode: String): TestArrow[A, B]", "member" : "zio.test.TestArrow.withCompleteCode", "link" : "zio\/test\/TestArrow.html#withCompleteCode(completeCode:String):zio.test.TestArrow[A,B]", "kind" : "def"}, {"label" : "withCode", "tail" : "(code: String, arguments: Arguments*): TestArrow[A, B]", "member" : "zio.test.TestArrow.withCode", "link" : "zio\/test\/TestArrow.html#withCode(code:String,arguments:zio.test.Assertion.Arguments*):zio.test.TestArrow[A,B]", "kind" : "def"}, {"label" : "withCode", "tail" : "(code: String): TestArrow[A, B]", "member" : "zio.test.TestArrow.withCode", "link" : "zio\/test\/TestArrow.html#withCode(code:String):zio.test.TestArrow[A,B]", "kind" : "def"}, {"label" : "span", "tail" : "(span: (Int, Int)): TestArrow[A, B]", "member" : "zio.test.TestArrow.span", "link" : "zio\/test\/TestArrow.html#span(span:(Int,Int)):zio.test.TestArrow[A,B]", "kind" : "def"}, {"label" : "meta", "tail" : "(span: Option[Span], parentSpan: Option[Span], code: Option[String], location: Option[String], completeCode: Option[String], customLabel: Option[String], genFailureDetails: Option[GenFailureDetails]): TestArrow[A, B]", "member" : "zio.test.TestArrow.meta", "link" : "zio\/test\/TestArrow.html#meta(span:Option[zio.test.TestArrow.Span],parentSpan:Option[zio.test.TestArrow.Span],code:Option[String],location:Option[String],completeCode:Option[String],customLabel:Option[String],genFailureDetails:Option[zio.test.GenFailureDetails]):zio.test.TestArrow[A,B]", "kind" : "def"}, {"label" : "setGenFailureDetails", "tail" : "(details: GenFailureDetails): TestArrow[A, B]", "member" : "zio.test.TestArrow.setGenFailureDetails", "link" : "zio\/test\/TestArrow.html#setGenFailureDetails(details:zio.test.GenFailureDetails):zio.test.TestArrow[A,B]", "kind" : "def"}, {"label" : "label", "tail" : "(message: String): TestArrow[A, B]", "member" : "zio.test.TestArrow.label", "link" : "zio\/test\/TestArrow.html#label(message:String):zio.test.TestArrow[A,B]", "kind" : "def"}, {"label" : "??", "tail" : "(message: String): TestArrow[A, B]", "member" : "zio.test.TestArrow.??", "link" : "zio\/test\/TestArrow.html#??(message:String):zio.test.TestArrow[A,B]", "kind" : "def"}, {"label" : "render", "tail" : "(): String", "member" : "zio.test.TestArrow.render", "link" : "zio\/test\/TestArrow.html#render:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestArrow.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestArrow.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestArrow.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestArrow.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestArrow.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestArrow.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestArrow.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestArrow.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestArrow.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestArrow.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestArrow.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestArrow.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestArrow.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestArrow.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestArrow.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestArrow.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestArrow.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestArrow.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestArrow.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.TestAspect", "shortDescription" : "A TestAspect is an aspect that can be weaved into specs.", "object" : "zio\/test\/TestAspect$.html", "members_class" : [{"label" : "andThen", "tail" : "(that: TestAspect[LowerR1, UpperR1, LowerE1, UpperE1]): TestAspect[LowerR1, UpperR1, LowerE1, UpperE1]", "member" : "zio.test.TestAspect.andThen", "link" : "zio\/test\/TestAspect.html#andThen[LowerR1>:LowerR,UpperR1<:UpperR,LowerE1>:LowerE,UpperE1<:UpperE](that:zio.test.TestAspect[LowerR1,UpperR1,LowerE1,UpperE1]):zio.test.TestAspect[LowerR1,UpperR1,LowerE1,UpperE1]", "kind" : "final def"}, {"label" : "@@", "tail" : "(that: TestAspect[LowerR1, UpperR1, LowerE1, UpperE1]): TestAspect[LowerR1, UpperR1, LowerE1, UpperE1]", "member" : "zio.test.TestAspect.@@", "link" : "zio\/test\/TestAspect.html#@@[LowerR1>:LowerR,UpperR1<:UpperR,LowerE1>:LowerE,UpperE1<:UpperE](that:zio.test.TestAspect[LowerR1,UpperR1,LowerE1,UpperE1]):zio.test.TestAspect[LowerR1,UpperR1,LowerE1,UpperE1]", "kind" : "final def"}, {"label" : ">>>", "tail" : "(that: TestAspect[LowerR1, UpperR1, LowerE1, UpperE1]): TestAspect[LowerR1, UpperR1, LowerE1, UpperE1]", "member" : "zio.test.TestAspect.>>>", "link" : "zio\/test\/TestAspect.html#>>>[LowerR1>:LowerR,UpperR1<:UpperR,LowerE1>:LowerE,UpperE1<:UpperE](that:zio.test.TestAspect[LowerR1,UpperR1,LowerE1,UpperE1]):zio.test.TestAspect[LowerR1,UpperR1,LowerE1,UpperE1]", "kind" : "final def"}, {"label" : "all", "tail" : "(spec: Spec[R, E])(trace: Trace): Spec[R, E]", "member" : "zio.test.TestAspect.all", "link" : "zio\/test\/TestAspect.html#all[R>:LowerR<:UpperR,E>:LowerE<:UpperE](spec:zio.test.Spec[R,E])(implicittrace:zio.Trace):zio.test.Spec[R,E]", "kind" : "final def"}, {"label" : "apply", "tail" : "(spec: Spec[R, E])(trace: Trace): Spec[R, E]", "member" : "zio.test.TestAspect.apply", "link" : "zio\/test\/TestAspect.html#apply[R>:LowerR<:UpperR,E>:LowerE<:UpperE](spec:zio.test.Spec[R,E])(implicittrace:zio.Trace):zio.test.Spec[R,E]", "kind" : "final def"}, {"member" : "zio.test.TestAspect#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestAspect.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestAspect.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestAspect.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestAspect.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestAspect.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestAspect.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestAspect.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestAspect.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestAspect.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestAspect.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestAspect.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestAspect.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAspect.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAspect.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAspect.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestAspect.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestAspect.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestAspect.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestAspect.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "some", "tail" : "(spec: Spec[R, E])(trace: Trace): Spec[R, E]", "member" : "zio.test.TestAspect.some", "link" : "zio\/test\/TestAspect.html#some[R>:LowerR<:UpperR,E>:LowerE<:UpperE](spec:zio.test.Spec[R,E])(implicittrace:zio.Trace):zio.test.Spec[R,E]", "kind" : "abstract def"}], "members_object" : [{"label" : "PerTest", "tail" : "", "member" : "zio.test.TestAspect.PerTest", "link" : "zio\/test\/TestAspect$.html#PerTest", "kind" : "object"}, {"label" : "PerTest", "tail" : "", "member" : "zio.test.TestAspect.PerTest", "link" : "zio\/test\/TestAspect$.html#PerTest[+LowerR,-UpperR,+LowerE,-UpperE]extendsTestAspect[LowerR,UpperR,LowerE,UpperE]", "kind" : "abstract class"}, {"label" : "withLiveSystem", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.withLiveSystem", "link" : "zio\/test\/TestAspect$.html#withLiveSystem:zio.test.TestAspectPoly", "kind" : "lazy val"}, {"label" : "withLiveRandom", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.withLiveRandom", "link" : "zio\/test\/TestAspect$.html#withLiveRandom:zio.test.TestAspectPoly", "kind" : "lazy val"}, {"label" : "withLiveEnvironment", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.withLiveEnvironment", "link" : "zio\/test\/TestAspect$.html#withLiveEnvironment:zio.test.TestAspectPoly", "kind" : "lazy val"}, {"label" : "withLiveConsole", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.withLiveConsole", "link" : "zio\/test\/TestAspect$.html#withLiveConsole:zio.test.TestAspectPoly", "kind" : "lazy val"}, {"label" : "withLiveClock", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.withLiveClock", "link" : "zio\/test\/TestAspect$.html#withLiveClock:zio.test.TestAspectPoly", "kind" : "lazy val"}, {"label" : "withConfigProvider", "tail" : "(configProvider: ConfigProvider): TestAspectPoly", "member" : "zio.test.TestAspect.withConfigProvider", "link" : "zio\/test\/TestAspect$.html#withConfigProvider(configProvider:zio.ConfigProvider):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "windows", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.windows", "link" : "zio\/test\/TestAspect$.html#windows:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "unix", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.unix", "link" : "zio\/test\/TestAspect$.html#unix:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "verify", "tail" : "(condition: => ZIO[R0, E0, TestResult]): TestAspect[Nothing, R0, E0, Any]", "member" : "zio.test.TestAspect.verify", "link" : "zio\/test\/TestAspect$.html#verify[R0,E0](condition:=>zio.ZIO[R0,E0,zio.test.TestResult]):zio.test.TestAspect[Nothing,R0,E0,Any]", "kind" : "def"}, {"label" : "timeout", "tail" : "(duration: zio.Duration): TestAspectPoly", "member" : "zio.test.TestAspect.timeout", "link" : "zio\/test\/TestAspect$.html#timeout(duration:zio.Duration):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "timed", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.timed", "link" : "zio\/test\/TestAspect$.html#timed:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "tag", "tail" : "(tag: String, tags: String*): TestAspectPoly", "member" : "zio.test.TestAspect.tag", "link" : "zio\/test\/TestAspect$.html#tag(tag:String,tags:String*):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "success", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.success", "link" : "zio\/test\/TestAspect$.html#success:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "sized", "tail" : "(n: Int): TestAspectPoly", "member" : "zio.test.TestAspect.sized", "link" : "zio\/test\/TestAspect$.html#sized(n:Int):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "size", "tail" : "(n: Int): TestAspectPoly", "member" : "zio.test.TestAspect.size", "link" : "zio\/test\/TestAspect$.html#size(n:Int):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "silentLogging", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.silentLogging", "link" : "zio\/test\/TestAspect$.html#silentLogging:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "silent", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.silent", "link" : "zio\/test\/TestAspect$.html#silent:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "shrinks", "tail" : "(n: Int): TestAspectPoly", "member" : "zio.test.TestAspect.shrinks", "link" : "zio\/test\/TestAspect$.html#shrinks(n:Int):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "setSeed", "tail" : "(seed: => Long): TestAspectPoly", "member" : "zio.test.TestAspect.setSeed", "link" : "zio\/test\/TestAspect$.html#setSeed(seed:=>Long):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "scala3Only", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.scala3Only", "link" : "zio\/test\/TestAspect$.html#scala3Only:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "scala213Only", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.scala213Only", "link" : "zio\/test\/TestAspect$.html#scala213Only:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "scala212Only", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.scala212Only", "link" : "zio\/test\/TestAspect$.html#scala212Only:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "scala2Only", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.scala2Only", "link" : "zio\/test\/TestAspect$.html#scala2Only:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "scala3", "tail" : "(that: TestAspect[LowerR, UpperR, LowerE, UpperE]): TestAspect[LowerR, UpperR, LowerE, UpperE]", "member" : "zio.test.TestAspect.scala3", "link" : "zio\/test\/TestAspect$.html#scala3[LowerR,UpperR,LowerE,UpperE](that:zio.test.TestAspect[LowerR,UpperR,LowerE,UpperE]):zio.test.TestAspect[LowerR,UpperR,LowerE,UpperE]", "kind" : "def"}, {"label" : "scala213", "tail" : "(that: TestAspect[LowerR, UpperR, LowerE, UpperE]): TestAspect[LowerR, UpperR, LowerE, UpperE]", "member" : "zio.test.TestAspect.scala213", "link" : "zio\/test\/TestAspect$.html#scala213[LowerR,UpperR,LowerE,UpperE](that:zio.test.TestAspect[LowerR,UpperR,LowerE,UpperE]):zio.test.TestAspect[LowerR,UpperR,LowerE,UpperE]", "kind" : "def"}, {"label" : "scala212", "tail" : "(that: TestAspect[LowerR, UpperR, LowerE, UpperE]): TestAspect[LowerR, UpperR, LowerE, UpperE]", "member" : "zio.test.TestAspect.scala212", "link" : "zio\/test\/TestAspect$.html#scala212[LowerR,UpperR,LowerE,UpperE](that:zio.test.TestAspect[LowerR,UpperR,LowerE,UpperE]):zio.test.TestAspect[LowerR,UpperR,LowerE,UpperE]", "kind" : "def"}, {"label" : "scala2", "tail" : "(that: TestAspect[LowerR, UpperR, LowerE, UpperE]): TestAspect[LowerR, UpperR, LowerE, UpperE]", "member" : "zio.test.TestAspect.scala2", "link" : "zio\/test\/TestAspect$.html#scala2[LowerR,UpperR,LowerE,UpperE](that:zio.test.TestAspect[LowerR,UpperR,LowerE,UpperE]):zio.test.TestAspect[LowerR,UpperR,LowerE,UpperE]", "kind" : "def"}, {"label" : "sequential", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.sequential", "link" : "zio\/test\/TestAspect$.html#sequential:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "samples", "tail" : "(n: Int): TestAspectPoly", "member" : "zio.test.TestAspect.samples", "link" : "zio\/test\/TestAspect$.html#samples(n:Int):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "retry", "tail" : "(schedule: Schedule[R0, TestFailure[E0], Any]): TestAspect[Nothing, R0, Nothing, E0]", "member" : "zio.test.TestAspect.retry", "link" : "zio\/test\/TestAspect$.html#retry[R0,E0](schedule:zio.Schedule[R0,zio.test.TestFailure[E0],Any]):zio.test.TestAspect[Nothing,R0,Nothing,E0]", "kind" : "def"}, {"label" : "retries", "tail" : "(n: Int): TestAspectPoly", "member" : "zio.test.TestAspect.retries", "link" : "zio\/test\/TestAspect$.html#retries(n:Int):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "restoreTestEnvironment", "tail" : "(): TestAspectPoly", "member" : "zio.test.TestAspect.restoreTestEnvironment", "link" : "zio\/test\/TestAspect$.html#restoreTestEnvironment:zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "restoreTestSystem", "tail" : "(): TestAspectPoly", "member" : "zio.test.TestAspect.restoreTestSystem", "link" : "zio\/test\/TestAspect$.html#restoreTestSystem:zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "restoreTestRandom", "tail" : "(): TestAspectPoly", "member" : "zio.test.TestAspect.restoreTestRandom", "link" : "zio\/test\/TestAspect$.html#restoreTestRandom:zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "restoreTestConsole", "tail" : "(): TestAspectPoly", "member" : "zio.test.TestAspect.restoreTestConsole", "link" : "zio\/test\/TestAspect$.html#restoreTestConsole:zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "restoreTestClock", "tail" : "(): TestAspectPoly", "member" : "zio.test.TestAspect.restoreTestClock", "link" : "zio\/test\/TestAspect$.html#restoreTestClock:zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "restore", "tail" : "(restorable: UIO[Restorable]): TestAspectPoly", "member" : "zio.test.TestAspect.restore", "link" : "zio\/test\/TestAspect$.html#restore(restorable:zio.UIO[zio.test.Restorable]):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "repeats", "tail" : "(n: Int): TestAspectPoly", "member" : "zio.test.TestAspect.repeats", "link" : "zio\/test\/TestAspect$.html#repeats(n:Int):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "repeat", "tail" : "(schedule: Schedule[R0, TestSuccess, Any]): TestAspectAtLeastR[R0]", "member" : "zio.test.TestAspect.repeat", "link" : "zio\/test\/TestAspect$.html#repeat[R0](schedule:zio.Schedule[R0,zio.test.TestSuccess,Any]):zio.test.TestAspectAtLeastR[R0]", "kind" : "def"}, {"label" : "parallelN", "tail" : "(n: Int): TestAspectPoly", "member" : "zio.test.TestAspect.parallelN", "link" : "zio\/test\/TestAspect$.html#parallelN(n:Int):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "parallel", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.parallel", "link" : "zio\/test\/TestAspect$.html#parallel:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "nondeterministic", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.nondeterministic", "link" : "zio\/test\/TestAspect$.html#nondeterministic:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "nonTermination", "tail" : "(duration: zio.Duration): TestAspectPoly", "member" : "zio.test.TestAspect.nonTermination", "link" : "zio\/test\/TestAspect$.html#nonTermination(duration:zio.Duration):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "nonFlaky", "tail" : "(n: Int): TestAspectPoly", "member" : "zio.test.TestAspect.nonFlaky", "link" : "zio\/test\/TestAspect$.html#nonFlaky(n:Int):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "nonFlaky", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.nonFlaky", "link" : "zio\/test\/TestAspect$.html#nonFlaky:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "nativeOnly", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.nativeOnly", "link" : "zio\/test\/TestAspect$.html#nativeOnly:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "native", "tail" : "(that: TestAspect[LowerR, UpperR, LowerE, UpperE]): TestAspect[LowerR, UpperR, LowerE, UpperE]", "member" : "zio.test.TestAspect.native", "link" : "zio\/test\/TestAspect$.html#native[LowerR,UpperR,LowerE,UpperE](that:zio.test.TestAspect[LowerR,UpperR,LowerE,UpperE]):zio.test.TestAspect[LowerR,UpperR,LowerE,UpperE]", "kind" : "def"}, {"label" : "mac", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.mac", "link" : "zio\/test\/TestAspect$.html#mac:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "os", "tail" : "(f: (OS) => Boolean): TestAspectPoly", "member" : "zio.test.TestAspect.os", "link" : "zio\/test\/TestAspect$.html#os(f:zio.System.OS=>Boolean):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "jvmOnly", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.jvmOnly", "link" : "zio\/test\/TestAspect$.html#jvmOnly:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "jvm", "tail" : "(that: TestAspect[LowerR, UpperR, LowerE, UpperE]): TestAspect[LowerR, UpperR, LowerE, UpperE]", "member" : "zio.test.TestAspect.jvm", "link" : "zio\/test\/TestAspect$.html#jvm[LowerR,UpperR,LowerE,UpperE](that:zio.test.TestAspect[LowerR,UpperR,LowerE,UpperE]):zio.test.TestAspect[LowerR,UpperR,LowerE,UpperE]", "kind" : "def"}, {"label" : "jsOnly", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.jsOnly", "link" : "zio\/test\/TestAspect$.html#jsOnly:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "js", "tail" : "(that: TestAspect[LowerR, UpperR, LowerE, UpperE]): TestAspect[LowerR, UpperR, LowerE, UpperE]", "member" : "zio.test.TestAspect.js", "link" : "zio\/test\/TestAspect$.html#js[LowerR,UpperR,LowerE,UpperE](that:zio.test.TestAspect[LowerR,UpperR,LowerE,UpperE]):zio.test.TestAspect[LowerR,UpperR,LowerE,UpperE]", "kind" : "def"}, {"label" : "ifPropSet", "tail" : "(prop: String): TestAspectPoly", "member" : "zio.test.TestAspect.ifPropSet", "link" : "zio\/test\/TestAspect$.html#ifPropSet(prop:String):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "ifPropOption", "tail" : "(prop: String)(assertion: (Option[String]) => Boolean): TestAspectPoly", "member" : "zio.test.TestAspect.ifPropOption", "link" : "zio\/test\/TestAspect$.html#ifPropOption(prop:String)(assertion:Option[String]=>Boolean):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "ifPropNotSet", "tail" : "(env: String): TestAspectPoly", "member" : "zio.test.TestAspect.ifPropNotSet", "link" : "zio\/test\/TestAspect$.html#ifPropNotSet(env:String):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "ifProp", "tail" : "(prop: String)(assertion: (String) => Boolean): TestAspectPoly", "member" : "zio.test.TestAspect.ifProp", "link" : "zio\/test\/TestAspect$.html#ifProp(prop:String)(assertion:String=>Boolean):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "ifEnvSet", "tail" : "(env: String): TestAspectPoly", "member" : "zio.test.TestAspect.ifEnvSet", "link" : "zio\/test\/TestAspect$.html#ifEnvSet(env:String):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "ifEnvOption", "tail" : "(env: String)(assertion: (Option[String]) => Boolean): TestAspectPoly", "member" : "zio.test.TestAspect.ifEnvOption", "link" : "zio\/test\/TestAspect$.html#ifEnvOption(env:String)(assertion:Option[String]=>Boolean):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "ifEnvNotSet", "tail" : "(env: String): TestAspectPoly", "member" : "zio.test.TestAspect.ifEnvNotSet", "link" : "zio\/test\/TestAspect$.html#ifEnvNotSet(env:String):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "ifEnv", "tail" : "(env: String)(assertion: (String) => Boolean): TestAspectPoly", "member" : "zio.test.TestAspect.ifEnv", "link" : "zio\/test\/TestAspect$.html#ifEnv(env:String)(assertion:String=>Boolean):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "fromZIOAspect", "tail" : "(zioAspect: ZIOAspect[LowerR, UpperR, TestFailure[LowerE], TestFailure[UpperE], TestSuccess, TestSuccess]): TestAspect[LowerR, UpperR, LowerE, UpperE]", "member" : "zio.test.TestAspect.fromZIOAspect", "link" : "zio\/test\/TestAspect$.html#fromZIOAspect[LowerR,UpperR,LowerE,UpperE](zioAspect:zio.ZIOAspect[LowerR,UpperR,zio.test.TestFailure[LowerE],zio.test.TestFailure[UpperE],zio.test.TestSuccess,zio.test.TestSuccess]):zio.test.TestAspect[LowerR,UpperR,LowerE,UpperE]", "kind" : "def"}, {"label" : "fromLayerShared", "tail" : "(layer: ZLayer[R0, E0, Any]): TestAspect[Nothing, R0, E0, Any]", "member" : "zio.test.TestAspect.fromLayerShared", "link" : "zio\/test\/TestAspect$.html#fromLayerShared[R0,E0](layer:zio.ZLayer[R0,E0,Any]):zio.test.TestAspect[Nothing,R0,E0,Any]", "kind" : "def"}, {"label" : "fromLayer", "tail" : "(layer: ZLayer[R0, E0, Any]): TestAspect[Nothing, R0, E0, Any]", "member" : "zio.test.TestAspect.fromLayer", "link" : "zio\/test\/TestAspect$.html#fromLayer[R0,E0](layer:zio.ZLayer[R0,E0,Any]):zio.test.TestAspect[Nothing,R0,E0,Any]", "kind" : "def"}, {"label" : "forked", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.forked", "link" : "zio\/test\/TestAspect$.html#forked:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "flaky", "tail" : "(n: Int): TestAspectPoly", "member" : "zio.test.TestAspect.flaky", "link" : "zio\/test\/TestAspect$.html#flaky(n:Int):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "flaky", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.flaky", "link" : "zio\/test\/TestAspect$.html#flaky:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "fibers", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.fibers", "link" : "zio\/test\/TestAspect$.html#fibers:zio.test.TestAspectPoly", "kind" : "lazy val"}, {"label" : "failing", "tail" : "(assertion: (TestFailure[E0]) => Boolean): TestAspect[Nothing, Any, Nothing, E0]", "member" : "zio.test.TestAspect.failing", "link" : "zio\/test\/TestAspect$.html#failing[E0](assertion:zio.test.TestFailure[E0]=>Boolean):zio.test.TestAspect[Nothing,Any,Nothing,E0]", "kind" : "def"}, {"label" : "failing", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.failing", "link" : "zio\/test\/TestAspect$.html#failing:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "executionStrategy", "tail" : "(exec: ExecutionStrategy): TestAspectPoly", "member" : "zio.test.TestAspect.executionStrategy", "link" : "zio\/test\/TestAspect$.html#executionStrategy(exec:zio.ExecutionStrategy):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "exceptScala3", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.exceptScala3", "link" : "zio\/test\/TestAspect$.html#exceptScala3:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "exceptScala213", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.exceptScala213", "link" : "zio\/test\/TestAspect$.html#exceptScala213:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "exceptScala212", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.exceptScala212", "link" : "zio\/test\/TestAspect$.html#exceptScala212:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "exceptScala2", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.exceptScala2", "link" : "zio\/test\/TestAspect$.html#exceptScala2:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "exceptNative", "tail" : "(that: TestAspect[LowerR, UpperR, LowerE, UpperE]): TestAspect[LowerR, UpperR, LowerE, UpperE]", "member" : "zio.test.TestAspect.exceptNative", "link" : "zio\/test\/TestAspect$.html#exceptNative[LowerR,UpperR,LowerE,UpperE](that:zio.test.TestAspect[LowerR,UpperR,LowerE,UpperE]):zio.test.TestAspect[LowerR,UpperR,LowerE,UpperE]", "kind" : "def"}, {"label" : "exceptNative", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.exceptNative", "link" : "zio\/test\/TestAspect$.html#exceptNative:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "exceptJVM", "tail" : "(that: TestAspect[LowerR, UpperR, LowerE, UpperE]): TestAspect[LowerR, UpperR, LowerE, UpperE]", "member" : "zio.test.TestAspect.exceptJVM", "link" : "zio\/test\/TestAspect$.html#exceptJVM[LowerR,UpperR,LowerE,UpperE](that:zio.test.TestAspect[LowerR,UpperR,LowerE,UpperE]):zio.test.TestAspect[LowerR,UpperR,LowerE,UpperE]", "kind" : "def"}, {"label" : "exceptJVM", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.exceptJVM", "link" : "zio\/test\/TestAspect$.html#exceptJVM:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "exceptJS", "tail" : "(that: TestAspect[LowerR, UpperR, LowerE, UpperE]): TestAspect[LowerR, UpperR, LowerE, UpperE]", "member" : "zio.test.TestAspect.exceptJS", "link" : "zio\/test\/TestAspect$.html#exceptJS[LowerR,UpperR,LowerE,UpperE](that:zio.test.TestAspect[LowerR,UpperR,LowerE,UpperE]):zio.test.TestAspect[LowerR,UpperR,LowerE,UpperE]", "kind" : "def"}, {"label" : "exceptJS", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.exceptJS", "link" : "zio\/test\/TestAspect$.html#exceptJS:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "eventually", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.eventually", "link" : "zio\/test\/TestAspect$.html#eventually:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "debug", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.debug", "link" : "zio\/test\/TestAspect$.html#debug:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "diagnose", "tail" : "(duration: zio.Duration): TestAspectPoly", "member" : "zio.test.TestAspect.diagnose", "link" : "zio\/test\/TestAspect$.html#diagnose(duration:zio.Duration):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "checksZIO", "tail" : "(makeAspect: ZIO[R, E, CheckAspect]): TestAspect[Nothing, R, E, Any]", "member" : "zio.test.TestAspect.checksZIO", "link" : "zio\/test\/TestAspect$.html#checksZIO[R,E](makeAspect:zio.ZIO[R,E,zio.test.TestAspect.CheckAspect]):zio.test.TestAspect[Nothing,R,E,Any]", "kind" : "def"}, {"label" : "checks", "tail" : "(aspect: CheckAspect): TestAspectPoly", "member" : "zio.test.TestAspect.checks", "link" : "zio\/test\/TestAspect$.html#checks(aspect:zio.test.TestAspect.CheckAspect):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "blocking", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.blocking", "link" : "zio\/test\/TestAspect$.html#blocking:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "beforeAll", "tail" : "(effect: ZIO[R0, E0, Any]): TestAspect[Nothing, R0, E0, Any]", "member" : "zio.test.TestAspect.beforeAll", "link" : "zio\/test\/TestAspect$.html#beforeAll[R0,E0](effect:zio.ZIO[R0,E0,Any]):zio.test.TestAspect[Nothing,R0,E0,Any]", "kind" : "def"}, {"label" : "before", "tail" : "(effect: ZIO[R0, E0, Any]): TestAspect[Nothing, R0, E0, Any]", "member" : "zio.test.TestAspect.before", "link" : "zio\/test\/TestAspect$.html#before[R0,E0](effect:zio.ZIO[R0,E0,Any]):zio.test.TestAspect[Nothing,R0,E0,Any]", "kind" : "def"}, {"label" : "aspect", "tail" : "(f: (ZIO[R0, TestFailure[E0], TestSuccess]) => ZIO[R0, TestFailure[E0], TestSuccess]): TestAspect[R0, R0, E0, E0]", "member" : "zio.test.TestAspect.aspect", "link" : "zio\/test\/TestAspect$.html#aspect[R0,E0](f:zio.ZIO[R0,zio.test.TestFailure[E0],zio.test.TestSuccess]=>zio.ZIO[R0,zio.test.TestFailure[E0],zio.test.TestSuccess]):zio.test.TestAspect[R0,R0,E0,E0]", "kind" : "def"}, {"label" : "aroundTest", "tail" : "(scoped: ZIO[Scope with R0, TestFailure[E0], (TestSuccess) => ZIO[R0, TestFailure[E0], TestSuccess]]): TestAspect[Nothing, R0, E0, Any]", "member" : "zio.test.TestAspect.aroundTest", "link" : "zio\/test\/TestAspect$.html#aroundTest[R0,E0](scoped:zio.ZIO[zio.ScopewithR0,zio.test.TestFailure[E0],zio.test.TestSuccess=>zio.ZIO[R0,zio.test.TestFailure[E0],zio.test.TestSuccess]]):zio.test.TestAspect[Nothing,R0,E0,Any]", "kind" : "def"}, {"label" : "aroundAll", "tail" : "(before: ZIO[R0, E0, Any], after: ZIO[R0, Nothing, Any]): TestAspect[Nothing, R0, E0, Any]", "member" : "zio.test.TestAspect.aroundAll", "link" : "zio\/test\/TestAspect$.html#aroundAll[R0,E0](before:zio.ZIO[R0,E0,Any],after:zio.ZIO[R0,Nothing,Any]):zio.test.TestAspect[Nothing,R0,E0,Any]", "kind" : "def"}, {"label" : "aroundAllWith", "tail" : "(before: ZIO[R0, E0, A0])(after: (A0) => ZIO[R0, Nothing, Any]): TestAspect[Nothing, R0, E0, Any]", "member" : "zio.test.TestAspect.aroundAllWith", "link" : "zio\/test\/TestAspect$.html#aroundAllWith[R0,E0,A0](before:zio.ZIO[R0,E0,A0])(after:A0=>zio.ZIO[R0,Nothing,Any]):zio.test.TestAspect[Nothing,R0,E0,Any]", "kind" : "def"}, {"label" : "around", "tail" : "(before: ZIO[R0, E0, Any], after: ZIO[R0, Nothing, Any]): TestAspect[Nothing, R0, E0, Any]", "member" : "zio.test.TestAspect.around", "link" : "zio\/test\/TestAspect$.html#around[R0,E0](before:zio.ZIO[R0,E0,Any],after:zio.ZIO[R0,Nothing,Any]):zio.test.TestAspect[Nothing,R0,E0,Any]", "kind" : "def"}, {"label" : "aroundWith", "tail" : "(before: ZIO[R0, E0, A0])(after: (A0) => ZIO[R0, Nothing, Any]): TestAspect[Nothing, R0, E0, Any]", "member" : "zio.test.TestAspect.aroundWith", "link" : "zio\/test\/TestAspect$.html#aroundWith[R0,E0,A0](before:zio.ZIO[R0,E0,A0])(after:A0=>zio.ZIO[R0,Nothing,Any]):zio.test.TestAspect[Nothing,R0,E0,Any]", "kind" : "def"}, {"label" : "annotate", "tail" : "(key: TestAnnotation[V], value: V): TestAspectPoly", "member" : "zio.test.TestAspect.annotate", "link" : "zio\/test\/TestAspect$.html#annotate[V](key:zio.test.TestAnnotation[V],value:V):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "afterSuccess", "tail" : "(effect: ZIO[R0, E0, Any]): TestAspect[Nothing, R0, E0, Any]", "member" : "zio.test.TestAspect.afterSuccess", "link" : "zio\/test\/TestAspect$.html#afterSuccess[R0,E0](effect:zio.ZIO[R0,E0,Any]):zio.test.TestAspect[Nothing,R0,E0,Any]", "kind" : "def"}, {"label" : "afterFailure", "tail" : "(effect: ZIO[R0, E0, Any]): TestAspect[Nothing, R0, E0, Any]", "member" : "zio.test.TestAspect.afterFailure", "link" : "zio\/test\/TestAspect$.html#afterFailure[R0,E0](effect:zio.ZIO[R0,E0,Any]):zio.test.TestAspect[Nothing,R0,E0,Any]", "kind" : "def"}, {"label" : "afterAllSuccess", "tail" : "(f: ZIO[R0, Nothing, Any]): TestAspect[Nothing, R0, Nothing, Any]", "member" : "zio.test.TestAspect.afterAllSuccess", "link" : "zio\/test\/TestAspect$.html#afterAllSuccess[R0](f:zio.ZIO[R0,Nothing,Any]):zio.test.TestAspect[Nothing,R0,Nothing,Any]", "kind" : "def"}, {"label" : "afterAllFailure", "tail" : "(f: ZIO[R0, Nothing, Any]): TestAspect[Nothing, R0, Nothing, Any]", "member" : "zio.test.TestAspect.afterAllFailure", "link" : "zio\/test\/TestAspect$.html#afterAllFailure[R0](f:zio.ZIO[R0,Nothing,Any]):zio.test.TestAspect[Nothing,R0,Nothing,Any]", "kind" : "def"}, {"label" : "afterAll", "tail" : "(effect: ZIO[R0, Nothing, Any]): TestAspect[Nothing, R0, Nothing, Any]", "member" : "zio.test.TestAspect.afterAll", "link" : "zio\/test\/TestAspect$.html#afterAll[R0](effect:zio.ZIO[R0,Nothing,Any]):zio.test.TestAspect[Nothing,R0,Nothing,Any]", "kind" : "def"}, {"label" : "after", "tail" : "(effect: ZIO[R0, E0, Any]): TestAspect[Nothing, R0, E0, Any]", "member" : "zio.test.TestAspect.after", "link" : "zio\/test\/TestAspect$.html#after[R0,E0](effect:zio.ZIO[R0,E0,Any]):zio.test.TestAspect[Nothing,R0,E0,Any]", "kind" : "def"}, {"label" : "ignore", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.ignore", "link" : "zio\/test\/TestAspect$.html#ignore:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "identity", "tail" : ": TestAspectPoly", "member" : "zio.test.TestAspect.identity", "link" : "zio\/test\/TestAspect$.html#identity:zio.test.TestAspectPoly", "kind" : "val"}, {"label" : "CheckAspect", "tail" : "", "member" : "zio.test.TestAspect.CheckAspect", "link" : "zio\/test\/TestAspect$.html#CheckAspect=zio.ZIOAspect[Nothing,Any,Nothing,Any,zio.test.TestResult,zio.test.TestResult]", "kind" : "type"}, {"label" : "timeoutWarning", "tail" : "(duration: zio.Duration): TestAspectPoly", "member" : "zio.test.TimeoutVariants.timeoutWarning", "link" : "zio\/test\/TestAspect$.html#timeoutWarning(duration:zio.Duration):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestAspect$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestAspect$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestAspect$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestAspect$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestAspect$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestAspect$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestAspect$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestAspect$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestAspect$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestAspect$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestAspect$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestAspect$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAspect$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAspect$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestAspect$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestAspect$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestAspect$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestAspect$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestAspect$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/test\/TestAspect.html", "kind" : "class"}, {"name" : "zio.test.TestClock", "object" : "zio\/test\/TestClock$.html", "members_object" : [{"label" : "SuspendedWarningData", "tail" : "", "member" : "zio.test.TestClock.SuspendedWarningData", "link" : "zio\/test\/TestClock$.html#SuspendedWarningData", "kind" : "object"}, {"label" : "SuspendedWarningData", "tail" : "", "member" : "zio.test.TestClock.SuspendedWarningData", "link" : "zio\/test\/TestClock$.html#SuspendedWarningDataextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "WarningData", "tail" : "", "member" : "zio.test.TestClock.WarningData", "link" : "zio\/test\/TestClock$.html#WarningData", "kind" : "object"}, {"label" : "WarningData", "tail" : "", "member" : "zio.test.TestClock.WarningData", "link" : "zio\/test\/TestClock$.html#WarningDataextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "Sleep", "tail" : "", "member" : "zio.test.TestClock.Sleep", "link" : "zio\/test\/TestClock$.html#SleepextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "Data", "tail" : "", "member" : "zio.test.TestClock.Data", "link" : "zio\/test\/TestClock$.html#DataextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "timeZone", "tail" : "(trace: Trace): UIO[ZoneId]", "member" : "zio.test.TestClock.timeZone", "link" : "zio\/test\/TestClock$.html#timeZone(implicittrace:zio.Trace):zio.UIO[java.time.ZoneId]", "kind" : "def"}, {"label" : "sleeps", "tail" : "(trace: Trace): UIO[List[Instant]]", "member" : "zio.test.TestClock.sleeps", "link" : "zio\/test\/TestClock$.html#sleeps(implicittrace:zio.Trace):zio.UIO[List[java.time.Instant]]", "kind" : "def"}, {"label" : "setTimeZone", "tail" : "(zone: => ZoneId)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestClock.setTimeZone", "link" : "zio\/test\/TestClock$.html#setTimeZone(zone:=>java.time.ZoneId)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "setTime", "tail" : "(instant: => Instant)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestClock.setTime", "link" : "zio\/test\/TestClock$.html#setTime(instant:=>java.time.Instant)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "save", "tail" : "(trace: Trace): UIO[UIO[Unit]]", "member" : "zio.test.TestClock.save", "link" : "zio\/test\/TestClock$.html#save(implicittrace:zio.Trace):zio.UIO[zio.UIO[Unit]]", "kind" : "def"}, {"label" : "adjustWith", "tail" : "(duration: => zio.Duration)(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.test.TestClock.adjustWith", "link" : "zio\/test\/TestClock$.html#adjustWith[R,E,A](duration:=>zio.Duration)(zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "adjust", "tail" : "(duration: => zio.Duration)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestClock.adjust", "link" : "zio\/test\/TestClock$.html#adjust(duration:=>zio.Duration)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "default", "tail" : ": ZLayer[Live with Annotations, Nothing, TestClock]", "member" : "zio.test.TestClock.default", "link" : "zio\/test\/TestClock$.html#default:zio.ZLayer[zio.test.Livewithzio.test.Annotations,Nothing,zio.test.TestClock]", "kind" : "val"}, {"label" : "any", "tail" : ": ZLayer[TestClock, Nothing, TestClock]", "member" : "zio.test.TestClock.any", "link" : "zio\/test\/TestClock$.html#any:zio.ZLayer[zio.test.TestClock,Nothing,zio.test.TestClock]", "kind" : "val"}, {"label" : "live", "tail" : "(data: Data)(trace: Trace): ZLayer[Annotations with Live, Nothing, TestClock]", "member" : "zio.test.TestClock.live", "link" : "zio\/test\/TestClock$.html#live(data:zio.test.TestClock.Data)(implicittrace:zio.Trace):zio.ZLayer[zio.test.Annotationswithzio.test.Live,Nothing,zio.test.TestClock]", "kind" : "def"}, {"label" : "Test", "tail" : "", "member" : "zio.test.TestClock.Test", "link" : "zio\/test\/TestClock$.html#TestextendsTestClockwithTestClockPlatformSpecificwithProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestClock$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestClock$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestClock$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestClock$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestClock$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestClock$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestClock$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestClock$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestClock$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestClock$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestClock$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestClock$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestClock$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestClock$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestClock$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestClock$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestClock$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestClock$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestClock$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/TestClock.html", "kind" : "trait", "members_trait" : [{"label" : "UnsafeAPI", "tail" : "", "member" : "zio.Clock.UnsafeAPI", "link" : "zio\/Clock.html#UnsafeAPIextendsSerializable", "kind" : "trait"}, {"label" : "unsafe", "tail" : "(): UnsafeAPI", "member" : "zio.Clock.unsafe", "link" : "zio\/test\/TestClock.html#unsafe:Clock.this.UnsafeAPI", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestClock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestClock.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestClock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestClock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestClock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestClock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestClock.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestClock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestClock.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestClock.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestClock.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestClock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestClock.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestClock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestClock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestClock.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestClock.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestClock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestClock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "timeZone", "tail" : "(trace: Trace): UIO[ZoneId]", "member" : "zio.test.TestClock.timeZone", "link" : "zio\/test\/TestClock.html#timeZone(implicittrace:zio.Trace):zio.UIO[java.time.ZoneId]", "kind" : "abstract def"}, {"label" : "sleeps", "tail" : "(trace: Trace): UIO[List[Instant]]", "member" : "zio.test.TestClock.sleeps", "link" : "zio\/test\/TestClock.html#sleeps(implicittrace:zio.Trace):zio.UIO[List[java.time.Instant]]", "kind" : "abstract def"}, {"label" : "setTimeZone", "tail" : "(zone: ZoneId)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestClock.setTimeZone", "link" : "zio\/test\/TestClock.html#setTimeZone(zone:java.time.ZoneId)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "setTime", "tail" : "(instant: Instant)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestClock.setTime", "link" : "zio\/test\/TestClock.html#setTime(instant:java.time.Instant)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "adjustWith", "tail" : "(duration: zio.Duration)(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.test.TestClock.adjustWith", "link" : "zio\/test\/TestClock.html#adjustWith[R,E,A](duration:zio.Duration)(zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "abstract def"}, {"label" : "adjust", "tail" : "(duration: zio.Duration)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestClock.adjust", "link" : "zio\/test\/TestClock.html#adjust(duration:zio.Duration)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "save", "tail" : "(trace: Trace): UIO[UIO[Unit]]", "member" : "zio.test.Restorable.save", "link" : "zio\/test\/TestClock.html#save(implicittrace:zio.Trace):zio.UIO[zio.UIO[Unit]]", "kind" : "abstract def"}, {"label" : "sleep", "tail" : "(duration: => zio.Duration)(trace: Trace): UIO[Unit]", "member" : "zio.Clock.sleep", "link" : "zio\/test\/TestClock.html#sleep(duration:=>zio.Duration)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "scheduler", "tail" : "(trace: Trace): UIO[Scheduler]", "member" : "zio.Clock.scheduler", "link" : "zio\/test\/TestClock.html#scheduler(implicittrace:zio.Trace):zio.UIO[zio.Scheduler]", "kind" : "abstract def"}, {"label" : "nanoTime", "tail" : "(trace: Trace): UIO[Long]", "member" : "zio.Clock.nanoTime", "link" : "zio\/test\/TestClock.html#nanoTime(implicittrace:zio.Trace):zio.UIO[Long]", "kind" : "abstract def"}, {"label" : "localDateTime", "tail" : "(trace: Trace): UIO[LocalDateTime]", "member" : "zio.Clock.localDateTime", "link" : "zio\/test\/TestClock.html#localDateTime(implicittrace:zio.Trace):zio.UIO[java.time.LocalDateTime]", "kind" : "abstract def"}, {"label" : "javaClock", "tail" : "(trace: Trace): UIO[java.time.Clock]", "member" : "zio.Clock.javaClock", "link" : "zio\/test\/TestClock.html#javaClock(implicittrace:zio.Trace):zio.UIO[java.time.Clock]", "kind" : "abstract def"}, {"label" : "instant", "tail" : "(trace: Trace): UIO[Instant]", "member" : "zio.Clock.instant", "link" : "zio\/test\/TestClock.html#instant(implicittrace:zio.Trace):zio.UIO[java.time.Instant]", "kind" : "abstract def"}, {"label" : "currentDateTime", "tail" : "(trace: Trace): UIO[OffsetDateTime]", "member" : "zio.Clock.currentDateTime", "link" : "zio\/test\/TestClock.html#currentDateTime(implicittrace:zio.Trace):zio.UIO[java.time.OffsetDateTime]", "kind" : "abstract def"}, {"label" : "currentTime", "tail" : "(unit: => ChronoUnit)(trace: Trace, d: DummyImplicit): UIO[Long]", "member" : "zio.Clock.currentTime", "link" : "zio\/test\/TestClock.html#currentTime(unit:=>java.time.temporal.ChronoUnit)(implicittrace:zio.Trace,implicitd:DummyImplicit):zio.UIO[Long]", "kind" : "abstract def"}, {"label" : "currentTime", "tail" : "(unit: => TimeUnit)(trace: Trace): UIO[Long]", "member" : "zio.Clock.currentTime", "link" : "zio\/test\/TestClock.html#currentTime(unit:=>java.util.concurrent.TimeUnit)(implicittrace:zio.Trace):zio.UIO[Long]", "kind" : "abstract def"}], "shortDescription" : "TestClock makes it easy to deterministically and efficiently test effectsinvolving the passage of time."}, {"name" : "zio.test.TestClockPlatformSpecific", "trait" : "zio\/test\/TestClockPlatformSpecific.html", "kind" : "trait", "members_trait" : [{"label" : "scheduler", "tail" : "(trace: Trace): UIO[Scheduler]", "member" : "zio.test.TestClockPlatformSpecific.scheduler", "link" : "zio\/test\/TestClockPlatformSpecific.html#scheduler(implicittrace:zio.Trace):zio.UIO[zio.Scheduler]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestClockPlatformSpecific.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestClockPlatformSpecific.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestClockPlatformSpecific.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestClockPlatformSpecific.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestClockPlatformSpecific.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestClockPlatformSpecific.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestClockPlatformSpecific.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestClockPlatformSpecific.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestClockPlatformSpecific.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestClockPlatformSpecific.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestClockPlatformSpecific.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestClockPlatformSpecific.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestClockPlatformSpecific.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestClockPlatformSpecific.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestClockPlatformSpecific.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestClockPlatformSpecific.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestClockPlatformSpecific.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestClockPlatformSpecific.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestClockPlatformSpecific.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.TestConfig", "object" : "zio\/test\/TestConfig$.html", "members_object" : [{"label" : "checkAspect", "tail" : "(trace: Trace): URIO[Any, CheckAspect]", "member" : "zio.test.TestConfig.checkAspect", "link" : "zio\/test\/TestConfig$.html#checkAspect(implicittrace:zio.Trace):zio.URIO[Any,zio.test.TestAspect.CheckAspect]", "kind" : "def"}, {"label" : "shrinks", "tail" : "(trace: Trace): URIO[Any, Int]", "member" : "zio.test.TestConfig.shrinks", "link" : "zio\/test\/TestConfig$.html#shrinks(implicittrace:zio.Trace):zio.URIO[Any,Int]", "kind" : "def"}, {"label" : "samples", "tail" : "(trace: Trace): URIO[Any, Int]", "member" : "zio.test.TestConfig.samples", "link" : "zio\/test\/TestConfig$.html#samples(implicittrace:zio.Trace):zio.URIO[Any,Int]", "kind" : "def"}, {"label" : "retries", "tail" : "(trace: Trace): URIO[Any, Int]", "member" : "zio.test.TestConfig.retries", "link" : "zio\/test\/TestConfig$.html#retries(implicittrace:zio.Trace):zio.URIO[Any,Int]", "kind" : "def"}, {"label" : "repeats", "tail" : "(trace: Trace): URIO[Any, Int]", "member" : "zio.test.TestConfig.repeats", "link" : "zio\/test\/TestConfig$.html#repeats(implicittrace:zio.Trace):zio.URIO[Any,Int]", "kind" : "def"}, {"label" : "live", "tail" : "(repeats: Int, retries: Int, samples: Int, shrinks: Int, checkAspect: CheckAspect)(trace: Trace): ZLayer[Any, Nothing, TestConfig]", "member" : "zio.test.TestConfig.live", "link" : "zio\/test\/TestConfig$.html#live(repeats:Int,retries:Int,samples:Int,shrinks:Int,checkAspect:zio.test.TestAspect.CheckAspect)(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,zio.test.TestConfig]", "kind" : "def"}, {"label" : "live", "tail" : "(repeats: Int, retries: Int, samples: Int, shrinks: Int)(trace: Trace): ZLayer[Any, Nothing, TestConfig]", "member" : "zio.test.TestConfig.live", "link" : "zio\/test\/TestConfig$.html#live(repeats:Int,retries:Int,samples:Int,shrinks:Int)(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,zio.test.TestConfig]", "kind" : "def"}, {"label" : "default", "tail" : ": ZLayer[Any, Nothing, TestConfig]", "member" : "zio.test.TestConfig.default", "link" : "zio\/test\/TestConfig$.html#default:zio.ZLayer[Any,Nothing,zio.test.TestConfig]", "kind" : "val"}, {"label" : "TestV2", "tail" : "", "member" : "zio.test.TestConfig.TestV2", "link" : "zio\/test\/TestConfig$.html#TestV2extendsTestConfigwithProductwithSerializable", "kind" : "final case class"}, {"label" : "Test", "tail" : "", "member" : "zio.test.TestConfig.Test", "link" : "zio\/test\/TestConfig$.html#TestextendsTestConfigwithProductwithSerializable", "kind" : "final case class"}, {"label" : "tag", "tail" : ": Tag[TestConfig]", "member" : "zio.test.TestConfig.tag", "link" : "zio\/test\/TestConfig$.html#tag:zio.Tag[zio.test.TestConfig]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestConfig$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestConfig$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestConfig$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestConfig$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/TestConfig.html", "kind" : "trait", "members_trait" : [{"label" : "checkAspect", "tail" : "(): CheckAspect", "member" : "zio.test.TestConfig.checkAspect", "link" : "zio\/test\/TestConfig.html#checkAspect:zio.test.TestAspect.CheckAspect", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestConfig.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestConfig.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestConfig.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestConfig.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestConfig.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "shrinks", "tail" : "(): Int", "member" : "zio.test.TestConfig.shrinks", "link" : "zio\/test\/TestConfig.html#shrinks:Int", "kind" : "abstract def"}, {"label" : "samples", "tail" : "(): Int", "member" : "zio.test.TestConfig.samples", "link" : "zio\/test\/TestConfig.html#samples:Int", "kind" : "abstract def"}, {"label" : "retries", "tail" : "(): Int", "member" : "zio.test.TestConfig.retries", "link" : "zio\/test\/TestConfig.html#retries:Int", "kind" : "abstract def"}, {"label" : "repeats", "tail" : "(): Int", "member" : "zio.test.TestConfig.repeats", "link" : "zio\/test\/TestConfig.html#repeats:Int", "kind" : "abstract def"}], "shortDescription" : "The TestConfig service provides access to default configuration settingsused by ZIO Test, including the number of times to repeat tests to ensurethey are stable, the number of times to retry flaky tests, the sufficientnumber of samples to check from a random variable, and the maximum number ofshrinkings to minimize large failures."}, {"name" : "zio.test.TestConsole", "object" : "zio\/test\/TestConsole$.html", "members_object" : [{"label" : "Data", "tail" : "", "member" : "zio.test.TestConsole.Data", "link" : "zio\/test\/TestConsole$.html#DataextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "silent", "tail" : "(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.test.TestConsole.silent", "link" : "zio\/test\/TestConsole$.html#silent[R,E,A](zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "save", "tail" : "(trace: Trace): UIO[UIO[Unit]]", "member" : "zio.test.TestConsole.save", "link" : "zio\/test\/TestConsole$.html#save(implicittrace:zio.Trace):zio.UIO[zio.UIO[Unit]]", "kind" : "def"}, {"label" : "outputErr", "tail" : "(trace: Trace): UIO[Vector[String]]", "member" : "zio.test.TestConsole.outputErr", "link" : "zio\/test\/TestConsole$.html#outputErr(implicittrace:zio.Trace):zio.UIO[Vector[String]]", "kind" : "def"}, {"label" : "output", "tail" : "(trace: Trace): UIO[Vector[String]]", "member" : "zio.test.TestConsole.output", "link" : "zio\/test\/TestConsole$.html#output(implicittrace:zio.Trace):zio.UIO[Vector[String]]", "kind" : "def"}, {"label" : "feedLines", "tail" : "(lines: String*)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestConsole.feedLines", "link" : "zio\/test\/TestConsole$.html#feedLines(lines:String*)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "debug", "tail" : "(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.test.TestConsole.debug", "link" : "zio\/test\/TestConsole$.html#debug[R,E,A](zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "def"}, {"label" : "clearOutput", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestConsole.clearOutput", "link" : "zio\/test\/TestConsole$.html#clearOutput(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "clearInput", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestConsole.clearInput", "link" : "zio\/test\/TestConsole$.html#clearInput(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "silent", "tail" : ": ZLayer[Live with Annotations, Nothing, TestConsole]", "member" : "zio.test.TestConsole.silent", "link" : "zio\/test\/TestConsole$.html#silent:zio.ZLayer[zio.test.Livewithzio.test.Annotations,Nothing,zio.test.TestConsole]", "kind" : "val"}, {"label" : "debug", "tail" : ": ZLayer[Live with Annotations, Nothing, TestConsole]", "member" : "zio.test.TestConsole.debug", "link" : "zio\/test\/TestConsole$.html#debug:zio.ZLayer[zio.test.Livewithzio.test.Annotations,Nothing,zio.test.TestConsole]", "kind" : "val"}, {"label" : "any", "tail" : ": ZLayer[TestConsole, Nothing, TestConsole]", "member" : "zio.test.TestConsole.any", "link" : "zio\/test\/TestConsole$.html#any:zio.ZLayer[zio.test.TestConsole,Nothing,zio.test.TestConsole]", "kind" : "val"}, {"label" : "make", "tail" : "(data: Data, debug: Boolean)(trace: Trace): ZLayer[Live with Annotations, Nothing, TestConsole]", "member" : "zio.test.TestConsole.make", "link" : "zio\/test\/TestConsole$.html#make(data:zio.test.TestConsole.Data,debug:Boolean)(implicittrace:zio.Trace):zio.ZLayer[zio.test.Livewithzio.test.Annotations,Nothing,zio.test.TestConsole]", "kind" : "def"}, {"label" : "Test", "tail" : "", "member" : "zio.test.TestConsole.Test", "link" : "zio\/test\/TestConsole$.html#TestextendsTestConsolewithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestConsole$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestConsole$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestConsole$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestConsole$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestConsole$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestConsole$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestConsole$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestConsole$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestConsole$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestConsole$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestConsole$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestConsole$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConsole$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConsole$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConsole$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestConsole$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestConsole$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestConsole$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestConsole$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/TestConsole.html", "kind" : "trait", "members_trait" : [{"label" : "UnsafeAPI", "tail" : "", "member" : "zio.Console.UnsafeAPI", "link" : "zio\/Console.html#UnsafeAPIextendsSerializable", "kind" : "trait"}, {"label" : "unsafe", "tail" : "(): UnsafeAPI", "member" : "zio.Console.unsafe", "link" : "zio\/test\/TestConsole.html#unsafe:Console.this.UnsafeAPI", "kind" : "def"}, {"label" : "readLine", "tail" : "(prompt: String)(trace: Trace): IO[IOException, String]", "member" : "zio.Console.readLine", "link" : "zio\/test\/TestConsole.html#readLine(prompt:String)(implicittrace:zio.Trace):zio.IO[java.io.IOException,String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestConsole.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestConsole.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestConsole.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestConsole.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestConsole.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestConsole.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestConsole.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestConsole.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestConsole.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestConsole.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestConsole.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestConsole.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConsole.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConsole.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConsole.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestConsole.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestConsole.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestConsole.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestConsole.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "silent", "tail" : "(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.test.TestConsole.silent", "link" : "zio\/test\/TestConsole.html#silent[R,E,A](zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "abstract def"}, {"label" : "outputErr", "tail" : "(trace: Trace): UIO[Vector[String]]", "member" : "zio.test.TestConsole.outputErr", "link" : "zio\/test\/TestConsole.html#outputErr(implicittrace:zio.Trace):zio.UIO[Vector[String]]", "kind" : "abstract def"}, {"label" : "output", "tail" : "(trace: Trace): UIO[Vector[String]]", "member" : "zio.test.TestConsole.output", "link" : "zio\/test\/TestConsole.html#output(implicittrace:zio.Trace):zio.UIO[Vector[String]]", "kind" : "abstract def"}, {"label" : "feedLines", "tail" : "(lines: String*)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestConsole.feedLines", "link" : "zio\/test\/TestConsole.html#feedLines(lines:String*)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "debug", "tail" : "(zio: ZIO[R, E, A])(trace: Trace): ZIO[R, E, A]", "member" : "zio.test.TestConsole.debug", "link" : "zio\/test\/TestConsole.html#debug[R,E,A](zio:zio.ZIO[R,E,A])(implicittrace:zio.Trace):zio.ZIO[R,E,A]", "kind" : "abstract def"}, {"label" : "clearOutputErr", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestConsole.clearOutputErr", "link" : "zio\/test\/TestConsole.html#clearOutputErr(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "clearOutput", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestConsole.clearOutput", "link" : "zio\/test\/TestConsole.html#clearOutput(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "clearInput", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestConsole.clearInput", "link" : "zio\/test\/TestConsole.html#clearInput(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "save", "tail" : "(trace: Trace): UIO[UIO[Unit]]", "member" : "zio.test.Restorable.save", "link" : "zio\/test\/TestConsole.html#save(implicittrace:zio.Trace):zio.UIO[zio.UIO[Unit]]", "kind" : "abstract def"}, {"label" : "readLine", "tail" : "(trace: Trace): IO[IOException, String]", "member" : "zio.Console.readLine", "link" : "zio\/test\/TestConsole.html#readLine(implicittrace:zio.Trace):zio.IO[java.io.IOException,String]", "kind" : "abstract def"}, {"label" : "printLineError", "tail" : "(line: => Any)(trace: Trace): IO[IOException, Unit]", "member" : "zio.Console.printLineError", "link" : "zio\/test\/TestConsole.html#printLineError(line:=>Any)(implicittrace:zio.Trace):zio.IO[java.io.IOException,Unit]", "kind" : "abstract def"}, {"label" : "printLine", "tail" : "(line: => Any)(trace: Trace): IO[IOException, Unit]", "member" : "zio.Console.printLine", "link" : "zio\/test\/TestConsole.html#printLine(line:=>Any)(implicittrace:zio.Trace):zio.IO[java.io.IOException,Unit]", "kind" : "abstract def"}, {"label" : "printError", "tail" : "(line: => Any)(trace: Trace): IO[IOException, Unit]", "member" : "zio.Console.printError", "link" : "zio\/test\/TestConsole.html#printError(line:=>Any)(implicittrace:zio.Trace):zio.IO[java.io.IOException,Unit]", "kind" : "abstract def"}, {"label" : "print", "tail" : "(line: => Any)(trace: Trace): IO[IOException, Unit]", "member" : "zio.Console.print", "link" : "zio\/test\/TestConsole.html#print(line:=>Any)(implicittrace:zio.Trace):zio.IO[java.io.IOException,Unit]", "kind" : "abstract def"}], "shortDescription" : "TestConsole provides a testable interface for programs interacting with theconsole by modeling input and output as reading from and writing to input andoutput buffers maintained by TestConsole and backed by a Ref."}, {"name" : "zio.test.TestConstructor", "object" : "zio\/test\/TestConstructor$.html", "members_object" : [{"label" : "AssertConstructor", "tail" : "(): WithOut[Any, A, Spec[Any, Nothing]]", "member" : "zio.test.TestConstructor.AssertConstructor", "link" : "zio\/test\/TestConstructor$.html#AssertConstructor[A<:zio.test.TestResult]:zio.test.TestConstructor.WithOut[Any,A,zio.test.Spec[Any,Nothing]]", "kind" : "implicit def"}, {"label" : "WithOut", "tail" : "", "member" : "zio.test.TestConstructor.WithOut", "link" : "zio\/test\/TestConstructor$.html#WithOut[Environment,In,Out0]=zio.test.TestConstructor[Environment,In]{typeOut=Out0}", "kind" : "type"}, {"label" : "AssertZIOConstructor", "tail" : "(): WithOut[R, ZIO[R, E, A], Spec[R, E]]", "member" : "zio.test.TestConstructorLowPriority1.AssertZIOConstructor", "link" : "zio\/test\/TestConstructor$.html#AssertZIOConstructor[R,E,A<:zio.test.TestResult]:zio.test.TestConstructor.WithOut[R,zio.ZIO[R,E,A],zio.test.Spec[R,E]]", "kind" : "implicit def"}, {"label" : "AssertZSTMConstructor", "tail" : "(): WithOut[R, ZSTM[R, E, A], Spec[R, E]]", "member" : "zio.test.TestConstructorLowPriority2.AssertZSTMConstructor", "link" : "zio\/test\/TestConstructor$.html#AssertZSTMConstructor[R,E,A<:zio.test.TestResult]:zio.test.TestConstructor.WithOut[R,zio.stm.ZSTM[R,E,A],zio.test.Spec[R,E]]", "kind" : "implicit def"}, {"label" : "AssertEitherConstructor", "tail" : "(): WithOut[Any, Either[E, A], Spec[Any, E]]", "member" : "zio.test.TestConstructorLowPriority3.AssertEitherConstructor", "link" : "zio\/test\/TestConstructor$.html#AssertEitherConstructor[E,A<:zio.test.TestResult]:zio.test.TestConstructor.WithOut[Any,Either[E,A],zio.test.Spec[Any,E]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestConstructor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestConstructor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestConstructor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestConstructor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestConstructor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestConstructor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestConstructor$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestConstructor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestConstructor$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestConstructor$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestConstructor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestConstructor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConstructor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConstructor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConstructor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestConstructor$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestConstructor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestConstructor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestConstructor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/TestConstructor.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestConstructor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestConstructor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestConstructor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestConstructor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestConstructor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestConstructor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestConstructor.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestConstructor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestConstructor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestConstructor.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestConstructor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestConstructor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConstructor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConstructor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConstructor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestConstructor.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestConstructor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestConstructor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestConstructor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(label: String)(assertion: => In)(sourceLocation: SourceLocation, trace: Trace): Out", "member" : "zio.test.TestConstructor.apply", "link" : "zio\/test\/TestConstructor.html#apply(label:String)(assertion:=>In)(implicitsourceLocation:zio.internal.stacktracer.SourceLocation,implicittrace:zio.Trace):TestConstructor.this.Out", "kind" : "abstract def"}, {"member" : "zio.test.TestConstructor.Out", "error" : "unsupported entity"}], "shortDescription" : ""}, {"name" : "zio.test.TestConstructorLowPriority1", "trait" : "zio\/test\/TestConstructorLowPriority1.html", "kind" : "trait", "members_trait" : [{"label" : "AssertZIOConstructor", "tail" : "(): WithOut[R, ZIO[R, E, A], Spec[R, E]]", "member" : "zio.test.TestConstructorLowPriority1.AssertZIOConstructor", "link" : "zio\/test\/TestConstructorLowPriority1.html#AssertZIOConstructor[R,E,A<:zio.test.TestResult]:zio.test.TestConstructor.WithOut[R,zio.ZIO[R,E,A],zio.test.Spec[R,E]]", "kind" : "implicit def"}, {"label" : "AssertZSTMConstructor", "tail" : "(): WithOut[R, ZSTM[R, E, A], Spec[R, E]]", "member" : "zio.test.TestConstructorLowPriority2.AssertZSTMConstructor", "link" : "zio\/test\/TestConstructorLowPriority1.html#AssertZSTMConstructor[R,E,A<:zio.test.TestResult]:zio.test.TestConstructor.WithOut[R,zio.stm.ZSTM[R,E,A],zio.test.Spec[R,E]]", "kind" : "implicit def"}, {"label" : "AssertEitherConstructor", "tail" : "(): WithOut[Any, Either[E, A], Spec[Any, E]]", "member" : "zio.test.TestConstructorLowPriority3.AssertEitherConstructor", "link" : "zio\/test\/TestConstructorLowPriority1.html#AssertEitherConstructor[E,A<:zio.test.TestResult]:zio.test.TestConstructor.WithOut[Any,Either[E,A],zio.test.Spec[Any,E]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestConstructorLowPriority1.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestConstructorLowPriority1.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestConstructorLowPriority1.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestConstructorLowPriority1.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestConstructorLowPriority1.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestConstructorLowPriority1.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestConstructorLowPriority1.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestConstructorLowPriority1.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestConstructorLowPriority1.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestConstructorLowPriority1.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestConstructorLowPriority1.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestConstructorLowPriority1.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConstructorLowPriority1.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConstructorLowPriority1.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConstructorLowPriority1.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestConstructorLowPriority1.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestConstructorLowPriority1.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestConstructorLowPriority1.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestConstructorLowPriority1.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.TestConstructorLowPriority2", "trait" : "zio\/test\/TestConstructorLowPriority2.html", "kind" : "trait", "members_trait" : [{"label" : "AssertZSTMConstructor", "tail" : "(): WithOut[R, ZSTM[R, E, A], Spec[R, E]]", "member" : "zio.test.TestConstructorLowPriority2.AssertZSTMConstructor", "link" : "zio\/test\/TestConstructorLowPriority2.html#AssertZSTMConstructor[R,E,A<:zio.test.TestResult]:zio.test.TestConstructor.WithOut[R,zio.stm.ZSTM[R,E,A],zio.test.Spec[R,E]]", "kind" : "implicit def"}, {"label" : "AssertEitherConstructor", "tail" : "(): WithOut[Any, Either[E, A], Spec[Any, E]]", "member" : "zio.test.TestConstructorLowPriority3.AssertEitherConstructor", "link" : "zio\/test\/TestConstructorLowPriority2.html#AssertEitherConstructor[E,A<:zio.test.TestResult]:zio.test.TestConstructor.WithOut[Any,Either[E,A],zio.test.Spec[Any,E]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestConstructorLowPriority2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestConstructorLowPriority2.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestConstructorLowPriority2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestConstructorLowPriority2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestConstructorLowPriority2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestConstructorLowPriority2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestConstructorLowPriority2.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestConstructorLowPriority2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestConstructorLowPriority2.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestConstructorLowPriority2.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestConstructorLowPriority2.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestConstructorLowPriority2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConstructorLowPriority2.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConstructorLowPriority2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConstructorLowPriority2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestConstructorLowPriority2.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestConstructorLowPriority2.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestConstructorLowPriority2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestConstructorLowPriority2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.TestConstructorLowPriority3", "trait" : "zio\/test\/TestConstructorLowPriority3.html", "kind" : "trait", "members_trait" : [{"label" : "AssertEitherConstructor", "tail" : "(): WithOut[Any, Either[E, A], Spec[Any, E]]", "member" : "zio.test.TestConstructorLowPriority3.AssertEitherConstructor", "link" : "zio\/test\/TestConstructorLowPriority3.html#AssertEitherConstructor[E,A<:zio.test.TestResult]:zio.test.TestConstructor.WithOut[Any,Either[E,A],zio.test.Spec[Any,E]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestConstructorLowPriority3.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestConstructorLowPriority3.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestConstructorLowPriority3.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestConstructorLowPriority3.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestConstructorLowPriority3.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestConstructorLowPriority3.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestConstructorLowPriority3.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestConstructorLowPriority3.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestConstructorLowPriority3.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestConstructorLowPriority3.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestConstructorLowPriority3.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestConstructorLowPriority3.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConstructorLowPriority3.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConstructorLowPriority3.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestConstructorLowPriority3.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestConstructorLowPriority3.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestConstructorLowPriority3.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestConstructorLowPriority3.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestConstructorLowPriority3.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.TestDuration", "object" : "zio\/test\/TestDuration$.html", "members_object" : [{"label" : "zero", "tail" : ": TestDuration", "member" : "zio.test.TestDuration.zero", "link" : "zio\/test\/TestDuration$.html#zero:zio.test.TestDuration", "kind" : "val"}, {"label" : "fromInterval", "tail" : "(start: Instant, end: Instant): TestDuration", "member" : "zio.test.TestDuration.fromInterval", "link" : "zio\/test\/TestDuration$.html#fromInterval(start:java.time.Instant,end:java.time.Instant):zio.test.TestDuration", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestDuration$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestDuration$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestDuration$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestDuration$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestDuration$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestDuration$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestDuration$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestDuration$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestDuration$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestDuration$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestDuration$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestDuration$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestDuration$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestDuration$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestDuration$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestDuration$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestDuration$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestDuration$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestDuration$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/TestDuration.html", "kind" : "trait", "members_trait" : [{"label" : "toNanos", "tail" : "(): Long", "member" : "zio.test.TestDuration.toNanos", "link" : "zio\/test\/TestDuration.html#toNanos:Long", "kind" : "final def"}, {"label" : "toMillis", "tail" : "(): Long", "member" : "zio.test.TestDuration.toMillis", "link" : "zio\/test\/TestDuration.html#toMillis:Long", "kind" : "final def"}, {"label" : "toDuration", "tail" : "(): zio.Duration", "member" : "zio.test.TestDuration.toDuration", "link" : "zio\/test\/TestDuration.html#toDuration:zio.Duration", "kind" : "final def"}, {"label" : "render", "tail" : "(): String", "member" : "zio.test.TestDuration.render", "link" : "zio\/test\/TestDuration.html#render:String", "kind" : "final def"}, {"label" : "isZero", "tail" : "(): Boolean", "member" : "zio.test.TestDuration.isZero", "link" : "zio\/test\/TestDuration.html#isZero:Boolean", "kind" : "final def"}, {"label" : "<>", "tail" : "(that: TestDuration): TestDuration", "member" : "zio.test.TestDuration.<>", "link" : "zio\/test\/TestDuration.html#<>(that:zio.test.TestDuration):zio.test.TestDuration", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestDuration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestDuration.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestDuration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestDuration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestDuration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestDuration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestDuration.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestDuration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestDuration.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestDuration.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestDuration.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestDuration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestDuration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestDuration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestDuration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestDuration.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestDuration.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestDuration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestDuration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.TestEnvironment", "shortDescription" : "", "object" : "zio\/test\/package$$TestEnvironment$.html", "members_object" : [{"label" : "live", "tail" : ": ZLayer[Clock with Console with System with Random, Nothing, TestEnvironment]", "member" : "zio.test.TestEnvironment.live", "link" : "zio\/test\/package$$TestEnvironment$.html#live:zio.ZLayer[zio.Clockwithzio.Consolewithzio.Systemwithzio.Random,Nothing,zio.test.package.TestEnvironment]", "kind" : "val"}, {"label" : "any", "tail" : ": ZLayer[TestEnvironment, Nothing, TestEnvironment]", "member" : "zio.test.TestEnvironment.any", "link" : "zio\/test\/package$$TestEnvironment$.html#any:zio.ZLayer[zio.test.package.TestEnvironment,Nothing,zio.test.package.TestEnvironment]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/package$$TestEnvironment$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/package$$TestEnvironment$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/package$$TestEnvironment$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/package$$TestEnvironment$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/package$$TestEnvironment$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/package$$TestEnvironment$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/package$$TestEnvironment$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/package$$TestEnvironment$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/package$$TestEnvironment$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/package$$TestEnvironment$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/package$$TestEnvironment$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/package$$TestEnvironment$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/package$$TestEnvironment$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/package$$TestEnvironment$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/package$$TestEnvironment$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/package$$TestEnvironment$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/package$$TestEnvironment$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/package$$TestEnvironment$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/package$$TestEnvironment$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.TestExecutor", "shortDescription" : "A TestExecutor[R, E] is capable of executing specs that require anenvironment R and may fail with an E.", "object" : "zio\/test\/TestExecutor$.html", "members_class" : [{"member" : "zio.test.TestExecutor#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestExecutor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestExecutor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestExecutor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestExecutor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestExecutor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestExecutor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestExecutor.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestExecutor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestExecutor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestExecutor.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestExecutor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestExecutor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestExecutor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestExecutor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestExecutor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestExecutor.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestExecutor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestExecutor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestExecutor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "run", "tail" : "(fullyQualifiedName: String, spec: Spec[R, E], defExec: ExecutionStrategy)(trace: Trace): UIO[Summary]", "member" : "zio.test.TestExecutor.run", "link" : "zio\/test\/TestExecutor.html#run(fullyQualifiedName:String,spec:zio.test.Spec[R,E],defExec:zio.ExecutionStrategy)(implicittrace:zio.Trace):zio.UIO[zio.test.Summary]", "kind" : "abstract def"}], "members_object" : [{"label" : "default", "tail" : "(sharedSpecLayer: ZLayer[Any, E, R], freshLayerPerSpec: ZLayer[Any, Nothing, TestEnvironment with Scope], sinkLayer: Layer[Nothing, ExecutionEventSink], eventHandlerZ: ZTestEventHandler): TestExecutor[R with TestEnvironment with Scope, E]", "member" : "zio.test.TestExecutor.default", "link" : "zio\/test\/TestExecutor$.html#default[R,E](sharedSpecLayer:zio.ZLayer[Any,E,R],freshLayerPerSpec:zio.ZLayer[Any,Nothing,zio.test.TestEnvironmentwithzio.Scope],sinkLayer:zio.Layer[Nothing,zio.test.ExecutionEventSink],eventHandlerZ:zio.test.ZTestEventHandler):zio.test.TestExecutor[Rwithzio.test.TestEnvironmentwithzio.Scope,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestExecutor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestExecutor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestExecutor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestExecutor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestExecutor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestExecutor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestExecutor$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestExecutor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestExecutor$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestExecutor$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestExecutor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestExecutor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestExecutor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestExecutor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestExecutor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestExecutor$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestExecutor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestExecutor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestExecutor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/test\/TestExecutor.html", "kind" : "class"}, {"name" : "zio.test.TestFailure", "shortDescription" : "", "object" : "zio\/test\/TestFailure$.html", "members_class" : [{"label" : "map", "tail" : "(f: (E) => E2): TestFailure[E2]", "member" : "zio.test.TestFailure.map", "link" : "zio\/test\/TestFailure.html#map[E2](f:E=>E2):zio.test.TestFailure[E2]", "kind" : "def"}, {"label" : "annotated", "tail" : "(annotations: TestAnnotationMap): TestFailure[E]", "member" : "zio.test.TestFailure.annotated", "link" : "zio\/test\/TestFailure.html#annotated(annotations:zio.test.TestAnnotationMap):zio.test.TestFailure[E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestFailure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestFailure.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestFailure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestFailure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestFailure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestFailure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestFailure.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestFailure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestFailure.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestFailure.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestFailure.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestFailure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestFailure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestFailure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestFailure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestFailure.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestFailure.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestFailure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestFailure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "annotations", "tail" : "(): TestAnnotationMap", "member" : "zio.test.TestFailure.annotations", "link" : "zio\/test\/TestFailure.html#annotations:zio.test.TestAnnotationMap", "kind" : "abstract def"}], "members_object" : [{"label" : "failCause", "tail" : "(cause: Cause[E]): TestFailure[E]", "member" : "zio.test.TestFailure.failCause", "link" : "zio\/test\/TestFailure$.html#failCause[E](cause:zio.Cause[E]):zio.test.TestFailure[E]", "kind" : "def"}, {"label" : "fail", "tail" : "(e: E): TestFailure[E]", "member" : "zio.test.TestFailure.fail", "link" : "zio\/test\/TestFailure$.html#fail[E](e:E):zio.test.TestFailure[E]", "kind" : "def"}, {"label" : "die", "tail" : "(t: Throwable): TestFailure[Nothing]", "member" : "zio.test.TestFailure.die", "link" : "zio\/test\/TestFailure$.html#die(t:Throwable):zio.test.TestFailure[Nothing]", "kind" : "def"}, {"label" : "assertion", "tail" : "(result: TestResult): TestFailure[Nothing]", "member" : "zio.test.TestFailure.assertion", "link" : "zio\/test\/TestFailure$.html#assertion(result:zio.test.TestResult):zio.test.TestFailure[Nothing]", "kind" : "def"}, {"label" : "Runtime", "tail" : "", "member" : "zio.test.TestFailure.Runtime", "link" : "zio\/test\/TestFailure$.html#Runtime[+E]extendsTestFailure[E]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Assertion", "tail" : "", "member" : "zio.test.TestFailure.Assertion", "link" : "zio\/test\/TestFailure$.html#AssertionextendsTestFailure[Nothing]withProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestFailure$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestFailure$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestFailure$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestFailure$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestFailure$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestFailure$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestFailure$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestFailure$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestFailure$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestFailure$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestFailure$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestFailure$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestFailure$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestFailure$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestFailure$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestFailure$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestFailure$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestFailure$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestFailure$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/test\/TestFailure.html", "kind" : "class"}, {"name" : "zio.test.TestLens", "shortDescription" : "", "members_case class" : [{"member" : "zio.test.TestLens#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/test\/TestLens.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestLens.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestLens.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestLens.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestLens.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestLens.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestLens.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestLens.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestLens.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestLens.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestLens.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestLens.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestLens.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestLens.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestLens.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestLens.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestLens.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/test\/TestLens.html", "kind" : "case class"}, {"name" : "zio.test.TestLensAnyOps", "shortDescription" : "", "members_class" : [{"label" : "custom", "tail" : "(customAssertion: CustomAssertion[A, B]): TestLens[B]", "member" : "zio.test.TestLensAnyOps.custom", "link" : "zio\/test\/package$$TestLensAnyOps.html#custom[B](customAssertion:zio.test.CustomAssertion[A,B]):zio.test.TestLens[B]", "kind" : "def"}, {"label" : "subtype", "tail" : "(): TestLens[Subtype]", "member" : "zio.test.TestLensAnyOps.subtype", "link" : "zio\/test\/package$$TestLensAnyOps.html#subtype[Subtype<:A]:zio.test.TestLens[Subtype]", "kind" : "def"}, {"label" : "anything", "tail" : "(): TestLens[Boolean]", "member" : "zio.test.TestLensAnyOps.anything", "link" : "zio\/test\/package$$TestLensAnyOps.html#anything:zio.test.TestLens[Boolean]", "kind" : "def"}, {"member" : "zio.test.TestLensAnyOps#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/test\/package$$TestLensAnyOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/test\/package$$TestLensAnyOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/package$$TestLensAnyOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/package$$TestLensAnyOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/test\/package$$TestLensAnyOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/test\/package$$TestLensAnyOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/test\/package$$TestLensAnyOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "zio\/test\/package$$TestLensAnyOps.html", "kind" : "class"}, {"name" : "zio.test.TestLensCauseOps", "shortDescription" : "", "members_class" : [{"label" : "interrupted", "tail" : "(): TestLens[Boolean]", "member" : "zio.test.TestLensCauseOps.interrupted", "link" : "zio\/test\/package$$TestLensCauseOps.html#interrupted:zio.test.TestLens[Boolean]", "kind" : "def"}, {"label" : "failure", "tail" : "(): TestLens[E]", "member" : "zio.test.TestLensCauseOps.failure", "link" : "zio\/test\/package$$TestLensCauseOps.html#failure:zio.test.TestLens[E]", "kind" : "def"}, {"label" : "die", "tail" : "(): TestLens[Throwable]", "member" : "zio.test.TestLensCauseOps.die", "link" : "zio\/test\/package$$TestLensCauseOps.html#die:zio.test.TestLens[Throwable]", "kind" : "def"}, {"member" : "zio.test.TestLensCauseOps#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/test\/package$$TestLensCauseOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/test\/package$$TestLensCauseOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/package$$TestLensCauseOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/package$$TestLensCauseOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/test\/package$$TestLensCauseOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/test\/package$$TestLensCauseOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/test\/package$$TestLensCauseOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "zio\/test\/package$$TestLensCauseOps.html", "kind" : "class"}, {"name" : "zio.test.TestLensEitherOps", "shortDescription" : "", "members_class" : [{"label" : "right", "tail" : "(): TestLens[A]", "member" : "zio.test.TestLensEitherOps.right", "link" : "zio\/test\/package$$TestLensEitherOps.html#right:zio.test.TestLens[A]", "kind" : "def"}, {"label" : "left", "tail" : "(): TestLens[E]", "member" : "zio.test.TestLensEitherOps.left", "link" : "zio\/test\/package$$TestLensEitherOps.html#left:zio.test.TestLens[E]", "kind" : "def"}, {"member" : "zio.test.TestLensEitherOps#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/test\/package$$TestLensEitherOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/test\/package$$TestLensEitherOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/package$$TestLensEitherOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/package$$TestLensEitherOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/test\/package$$TestLensEitherOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/test\/package$$TestLensEitherOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/test\/package$$TestLensEitherOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "zio\/test\/package$$TestLensEitherOps.html", "kind" : "class"}, {"name" : "zio.test.TestLensExitOps", "shortDescription" : "", "members_class" : [{"label" : "interrupted", "tail" : "(): TestLens[Boolean]", "member" : "zio.test.TestLensExitOps.interrupted", "link" : "zio\/test\/package$$TestLensExitOps.html#interrupted:zio.test.TestLens[Boolean]", "kind" : "def"}, {"label" : "cause", "tail" : "(): TestLens[Cause[E]]", "member" : "zio.test.TestLensExitOps.cause", "link" : "zio\/test\/package$$TestLensExitOps.html#cause:zio.test.TestLens[zio.Cause[E]]", "kind" : "def"}, {"label" : "success", "tail" : "(): TestLens[A]", "member" : "zio.test.TestLensExitOps.success", "link" : "zio\/test\/package$$TestLensExitOps.html#success:zio.test.TestLens[A]", "kind" : "def"}, {"label" : "failure", "tail" : "(): TestLens[E]", "member" : "zio.test.TestLensExitOps.failure", "link" : "zio\/test\/package$$TestLensExitOps.html#failure:zio.test.TestLens[E]", "kind" : "def"}, {"label" : "die", "tail" : "(): TestLens[Throwable]", "member" : "zio.test.TestLensExitOps.die", "link" : "zio\/test\/package$$TestLensExitOps.html#die:zio.test.TestLens[Throwable]", "kind" : "def"}, {"member" : "zio.test.TestLensExitOps#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/test\/package$$TestLensExitOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/test\/package$$TestLensExitOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/package$$TestLensExitOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/package$$TestLensExitOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/test\/package$$TestLensExitOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/test\/package$$TestLensExitOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/test\/package$$TestLensExitOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "zio\/test\/package$$TestLensExitOps.html", "kind" : "class"}, {"name" : "zio.test.TestLensOptionOps", "shortDescription" : "", "members_class" : [{"label" : "some", "tail" : "(): TestLens[A]", "member" : "zio.test.TestLensOptionOps.some", "link" : "zio\/test\/package$$TestLensOptionOps.html#some:zio.test.TestLens[A]", "kind" : "def"}, {"member" : "zio.test.TestLensOptionOps#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/test\/package$$TestLensOptionOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/test\/package$$TestLensOptionOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/package$$TestLensOptionOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/package$$TestLensOptionOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/test\/package$$TestLensOptionOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/test\/package$$TestLensOptionOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/test\/package$$TestLensOptionOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "zio\/test\/package$$TestLensOptionOps.html", "kind" : "class"}, {"name" : "zio.test.TestLensTryOps", "shortDescription" : "", "members_class" : [{"label" : "failure", "tail" : "(): TestLens[Throwable]", "member" : "zio.test.TestLensTryOps.failure", "link" : "zio\/test\/package$$TestLensTryOps.html#failure:zio.test.TestLens[Throwable]", "kind" : "def"}, {"label" : "success", "tail" : "(): TestLens[A]", "member" : "zio.test.TestLensTryOps.success", "link" : "zio\/test\/package$$TestLensTryOps.html#success:zio.test.TestLens[A]", "kind" : "def"}, {"member" : "zio.test.TestLensTryOps#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/test\/package$$TestLensTryOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/test\/package$$TestLensTryOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/package$$TestLensTryOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/package$$TestLensTryOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/test\/package$$TestLensTryOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/test\/package$$TestLensTryOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/test\/package$$TestLensTryOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "zio\/test\/package$$TestLensTryOps.html", "kind" : "class"}, {"name" : "zio.test.TestLogger", "object" : "zio\/test\/TestLogger$.html", "members_object" : [{"label" : "logLine", "tail" : "(line: String)(trace: Trace): URIO[TestLogger, Unit]", "member" : "zio.test.TestLogger.logLine", "link" : "zio\/test\/TestLogger$.html#logLine(line:String)(implicittrace:zio.Trace):zio.URIO[zio.test.TestLogger,Unit]", "kind" : "def"}, {"label" : "fromConsole", "tail" : "(console: Console)(trace: Trace): ZLayer[Any, Nothing, TestLogger]", "member" : "zio.test.TestLogger.fromConsole", "link" : "zio\/test\/TestLogger$.html#fromConsole(console:zio.Console)(implicittrace:zio.Trace):zio.ZLayer[Any,Nothing,zio.test.TestLogger]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestLogger$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestLogger$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestLogger$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestLogger$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestLogger$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestLogger$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestLogger$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestLogger$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestLogger$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestLogger$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestLogger$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestLogger$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestLogger$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestLogger$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestLogger$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestLogger$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestLogger$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestLogger$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestLogger$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/TestLogger.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestLogger.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestLogger.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestLogger.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestLogger.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestLogger.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestLogger.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestLogger.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestLogger.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestLogger.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestLogger.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestLogger.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestLogger.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestLogger.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestLogger.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestLogger.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestLogger.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestLogger.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestLogger.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestLogger.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "logLine", "tail" : "(line: String)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestLogger.logLine", "link" : "zio\/test\/TestLogger.html#logLine(line:String)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.test.TestPlatform", "shortDescription" : "TestPlatform provides information about the platform tests are being run onto enable platform specific test configuration.", "object" : "zio\/test\/TestPlatform$.html", "members_object" : [{"label" : "isNative", "tail" : ": Boolean(false)", "member" : "zio.test.TestPlatform.isNative", "link" : "zio\/test\/TestPlatform$.html#isNative:Boolean(false)", "kind" : "final val"}, {"label" : "isJVM", "tail" : ": Boolean(true)", "member" : "zio.test.TestPlatform.isJVM", "link" : "zio\/test\/TestPlatform$.html#isJVM:Boolean(true)", "kind" : "final val"}, {"label" : "isJS", "tail" : ": Boolean(false)", "member" : "zio.test.TestPlatform.isJS", "link" : "zio\/test\/TestPlatform$.html#isJS:Boolean(false)", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestPlatform$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestPlatform$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestPlatform$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestPlatform$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestPlatform$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestPlatform$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestPlatform$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestPlatform$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestPlatform$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestPlatform$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestPlatform$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestPlatform$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestPlatform$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestPlatform$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestPlatform$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestPlatform$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestPlatform$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestPlatform$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestPlatform$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.TestRandom", "object" : "zio\/test\/TestRandom$.html", "members_object" : [{"label" : "Buffer", "tail" : "", "member" : "zio.test.TestRandom.Buffer", "link" : "zio\/test\/TestRandom$.html#BufferextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "setSeed", "tail" : "(seed: => Long)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.setSeed", "link" : "zio\/test\/TestRandom$.html#setSeed(seed:=>Long)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "save", "tail" : "(trace: Trace): UIO[UIO[Unit]]", "member" : "zio.test.TestRandom.save", "link" : "zio\/test\/TestRandom$.html#save(implicittrace:zio.Trace):zio.UIO[zio.UIO[Unit]]", "kind" : "def"}, {"label" : "makeTest", "tail" : "(data: Data)(trace: Trace): UIO[Test]", "member" : "zio.test.TestRandom.makeTest", "link" : "zio\/test\/TestRandom$.html#makeTest(data:zio.test.TestRandom.Data)(implicittrace:zio.Trace):zio.UIO[zio.test.TestRandom.Test]", "kind" : "def"}, {"label" : "random", "tail" : ": ZLayer[Clock, Nothing, TestRandom]", "member" : "zio.test.TestRandom.random", "link" : "zio\/test\/TestRandom$.html#random:zio.ZLayer[zio.Clock,Nothing,zio.test.TestRandom]", "kind" : "val"}, {"label" : "deterministic", "tail" : ": Layer[Nothing, TestRandom]", "member" : "zio.test.TestRandom.deterministic", "link" : "zio\/test\/TestRandom$.html#deterministic:zio.Layer[Nothing,zio.test.TestRandom]", "kind" : "val"}, {"label" : "any", "tail" : ": ZLayer[TestRandom, Nothing, TestRandom]", "member" : "zio.test.TestRandom.any", "link" : "zio\/test\/TestRandom$.html#any:zio.ZLayer[zio.test.TestRandom,Nothing,zio.test.TestRandom]", "kind" : "val"}, {"label" : "make", "tail" : "(data: Data): Layer[Nothing, TestRandom]", "member" : "zio.test.TestRandom.make", "link" : "zio\/test\/TestRandom$.html#make(data:zio.test.TestRandom.Data):zio.Layer[Nothing,zio.test.TestRandom]", "kind" : "def"}, {"label" : "getSeed", "tail" : "(trace: Trace): UIO[Long]", "member" : "zio.test.TestRandom.getSeed", "link" : "zio\/test\/TestRandom$.html#getSeed(implicittrace:zio.Trace):zio.UIO[Long]", "kind" : "def"}, {"label" : "feedUUIDs", "tail" : "(uuids: UUID*)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.feedUUIDs", "link" : "zio\/test\/TestRandom$.html#feedUUIDs(uuids:java.util.UUID*)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "feedStrings", "tail" : "(strings: String*)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.feedStrings", "link" : "zio\/test\/TestRandom$.html#feedStrings(strings:String*)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "feedLongs", "tail" : "(longs: Long*)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.feedLongs", "link" : "zio\/test\/TestRandom$.html#feedLongs(longs:Long*)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "feedInts", "tail" : "(ints: Int*)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.feedInts", "link" : "zio\/test\/TestRandom$.html#feedInts(ints:Int*)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "feedFloats", "tail" : "(floats: Float*)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.feedFloats", "link" : "zio\/test\/TestRandom$.html#feedFloats(floats:Float*)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "feedDoubles", "tail" : "(doubles: Double*)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.feedDoubles", "link" : "zio\/test\/TestRandom$.html#feedDoubles(doubles:Double*)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "feedChars", "tail" : "(chars: Char*)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.feedChars", "link" : "zio\/test\/TestRandom$.html#feedChars(chars:Char*)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "feedBytes", "tail" : "(bytes: Chunk[Byte]*)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.feedBytes", "link" : "zio\/test\/TestRandom$.html#feedBytes(bytes:zio.Chunk[Byte]*)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "feedBooleans", "tail" : "(booleans: Boolean*)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.feedBooleans", "link" : "zio\/test\/TestRandom$.html#feedBooleans(booleans:Boolean*)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "clearUUIDs", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.clearUUIDs", "link" : "zio\/test\/TestRandom$.html#clearUUIDs(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "clearStrings", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.clearStrings", "link" : "zio\/test\/TestRandom$.html#clearStrings(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "clearLongs", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.clearLongs", "link" : "zio\/test\/TestRandom$.html#clearLongs(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "clearInts", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.clearInts", "link" : "zio\/test\/TestRandom$.html#clearInts(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "clearFloats", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.clearFloats", "link" : "zio\/test\/TestRandom$.html#clearFloats(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "clearDoubles", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.clearDoubles", "link" : "zio\/test\/TestRandom$.html#clearDoubles(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "clearChars", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.clearChars", "link" : "zio\/test\/TestRandom$.html#clearChars(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "clearBytes", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.clearBytes", "link" : "zio\/test\/TestRandom$.html#clearBytes(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "clearBooleans", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.clearBooleans", "link" : "zio\/test\/TestRandom$.html#clearBooleans(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "Data", "tail" : "", "member" : "zio.test.TestRandom.Data", "link" : "zio\/test\/TestRandom$.html#DataextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "DefaultData", "tail" : ": Data", "member" : "zio.test.TestRandom.DefaultData", "link" : "zio\/test\/TestRandom$.html#DefaultData:zio.test.TestRandom.Data", "kind" : "val"}, {"label" : "Test", "tail" : "", "member" : "zio.test.TestRandom.Test", "link" : "zio\/test\/TestRandom$.html#TestextendsTestRandomwithProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestRandom$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestRandom$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestRandom$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestRandom$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestRandom$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestRandom$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestRandom$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestRandom$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestRandom$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestRandom$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestRandom$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestRandom$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestRandom$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestRandom$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestRandom$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestRandom$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestRandom$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestRandom$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestRandom$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/TestRandom.html", "kind" : "trait", "members_trait" : [{"label" : "UnsafeAPI", "tail" : "", "member" : "zio.Random.UnsafeAPI", "link" : "zio\/Random.html#UnsafeAPIextendsSerializable", "kind" : "trait"}, {"label" : "unsafe", "tail" : "(): UnsafeAPI", "member" : "zio.Random.unsafe", "link" : "zio\/test\/TestRandom.html#unsafe:Random.this.UnsafeAPI", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestRandom.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestRandom.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestRandom.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestRandom.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestRandom.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestRandom.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestRandom.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestRandom.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestRandom.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestRandom.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestRandom.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestRandom.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestRandom.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestRandom.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestRandom.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestRandom.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestRandom.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestRandom.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestRandom.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "setSeed", "tail" : "(seed: => Long)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.setSeed", "link" : "zio\/test\/TestRandom.html#setSeed(seed:=>Long)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "getSeed", "tail" : "(trace: Trace): UIO[Long]", "member" : "zio.test.TestRandom.getSeed", "link" : "zio\/test\/TestRandom.html#getSeed(implicittrace:zio.Trace):zio.UIO[Long]", "kind" : "abstract def"}, {"label" : "feedUUIDs", "tail" : "(UUIDs: UUID*)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.feedUUIDs", "link" : "zio\/test\/TestRandom.html#feedUUIDs(UUIDs:java.util.UUID*)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "feedStrings", "tail" : "(strings: String*)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.feedStrings", "link" : "zio\/test\/TestRandom.html#feedStrings(strings:String*)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "feedLongs", "tail" : "(longs: Long*)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.feedLongs", "link" : "zio\/test\/TestRandom.html#feedLongs(longs:Long*)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "feedInts", "tail" : "(ints: Int*)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.feedInts", "link" : "zio\/test\/TestRandom.html#feedInts(ints:Int*)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "feedFloats", "tail" : "(floats: Float*)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.feedFloats", "link" : "zio\/test\/TestRandom.html#feedFloats(floats:Float*)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "feedDoubles", "tail" : "(doubles: Double*)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.feedDoubles", "link" : "zio\/test\/TestRandom.html#feedDoubles(doubles:Double*)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "feedChars", "tail" : "(chars: Char*)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.feedChars", "link" : "zio\/test\/TestRandom.html#feedChars(chars:Char*)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "feedBytes", "tail" : "(bytes: Chunk[Byte]*)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.feedBytes", "link" : "zio\/test\/TestRandom.html#feedBytes(bytes:zio.Chunk[Byte]*)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "feedBooleans", "tail" : "(booleans: Boolean*)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.feedBooleans", "link" : "zio\/test\/TestRandom.html#feedBooleans(booleans:Boolean*)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "clearUUIDs", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.clearUUIDs", "link" : "zio\/test\/TestRandom.html#clearUUIDs(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "clearStrings", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.clearStrings", "link" : "zio\/test\/TestRandom.html#clearStrings(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "clearLongs", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.clearLongs", "link" : "zio\/test\/TestRandom.html#clearLongs(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "clearInts", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.clearInts", "link" : "zio\/test\/TestRandom.html#clearInts(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "clearFloats", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.clearFloats", "link" : "zio\/test\/TestRandom.html#clearFloats(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "clearDoubles", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.clearDoubles", "link" : "zio\/test\/TestRandom.html#clearDoubles(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "clearChars", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.clearChars", "link" : "zio\/test\/TestRandom.html#clearChars(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "clearBytes", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.clearBytes", "link" : "zio\/test\/TestRandom.html#clearBytes(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "clearBooleans", "tail" : "(trace: Trace): UIO[Unit]", "member" : "zio.test.TestRandom.clearBooleans", "link" : "zio\/test\/TestRandom.html#clearBooleans(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "save", "tail" : "(trace: Trace): UIO[UIO[Unit]]", "member" : "zio.test.Restorable.save", "link" : "zio\/test\/TestRandom.html#save(implicittrace:zio.Trace):zio.UIO[zio.UIO[Unit]]", "kind" : "abstract def"}, {"label" : "shuffle", "tail" : "(collection: => Collection[A])(bf: zio.BuildFrom[Collection[A], A, Collection[A]], trace: Trace): UIO[Collection[A]]", "member" : "zio.Random.shuffle", "link" : "zio\/test\/TestRandom.html#shuffle[A,Collection[+Element]<:Iterable[Element]](collection:=>Collection[A])(implicitbf:zio.BuildFrom[Collection[A],A,Collection[A]],implicittrace:zio.Trace):zio.UIO[Collection[A]]", "kind" : "abstract def"}, {"label" : "nextUUID", "tail" : "(trace: Trace): UIO[UUID]", "member" : "zio.Random.nextUUID", "link" : "zio\/test\/TestRandom.html#nextUUID(implicittrace:zio.Trace):zio.UIO[java.util.UUID]", "kind" : "abstract def"}, {"label" : "nextString", "tail" : "(length: => Int)(trace: Trace): UIO[String]", "member" : "zio.Random.nextString", "link" : "zio\/test\/TestRandom.html#nextString(length:=>Int)(implicittrace:zio.Trace):zio.UIO[String]", "kind" : "abstract def"}, {"label" : "nextPrintableChar", "tail" : "(trace: Trace): UIO[Char]", "member" : "zio.Random.nextPrintableChar", "link" : "zio\/test\/TestRandom.html#nextPrintableChar(implicittrace:zio.Trace):zio.UIO[Char]", "kind" : "abstract def"}, {"label" : "nextLongBounded", "tail" : "(n: => Long)(trace: Trace): UIO[Long]", "member" : "zio.Random.nextLongBounded", "link" : "zio\/test\/TestRandom.html#nextLongBounded(n:=>Long)(implicittrace:zio.Trace):zio.UIO[Long]", "kind" : "abstract def"}, {"label" : "nextLongBetween", "tail" : "(minInclusive: => Long, maxExclusive: => Long)(trace: Trace): UIO[Long]", "member" : "zio.Random.nextLongBetween", "link" : "zio\/test\/TestRandom.html#nextLongBetween(minInclusive:=>Long,maxExclusive:=>Long)(implicittrace:zio.Trace):zio.UIO[Long]", "kind" : "abstract def"}, {"label" : "nextLong", "tail" : "(trace: Trace): UIO[Long]", "member" : "zio.Random.nextLong", "link" : "zio\/test\/TestRandom.html#nextLong(implicittrace:zio.Trace):zio.UIO[Long]", "kind" : "abstract def"}, {"label" : "nextIntBounded", "tail" : "(n: => Int)(trace: Trace): UIO[Int]", "member" : "zio.Random.nextIntBounded", "link" : "zio\/test\/TestRandom.html#nextIntBounded(n:=>Int)(implicittrace:zio.Trace):zio.UIO[Int]", "kind" : "abstract def"}, {"label" : "nextIntBetween", "tail" : "(minInclusive: => Int, maxExclusive: => Int)(trace: Trace): UIO[Int]", "member" : "zio.Random.nextIntBetween", "link" : "zio\/test\/TestRandom.html#nextIntBetween(minInclusive:=>Int,maxExclusive:=>Int)(implicittrace:zio.Trace):zio.UIO[Int]", "kind" : "abstract def"}, {"label" : "nextInt", "tail" : "(trace: Trace): UIO[Int]", "member" : "zio.Random.nextInt", "link" : "zio\/test\/TestRandom.html#nextInt(implicittrace:zio.Trace):zio.UIO[Int]", "kind" : "abstract def"}, {"label" : "nextGaussian", "tail" : "(trace: Trace): UIO[Double]", "member" : "zio.Random.nextGaussian", "link" : "zio\/test\/TestRandom.html#nextGaussian(implicittrace:zio.Trace):zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "nextFloatBetween", "tail" : "(minInclusive: => Float, maxExclusive: => Float)(trace: Trace): UIO[Float]", "member" : "zio.Random.nextFloatBetween", "link" : "zio\/test\/TestRandom.html#nextFloatBetween(minInclusive:=>Float,maxExclusive:=>Float)(implicittrace:zio.Trace):zio.UIO[Float]", "kind" : "abstract def"}, {"label" : "nextFloat", "tail" : "(trace: Trace): UIO[Float]", "member" : "zio.Random.nextFloat", "link" : "zio\/test\/TestRandom.html#nextFloat(implicittrace:zio.Trace):zio.UIO[Float]", "kind" : "abstract def"}, {"label" : "nextDoubleBetween", "tail" : "(minInclusive: => Double, maxExclusive: => Double)(trace: Trace): UIO[Double]", "member" : "zio.Random.nextDoubleBetween", "link" : "zio\/test\/TestRandom.html#nextDoubleBetween(minInclusive:=>Double,maxExclusive:=>Double)(implicittrace:zio.Trace):zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "nextDouble", "tail" : "(trace: Trace): UIO[Double]", "member" : "zio.Random.nextDouble", "link" : "zio\/test\/TestRandom.html#nextDouble(implicittrace:zio.Trace):zio.UIO[Double]", "kind" : "abstract def"}, {"label" : "nextBytes", "tail" : "(length: => Int)(trace: Trace): UIO[Chunk[Byte]]", "member" : "zio.Random.nextBytes", "link" : "zio\/test\/TestRandom.html#nextBytes(length:=>Int)(implicittrace:zio.Trace):zio.UIO[zio.Chunk[Byte]]", "kind" : "abstract def"}, {"label" : "nextBoolean", "tail" : "(trace: Trace): UIO[Boolean]", "member" : "zio.Random.nextBoolean", "link" : "zio\/test\/TestRandom.html#nextBoolean(implicittrace:zio.Trace):zio.UIO[Boolean]", "kind" : "abstract def"}], "shortDescription" : "TestRandom allows for deterministically testing effects involvingrandomness."}, {"name" : "zio.test.TestReporters", "shortDescription" : "", "object" : "zio\/test\/TestReporters$.html", "members_object" : [{"label" : "make", "tail" : ": ZIO[Any, Nothing, TestReporters]", "member" : "zio.test.TestReporters.make", "link" : "zio\/test\/TestReporters$.html#make:zio.ZIO[Any,Nothing,zio.test.TestReporters]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestReporters$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestReporters$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestReporters$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestReporters$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestReporters$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestReporters$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestReporters$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestReporters$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestReporters$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestReporters$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestReporters$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestReporters$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestReporters$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestReporters$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestReporters$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestReporters$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestReporters$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestReporters$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestReporters$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "relinquishPrintingControl", "tail" : "(id: SuiteId): ZIO[Any, Nothing, Unit]", "member" : "zio.test.TestReporters.relinquishPrintingControl", "link" : "zio\/test\/TestReporters.html#relinquishPrintingControl(id:zio.test.SuiteId):zio.ZIO[Any,Nothing,Unit]", "kind" : "def"}, {"label" : "attemptToGetPrintingControl", "tail" : "(id: SuiteId, ancestors: List[SuiteId]): ZIO[Any, Nothing, Boolean]", "member" : "zio.test.TestReporters.attemptToGetPrintingControl", "link" : "zio\/test\/TestReporters.html#attemptToGetPrintingControl(id:zio.test.SuiteId,ancestors:List[zio.test.SuiteId]):zio.ZIO[Any,Nothing,Boolean]", "kind" : "def"}, {"member" : "zio.test.TestReporters#<init>", "error" : "unsupported entity"}, {"label" : "reportersStack", "tail" : ": Ref[List[SuiteId]]", "member" : "zio.test.TestReporters.reportersStack", "link" : "zio\/test\/TestReporters.html#reportersStack:zio.Ref[List[zio.test.SuiteId]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/test\/TestReporters.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestReporters.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestReporters.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestReporters.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestReporters.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestReporters.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestReporters.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestReporters.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestReporters.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestReporters.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestReporters.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestReporters.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestReporters.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestReporters.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestReporters.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestReporters.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestReporters.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/test\/TestReporters.html", "kind" : "case class"}, {"name" : "zio.test.TestResult", "shortDescription" : "", "object" : "zio\/test\/TestResult$.html", "members_object" : [{"label" : "any", "tail" : "(asserts: TestResult*): TestResult", "member" : "zio.test.TestResult.any", "link" : "zio\/test\/TestResult$.html#any(asserts:zio.test.TestResult*):zio.test.TestResult", "kind" : "def"}, {"label" : "all", "tail" : "(asserts: TestResult*): TestResult", "member" : "zio.test.TestResult.all", "link" : "zio\/test\/TestResult$.html#all(asserts:zio.test.TestResult*):zio.test.TestResult", "kind" : "def"}, {"label" : "liftTestResultToZIO", "tail" : "(result: TestResult)(trace: Trace): ZIO[R, E, TestResult]", "member" : "zio.test.TestResult.liftTestResultToZIO", "link" : "zio\/test\/TestResult$.html#liftTestResultToZIO[R,E](result:zio.test.TestResult)(implicittrace:zio.Trace):zio.ZIO[R,E,zio.test.TestResult]", "kind" : "implicit def"}, {"label" : "anySuccesses", "tail" : "(asserts: Iterable[TestResult])(trace: Trace, sourceLocation: SourceLocation): TestResult", "member" : "zio.test.TestResult.anySuccesses", "link" : "zio\/test\/TestResult$.html#anySuccesses(asserts:Iterable[zio.test.TestResult])(implicittrace:zio.Trace,implicitsourceLocation:zio.internal.stacktracer.SourceLocation):zio.test.TestResult", "kind" : "def"}, {"label" : "anySuccesses", "tail" : "(assert: TestResult, asserts: TestResult*): TestResult", "member" : "zio.test.TestResult.anySuccesses", "link" : "zio\/test\/TestResult$.html#anySuccesses(assert:zio.test.TestResult,asserts:zio.test.TestResult*):zio.test.TestResult", "kind" : "def"}, {"label" : "allSuccesses", "tail" : "(asserts: Iterable[TestResult])(trace: Trace, sourceLocation: SourceLocation): TestResult", "member" : "zio.test.TestResult.allSuccesses", "link" : "zio\/test\/TestResult$.html#allSuccesses(asserts:Iterable[zio.test.TestResult])(implicittrace:zio.Trace,implicitsourceLocation:zio.internal.stacktracer.SourceLocation):zio.test.TestResult", "kind" : "def"}, {"label" : "allSuccesses", "tail" : "(assert: TestResult, asserts: TestResult*): TestResult", "member" : "zio.test.TestResult.allSuccesses", "link" : "zio\/test\/TestResult$.html#allSuccesses(assert:zio.test.TestResult,asserts:zio.test.TestResult*):zio.test.TestResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestResult$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestResult$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestResult$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestResult$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestResult$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestResult$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestResult$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestResult$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestResult$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestResult$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestResult$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestResult$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestResult$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestResult$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestResult$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestResult$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestResult$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestResult$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestResult$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "setGenFailureDetails", "tail" : "(details: GenFailureDetails): TestResult", "member" : "zio.test.TestResult.setGenFailureDetails", "link" : "zio\/test\/TestResult.html#setGenFailureDetails(details:zio.test.GenFailureDetails):zio.test.TestResult", "kind" : "def"}, {"label" : "label", "tail" : "(message: String): TestResult", "member" : "zio.test.TestResult.label", "link" : "zio\/test\/TestResult.html#label(message:String):zio.test.TestResult", "kind" : "def"}, {"label" : "??", "tail" : "(message: String): TestResult", "member" : "zio.test.TestResult.??", "link" : "zio\/test\/TestResult.html#??(message:String):zio.test.TestResult", "kind" : "def"}, {"label" : "<==>", "tail" : "(that: TestResult): TestResult", "member" : "zio.test.TestResult.<==>", "link" : "zio\/test\/TestResult.html#<==>(that:zio.test.TestResult):zio.test.TestResult", "kind" : "def"}, {"label" : "iff", "tail" : "(that: TestResult): TestResult", "member" : "zio.test.TestResult.iff", "link" : "zio\/test\/TestResult.html#iff(that:zio.test.TestResult):zio.test.TestResult", "kind" : "def"}, {"label" : "==>", "tail" : "(that: TestResult): TestResult", "member" : "zio.test.TestResult.==>", "link" : "zio\/test\/TestResult.html#==>(that:zio.test.TestResult):zio.test.TestResult", "kind" : "def"}, {"label" : "implies", "tail" : "(that: TestResult): TestResult", "member" : "zio.test.TestResult.implies", "link" : "zio\/test\/TestResult.html#implies(that:zio.test.TestResult):zio.test.TestResult", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): TestResult", "member" : "zio.test.TestResult.unary_!", "link" : "zio\/test\/TestResult.html#unary_!:zio.test.TestResult", "kind" : "def"}, {"label" : "||", "tail" : "(that: TestResult): TestResult", "member" : "zio.test.TestResult.||", "link" : "zio\/test\/TestResult.html#||(that:zio.test.TestResult):zio.test.TestResult", "kind" : "def"}, {"label" : "&&", "tail" : "(that: TestResult): TestResult", "member" : "zio.test.TestResult.&&", "link" : "zio\/test\/TestResult.html#&&(that:zio.test.TestResult):zio.test.TestResult", "kind" : "def"}, {"label" : "isSuccess", "tail" : "(): Boolean", "member" : "zio.test.TestResult.isSuccess", "link" : "zio\/test\/TestResult.html#isSuccess:Boolean", "kind" : "def"}, {"label" : "isFailure", "tail" : "(): Boolean", "member" : "zio.test.TestResult.isFailure", "link" : "zio\/test\/TestResult.html#isFailure:Boolean", "kind" : "def"}, {"label" : "failures", "tail" : ": Option[TestTrace[Boolean]]", "member" : "zio.test.TestResult.failures", "link" : "zio\/test\/TestResult.html#failures:Option[zio.test.TestTrace[Boolean]]", "kind" : "lazy val"}, {"label" : "result", "tail" : ": TestTrace[Boolean]", "member" : "zio.test.TestResult.result", "link" : "zio\/test\/TestResult.html#result:zio.test.TestTrace[Boolean]", "kind" : "lazy val"}, {"member" : "zio.test.TestResult#<init>", "error" : "unsupported entity"}, {"label" : "arrow", "tail" : ": TestArrow[Any, Boolean]", "member" : "zio.test.TestResult.arrow", "link" : "zio\/test\/TestResult.html#arrow:zio.test.TestArrow[Any,Boolean]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/test\/TestResult.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestResult.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestResult.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestResult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestResult.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestResult.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/test\/TestResult.html", "kind" : "case class"}, {"name" : "zio.test.TestResultZIOOps", "shortDescription" : "", "members_class" : [{"label" : "||", "tail" : "(that: => ZIO[R1, E1, TestResult])(trace: Trace): ZIO[R1, E1, TestResult]", "member" : "zio.test.TestResultZIOOps.||", "link" : "zio\/test\/package$$TestResultZIOOps.html#||[R1<:R,E1>:E](that:=>zio.ZIO[R1,E1,zio.test.TestResult])(implicittrace:zio.Trace):zio.ZIO[R1,E1,zio.test.TestResult]", "kind" : "def"}, {"label" : "&&", "tail" : "(that: => ZIO[R1, E1, TestResult])(trace: Trace): ZIO[R1, E1, TestResult]", "member" : "zio.test.TestResultZIOOps.&&", "link" : "zio\/test\/package$$TestResultZIOOps.html#&&[R1<:R,E1>:E](that:=>zio.ZIO[R1,E1,zio.test.TestResult])(implicittrace:zio.Trace):zio.ZIO[R1,E1,zio.test.TestResult]", "kind" : "def"}, {"member" : "zio.test.TestResultZIOOps#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "zio\/test\/package$$TestResultZIOOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "zio\/test\/package$$TestResultZIOOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/package$$TestResultZIOOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/package$$TestResultZIOOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "zio\/test\/package$$TestResultZIOOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "zio\/test\/package$$TestResultZIOOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "zio\/test\/package$$TestResultZIOOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "zio\/test\/package$$TestResultZIOOps.html", "kind" : "class"}, {"name" : "zio.test.TestRunner", "shortDescription" : "A TestRunner[R, E] encapsulates all the logic necessary to run specs thatrequire an environment R and may fail with an error E.", "members_case class" : [{"label" : "unsafe", "tail" : ": UnsafeAPI", "member" : "zio.test.TestRunner.unsafe", "link" : "zio\/test\/TestRunner.html#unsafe:TestRunner.this.UnsafeAPI", "kind" : "val"}, {"label" : "UnsafeAPI", "tail" : "", "member" : "zio.test.TestRunner.UnsafeAPI", "link" : "zio\/test\/TestRunner.html#UnsafeAPIextendsAnyRef", "kind" : "trait"}, {"label" : "run", "tail" : "(fullyQualifiedName: String, spec: Spec[R, E], defExec: ExecutionStrategy)(trace: Trace): UIO[Summary]", "member" : "zio.test.TestRunner.run", "link" : "zio\/test\/TestRunner.html#run(fullyQualifiedName:String,spec:zio.test.Spec[R,E],defExec:zio.ExecutionStrategy)(implicittrace:zio.Trace):zio.UIO[zio.test.Summary]", "kind" : "def"}, {"label" : "runtime", "tail" : ": Runtime[Any]", "member" : "zio.test.TestRunner.runtime", "link" : "zio\/test\/TestRunner.html#runtime:zio.Runtime[Any]", "kind" : "val"}, {"member" : "zio.test.TestRunner#<init>", "error" : "unsupported entity"}, {"label" : "executor", "tail" : ": TestExecutor[R, E]", "member" : "zio.test.TestRunner.executor", "link" : "zio\/test\/TestRunner.html#executor:zio.test.TestExecutor[R,E]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/test\/TestRunner.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestRunner.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/test\/TestRunner.html", "kind" : "case class"}, {"name" : "zio.test.TestServices", "shortDescription" : "", "object" : "zio\/test\/TestServices$.html", "members_object" : [{"label" : "test", "tail" : ": ZEnvironment[Annotations with Live with Sized with TestConfig]", "member" : "zio.test.TestServices.test", "link" : "zio\/test\/TestServices$.html#test:zio.ZEnvironment[zio.test.Annotationswithzio.test.Livewithzio.test.Sizedwithzio.test.TestConfig]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestServices$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestServices$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestServices$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestServices$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestServices$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestServices$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestServices$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestServices$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestServices$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestServices$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestServices$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestServices$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestServices$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestServices$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestServices$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestServices$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestServices$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestServices$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestServices$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.TestSuccess", "shortDescription" : "", "object" : "zio\/test\/TestSuccess$.html", "members_class" : [{"label" : "annotated", "tail" : "(annotations: TestAnnotationMap): TestSuccess", "member" : "zio.test.TestSuccess.annotated", "link" : "zio\/test\/TestSuccess.html#annotated(annotations:zio.test.TestAnnotationMap):zio.test.TestSuccess", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestSuccess.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestSuccess.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestSuccess.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestSuccess.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestSuccess.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestSuccess.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestSuccess.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestSuccess.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestSuccess.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestSuccess.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestSuccess.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestSuccess.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestSuccess.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestSuccess.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestSuccess.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestSuccess.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestSuccess.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestSuccess.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestSuccess.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "annotations", "tail" : "(): TestAnnotationMap", "member" : "zio.test.TestSuccess.annotations", "link" : "zio\/test\/TestSuccess.html#annotations:zio.test.TestAnnotationMap", "kind" : "abstract def"}], "members_object" : [{"label" : "Ignored", "tail" : "", "member" : "zio.test.TestSuccess.Ignored", "link" : "zio\/test\/TestSuccess$.html#IgnoredextendsTestSuccesswithProductwithSerializable", "kind" : "final case class"}, {"label" : "Succeeded", "tail" : "", "member" : "zio.test.TestSuccess.Succeeded", "link" : "zio\/test\/TestSuccess$.html#SucceededextendsTestSuccesswithProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestSuccess$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestSuccess$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestSuccess$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestSuccess$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestSuccess$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestSuccess$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestSuccess$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestSuccess$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestSuccess$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestSuccess$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestSuccess$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestSuccess$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestSuccess$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestSuccess$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestSuccess$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestSuccess$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestSuccess$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestSuccess$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestSuccess$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "zio\/test\/TestSuccess.html", "kind" : "class"}, {"name" : "zio.test.TestSystem", "object" : "zio\/test\/TestSystem$.html", "members_object" : [{"label" : "Data", "tail" : "", "member" : "zio.test.TestSystem.Data", "link" : "zio\/test\/TestSystem$.html#DataextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "clearProperty", "tail" : "(prop: => String)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestSystem.clearProperty", "link" : "zio\/test\/TestSystem$.html#clearProperty(prop:=>String)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "clearEnv", "tail" : "(variable: => String)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestSystem.clearEnv", "link" : "zio\/test\/TestSystem$.html#clearEnv(variable:=>String)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "setLineSeparator", "tail" : "(lineSep: => String)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestSystem.setLineSeparator", "link" : "zio\/test\/TestSystem$.html#setLineSeparator(lineSep:=>String)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "save", "tail" : "(trace: Trace): UIO[UIO[Unit]]", "member" : "zio.test.TestSystem.save", "link" : "zio\/test\/TestSystem$.html#save(implicittrace:zio.Trace):zio.UIO[zio.UIO[Unit]]", "kind" : "def"}, {"label" : "putProperty", "tail" : "(name: => String, value: => String)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestSystem.putProperty", "link" : "zio\/test\/TestSystem$.html#putProperty(name:=>String,value:=>String)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "putEnv", "tail" : "(name: => String, value: => String)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestSystem.putEnv", "link" : "zio\/test\/TestSystem$.html#putEnv(name:=>String,value:=>String)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "def"}, {"label" : "default", "tail" : ": Layer[Nothing, TestSystem]", "member" : "zio.test.TestSystem.default", "link" : "zio\/test\/TestSystem$.html#default:zio.Layer[Nothing,zio.test.TestSystem]", "kind" : "val"}, {"label" : "any", "tail" : ": ZLayer[TestSystem, Nothing, TestSystem]", "member" : "zio.test.TestSystem.any", "link" : "zio\/test\/TestSystem$.html#any:zio.ZLayer[zio.test.TestSystem,Nothing,zio.test.TestSystem]", "kind" : "val"}, {"label" : "live", "tail" : "(data: Data): Layer[Nothing, TestSystem]", "member" : "zio.test.TestSystem.live", "link" : "zio\/test\/TestSystem$.html#live(data:zio.test.TestSystem.Data):zio.Layer[Nothing,zio.test.TestSystem]", "kind" : "def"}, {"label" : "DefaultData", "tail" : ": Data", "member" : "zio.test.TestSystem.DefaultData", "link" : "zio\/test\/TestSystem$.html#DefaultData:zio.test.TestSystem.Data", "kind" : "val"}, {"label" : "Test", "tail" : "", "member" : "zio.test.TestSystem.Test", "link" : "zio\/test\/TestSystem$.html#TestextendsTestSystemwithProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestSystem$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestSystem$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestSystem$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestSystem$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestSystem$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestSystem$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestSystem$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestSystem$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestSystem$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestSystem$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestSystem$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestSystem$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestSystem$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestSystem$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestSystem$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestSystem$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestSystem$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestSystem$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestSystem$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/TestSystem.html", "kind" : "trait", "members_trait" : [{"label" : "UnsafeAPI", "tail" : "", "member" : "zio.System.UnsafeAPI", "link" : "zio\/System.html#UnsafeAPIextendsSerializable", "kind" : "trait"}, {"label" : "unsafe", "tail" : "(): UnsafeAPI", "member" : "zio.System.unsafe", "link" : "zio\/test\/TestSystem.html#unsafe:System.this.UnsafeAPI", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestSystem.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestSystem.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestSystem.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestSystem.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestSystem.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestSystem.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestSystem.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestSystem.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestSystem.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestSystem.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestSystem.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestSystem.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestSystem.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestSystem.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestSystem.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestSystem.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestSystem.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestSystem.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestSystem.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "clearProperty", "tail" : "(prop: String)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestSystem.clearProperty", "link" : "zio\/test\/TestSystem.html#clearProperty(prop:String)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "clearEnv", "tail" : "(variable: String)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestSystem.clearEnv", "link" : "zio\/test\/TestSystem.html#clearEnv(variable:String)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "setLineSeparator", "tail" : "(lineSep: String)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestSystem.setLineSeparator", "link" : "zio\/test\/TestSystem.html#setLineSeparator(lineSep:String)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "putProperty", "tail" : "(name: String, value: String)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestSystem.putProperty", "link" : "zio\/test\/TestSystem.html#putProperty(name:String,value:String)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "putEnv", "tail" : "(name: String, value: String)(trace: Trace): UIO[Unit]", "member" : "zio.test.TestSystem.putEnv", "link" : "zio\/test\/TestSystem.html#putEnv(name:String,value:String)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "abstract def"}, {"label" : "save", "tail" : "(trace: Trace): UIO[UIO[Unit]]", "member" : "zio.test.Restorable.save", "link" : "zio\/test\/TestSystem.html#save(implicittrace:zio.Trace):zio.UIO[zio.UIO[Unit]]", "kind" : "abstract def"}, {"label" : "propertyOrOption", "tail" : "(prop: => String, alt: => Option[String])(trace: Trace): IO[Throwable, Option[String]]", "member" : "zio.System.propertyOrOption", "link" : "zio\/test\/TestSystem.html#propertyOrOption(prop:=>String,alt:=>Option[String])(implicittrace:zio.Trace):zio.IO[Throwable,Option[String]]", "kind" : "abstract def"}, {"label" : "propertyOrElse", "tail" : "(prop: => String, alt: => String)(trace: Trace): IO[Throwable, String]", "member" : "zio.System.propertyOrElse", "link" : "zio\/test\/TestSystem.html#propertyOrElse(prop:=>String,alt:=>String)(implicittrace:zio.Trace):zio.IO[Throwable,String]", "kind" : "abstract def"}, {"label" : "property", "tail" : "(prop: => String)(trace: Trace): IO[Throwable, Option[String]]", "member" : "zio.System.property", "link" : "zio\/test\/TestSystem.html#property(prop:=>String)(implicittrace:zio.Trace):zio.IO[Throwable,Option[String]]", "kind" : "abstract def"}, {"label" : "properties", "tail" : "(trace: Trace): IO[Throwable, Map[String, String]]", "member" : "zio.System.properties", "link" : "zio\/test\/TestSystem.html#properties(implicittrace:zio.Trace):zio.IO[Throwable,Map[String,String]]", "kind" : "abstract def"}, {"label" : "lineSeparator", "tail" : "(trace: Trace): UIO[String]", "member" : "zio.System.lineSeparator", "link" : "zio\/test\/TestSystem.html#lineSeparator(implicittrace:zio.Trace):zio.UIO[String]", "kind" : "abstract def"}, {"label" : "envs", "tail" : "(trace: Trace): IO[SecurityException, Map[String, String]]", "member" : "zio.System.envs", "link" : "zio\/test\/TestSystem.html#envs(implicittrace:zio.Trace):zio.IO[SecurityException,Map[String,String]]", "kind" : "abstract def"}, {"label" : "envOrOption", "tail" : "(variable: => String, alt: => Option[String])(trace: Trace): IO[SecurityException, Option[String]]", "member" : "zio.System.envOrOption", "link" : "zio\/test\/TestSystem.html#envOrOption(variable:=>String,alt:=>Option[String])(implicittrace:zio.Trace):zio.IO[SecurityException,Option[String]]", "kind" : "abstract def"}, {"label" : "envOrElse", "tail" : "(variable: => String, alt: => String)(trace: Trace): IO[SecurityException, String]", "member" : "zio.System.envOrElse", "link" : "zio\/test\/TestSystem.html#envOrElse(variable:=>String,alt:=>String)(implicittrace:zio.Trace):zio.IO[SecurityException,String]", "kind" : "abstract def"}, {"label" : "env", "tail" : "(variable: => String)(trace: Trace): IO[SecurityException, Option[String]]", "member" : "zio.System.env", "link" : "zio\/test\/TestSystem.html#env(variable:=>String)(implicittrace:zio.Trace):zio.IO[SecurityException,Option[String]]", "kind" : "abstract def"}], "shortDescription" : "TestSystem supports deterministic testing of effects involving systemproperties."}, {"name" : "zio.test.TestTimeoutException", "shortDescription" : "", "members_case class" : [{"member" : "zio.test.TestTimeoutException#<init>", "error" : "unsupported entity"}, {"label" : "message", "tail" : ": String", "member" : "zio.test.TestTimeoutException.message", "link" : "zio\/test\/TestTimeoutException.html#message:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "zio\/test\/TestTimeoutException.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "zio\/test\/TestTimeoutException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "zio\/test\/TestTimeoutException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "zio\/test\/TestTimeoutException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "zio\/test\/TestTimeoutException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "zio\/test\/TestTimeoutException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "zio\/test\/TestTimeoutException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "zio\/test\/TestTimeoutException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "zio\/test\/TestTimeoutException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "zio\/test\/TestTimeoutException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "zio\/test\/TestTimeoutException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "zio\/test\/TestTimeoutException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "zio\/test\/TestTimeoutException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "zio\/test\/TestTimeoutException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestTimeoutException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestTimeoutException.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestTimeoutException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestTimeoutException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestTimeoutException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestTimeoutException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestTimeoutException.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestTimeoutException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestTimeoutException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestTimeoutException.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestTimeoutException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestTimeoutException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestTimeoutException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestTimeoutException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestTimeoutException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestTimeoutException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "zio\/test\/TestTimeoutException.html", "kind" : "case class"}, {"name" : "zio.test.TestTrace", "object" : "zio\/test\/TestTrace$.html", "members_object" : [{"label" : "die", "tail" : "(throwable: Throwable): TestTrace[Nothing]", "member" : "zio.test.TestTrace.die", "link" : "zio\/test\/TestTrace$.html#die(throwable:Throwable):zio.test.TestTrace[Nothing]", "kind" : "def"}, {"label" : "boolean", "tail" : "(value: Boolean)(message: ErrorMessage): TestTrace[Boolean]", "member" : "zio.test.TestTrace.boolean", "link" : "zio\/test\/TestTrace$.html#boolean(value:Boolean)(message:zio.test.ErrorMessage):zio.test.TestTrace[Boolean]", "kind" : "def"}, {"label" : "option", "tail" : "(value: Option[A])(message: ErrorMessage): TestTrace[A]", "member" : "zio.test.TestTrace.option", "link" : "zio\/test\/TestTrace$.html#option[A](value:Option[A])(message:zio.test.ErrorMessage):zio.test.TestTrace[A]", "kind" : "def"}, {"label" : "succeed", "tail" : "(value: A): TestTrace[A]", "member" : "zio.test.TestTrace.succeed", "link" : "zio\/test\/TestTrace$.html#succeed[A](value:A):zio.test.TestTrace[A]", "kind" : "def"}, {"label" : "fail", "tail" : "(message: ErrorMessage): TestTrace[Nothing]", "member" : "zio.test.TestTrace.fail", "link" : "zio\/test\/TestTrace$.html#fail(message:zio.test.ErrorMessage):zio.test.TestTrace[Nothing]", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String): TestTrace[Nothing]", "member" : "zio.test.TestTrace.fail", "link" : "zio\/test\/TestTrace$.html#fail(message:String):zio.test.TestTrace[Nothing]", "kind" : "def"}, {"label" : "fail", "tail" : "(): TestTrace[Nothing]", "member" : "zio.test.TestTrace.fail", "link" : "zio\/test\/TestTrace$.html#fail:zio.test.TestTrace[Nothing]", "kind" : "def"}, {"label" : "Annotation", "tail" : "", "member" : "zio.test.TestTrace.Annotation", "link" : "zio\/test\/TestTrace$.html#Annotation", "kind" : "object"}, {"label" : "Annotation", "tail" : "", "member" : "zio.test.TestTrace.Annotation", "link" : "zio\/test\/TestTrace$.html#AnnotationextendsAnyRef", "kind" : "sealed trait"}, {"label" : "prune", "tail" : "(trace: TestTrace[Boolean], negated: Boolean): Option[TestTrace[Boolean]]", "member" : "zio.test.TestTrace.prune", "link" : "zio\/test\/TestTrace$.html#prune(trace:zio.test.TestTrace[Boolean],negated:Boolean):Option[zio.test.TestTrace[Boolean]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestTrace$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestTrace$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestTrace$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestTrace$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestTrace$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestTrace$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestTrace$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestTrace$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestTrace$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestTrace$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestTrace$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestTrace$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestTrace$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestTrace$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestTrace$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestTrace$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestTrace$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestTrace$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestTrace$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/TestTrace.html", "kind" : "trait", "members_trait" : [{"label" : ">>>", "tail" : "(that: TestTrace[B]): TestTrace[B]", "member" : "zio.test.TestTrace.>>>", "link" : "zio\/test\/TestTrace.html#>>>[B](that:zio.test.TestTrace[B]):zio.test.TestTrace[B]", "kind" : "final def"}, {"label" : "unary_!", "tail" : "(ev: <:<[A, Boolean]): TestTrace[Boolean]", "member" : "zio.test.TestTrace.unary_!", "link" : "zio\/test\/TestTrace.html#unary_!(implicitev:A<:<Boolean):zio.test.TestTrace[Boolean]", "kind" : "final def"}, {"label" : "||", "tail" : "(that: TestTrace[Boolean])(ev: <:<[A, Boolean]): TestTrace[Boolean]", "member" : "zio.test.TestTrace.||", "link" : "zio\/test\/TestTrace.html#||(that:zio.test.TestTrace[Boolean])(implicitev:A<:<Boolean):zio.test.TestTrace[Boolean]", "kind" : "final def"}, {"label" : "&&", "tail" : "(that: TestTrace[Boolean])(ev: <:<[A, Boolean]): TestTrace[Boolean]", "member" : "zio.test.TestTrace.&&", "link" : "zio\/test\/TestTrace.html#&&(that:zio.test.TestTrace[Boolean])(implicitev:A<:<Boolean):zio.test.TestTrace[Boolean]", "kind" : "final def"}, {"label" : "<==>", "tail" : "(that: TestTrace[Boolean])(ev: <:<[A, Boolean]): TestTrace[Boolean]", "member" : "zio.test.TestTrace.<==>", "link" : "zio\/test\/TestTrace.html#<==>(that:zio.test.TestTrace[Boolean])(implicitev:A<:<Boolean):zio.test.TestTrace[Boolean]", "kind" : "final def"}, {"label" : "==>", "tail" : "(that: TestTrace[Boolean])(ev: <:<[A, Boolean]): TestTrace[Boolean]", "member" : "zio.test.TestTrace.==>", "link" : "zio\/test\/TestTrace.html#==>(that:zio.test.TestTrace[Boolean])(implicitev:A<:<Boolean):zio.test.TestTrace[Boolean]", "kind" : "final def"}, {"label" : "implies", "tail" : "(that: TestTrace[Boolean])(ev: <:<[A, Boolean]): TestTrace[Boolean]", "member" : "zio.test.TestTrace.implies", "link" : "zio\/test\/TestTrace.html#implies(that:zio.test.TestTrace[Boolean])(implicitev:A<:<Boolean):zio.test.TestTrace[Boolean]", "kind" : "final def"}, {"label" : "annotate", "tail" : "(annotation: Annotation*): TestTrace[A]", "member" : "zio.test.TestTrace.annotate", "link" : "zio\/test\/TestTrace.html#annotate(annotation:zio.test.TestTrace.Annotation*):zio.test.TestTrace[A]", "kind" : "final def"}, {"label" : "getGenFailureDetails", "tail" : "(): Option[GenFailureDetails]", "member" : "zio.test.TestTrace.getGenFailureDetails", "link" : "zio\/test\/TestTrace.html#getGenFailureDetails:Option[zio.test.GenFailureDetails]", "kind" : "def"}, {"label" : "withGenFailureDetails", "tail" : "(genFailureDetails: Option[GenFailureDetails]): TestTrace[A]", "member" : "zio.test.TestTrace.withGenFailureDetails", "link" : "zio\/test\/TestTrace.html#withGenFailureDetails(genFailureDetails:Option[zio.test.GenFailureDetails]):zio.test.TestTrace[A]", "kind" : "final def"}, {"label" : "withCompleteCode", "tail" : "(completeCode: Option[String]): TestTrace[A]", "member" : "zio.test.TestTrace.withCompleteCode", "link" : "zio\/test\/TestTrace.html#withCompleteCode(completeCode:Option[String]):zio.test.TestTrace[A]", "kind" : "final def"}, {"label" : "withCode", "tail" : "(fullCode: Option[String]): TestTrace[A]", "member" : "zio.test.TestTrace.withCode", "link" : "zio\/test\/TestTrace.html#withCode(fullCode:Option[String]):zio.test.TestTrace[A]", "kind" : "final def"}, {"label" : "withCustomLabel", "tail" : "(customLabel: Option[String]): TestTrace[A]", "member" : "zio.test.TestTrace.withCustomLabel", "link" : "zio\/test\/TestTrace.html#withCustomLabel(customLabel:Option[String]):zio.test.TestTrace[A]", "kind" : "def"}, {"label" : "withLocation", "tail" : "(location: Option[String]): TestTrace[A]", "member" : "zio.test.TestTrace.withLocation", "link" : "zio\/test\/TestTrace.html#withLocation(location:Option[String]):zio.test.TestTrace[A]", "kind" : "def"}, {"label" : "withParentSpan", "tail" : "(span: Option[Span]): TestTrace[A]", "member" : "zio.test.TestTrace.withParentSpan", "link" : "zio\/test\/TestTrace.html#withParentSpan(span:Option[zio.test.TestArrow.Span]):zio.test.TestTrace[A]", "kind" : "def"}, {"label" : "withSpan", "tail" : "(span: Option[Span]): TestTrace[A]", "member" : "zio.test.TestTrace.withSpan", "link" : "zio\/test\/TestTrace.html#withSpan(span:Option[zio.test.TestArrow.Span]):zio.test.TestTrace[A]", "kind" : "final def"}, {"label" : "isDie", "tail" : "(): Boolean", "member" : "zio.test.TestTrace.isDie", "link" : "zio\/test\/TestTrace.html#isDie:Boolean", "kind" : "def"}, {"label" : "isSuccess", "tail" : "(ev: <:<[A, Boolean]): Boolean", "member" : "zio.test.TestTrace.isSuccess", "link" : "zio\/test\/TestTrace.html#isSuccess(implicitev:A<:<Boolean):Boolean", "kind" : "def"}, {"label" : "isFailure", "tail" : "(ev: <:<[A, Boolean]): Boolean", "member" : "zio.test.TestTrace.isFailure", "link" : "zio\/test\/TestTrace.html#isFailure(implicitev:A<:<Boolean):Boolean", "kind" : "def"}, {"label" : "values", "tail" : "(): List[Any]", "member" : "zio.test.TestTrace.values", "link" : "zio\/test\/TestTrace.html#values:List[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestTrace.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestTrace.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestTrace.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestTrace.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestTrace.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestTrace.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestTrace.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestTrace.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestTrace.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestTrace.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestTrace.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestTrace.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestTrace.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestTrace.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestTrace.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestTrace.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestTrace.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestTrace.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestTrace.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "result", "tail" : "(): Result[A]", "member" : "zio.test.TestTrace.result", "link" : "zio\/test\/TestTrace.html#result:zio.test.Result[A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.test.TestVersion", "shortDescription" : "TestVersion provides information about the Scala version tests are beingrun on to enable platform specific test configuration.", "object" : "zio\/test\/TestVersion$.html", "members_object" : [{"label" : "isScala3", "tail" : ": Boolean", "member" : "zio.test.TestVersion.isScala3", "link" : "zio\/test\/TestVersion$.html#isScala3:Boolean", "kind" : "val"}, {"label" : "isScala213", "tail" : ": Boolean", "member" : "zio.test.TestVersion.isScala213", "link" : "zio\/test\/TestVersion$.html#isScala213:Boolean", "kind" : "val"}, {"label" : "isScala212", "tail" : ": Boolean", "member" : "zio.test.TestVersion.isScala212", "link" : "zio\/test\/TestVersion$.html#isScala212:Boolean", "kind" : "val"}, {"label" : "isScala2", "tail" : ": Boolean", "member" : "zio.test.TestVersion.isScala2", "link" : "zio\/test\/TestVersion$.html#isScala2:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TestVersion$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TestVersion$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TestVersion$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TestVersion$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TestVersion$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TestVersion$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TestVersion$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TestVersion$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TestVersion$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TestVersion$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TestVersion$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TestVersion$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestVersion$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestVersion$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TestVersion$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TestVersion$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TestVersion$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TestVersion$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TestVersion$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.TimeoutVariants", "trait" : "zio\/test\/TimeoutVariants.html", "kind" : "trait", "members_trait" : [{"label" : "timeoutWarning", "tail" : "(duration: zio.Duration): TestAspectPoly", "member" : "zio.test.TimeoutVariants.timeoutWarning", "link" : "zio\/test\/TimeoutVariants.html#timeoutWarning(duration:zio.Duration):zio.test.TestAspectPoly", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TimeoutVariants.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TimeoutVariants.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TimeoutVariants.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TimeoutVariants.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TimeoutVariants.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TimeoutVariants.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TimeoutVariants.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TimeoutVariants.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TimeoutVariants.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TimeoutVariants.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TimeoutVariants.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TimeoutVariants.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TimeoutVariants.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TimeoutVariants.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TimeoutVariants.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TimeoutVariants.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TimeoutVariants.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TimeoutVariants.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TimeoutVariants.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.TimeVariants", "trait" : "zio\/test\/TimeVariants.html", "kind" : "trait", "members_trait" : [{"label" : "zoneOffset", "tail" : "(trace: Trace): Gen[Any, ZoneOffset]", "member" : "zio.test.TimeVariants.zoneOffset", "link" : "zio\/test\/TimeVariants.html#zoneOffset(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.ZoneOffset]", "kind" : "final def"}, {"label" : "zoneId", "tail" : "(trace: Trace): Gen[Any, ZoneId]", "member" : "zio.test.TimeVariants.zoneId", "link" : "zio\/test\/TimeVariants.html#zoneId(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.ZoneId]", "kind" : "final def"}, {"label" : "zonedDateTime", "tail" : "(min: ZonedDateTime, max: ZonedDateTime)(trace: Trace): Gen[Any, ZonedDateTime]", "member" : "zio.test.TimeVariants.zonedDateTime", "link" : "zio\/test\/TimeVariants.html#zonedDateTime(min:java.time.ZonedDateTime,max:java.time.ZonedDateTime)(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.ZonedDateTime]", "kind" : "final def"}, {"label" : "zonedDateTime", "tail" : "(trace: Trace): Gen[Any, ZonedDateTime]", "member" : "zio.test.TimeVariants.zonedDateTime", "link" : "zio\/test\/TimeVariants.html#zonedDateTime(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.ZonedDateTime]", "kind" : "final def"}, {"label" : "yearMonth", "tail" : "(min: YearMonth, max: YearMonth)(trace: Trace): Gen[Any, YearMonth]", "member" : "zio.test.TimeVariants.yearMonth", "link" : "zio\/test\/TimeVariants.html#yearMonth(min:java.time.YearMonth,max:java.time.YearMonth)(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.YearMonth]", "kind" : "final def"}, {"label" : "yearMonth", "tail" : "(trace: Trace): Gen[Any, YearMonth]", "member" : "zio.test.TimeVariants.yearMonth", "link" : "zio\/test\/TimeVariants.html#yearMonth(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.YearMonth]", "kind" : "final def"}, {"label" : "year", "tail" : "(trace: Trace): Gen[Any, Year]", "member" : "zio.test.TimeVariants.year", "link" : "zio\/test\/TimeVariants.html#year(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.Year]", "kind" : "final def"}, {"label" : "year", "tail" : "(min: Year, max: Year)(trace: Trace): Gen[Any, Year]", "member" : "zio.test.TimeVariants.year", "link" : "zio\/test\/TimeVariants.html#year(min:java.time.Year,max:java.time.Year)(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.Year]", "kind" : "final def"}, {"label" : "period", "tail" : "(trace: Trace): Gen[Any, Period]", "member" : "zio.test.TimeVariants.period", "link" : "zio\/test\/TimeVariants.html#period(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.Period]", "kind" : "final def"}, {"label" : "offsetTime", "tail" : "(trace: Trace): Gen[Any, OffsetTime]", "member" : "zio.test.TimeVariants.offsetTime", "link" : "zio\/test\/TimeVariants.html#offsetTime(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.OffsetTime]", "kind" : "final def"}, {"label" : "offsetDateTime", "tail" : "(min: OffsetDateTime, max: OffsetDateTime)(trace: Trace): Gen[Any, OffsetDateTime]", "member" : "zio.test.TimeVariants.offsetDateTime", "link" : "zio\/test\/TimeVariants.html#offsetDateTime(min:java.time.OffsetDateTime,max:java.time.OffsetDateTime)(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.OffsetDateTime]", "kind" : "final def"}, {"label" : "offsetDateTime", "tail" : "(trace: Trace): Gen[Any, OffsetDateTime]", "member" : "zio.test.TimeVariants.offsetDateTime", "link" : "zio\/test\/TimeVariants.html#offsetDateTime(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.OffsetDateTime]", "kind" : "final def"}, {"label" : "monthDay", "tail" : "(trace: Trace): Gen[Any, MonthDay]", "member" : "zio.test.TimeVariants.monthDay", "link" : "zio\/test\/TimeVariants.html#monthDay(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.MonthDay]", "kind" : "final def"}, {"label" : "month", "tail" : "(trace: Trace): Gen[Any, Month]", "member" : "zio.test.TimeVariants.month", "link" : "zio\/test\/TimeVariants.html#month(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.Month]", "kind" : "final def"}, {"label" : "localTime", "tail" : "(trace: Trace): Gen[Any, LocalTime]", "member" : "zio.test.TimeVariants.localTime", "link" : "zio\/test\/TimeVariants.html#localTime(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.LocalTime]", "kind" : "final def"}, {"label" : "localTime", "tail" : "(min: LocalTime, max: LocalTime)(trace: Trace): Gen[Any, LocalTime]", "member" : "zio.test.TimeVariants.localTime", "link" : "zio\/test\/TimeVariants.html#localTime(min:java.time.LocalTime,max:java.time.LocalTime)(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.LocalTime]", "kind" : "final def"}, {"label" : "localDateTime", "tail" : "(min: LocalDateTime, max: LocalDateTime)(trace: Trace): Gen[Any, LocalDateTime]", "member" : "zio.test.TimeVariants.localDateTime", "link" : "zio\/test\/TimeVariants.html#localDateTime(min:java.time.LocalDateTime,max:java.time.LocalDateTime)(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.LocalDateTime]", "kind" : "final def"}, {"label" : "localDateTime", "tail" : "(trace: Trace): Gen[Any, LocalDateTime]", "member" : "zio.test.TimeVariants.localDateTime", "link" : "zio\/test\/TimeVariants.html#localDateTime(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.LocalDateTime]", "kind" : "final def"}, {"label" : "localDate", "tail" : "(min: LocalDate, max: LocalDate)(trace: Trace): Gen[Any, LocalDate]", "member" : "zio.test.TimeVariants.localDate", "link" : "zio\/test\/TimeVariants.html#localDate(min:java.time.LocalDate,max:java.time.LocalDate)(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.LocalDate]", "kind" : "final def"}, {"label" : "localDate", "tail" : "(trace: Trace): Gen[Any, LocalDate]", "member" : "zio.test.TimeVariants.localDate", "link" : "zio\/test\/TimeVariants.html#localDate(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.LocalDate]", "kind" : "final def"}, {"label" : "instant", "tail" : "(min: Instant, max: Instant)(trace: Trace): Gen[Any, Instant]", "member" : "zio.test.TimeVariants.instant", "link" : "zio\/test\/TimeVariants.html#instant(min:java.time.Instant,max:java.time.Instant)(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.Instant]", "kind" : "final def"}, {"label" : "instant", "tail" : "(trace: Trace): Gen[Any, Instant]", "member" : "zio.test.TimeVariants.instant", "link" : "zio\/test\/TimeVariants.html#instant(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.Instant]", "kind" : "final def"}, {"label" : "finiteDuration", "tail" : "(min: zio.Duration, max: zio.Duration)(trace: Trace): Gen[Any, zio.Duration]", "member" : "zio.test.TimeVariants.finiteDuration", "link" : "zio\/test\/TimeVariants.html#finiteDuration(min:zio.Duration,max:zio.Duration)(implicittrace:zio.Trace):zio.test.Gen[Any,zio.Duration]", "kind" : "final def"}, {"label" : "finiteDuration", "tail" : "(trace: Trace): Gen[Any, zio.Duration]", "member" : "zio.test.TimeVariants.finiteDuration", "link" : "zio\/test\/TimeVariants.html#finiteDuration(implicittrace:zio.Trace):zio.test.Gen[Any,zio.Duration]", "kind" : "final def"}, {"label" : "dayOfWeek", "tail" : "(trace: Trace): Gen[Any, DayOfWeek]", "member" : "zio.test.TimeVariants.dayOfWeek", "link" : "zio\/test\/TimeVariants.html#dayOfWeek(implicittrace:zio.Trace):zio.test.Gen[Any,java.time.DayOfWeek]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/TimeVariants.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/TimeVariants.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/TimeVariants.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/TimeVariants.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/TimeVariants.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/TimeVariants.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/TimeVariants.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/TimeVariants.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/TimeVariants.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/TimeVariants.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/TimeVariants.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/TimeVariants.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TimeVariants.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TimeVariants.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/TimeVariants.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/TimeVariants.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/TimeVariants.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/TimeVariants.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/TimeVariants.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "zio.test.ZIOSpec", "shortDescription" : "", "members_class" : [{"label" : "suite", "tail" : "(label: String)(specs: In*)(suiteConstructor: SuiteConstructor[In], sourceLocation: SourceLocation, trace: Trace): Spec[OutEnvironment, OutError]", "member" : "zio.test.ZIOSpec.suite", "link" : "zio\/test\/ZIOSpec.html#suite[In](label:String)(specs:In*)(implicitsuiteConstructor:zio.test.SuiteConstructor[In],implicitsourceLocation:zio.internal.stacktracer.SourceLocation,implicittrace:zio.Trace):zio.test.Spec[suiteConstructor.OutEnvironment,suiteConstructor.OutError]", "kind" : "def"}, {"label" : "test", "tail" : "(label: String)(assertion: => In)(testConstructor: TestConstructor[Nothing, In], sourceLocation: SourceLocation, trace: Trace): Out", "member" : "zio.test.ZIOSpec.test", "link" : "zio\/test\/ZIOSpec.html#test[In](label:String)(assertion:=>In)(implicittestConstructor:zio.test.TestConstructor[Nothing,In],implicitsourceLocation:zio.internal.stacktracer.SourceLocation,implicittrace:zio.Trace):testConstructor.Out", "kind" : "def"}, {"label" : "environmentTag", "tail" : ": zio.EnvironmentTag[R]", "member" : "zio.test.ZIOSpec.environmentTag", "link" : "zio\/test\/ZIOSpec.html#environmentTag:zio.EnvironmentTag[R]", "kind" : "final val"}, {"label" : "Environment", "tail" : "", "member" : "zio.test.ZIOSpec.Environment", "link" : "zio\/test\/ZIOSpec.html#Environment=R", "kind" : "type"}, {"member" : "zio.test.ZIOSpec#<init>", "error" : "unsupported entity"}, {"label" : "suiteAll", "tail" : "(name: String)(spec: Any): Spec[Nothing, Any]", "member" : "zio.test.ZIOSpecVersionSpecific.suiteAll", "link" : "zio\/test\/ZIOSpec.html#suiteAll(name:String)(spec:Any):zio.test.Spec[Nothing,Any]", "kind" : "macro def"}, {"label" : "runSpec", "tail" : "(trace: Trace): ZIO[Environment with TestEnvironment with ZIOAppArgs with Scope, Throwable, Summary]", "member" : "zio.test.ZIOSpecAbstract.runSpec", "link" : "zio\/test\/ZIOSpec.html#runSpec(implicittrace:zio.Trace):zio.ZIO[ZIOSpecAbstract.this.Environmentwithzio.test.TestEnvironmentwithzio.ZIOAppArgswithzio.Scope,Throwable,zio.test.Summary]", "kind" : "final def"}, {"label" : "<>", "tail" : "(that: ZIOSpecAbstract)(trace: Trace): ZIOSpecAbstract", "member" : "zio.test.ZIOSpecAbstract.<>", "link" : "zio\/test\/ZIOSpec.html#<>(that:zio.test.ZIOSpecAbstract)(implicittrace:zio.Trace):zio.test.ZIOSpecAbstract", "kind" : "final def"}, {"label" : "run", "tail" : "(): ZIO[Environment with ZIOAppArgs with Scope, Any, Summary]", "member" : "zio.test.ZIOSpecAbstract.run", "link" : "zio\/test\/ZIOSpec.html#run:zio.ZIO[ZIOSpecAbstract.this.Environmentwithzio.ZIOAppArgswithzio.Scope,Any,zio.test.Summary]", "kind" : "final def"}, {"label" : "aspects", "tail" : "(): Chunk[TestAspectAtLeastR[Environment with TestEnvironment]]", "member" : "zio.test.ZIOSpecAbstract.aspects", "link" : "zio\/test\/ZIOSpec.html#aspects:zio.Chunk[zio.test.TestAspectAtLeastR[ZIOSpecAbstract.this.Environmentwithzio.test.TestEnvironment]]", "kind" : "def"}, {"label" : "validateEnv", "tail" : "(spec: Spec[R, E]): Spec[R1, E]", "member" : "zio.test.ZIOSpecAbstractVersionSpecific.validateEnv", "link" : "zio\/test\/ZIOSpec.html#validateEnv[R1,R,E](spec:zio.test.Spec[R,E]):zio.test.Spec[R1,E]", "kind" : "implicit macro def"}, {"label" : "installSignalHandlers", "tail" : "(runtime: Runtime[Any])(trace: Trace): UIO[Any]", "member" : "zio.ZIOApp.installSignalHandlers", "link" : "zio\/test\/ZIOSpec.html#installSignalHandlers(runtime:zio.Runtime[Any])(implicittrace:zio.Trace):zio.UIO[Any]", "kind" : "def"}, {"label" : "runtime", "tail" : "(): Runtime[Any]", "member" : "zio.ZIOApp.runtime", "link" : "zio\/test\/ZIOSpec.html#runtime:zio.Runtime[Any]", "kind" : "def"}, {"label" : "invoke", "tail" : "(args: Chunk[String])(trace: Trace): ZIO[Any, Any, Any]", "member" : "zio.ZIOApp.invoke", "link" : "zio\/test\/ZIOSpec.html#invoke(args:zio.Chunk[String])(implicittrace:zio.Trace):zio.ZIO[Any,Any,Any]", "kind" : "final def"}, {"label" : "exit", "tail" : "(code: ExitCode)(trace: Trace): UIO[Unit]", "member" : "zio.ZIOApp.exit", "link" : "zio\/test\/ZIOSpec.html#exit(code:zio.ExitCode)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "final def"}, {"label" : "getArgs", "tail" : "(trace: Trace): ZIO[ZIOAppArgs, Nothing, Chunk[String]]", "member" : "zio.ZIOApp.getArgs", "link" : "zio\/test\/ZIOSpec.html#getArgs(implicittrace:zio.Trace):zio.ZIO[zio.ZIOAppArgs,Nothing,zio.Chunk[String]]", "kind" : "final def"}, {"label" : "<>", "tail" : "(that: ZIOApp)(trace: Trace): ZIOApp", "member" : "zio.ZIOApp.<>", "link" : "zio\/test\/ZIOSpec.html#<>(that:zio.ZIOApp)(implicittrace:zio.Trace):zio.ZIOApp", "kind" : "final def"}, {"label" : "validateEnv", "tail" : "(zio: ZIO[R, E, A]): ZIO[R1, E, A]", "member" : "zio.ZIOAppVersionSpecific.validateEnv", "link" : "zio\/test\/ZIOSpec.html#validateEnv[R1,R,E,A](zio:zio.ZIO[R,E,A]):zio.ZIO[R1,E,A]", "kind" : "implicit macro def"}, {"label" : "main", "tail" : "(args0: Array[String]): Unit", "member" : "zio.ZIOAppPlatformSpecific.main", "link" : "zio\/test\/ZIOSpec.html#main(args0:Array[String]):Unit", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/ZIOSpec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/ZIOSpec.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/ZIOSpec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/ZIOSpec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/ZIOSpec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/ZIOSpec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/ZIOSpec.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/ZIOSpec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/ZIOSpec.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/ZIOSpec.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/ZIOSpec.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/ZIOSpec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ZIOSpec.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ZIOSpec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ZIOSpec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/ZIOSpec.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/ZIOSpec.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/ZIOSpec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/ZIOSpec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "bootstrap", "tail" : "(): ZLayer[Any, Any, Environment]", "member" : "zio.test.ZIOSpecAbstract.bootstrap", "link" : "zio\/test\/ZIOSpec.html#bootstrap:zio.ZLayer[Any,Any,ZIOSpecAbstract.this.Environment]", "kind" : "abstract def"}, {"label" : "spec", "tail" : "(): Spec[Environment with TestEnvironment with Scope, Any]", "member" : "zio.test.ZIOSpecAbstract.spec", "link" : "zio\/test\/ZIOSpec.html#spec:zio.test.Spec[ZIOSpecAbstract.this.Environmentwithzio.test.TestEnvironmentwithzio.Scope,Any]", "kind" : "abstract def"}], "class" : "zio\/test\/ZIOSpec.html", "kind" : "class"}, {"name" : "zio.test.ZIOSpecAbstract", "shortDescription" : "", "members_class" : [{"label" : "runSpec", "tail" : "(trace: Trace): ZIO[Environment with TestEnvironment with ZIOAppArgs with Scope, Throwable, Summary]", "member" : "zio.test.ZIOSpecAbstract.runSpec", "link" : "zio\/test\/ZIOSpecAbstract.html#runSpec(implicittrace:zio.Trace):zio.ZIO[ZIOSpecAbstract.this.Environmentwithzio.test.TestEnvironmentwithzio.ZIOAppArgswithzio.Scope,Throwable,zio.test.Summary]", "kind" : "final def"}, {"label" : "<>", "tail" : "(that: ZIOSpecAbstract)(trace: Trace): ZIOSpecAbstract", "member" : "zio.test.ZIOSpecAbstract.<>", "link" : "zio\/test\/ZIOSpecAbstract.html#<>(that:zio.test.ZIOSpecAbstract)(implicittrace:zio.Trace):zio.test.ZIOSpecAbstract", "kind" : "final def"}, {"label" : "run", "tail" : "(): ZIO[Environment with ZIOAppArgs with Scope, Any, Summary]", "member" : "zio.test.ZIOSpecAbstract.run", "link" : "zio\/test\/ZIOSpecAbstract.html#run:zio.ZIO[ZIOSpecAbstract.this.Environmentwithzio.ZIOAppArgswithzio.Scope,Any,zio.test.Summary]", "kind" : "final def"}, {"label" : "aspects", "tail" : "(): Chunk[TestAspectAtLeastR[Environment with TestEnvironment]]", "member" : "zio.test.ZIOSpecAbstract.aspects", "link" : "zio\/test\/ZIOSpecAbstract.html#aspects:zio.Chunk[zio.test.TestAspectAtLeastR[ZIOSpecAbstract.this.Environmentwithzio.test.TestEnvironment]]", "kind" : "def"}, {"member" : "zio.test.ZIOSpecAbstract#<init>", "error" : "unsupported entity"}, {"label" : "validateEnv", "tail" : "(spec: Spec[R, E]): Spec[R1, E]", "member" : "zio.test.ZIOSpecAbstractVersionSpecific.validateEnv", "link" : "zio\/test\/ZIOSpecAbstract.html#validateEnv[R1,R,E](spec:zio.test.Spec[R,E]):zio.test.Spec[R1,E]", "kind" : "implicit macro def"}, {"label" : "installSignalHandlers", "tail" : "(runtime: Runtime[Any])(trace: Trace): UIO[Any]", "member" : "zio.ZIOApp.installSignalHandlers", "link" : "zio\/test\/ZIOSpecAbstract.html#installSignalHandlers(runtime:zio.Runtime[Any])(implicittrace:zio.Trace):zio.UIO[Any]", "kind" : "def"}, {"label" : "runtime", "tail" : "(): Runtime[Any]", "member" : "zio.ZIOApp.runtime", "link" : "zio\/test\/ZIOSpecAbstract.html#runtime:zio.Runtime[Any]", "kind" : "def"}, {"label" : "invoke", "tail" : "(args: Chunk[String])(trace: Trace): ZIO[Any, Any, Any]", "member" : "zio.ZIOApp.invoke", "link" : "zio\/test\/ZIOSpecAbstract.html#invoke(args:zio.Chunk[String])(implicittrace:zio.Trace):zio.ZIO[Any,Any,Any]", "kind" : "final def"}, {"label" : "exit", "tail" : "(code: ExitCode)(trace: Trace): UIO[Unit]", "member" : "zio.ZIOApp.exit", "link" : "zio\/test\/ZIOSpecAbstract.html#exit(code:zio.ExitCode)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "final def"}, {"label" : "getArgs", "tail" : "(trace: Trace): ZIO[ZIOAppArgs, Nothing, Chunk[String]]", "member" : "zio.ZIOApp.getArgs", "link" : "zio\/test\/ZIOSpecAbstract.html#getArgs(implicittrace:zio.Trace):zio.ZIO[zio.ZIOAppArgs,Nothing,zio.Chunk[String]]", "kind" : "final def"}, {"label" : "<>", "tail" : "(that: ZIOApp)(trace: Trace): ZIOApp", "member" : "zio.ZIOApp.<>", "link" : "zio\/test\/ZIOSpecAbstract.html#<>(that:zio.ZIOApp)(implicittrace:zio.Trace):zio.ZIOApp", "kind" : "final def"}, {"label" : "validateEnv", "tail" : "(zio: ZIO[R, E, A]): ZIO[R1, E, A]", "member" : "zio.ZIOAppVersionSpecific.validateEnv", "link" : "zio\/test\/ZIOSpecAbstract.html#validateEnv[R1,R,E,A](zio:zio.ZIO[R,E,A]):zio.ZIO[R1,E,A]", "kind" : "implicit macro def"}, {"label" : "main", "tail" : "(args0: Array[String]): Unit", "member" : "zio.ZIOAppPlatformSpecific.main", "link" : "zio\/test\/ZIOSpecAbstract.html#main(args0:Array[String]):Unit", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/ZIOSpecAbstract.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/ZIOSpecAbstract.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/ZIOSpecAbstract.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/ZIOSpecAbstract.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/ZIOSpecAbstract.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/ZIOSpecAbstract.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/ZIOSpecAbstract.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/ZIOSpecAbstract.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/ZIOSpecAbstract.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/ZIOSpecAbstract.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/ZIOSpecAbstract.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/ZIOSpecAbstract.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ZIOSpecAbstract.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ZIOSpecAbstract.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ZIOSpecAbstract.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/ZIOSpecAbstract.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/ZIOSpecAbstract.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/ZIOSpecAbstract.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/ZIOSpecAbstract.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "bootstrap", "tail" : "(): ZLayer[Any, Any, Environment]", "member" : "zio.test.ZIOSpecAbstract.bootstrap", "link" : "zio\/test\/ZIOSpecAbstract.html#bootstrap:zio.ZLayer[Any,Any,ZIOSpecAbstract.this.Environment]", "kind" : "abstract def"}, {"label" : "spec", "tail" : "(): Spec[Environment with TestEnvironment with Scope, Any]", "member" : "zio.test.ZIOSpecAbstract.spec", "link" : "zio\/test\/ZIOSpecAbstract.html#spec:zio.test.Spec[ZIOSpecAbstract.this.Environmentwithzio.test.TestEnvironmentwithzio.Scope,Any]", "kind" : "abstract def"}, {"member" : "zio.ZIOApp.Environment", "error" : "unsupported entity"}, {"label" : "environmentTag", "tail" : "(): zio.EnvironmentTag[Environment]", "member" : "zio.ZIOApp.environmentTag", "link" : "zio\/test\/ZIOSpecAbstract.html#environmentTag:zio.EnvironmentTag[ZIOApp.this.Environment]", "kind" : "implicit abstract def"}], "class" : "zio\/test\/ZIOSpecAbstract.html", "kind" : "class"}, {"name" : "zio.test.ZIOSpecDefault", "shortDescription" : "", "members_class" : [{"label" : "bootstrap", "tail" : ": ZLayer[Any, Any, TestEnvironment]", "member" : "zio.test.ZIOSpecDefault.bootstrap", "link" : "zio\/test\/ZIOSpecDefault.html#bootstrap:zio.ZLayer[Any,Any,zio.test.TestEnvironment]", "kind" : "val"}, {"member" : "zio.test.ZIOSpecDefault#<init>", "error" : "unsupported entity"}, {"label" : "suite", "tail" : "(label: String)(specs: In*)(suiteConstructor: SuiteConstructor[In], sourceLocation: SourceLocation, trace: Trace): Spec[OutEnvironment, OutError]", "member" : "zio.test.ZIOSpec.suite", "link" : "zio\/test\/ZIOSpecDefault.html#suite[In](label:String)(specs:In*)(implicitsuiteConstructor:zio.test.SuiteConstructor[In],implicitsourceLocation:zio.internal.stacktracer.SourceLocation,implicittrace:zio.Trace):zio.test.Spec[suiteConstructor.OutEnvironment,suiteConstructor.OutError]", "kind" : "def"}, {"label" : "test", "tail" : "(label: String)(assertion: => In)(testConstructor: TestConstructor[Nothing, In], sourceLocation: SourceLocation, trace: Trace): Out", "member" : "zio.test.ZIOSpec.test", "link" : "zio\/test\/ZIOSpecDefault.html#test[In](label:String)(assertion:=>In)(implicittestConstructor:zio.test.TestConstructor[Nothing,In],implicitsourceLocation:zio.internal.stacktracer.SourceLocation,implicittrace:zio.Trace):testConstructor.Out", "kind" : "def"}, {"label" : "environmentTag", "tail" : ": zio.EnvironmentTag[TestEnvironment]", "member" : "zio.test.ZIOSpec.environmentTag", "link" : "zio\/test\/ZIOSpecDefault.html#environmentTag:zio.EnvironmentTag[R]", "kind" : "final val"}, {"label" : "Environment", "tail" : "", "member" : "zio.test.ZIOSpec.Environment", "link" : "zio\/test\/ZIOSpecDefault.html#Environment=R", "kind" : "type"}, {"label" : "suiteAll", "tail" : "(name: String)(spec: Any): Spec[Nothing, Any]", "member" : "zio.test.ZIOSpecVersionSpecific.suiteAll", "link" : "zio\/test\/ZIOSpecDefault.html#suiteAll(name:String)(spec:Any):zio.test.Spec[Nothing,Any]", "kind" : "macro def"}, {"label" : "runSpec", "tail" : "(trace: Trace): ZIO[Environment with TestEnvironment with ZIOAppArgs with Scope, Throwable, Summary]", "member" : "zio.test.ZIOSpecAbstract.runSpec", "link" : "zio\/test\/ZIOSpecDefault.html#runSpec(implicittrace:zio.Trace):zio.ZIO[ZIOSpecAbstract.this.Environmentwithzio.test.TestEnvironmentwithzio.ZIOAppArgswithzio.Scope,Throwable,zio.test.Summary]", "kind" : "final def"}, {"label" : "<>", "tail" : "(that: ZIOSpecAbstract)(trace: Trace): ZIOSpecAbstract", "member" : "zio.test.ZIOSpecAbstract.<>", "link" : "zio\/test\/ZIOSpecDefault.html#<>(that:zio.test.ZIOSpecAbstract)(implicittrace:zio.Trace):zio.test.ZIOSpecAbstract", "kind" : "final def"}, {"label" : "run", "tail" : "(): ZIO[Environment with ZIOAppArgs with Scope, Any, Summary]", "member" : "zio.test.ZIOSpecAbstract.run", "link" : "zio\/test\/ZIOSpecDefault.html#run:zio.ZIO[ZIOSpecAbstract.this.Environmentwithzio.ZIOAppArgswithzio.Scope,Any,zio.test.Summary]", "kind" : "final def"}, {"label" : "aspects", "tail" : "(): Chunk[TestAspectAtLeastR[Environment with TestEnvironment]]", "member" : "zio.test.ZIOSpecAbstract.aspects", "link" : "zio\/test\/ZIOSpecDefault.html#aspects:zio.Chunk[zio.test.TestAspectAtLeastR[ZIOSpecAbstract.this.Environmentwithzio.test.TestEnvironment]]", "kind" : "def"}, {"label" : "validateEnv", "tail" : "(spec: Spec[R, E]): Spec[R1, E]", "member" : "zio.test.ZIOSpecAbstractVersionSpecific.validateEnv", "link" : "zio\/test\/ZIOSpecDefault.html#validateEnv[R1,R,E](spec:zio.test.Spec[R,E]):zio.test.Spec[R1,E]", "kind" : "implicit macro def"}, {"label" : "installSignalHandlers", "tail" : "(runtime: Runtime[Any])(trace: Trace): UIO[Any]", "member" : "zio.ZIOApp.installSignalHandlers", "link" : "zio\/test\/ZIOSpecDefault.html#installSignalHandlers(runtime:zio.Runtime[Any])(implicittrace:zio.Trace):zio.UIO[Any]", "kind" : "def"}, {"label" : "runtime", "tail" : "(): Runtime[Any]", "member" : "zio.ZIOApp.runtime", "link" : "zio\/test\/ZIOSpecDefault.html#runtime:zio.Runtime[Any]", "kind" : "def"}, {"label" : "invoke", "tail" : "(args: Chunk[String])(trace: Trace): ZIO[Any, Any, Any]", "member" : "zio.ZIOApp.invoke", "link" : "zio\/test\/ZIOSpecDefault.html#invoke(args:zio.Chunk[String])(implicittrace:zio.Trace):zio.ZIO[Any,Any,Any]", "kind" : "final def"}, {"label" : "exit", "tail" : "(code: ExitCode)(trace: Trace): UIO[Unit]", "member" : "zio.ZIOApp.exit", "link" : "zio\/test\/ZIOSpecDefault.html#exit(code:zio.ExitCode)(implicittrace:zio.Trace):zio.UIO[Unit]", "kind" : "final def"}, {"label" : "getArgs", "tail" : "(trace: Trace): ZIO[ZIOAppArgs, Nothing, Chunk[String]]", "member" : "zio.ZIOApp.getArgs", "link" : "zio\/test\/ZIOSpecDefault.html#getArgs(implicittrace:zio.Trace):zio.ZIO[zio.ZIOAppArgs,Nothing,zio.Chunk[String]]", "kind" : "final def"}, {"label" : "<>", "tail" : "(that: ZIOApp)(trace: Trace): ZIOApp", "member" : "zio.ZIOApp.<>", "link" : "zio\/test\/ZIOSpecDefault.html#<>(that:zio.ZIOApp)(implicittrace:zio.Trace):zio.ZIOApp", "kind" : "final def"}, {"label" : "validateEnv", "tail" : "(zio: ZIO[R, E, A]): ZIO[R1, E, A]", "member" : "zio.ZIOAppVersionSpecific.validateEnv", "link" : "zio\/test\/ZIOSpecDefault.html#validateEnv[R1,R,E,A](zio:zio.ZIO[R,E,A]):zio.ZIO[R1,E,A]", "kind" : "implicit macro def"}, {"label" : "main", "tail" : "(args0: Array[String]): Unit", "member" : "zio.ZIOAppPlatformSpecific.main", "link" : "zio\/test\/ZIOSpecDefault.html#main(args0:Array[String]):Unit", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/ZIOSpecDefault.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/ZIOSpecDefault.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/ZIOSpecDefault.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/ZIOSpecDefault.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/ZIOSpecDefault.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/ZIOSpecDefault.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/ZIOSpecDefault.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/ZIOSpecDefault.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/ZIOSpecDefault.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/ZIOSpecDefault.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/ZIOSpecDefault.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/ZIOSpecDefault.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ZIOSpecDefault.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ZIOSpecDefault.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ZIOSpecDefault.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/ZIOSpecDefault.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/ZIOSpecDefault.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/ZIOSpecDefault.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/ZIOSpecDefault.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "spec", "tail" : "(): Spec[TestEnvironment with Scope, Any]", "member" : "zio.test.ZIOSpecDefault.spec", "link" : "zio\/test\/ZIOSpecDefault.html#spec:zio.test.Spec[zio.test.TestEnvironmentwithzio.Scope,Any]", "kind" : "abstract def"}], "class" : "zio\/test\/ZIOSpecDefault.html", "kind" : "class"}, {"name" : "zio.test.ZTest", "shortDescription" : "", "object" : "zio\/test\/package$$ZTest$.html", "members_object" : [{"label" : "apply", "tail" : "(label: String, assertion: => ZIO[R, E, TestResult])(trace: Trace): ZIO[R, TestFailure[E], TestSuccess]", "member" : "zio.test.ZTest.apply", "link" : "zio\/test\/package$$ZTest$.html#apply[R,E](label:String,assertion:=>zio.ZIO[R,E,zio.test.TestResult])(implicittrace:zio.Trace):zio.ZIO[R,zio.test.TestFailure[E],zio.test.TestSuccess]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/package$$ZTest$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/package$$ZTest$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/package$$ZTest$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/package$$ZTest$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/package$$ZTest$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/package$$ZTest$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/package$$ZTest$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/package$$ZTest$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/package$$ZTest$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/package$$ZTest$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/package$$ZTest$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/package$$ZTest$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/package$$ZTest$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/package$$ZTest$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/package$$ZTest$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/package$$ZTest$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/package$$ZTest$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/package$$ZTest$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/package$$ZTest$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "zio.test.ZTestEventHandler", "object" : "zio\/test\/ZTestEventHandler$.html", "members_object" : [{"label" : "silent", "tail" : ": ZTestEventHandler", "member" : "zio.test.ZTestEventHandler.silent", "link" : "zio\/test\/ZTestEventHandler$.html#silent:zio.test.ZTestEventHandler", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/ZTestEventHandler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/ZTestEventHandler$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/ZTestEventHandler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/ZTestEventHandler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/ZTestEventHandler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/ZTestEventHandler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/ZTestEventHandler$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/ZTestEventHandler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/ZTestEventHandler$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/ZTestEventHandler$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/ZTestEventHandler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/ZTestEventHandler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ZTestEventHandler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ZTestEventHandler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ZTestEventHandler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/ZTestEventHandler$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/ZTestEventHandler$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/ZTestEventHandler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/ZTestEventHandler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/ZTestEventHandler.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/ZTestEventHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/ZTestEventHandler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/ZTestEventHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/ZTestEventHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/ZTestEventHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/ZTestEventHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/ZTestEventHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/ZTestEventHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/ZTestEventHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/ZTestEventHandler.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/ZTestEventHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/ZTestEventHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ZTestEventHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ZTestEventHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ZTestEventHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/ZTestEventHandler.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/ZTestEventHandler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/ZTestEventHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/ZTestEventHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "handle", "tail" : "(event: ExecutionEvent): UIO[Unit]", "member" : "zio.test.ZTestEventHandler.handle", "link" : "zio\/test\/ZTestEventHandler.html#handle(event:zio.test.ExecutionEvent):zio.UIO[Unit]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "zio.test.ZTestLogger", "object" : "zio\/test\/ZTestLogger$.html", "members_object" : [{"label" : "LogEntry", "tail" : "", "member" : "zio.test.ZTestLogger.LogEntry", "link" : "zio\/test\/ZTestLogger$.html#LogEntryextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "logOutput", "tail" : ": UIO[Chunk[LogEntry]]", "member" : "zio.test.ZTestLogger.logOutput", "link" : "zio\/test\/ZTestLogger$.html#logOutput:zio.UIO[zio.Chunk[zio.test.ZTestLogger.LogEntry]]", "kind" : "val"}, {"label" : "default", "tail" : ": ZLayer[Any, Nothing, Unit]", "member" : "zio.test.ZTestLogger.default", "link" : "zio\/test\/ZTestLogger$.html#default:zio.ZLayer[Any,Nothing,Unit]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/ZTestLogger$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/ZTestLogger$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/ZTestLogger$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/ZTestLogger$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/ZTestLogger$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/ZTestLogger$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/ZTestLogger$.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/ZTestLogger$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/ZTestLogger$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/ZTestLogger$.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/ZTestLogger$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/ZTestLogger$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ZTestLogger$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ZTestLogger$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ZTestLogger$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/ZTestLogger$.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/ZTestLogger$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/ZTestLogger$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/ZTestLogger$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "zio\/test\/ZTestLogger.html", "kind" : "trait", "members_trait" : [{"label" : "test", "tail" : "(input: => Message): Output", "member" : "zio.ZLogger.test", "link" : "zio\/test\/ZTestLogger.html#test(input:=>Message):Output", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Output) => B): ZLogger[Message, B]", "member" : "zio.ZLogger.map", "link" : "zio\/test\/ZTestLogger.html#map[B](f:Output=>B):zio.ZLogger[Message,B]", "kind" : "final def"}, {"label" : "filterLogLevel", "tail" : "(f: (LogLevel) => Boolean): ZLogger[Message, Option[Output]]", "member" : "zio.ZLogger.filterLogLevel", "link" : "zio\/test\/ZTestLogger.html#filterLogLevel(f:zio.LogLevel=>Boolean):zio.ZLogger[Message,Option[Output]]", "kind" : "final def"}, {"label" : "contramap", "tail" : "(f: (Message1) => Message): ZLogger[Message1, Output]", "member" : "zio.ZLogger.contramap", "link" : "zio\/test\/ZTestLogger.html#contramap[Message1](f:Message1=>Message):zio.ZLogger[Message1,Output]", "kind" : "final def"}, {"label" : "<+", "tail" : "(that: ZLogger[M, Any]): ZLogger[M, Output]", "member" : "zio.ZLogger.<+", "link" : "zio\/test\/ZTestLogger.html#<+[M<:Message](that:zio.ZLogger[M,Any]):zio.ZLogger[M,Output]", "kind" : "def"}, {"label" : "+>", "tail" : "(that: ZLogger[M, O]): ZLogger[M, O]", "member" : "zio.ZLogger.+>", "link" : "zio\/test\/ZTestLogger.html#+>[M<:Message,O](that:zio.ZLogger[M,O]):zio.ZLogger[M,O]", "kind" : "def"}, {"label" : "++", "tail" : "(that: ZLogger[M, O])(zippable: Zippable[Output, O]): ZLogger[M, Out]", "member" : "zio.ZLogger.++", "link" : "zio\/test\/ZTestLogger.html#++[M<:Message,O](that:zio.ZLogger[M,O])(implicitzippable:zio.Zippable[Output,O]):zio.ZLogger[M,zippable.Out]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "zio\/test\/ZTestLogger.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "zio\/test\/ZTestLogger.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "zio\/test\/ZTestLogger.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "zio\/test\/ZTestLogger.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "zio\/test\/ZTestLogger.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "zio\/test\/ZTestLogger.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "zio\/test\/ZTestLogger.html#finalize():Unit", "kind" : "def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "zio\/test\/ZTestLogger.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "zio\/test\/ZTestLogger.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "zio\/test\/ZTestLogger.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "zio\/test\/ZTestLogger.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "zio\/test\/ZTestLogger.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ZTestLogger.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ZTestLogger.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "zio\/test\/ZTestLogger.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "zio\/test\/ZTestLogger.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "zio\/test\/ZTestLogger.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "zio\/test\/ZTestLogger.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "zio\/test\/ZTestLogger.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "logOutput", "tail" : "(): UIO[Chunk[LogEntry]]", "member" : "zio.test.ZTestLogger.logOutput", "link" : "zio\/test\/ZTestLogger.html#logOutput:zio.UIO[zio.Chunk[zio.test.ZTestLogger.LogEntry]]", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(trace: Trace, fiberId: FiberId, logLevel: LogLevel, message: () => Message, cause: Cause[Any], context: FiberRefs, spans: List[LogSpan], annotations: Map[String, String]): Output", "member" : "zio.ZLogger.apply", "link" : "zio\/test\/ZTestLogger.html#apply(trace:zio.Trace,fiberId:zio.FiberId,logLevel:zio.LogLevel,message:()=>Message,cause:zio.Cause[Any],context:zio.FiberRefs,spans:List[zio.LogSpan],annotations:Map[String,String]):Output", "kind" : "abstract def"}], "shortDescription" : "A ZTestLogger is an implementation of a ZLogger that writes all logmessages to an internal data structure."}]};