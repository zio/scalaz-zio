/*
rule = Zio2Upgrade
 */
package fix

import zio.stream.ZStream

object ZStreamPieces {
  ZStream.accessStream
  val stream: ZStream[Any, Nothing, Unit] = ???
  stream.collectWhileM(???)
  stream.fold(???)(???)
  stream.foldManaged(???)(???)
  stream.foldManagedM(???)(???)
  stream.foldWhile(???)(???)(???)
  stream.foldWhileM(???)(???)(???)
  stream.foldWhileManaged(???)(???)(???)
  stream.foldWhileManagedM(???)(???)(???)
  stream.foreachChunk(???)
  stream.foreachChunkManaged(???)
  stream.foreachManaged(???)
  stream.foreachWhile(???)
  stream.foreachWhileManaged(???)
  stream.filterM(???)
  stream.intoHub(???)
  stream.intoHubManaged(???)
  stream.intoManaged(???)
  stream.lock(???)
  stream.mapAccumM(???)(???)
  stream.mapChunksM(???)
  stream.mapConcatChunkM(???)
  stream.mapConcatM(???)
  stream.mapM(???)
  stream.mapMPartitioned(???, ???)(???)
  stream.scanM(???)(???)
  stream.scanReduceM(???)
  stream.takeUntilM(???)
  stream.throttleEnforceM(???, ???, ???)(???)
  stream.throttleShapeM(???, ???, ???)(???)
  stream.timeoutError(???)(???)
  stream.timeoutErrorCause(???)(???)
  stream.whenM(???)
  ZStream.access[String]
  ZStream.accessM[String]
  ZStream.bracket(???)(???)
  ZStream.bracketExit(???)(???)
  ZStream.fromEffect(???)
//  ZStream.fromInputStreamEffect(???, ???) TODO Figure out why this isn't converting
  ZStream.fromIterableM(???)
  ZStream.fromIteratorEffect(???)
  ZStream.fromIteratorTotal(???)
  ZStream.fromJavaIteratorEffect(???)
  ZStream.fromJavaIteratorTotal(???)
  ZStream.halt(???)
  ZStream.paginateChunkM(???)(???)
  ZStream.paginateM(???)(???)
  ZStream.repeatEffectChunkOption(???)
  ZStream.repeatWith(???, ???)
  ZStream.unfoldChunkM(???)(???)
  ZStream.unfoldM(???)(???)
  ZStream.whenCaseM(???)
}
