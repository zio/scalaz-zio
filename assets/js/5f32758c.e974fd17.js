"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[59338],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var o=t(96540);const i={},r=o.createContext(i);function a(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(r.Provider,{value:n},e.children)}},53641:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"zio-dynamodb/reference/low-level-api/index","title":"Low Level API","description":"Low Level API operations are found on the DynamoDBQuery companion object. All the function names contain the word Item to indicate that they are operations on AWS DDB items in a table.","source":"@site/docs/zio-dynamodb/reference/low-level-api/index.md","sourceDirName":"zio-dynamodb/reference/low-level-api","slug":"/zio-dynamodb/reference/low-level-api/","permalink":"/zio-dynamodb/reference/low-level-api/","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-dynamodb/reference/low-level-api/index.md","tags":[],"version":"current","frontMatter":{"id":"index","title":"Low Level API","sidebar_label":"Low Level API"},"sidebar":"ecosystem-sidebar","previous":{"title":"Primary Keys","permalink":"/zio-dynamodb/reference/hi-level-api/primary-keys"},"next":{"title":"AttributeValue","permalink":"/zio-dynamodb/reference/low-level-api/attribute-value"}}');var i=t(74848),r=t(28453);const a={id:"index",title:"Low Level API",sidebar_label:"Low Level API"},l=void 0,s={},c=[];function m(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Low Level API operations are found on the ",(0,i.jsx)(n.code,{children:"DynamoDBQuery"})," companion object. All the function names contain the word ",(0,i.jsx)(n.code,{children:"Item"})," to indicate that they are operations on AWS DDB ",(0,i.jsx)(n.a,{href:"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html",children:"items"})," in a table."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:"object DynamoDBQuery {\n\n  // CRUD operations  \n\n  def putItem(tableName: String, item: Item): DynamoDBQuery[Any, Option[Item]] = ???\n\n  def getItem(\n    tableName: String,\n    key: PrimaryKey,\n    projections: ProjectionExpression[_, _]*\n  ): DynamoDBQuery[Any, Option[Item]] = ???\n\n  def updateItem[A](tableName: String, key: PrimaryKey)(action: Action[A]): DynamoDBQuery[A, Option[Item]] = ???\n\n  def deleteItem(tableName: String, key: PrimaryKey): Write[Any, Option[Item]] = ???\n\n  // Scan/Query operations\n\n  def scanSomeItem(tableName: String, limit: Int, projections: ProjectionExpression[_, _]*): ScanSome = ???\n\n  def scanAllItem(tableName: String, projections: ProjectionExpression[_, _]*): ScanAll = ???\n\n  def queryAllItem(tableName: String, projections: ProjectionExpression[_, _]*): QueryAll = ???\n\n  def querySomeItem(tableName: String, limit: Int, projections: ProjectionExpression[_, _]*): QuerySome = ???\n\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}}}]);