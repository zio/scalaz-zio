"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[99326],{35935:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"zio-actors/persistence","title":"Persistence","description":"Persistence gives you ability to store events that occur in your system with defined datastore.","source":"@site/docs/zio-actors/persistence.md","sourceDirName":"zio-actors","slug":"/zio-actors/persistence","permalink":"/zio-actors/persistence","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-actors/persistence.md","tags":[],"version":"current","frontMatter":{"id":"persistence","title":"Persistence"},"sidebar":"ecosystem-sidebar","previous":{"title":"Remoting","permalink":"/zio-actors/remoting"},"next":{"title":"Akka Interop","permalink":"/zio-actors/akka-interop"}}');var r=s(74848),o=s(28453);const c={id:"persistence",title:"Persistence"},a=void 0,i={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Persistence gives you ability to store events that occur in your system with defined datastore."}),"\n",(0,r.jsxs)(t.p,{children:["To use Persistence you need in your ",(0,r.jsx)(t.code,{children:"build.sbt"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'resolvers += Resolver.sonatypeRepo("snapshots")\nlibraryDependencies += "dev.zio" %% "zio-actors-persistence" % "0.1.0+10-3c8534e6-SNAPSHOT"\n'})}),"\n",(0,r.jsxs)(t.p,{children:["For current version the only datastore available is ",(0,r.jsx)(t.code,{children:"postgresql"})," and in-memory datastore for testing purposes.\nFor ",(0,r.jsx)(t.code,{children:"postgresql"})," you need a configuration in (by default) ",(0,r.jsx)(t.code,{children:"resources/application.conf"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-hocon",children:'ActorSystemName.zio.actors.persistence {\n  plugin = "jdbc-journal"\n  url = "jdbc:postgresql://localhost:5432/postgres"\n  user = "user"\n  pass = "pass"\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["and also use ",(0,r.jsx)(t.code,{children:"postgresql"})," plugin for that purpose:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sbt",children:'libraryDependencies += "dev.zio" %% "zio-actors-persistence-jdbc" % "0.1.0"\n'})}),"\n",(0,r.jsx)(t.p,{children:"Currently the table that needs to be present in database has such schema:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"create table if not exists journal_zio\n(\n\tpersistence_id varchar not null,\n\tsequence_number serial not null,\n\tmessage bytea,\n\tconstraint journal_zio_pk\n\t\tprimary key (persistence_id, sequence_number)\n);\n"})}),"\n",(0,r.jsxs)(t.p,{children:["After successful setup you can create persisted actors by implementing ",(0,r.jsx)(t.code,{children:"EventSourcedStateful"}),".\nFirst method is ",(0,r.jsx)(t.code,{children:"receive"})," which is similar to ",(0,r.jsx)(t.code,{children:"receive"})," from basic actors: Here you can perform an\neffectful computations with possible failures and side effects. Here you must also decide whether\nprocessed message should result in an event that will be persisted or no state update."]}),"\n",(0,r.jsxs)(t.p,{children:["The second method is ",(0,r.jsx)(t.code,{children:"sourceEvent"})," which must be a pure function that performs state updates.\nThis method is used when restoring an actor after startup."]}),"\n",(0,r.jsx)(t.p,{children:"The imports we need for simple example:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-scala",children:"import zio.actors._\nimport zio.actors.{ ActorSystem, Context, Supervisor }\nimport zio.actors.persistence._\nimport zio.{ZIO, UIO}\n"})}),"\n",(0,r.jsx)(t.p,{children:"Case objects for messages that our actor can process and persisted events:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-scala",children:"sealed trait Message[+_]\ncase object Reset    extends Message[Unit]\ncase object Increase extends Message[Unit]\ncase object Get      extends Message[Int]\n\nsealed trait CounterEvent\ncase object ResetEvent    extends CounterEvent\ncase object IncreaseEvent extends CounterEvent\n"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"EventSourcedStateful"})," implementation with persisted and idempotent receive patterns:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-scala",children:'  val ESCounterHandler = new EventSourcedStateful[Any, Int, Message, CounterEvent](PersistenceId("id1")) {\n    override def receive[A](\n      state: Int,\n      msg: Message[A],\n      context: Context\n    ): UIO[(Command[CounterEvent], Int => A)] =\n      msg match {\n        case Reset    => ZIO.succeed((Command.persist(ResetEvent), _ => ()))\n        case Increase => ZIO.succeed((Command.persist(IncreaseEvent), _ => ()))\n        case Get      => ZIO.succeed((Command.ignore, _ => state))\n      }\n\n    override def sourceEvent(state: Int, event: CounterEvent): Int =\n      event match {\n        case ResetEvent    => 0\n        case IncreaseEvent => state + 1\n      }\n  }\n'})}),"\n",(0,r.jsx)(t.p,{children:"After defining datastore configuration and actor's behavior we can firmly stop an actor, respawn it\nand expect it's state to be restored to the last event:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-scala",children:'for {\n  actorSystem <- ActorSystem("testSystem1")\n  actor       <- actorSystem.make("actor1", Supervisor.none, 0, ESCounterHandler)\n  _           <- actor ! Increase\n  _           <- actor ? Increase\n  _           <- actor.stop\n  actor       <- actorSystem.make("actor1", Supervisor.none, 0, ESCounterHandler)\n  _           <- actor ! Increase\n  counter     <- actor ? Get\n} yield counter == 3\n'})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>a});var n=s(96540);const r={},o=n.createContext(r);function c(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);