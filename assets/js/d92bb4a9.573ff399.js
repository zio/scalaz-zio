"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[28334],{8582:(e,a,i)=>{i.r(a),i.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"zio-interop-scalaz/index","title":"Introduction to ZIO Interop Scalaz","description":"This library provides instances for several Scalaz typeclasses.","source":"@site/docs/zio-interop-scalaz/index.md","sourceDirName":"zio-interop-scalaz","slug":"/zio-interop-scalaz/","permalink":"/zio-interop-scalaz/","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-interop-scalaz/index.md","tags":[],"version":"current","frontMatter":{"id":"index","title":"Introduction to ZIO Interop Scalaz","sidebar_label":"ZIO Interop Scalaz"},"sidebar":"ecosystem-sidebar","previous":{"title":"ZIO Interop Reactive Streams","permalink":"/zio-interop-reactivestreams/"},"next":{"title":"ZIO Interop Twitter","permalink":"/zio-interop-twitter/"}}');var n=i(74848),s=i(28453);const r={id:"index",title:"Introduction to ZIO Interop Scalaz",sidebar_label:"ZIO Interop Scalaz"},o=void 0,l={},c=[{value:"Example",id:"example",level:3},{value:"<code>ZIO</code> parallel <code>Applicative</code> instance",id:"zio-parallel-applicative-instance",level:2},{value:"Example",id:"example-1",level:3}];function d(e){const a={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.p,{children:"This library provides instances for several Scalaz typeclasses."}),"\n",(0,n.jsx)(a.h3,{id:"example",children:"Example"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-scala",children:"import scalaz._, Scalaz._\nimport zio.interop.scalaz._\n\ntype Database = IList[User]\n\ndef findUser(id: UserId): ZIO[Database, UserError, User] = ...\ndef findUsers(ids: IList[UserId]): ZIO[Database, UserError, IList[User]] = ids.traverse(findUser(_))\n"})}),"\n",(0,n.jsxs)(a.h2,{id:"zio-parallel-applicative-instance",children:[(0,n.jsx)(a.code,{children:"ZIO"})," parallel ",(0,n.jsx)(a.code,{children:"Applicative"})," instance"]}),"\n",(0,n.jsxs)(a.p,{children:["Due to ",(0,n.jsx)(a.code,{children:"Applicative"})," and ",(0,n.jsx)(a.code,{children:"Monad"})," coherence law ",(0,n.jsx)(a.code,{children:"ZIO"}),"'s ",(0,n.jsx)(a.code,{children:"Applicative"})," instance has to be implemented in terms of ",(0,n.jsx)(a.code,{children:"bind"})," hence when composing multiple effects using ",(0,n.jsx)(a.code,{children:"Applicative"})," they will be sequenced. To cope with that limitation ",(0,n.jsx)(a.code,{children:"ZIO"})," tagged with ",(0,n.jsx)(a.code,{children:"Parallel"})," has an ",(0,n.jsx)(a.code,{children:"Applicative"})," instance which is not ",(0,n.jsx)(a.code,{children:"Monad"})," and operates in parallel."]}),"\n",(0,n.jsx)(a.h3,{id:"example-1",children:"Example"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-scala",children:"import scalaz._, Scalaz._\nimport zio.interop.scalaz._\n\ncase class Dashboard(details: UserDetails, history: TransactionHistory)\n\ndef getDetails(id: UserId): ZIO[Database, UserError, UserDetails] = ...\ndef getHistory(id: UserId): ZIO[Database, UserError, TransactionHistory] = ...\n\ndef buildDashboard(id: UserId): ZIO[Database, UserError, Dashboard] =\n  Tag.unwrap(^(par(getDetails(id)), par(getHistory(id)))(Dashboard.apply))\n\ndef par[R, E, A](io: ZIO[R, E, A]): ParIO[R, E, A] = Tag(io)\n"})})]})}function p(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,a,i)=>{i.d(a,{R:()=>r,x:()=>o});var t=i(96540);const n={},s=t.createContext(n);function r(e){const a=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),t.createElement(s.Provider,{value:a},e.children)}}}]);