"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[4125],{82417:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"guides/interop/with-future","title":"How to Interop with Future?","description":"Scala Future","source":"@site/versioned_docs/version-1.0.18/guides/interop/with-future.md","sourceDirName":"guides/interop","slug":"/guides/interop/with-future","permalink":"/1.0.18/guides/interop/with-future","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/versioned_docs/version-1.0.18/guides/interop/with-future.md","tags":[],"version":"1.0.18","frontMatter":{"id":"with-future","title":"How to Interop with Future?"},"sidebar":"overview_sidebar","previous":{"title":"How to Interop with Cats Effect?","permalink":"/1.0.18/guides/interop/with-cats-effect"},"next":{"title":"How to Interop with Java?","permalink":"/1.0.18/guides/interop/with-java"}}');var u=r(74848),i=r(28453);const o={id:"with-future",title:"How to Interop with Future?"},s=void 0,c={},a=[{value:"Scala Future",id:"scala-future",level:2},{value:"From Future",id:"from-future",level:3},{value:"To Future",id:"to-future",level:3},{value:"Run to Future",id:"run-to-future",level:2}];function d(e){const t={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)(t.h2,{id:"scala-future",children:"Scala Future"}),"\n",(0,u.jsxs)(t.p,{children:["Basic interoperability with Scala's ",(0,u.jsx)(t.code,{children:"Future"})," is now provided by ZIO, and does not require a separate module."]}),"\n",(0,u.jsx)(t.h3,{id:"from-future",children:"From Future"}),"\n",(0,u.jsxs)(t.p,{children:["Scala's ",(0,u.jsx)(t.code,{children:"Future"})," can be converted into a ZIO effect with ",(0,u.jsx)(t.code,{children:"ZIO.fromFuture"}),":"]}),"\n",(0,u.jsx)(t.pre,{children:(0,u.jsx)(t.code,{className:"language-scala",children:'def loggedFuture[A](future: ExecutionContext => Future[A]): UIO[Task[A]] = {\n  ZIO.fromFuture { implicit ec =>\n    future(ec).flatMap { result =>\n      Future(println("Future succeeded with " + result)).map(_ => result)\n    }\n  }\n}\n'})}),"\n",(0,u.jsxs)(t.p,{children:["Scala's ",(0,u.jsx)(t.code,{children:"Future"})," can also be converted into a ",(0,u.jsx)(t.code,{children:"Fiber"})," with ",(0,u.jsx)(t.code,{children:"Fiber.fromFuture"}),":"]}),"\n",(0,u.jsx)(t.pre,{children:(0,u.jsx)(t.code,{className:"language-scala",children:"def futureToFiber[A](future: => Future[A]): Fiber[Throwable, A] = \n  Fiber.fromFuture(future)\n"})}),"\n",(0,u.jsx)(t.p,{children:"This is a pure operation, given any sensible notion of fiber equality."}),"\n",(0,u.jsx)(t.h3,{id:"to-future",children:"To Future"}),"\n",(0,u.jsxs)(t.p,{children:["A ZIO ",(0,u.jsx)(t.code,{children:"Task"})," effect can be converted into a ",(0,u.jsx)(t.code,{children:"Future"})," with ",(0,u.jsx)(t.code,{children:"ZIO#toFuture"}),":"]}),"\n",(0,u.jsx)(t.pre,{children:(0,u.jsx)(t.code,{className:"language-scala",children:"def taskToFuture[A](task: Task[A]): UIO[Future[A]] = \n  task.toFuture\n"})}),"\n",(0,u.jsxs)(t.p,{children:["Because converting a ",(0,u.jsx)(t.code,{children:"Task"})," into an (eager) ",(0,u.jsx)(t.code,{children:"Future"})," is effectful, the return value of ",(0,u.jsx)(t.code,{children:"ZIO#toFuture"})," is an effect. To actually begin the computation, and access the started ",(0,u.jsx)(t.code,{children:"Future"}),", it is necessary to execute the effect with a runtime."]}),"\n",(0,u.jsxs)(t.p,{children:["A ZIO ",(0,u.jsx)(t.code,{children:"Fiber"})," can be converted into a ",(0,u.jsx)(t.code,{children:"Future"})," with ",(0,u.jsx)(t.code,{children:"Fiber#toFuture"}),":"]}),"\n",(0,u.jsx)(t.pre,{children:(0,u.jsx)(t.code,{className:"language-scala",children:"def fiberToFuture[A](fiber: Fiber[Throwable, A]): UIO[Future[A]] = \n  fiber.toFuture\n"})}),"\n",(0,u.jsx)(t.h2,{id:"run-to-future",children:"Run to Future"}),"\n",(0,u.jsxs)(t.p,{children:["The ",(0,u.jsx)(t.code,{children:"Runtime"})," type has a method ",(0,u.jsx)(t.code,{children:"unsafeRunToFuture"}),", which can execute a ZIO effect asynchronously, and return a ",(0,u.jsx)(t.code,{children:"Future"})," that will be completed when the execution of the effect is complete."]})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,u.jsx)(t,{...e,children:(0,u.jsx)(d,{...e})}):d(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>s});var n=r(96540);const u={},i=n.createContext(u);function o(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(u):e.components||u:o(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);