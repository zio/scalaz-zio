"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[74231],{17472:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"overview/overview_index","title":"Summary","description":"ZIO is a library for asynchronous and concurrent programming that is based on pure functional programming.","source":"@site/versioned_docs/version-1.0.18/overview/index.md","sourceDirName":"overview","slug":"/overview/","permalink":"/1.0.18/overview/","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/versioned_docs/version-1.0.18/overview/index.md","tags":[],"version":"1.0.18","frontMatter":{"id":"overview_index","title":"Summary"},"sidebar":"overview_sidebar","next":{"title":"Creating Effects","permalink":"/1.0.18/overview/overview_creating_effects"}}');var t=i(74848),r=i(28453);const o={id:"overview_index",title:"Summary"},c=void 0,a={},l=[{value:"ZIO",id:"zio",level:2},{value:"Type Aliases",id:"type-aliases",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"ZIO is a library for asynchronous and concurrent programming that is based on pure functional programming."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["For background on how pure functional programming deals with effects like input and output, see the ",(0,t.jsx)(n.a,{href:"/1.0.18/overview/overview_background",children:"Background"})," section."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["At the core of ZIO is ",(0,t.jsx)(n.code,{children:"ZIO"}),", a powerful effect type inspired by Haskell's ",(0,t.jsx)(n.code,{children:"IO"})," monad. This data type lets you solve complex problems with simple, type-safe, testable, and composable code."]}),"\n",(0,t.jsx)(n.h2,{id:"zio",children:"ZIO"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"ZIO[R, E, A]"})," data type has three type parameters:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.code,{children:"R"})," - Environment Type"]}),". The effect requires an environment of type ",(0,t.jsx)(n.code,{children:"R"}),". If this type parameter is ",(0,t.jsx)(n.code,{children:"Any"}),", it means the effect has no requirements, because you can run the effect with any value (for example, the unit value ",(0,t.jsx)(n.code,{children:"()"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.code,{children:"E"})," - Failure Type"]}),". The effect may fail with a value of type ",(0,t.jsx)(n.code,{children:"E"}),". Some applications will use ",(0,t.jsx)(n.code,{children:"Throwable"}),". If this type parameter is ",(0,t.jsx)(n.code,{children:"Nothing"}),", it means the effect cannot fail, because there are no values of type ",(0,t.jsx)(n.code,{children:"Nothing"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.code,{children:"A"})," - Success Type"]}),". The effect may succeed with a value of type ",(0,t.jsx)(n.code,{children:"A"}),". If this type parameter is ",(0,t.jsx)(n.code,{children:"Unit"}),", it means the effect produces no useful information, while if it is ",(0,t.jsx)(n.code,{children:"Nothing"}),", it means the effect runs forever (or until failure)."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For example, an effect of type ",(0,t.jsx)(n.code,{children:"ZIO[Any, IOException, Byte]"})," has no requirements, may fail with a value of type ",(0,t.jsx)(n.code,{children:"IOException"}),", or may succeed with a value of type ",(0,t.jsx)(n.code,{children:"Byte"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["A value of type ",(0,t.jsx)(n.code,{children:"ZIO[R, E, A]"})," is like an effectful version of the following function type:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:"R => Either[E, A]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This function, which requires an ",(0,t.jsx)(n.code,{children:"R"}),", might produce either an ",(0,t.jsx)(n.code,{children:"E"}),", representing failure, or an ",(0,t.jsx)(n.code,{children:"A"}),", representing success. ZIO effects are not actually functions, of course, because they model complex effects, like asynchronous and concurrent effects."]}),"\n",(0,t.jsx)(n.h2,{id:"type-aliases",children:"Type Aliases"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"ZIO"})," data type is the only effect type in ZIO. However, there are a family of type aliases and companion objects that simplify common cases:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"UIO[A]"})," \u2014 This is a type alias for ",(0,t.jsx)(n.code,{children:"ZIO[Any, Nothing, A]"}),", which represents an effect that has no requirements, and cannot fail, but can succeed with an ",(0,t.jsx)(n.code,{children:"A"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"URIO[R, A]"})," \u2014 This is a type alias for ",(0,t.jsx)(n.code,{children:"ZIO[R, Nothing, A]"}),", which represents an effect that requires an ",(0,t.jsx)(n.code,{children:"R"}),", and cannot fail, but can succeed with an ",(0,t.jsx)(n.code,{children:"A"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Task[A]"})," \u2014 This is a type alias for ",(0,t.jsx)(n.code,{children:"ZIO[Any, Throwable, A]"}),", which represents an effect that has no requirements, and may fail with a ",(0,t.jsx)(n.code,{children:"Throwable"})," value, or succeed with an ",(0,t.jsx)(n.code,{children:"A"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"RIO[R, A]"})," \u2014 This is a type alias for ",(0,t.jsx)(n.code,{children:"ZIO[R, Throwable, A]"}),", which represents an effect that requires an ",(0,t.jsx)(n.code,{children:"R"}),", and may fail with a ",(0,t.jsx)(n.code,{children:"Throwable"})," value, or succeed with an ",(0,t.jsx)(n.code,{children:"A"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"IO[E, A]"})," \u2014 This is a type alias for ",(0,t.jsx)(n.code,{children:"ZIO[Any, E, A]"}),", which represents an effect that has no requirements, and may fail with an ",(0,t.jsx)(n.code,{children:"E"}),", or succeed with an ",(0,t.jsx)(n.code,{children:"A"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"These type aliases all have companion objects, and these companion objects have methods that can be used to construct values of the appropriate type."}),"\n",(0,t.jsxs)(n.p,{children:["If you are new to functional effects, we recommend starting with the ",(0,t.jsx)(n.code,{children:"Task"})," type, which has a single type parameter, and corresponds most closely to the ",(0,t.jsx)(n.code,{children:"Future"})," data type built into Scala's standard library."]}),"\n",(0,t.jsxs)(n.p,{children:["If you are using ",(0,t.jsx)(n.em,{children:"Cats Effect"})," libraries, you may find the ",(0,t.jsx)(n.code,{children:"RIO"})," type useful, since it allows you to thread environments through third-party libraries and your application."]}),"\n",(0,t.jsxs)(n.p,{children:["No matter what type alias you use in your application, ",(0,t.jsx)(n.code,{children:"UIO"})," can be useful for describing infallible effects, including those resulting from handling all errors."]}),"\n",(0,t.jsxs)(n.p,{children:["Finally, if you are an experienced functional programmer, then direct use of the ",(0,t.jsx)(n.code,{children:"ZIO"})," data type is recommended, although you may find it useful to create your own family of type aliases in different parts of your application."]}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsxs)(n.p,{children:["If you are comfortable with the ZIO data type, and its family of type aliases, the next step is learning how to ",(0,t.jsx)(n.a,{href:"/1.0.18/overview/overview_creating_effects",children:"create effects"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var s=i(96540);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);