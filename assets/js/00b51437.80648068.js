"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[21285],{65945:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"zio-dynamodb/reference/hi-level-api/crud-operations/index","title":"CRUD Operations","description":"The High Level API mirrors the CRUD operations of DDB but with a high level of type safety.","source":"@site/docs/zio-dynamodb/reference/hi-level-api/crud-operations/index.md","sourceDirName":"zio-dynamodb/reference/hi-level-api/crud-operations","slug":"/zio-dynamodb/reference/hi-level-api/crud-operations/","permalink":"/zio-dynamodb/reference/hi-level-api/crud-operations/","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-dynamodb/reference/hi-level-api/crud-operations/index.md","tags":[],"version":"current","frontMatter":{"id":"index","title":"CRUD Operations","sidebar_label":"CRUD Operations"},"sidebar":"ecosystem-sidebar","previous":{"title":"Field Traversal","permalink":"/zio-dynamodb/reference/hi-level-api/creating-models/field-traversal"},"next":{"title":"put","permalink":"/zio-dynamodb/reference/hi-level-api/crud-operations/put"}}');var i=r(74848),t=r(28453);const a={id:"index",title:"CRUD Operations",sidebar_label:"CRUD Operations"},s=void 0,c={},d=[];function l(e){const n={code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"The High Level API mirrors the CRUD operations of DDB but with a high level of type safety."}),"\n",(0,i.jsxs)(n.p,{children:["We have to start of with a Scala model of the table and add an implicit schema reference in the companion object together with some convenience ",(0,i.jsx)(n.code,{children:"ProjectionExpression"}),"'s via the ",(0,i.jsx)(n.code,{children:"accessors"})," function."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:"final case class Person(id: String, name: String, age: Int)\nobject Person {\n  implicit val schema: Schema.CaseClass3[String, String, Int, Person] = DeriveSchema.gen[Person]\n  val (id, name, age) = ProjectionExpression.accessors[Person]\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"A summary is shown below and detailed sections can be found for each operation."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:"object DynamoDBQuery {\n\n  // CRUD operations  \n\n  def put[A: Schema](tableName: String, a: A): DynamoDBQuery[A, Option[A]] = ???\n\n  def get[From: Schema](tableName: String)(\n    primaryKeyExpr: KeyConditionExpr.PrimaryKeyExpr[From]\n  ): DynamoDBQuery[From, Either[ItemError, From]] = ???\n\n  def update[From: Schema](tableName: String)(primaryKeyExpr: KeyConditionExpr.PrimaryKeyExpr[From])(\n      action: Action[From]\n    ): DynamoDBQuery[From, Option[From]]  = ???\n\n  def deleteFrom[From: Schema](\n    tableName: String\n  )(\n    primaryKeyExpr: KeyConditionExpr.PrimaryKeyExpr[From]\n  ): DynamoDBQuery[Any, Option[From]] = ???\n\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>s});var o=r(96540);const i={},t=o.createContext(i);function a(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);