"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[50731],{18468:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"zio-nio/files","title":"File Channel","description":"An AsynchronousFileChannel provides an API for handling files in a non-blocking way.","source":"@site/docs/zio-nio/files.md","sourceDirName":"zio-nio","slug":"/zio-nio/files","permalink":"/zio-nio/files","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-nio/files.md","tags":[],"version":"current","frontMatter":{"id":"files","title":"File Channel"},"sidebar":"ecosystem-sidebar","previous":{"title":"Blocking I/O","permalink":"/zio-nio/blocking"},"next":{"title":"Socket Channel","permalink":"/zio-nio/sockets"}}');var a=i(74848),s=i(28453);const r={id:"files",title:"File Channel"},t=void 0,l={},c=[{value:"Basic operations",id:"basic-operations",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["An ",(0,a.jsx)(n.code,{children:"AsynchronousFileChannel"})," provides an API for handling files in a non-blocking way."]}),"\n",(0,a.jsx)(n.p,{children:"Required imports for presented snippets:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"import zio._\nimport zio.nio.channels._\nimport zio.nio.file._\nimport zio.console._\n"})}),"\n",(0,a.jsx)(n.h2,{id:"basic-operations",children:"Basic operations"}),"\n",(0,a.jsxs)(n.p,{children:["Opening a file for a given path (with no additional open attributes) returns a ",(0,a.jsx)(n.code,{children:"ZManaged"})," instance on which we're running the intended operations. ",(0,a.jsx)(n.code,{children:"ZManaged"})," makes sure that the channel gets closed afterwards:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import java.nio.file.StandardOpenOption\n\nval path = Path("file.txt")\nval channelM = AsynchronousFileChannel.open(\n  path, \n  StandardOpenOption.READ,\n  StandardOpenOption.WRITE\n).use { channel =>\n  readWriteOp(channel) *> lockOp(channel)\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Reading and writing is performed as effects where raw ",(0,a.jsx)(n.code,{children:"Byte"})," content is wrapped in ",(0,a.jsx)(n.code,{children:"Chunk"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'val readWriteOp = (channel: AsynchronousFileChannel) =>\n  for {\n    chunk <- channel.readChunk(20, 0L)\n    text  = chunk.map(_.toChar).mkString\n    _     <- putStrLn(text)\n  \n    input = Chunk.fromArray("message".toArray.map(_.toByte))\n    _     <- channel.writeChunk(input, 0L)\n  } yield ()\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Contrary to previous operations, file locks are performed with the core ",(0,a.jsx)(n.code,{children:"java.nio.channels.FileLock"})," class so\nthey are not in effects. Apart from basic acquire/release actions, the core API offers, among other things, partial locks and overlap checks:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"val lockOp = (channel: AsynchronousFileChannel) =>\n  for {\n    isShared     <- channel.lock().bracket(_.release.ignore)(l => IO.succeed(l.isShared))\n    _            <- putStrLn(isShared.toString)                                      // false\n\n    managed      = Managed.make(channel.lock(position = 0, size = 10, shared = false))(_.release.ignore)\n    isOverlaping <- managed.use(l => IO.succeed(l.overlaps(5, 20)))\n    _            <- putStrLn(isOverlaping.toString)                                  // true\n  } yield ()\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Also it's worth mentioning that we are treating ",(0,a.jsx)(n.code,{children:"FileLock"})," as a resource here.\nFor demonstration purposes we handled it in two different ways: using ",(0,a.jsx)(n.code,{children:"bracket"})," and creating ",(0,a.jsx)(n.code,{children:"Managed"})," for this."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>t});var o=i(96540);const a={},s=o.createContext(a);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);