"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[57130],{28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>i});var o=s(96540);const r={},a=o.createContext(r);function t(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),o.createElement(a.Provider,{value:n},e.children)}},90909:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>t,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"zio-kafka/creating-a-consumer","title":"Creating a zio-kafka Consumer","description":"Create a consumer with Consumer.make, passing some ConsumerSettings:","source":"@site/docs/zio-kafka/creating-a-consumer.md","sourceDirName":"zio-kafka","slug":"/zio-kafka/creating-a-consumer","permalink":"/zio-kafka/creating-a-consumer","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-kafka/creating-a-consumer.md","tags":[],"version":"current","frontMatter":{"id":"creating-a-consumer","title":"Creating a zio-kafka Consumer"},"sidebar":"ecosystem-sidebar","previous":{"title":"Getting Started","permalink":"/zio-kafka/"},"next":{"title":"Consuming Kafka topics using ZIO Streams","permalink":"/zio-kafka/consuming-kafka-topics-using-zio-streams"}}');var r=s(74848),a=s(28453);const t={id:"creating-a-consumer",title:"Creating a zio-kafka Consumer"},i=void 0,c={},u=[{value:"Providing a consumer as a layer",id:"providing-a-consumer-as-a-layer",level:2},{value:"Consumer settings from a layer",id:"consumer-settings-from-a-layer",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Create a consumer with ",(0,r.jsx)(n.code,{children:"Consumer.make"}),", passing some ",(0,r.jsx)(n.code,{children:"ConsumerSettings"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-scala",children:'import zio.*\nimport zio.kafka.consumer.{ Consumer, ConsumerSettings }\n\nval consumerSettings: ConsumerSettings =\n  ConsumerSettings(List("localhost:9092")).withGroupId("group")\nval consumer: ZIO[Scope, Throwable, Consumer] =\n  Consumer.make(consumerSettings)\n'})}),"\n",(0,r.jsxs)(n.p,{children:["The consumer settings are not only used for passing properties to the underlying Kafka consumer. You can also configure\nzio-kafka features such as ",(0,r.jsx)(n.code,{children:"rebalanceSafeCommits"})," (see ",(0,r.jsx)(n.a,{href:"/zio-kafka/preventing-duplicates",children:"preventing duplicates"}),"), manual offset\nretrieval (see ",(0,r.jsx)(n.a,{href:"/zio-kafka/partition-assignment-and-offset-retrieval",children:"offset retrieval"}),"), and the pre-fetch strategy (see\n",(0,r.jsx)(n.a,{href:"/zio-kafka/consumer-tuning",children:"consumer tuning"}),")."]}),"\n",(0,r.jsxs)(n.p,{children:["Notice that the consumer requires a ",(0,r.jsx)(n.code,{children:"Scope"})," in the environment. When this scope closes, the consumer closes its\nconnection with the Kafka cluster. A scope can be created with the ",(0,r.jsx)(n.code,{children:"ZIO.scoped"})," method:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-scala",children:"ZIO.scoped {\n  // make the consumer\n  // use the consumer\n}\n// end of scope, consumer has closed connection to Kafka cluster.\n"})}),"\n",(0,r.jsx)(n.p,{children:"If the consumer is provided as a layer, you can use a scoped layer (see below)."}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsxs)(n.p,{children:["If no explicit ",(0,r.jsx)(n.code,{children:"Scope"})," is provided, the consumer uses the application's scope, and it will only close the connection\nwith the Kafka cluster when the application exits."]})}),"\n",(0,r.jsx)(n.h2,{id:"providing-a-consumer-as-a-layer",children:"Providing a consumer as a layer"}),"\n",(0,r.jsxs)(n.p,{children:["If your application uses the ",(0,r.jsx)(n.a,{href:"https://zio.dev/reference/service-pattern/",children:"ZIO service pattern"}),", the consumer can\nbe provided as a layer. Here's an example of how to construct a consumer layer:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-scala",children:'import zio.*\nimport zio.kafka.consumer.{ Consumer, ConsumerSettings }\n\nval consumerLayer: Layer[Any, Throwable, Consumer] =\n  ZLayer.scoped { // (1)\n    val consumerSettings: ConsumerSettings =\n      ConsumerSettings(List("localhost:9092")).withGroupId("group")\n    Consumer.make(consumerSettings)\n  }\n'})}),"\n",(0,r.jsxs)(n.p,{children:["(1) By using ",(0,r.jsx)(n.code,{children:"ZLayer.scoped"}),", the consumer is closed when the layer is no longer needed."]}),"\n",(0,r.jsx)(n.h2,{id:"consumer-settings-from-a-layer",children:"Consumer settings from a layer"}),"\n",(0,r.jsxs)(n.p,{children:["If you wish to create the ",(0,r.jsx)(n.code,{children:"ConsumerSettings"})," and the ",(0,r.jsx)(n.code,{children:"Consumer"})," from a layer, you can use ",(0,r.jsx)(n.code,{children:"Consumer.live"}),". It takes\nthe consumer settings and diagnostics settings as a layer and produces a consumer."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"provide"})," section of the main program could look like this:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-scala",children:".provide(\n  consumerSettingsLayer,\n  ZLayer.succeed(Diagnostics.NoOp),\n  Consumer.live\n)\n"})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);