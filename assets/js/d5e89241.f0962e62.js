"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[7709],{29947:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"zio-actors/examples","title":"Examples","description":"So now how to use it? Here you can find some examples to dive into:","source":"@site/docs/zio-actors/examples.md","sourceDirName":"zio-actors","slug":"/zio-actors/examples","permalink":"/zio-actors/examples","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-actors/examples.md","tags":[],"version":"current","frontMatter":{"id":"examples","title":"Examples"},"sidebar":"ecosystem-sidebar","previous":{"title":"Akka Interop","permalink":"/zio-actors/akka-interop"},"next":{"title":"ZIO Akka Cluster","permalink":"/zio-akka-cluster/"}}');var r=o(74848),i=o(28453);const s={id:"examples",title:"Examples"},a=void 0,c={},l=[{value:"Ping Pong Example",id:"ping-pong-example",level:2},{value:"Configuration File at <code>./src/main/resources/application.conf</code>",id:"configuration-file-at-srcmainresourcesapplicationconf",level:4},{value:"Program",id:"program",level:4}];function p(e){const n={a:"a",code:"code",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"So now how to use it? Here you can find some examples to dive into:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"#ping-pong-example",children:"Ping Pong"})})," \u2014 Example of ",(0,r.jsx)(n.code,{children:"fire-and-forget"})," ping-pong with remote actor lookup"]}),"\n",(0,r.jsxs)(n.li,{children:["Also there are project samples in ",(0,r.jsx)(n.code,{children:"examples"})," root directory of the repo.\nThey are meant to be a counterpart of ",(0,r.jsx)(n.a,{href:"https://github.com/akka/akka-samples",children:"akka-samples"})," for ",(0,r.jsx)(n.code,{children:"zio-actors"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"ping-pong-example",children:"Ping Pong Example"}),"\n",(0,r.jsxs)(n.p,{children:["Here are type hierarchy and ",(0,r.jsx)(n.code,{children:"Stateful"})," instance which can be used to create two actors performing basic ping-pong communication."]}),"\n",(0,r.jsxs)(n.h4,{id:"configuration-file-at-srcmainresourcesapplicationconf",children:["Configuration File at ",(0,r.jsx)(n.code,{children:"./src/main/resources/application.conf"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-hocon",children:'testSystemOne.zio.actors.remoting {\n  hostname = "127.0.0.1"\n  port = 8055\n}\ntestSystemTwo.zio.actors.remoting {\n  hostname = "127.0.0.1"\n  port = 8056\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"program",children:"Program"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-scala",children:'import zio.actors.Actor.Stateful\nimport zio.actors._\nimport zio.RIO\nimport zio._\n\nsealed trait PingPong[+_]\ncase class Ping(sender: ActorRef[PingPong])        extends PingPong[Unit]\ncase object Pong                                   extends PingPong[Unit]\ncase class GameInit(recipient: ActorRef[PingPong]) extends PingPong[Unit]\n\nval protoHandler = new Stateful[Console, Unit, PingPong] {\n    override def receive[A](\n      state: Unit,\n      msg: PingPong[A],\n      context: Context\n    ): RIO[Console, (Unit, A)] =\n      msg match {\n        case Ping(sender) =>\n          for {\n            _    <- Console.printLine("Ping!")\n            path <- sender.path\n            _    <- sender ! Pong\n          } yield ((), ())\n\n        case Pong =>\n          for {\n            _ <- Console.printLine("Pong!")\n          } yield ((), ())\n\n        case GameInit(to) =>\n          for {\n            self <- context.self[PingPong]\n            _    <- to ! Ping(self)\n          } yield ((), ())\n      }\n  }\n\nval program = for {\n  actorSystemRoot <- ActorSystem("testSystemOne")\n  one             <- actorSystemRoot.make("actorOne", zio.actors.Supervisor.none, (), protoHandler)\n\n  actorSystem <- ActorSystem("testSystemTwo")\n  _           <- actorSystem.make("actorTwo", zio.actors.Supervisor.none, (), protoHandler)\n\n  remoteActor <- actorSystemRoot.select[PingPong](\n    "zio://testSystemTwo@127.0.0.1:8056/actorTwo"\n  )\n\n  _ <- one ! GameInit(remoteActor)\n\n} yield ()\n'})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>a});var t=o(96540);const r={},i=t.createContext(r);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);