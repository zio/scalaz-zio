"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[55831],{13680:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"reference/sync/index","title":"Introduction to ZIO\'s Synchronization Primitives","description":"When we access shared resources in a concurrent environment, we should choose a proper synchronization mechanism to avoid incorrect results and data inconsistencies. ZIO provides a set of synchronization primitives and concurrent data structures in the zio-concurrent module that helps us to achieve the desired synchronization.","source":"@site/docs/reference/sync/index.md","sourceDirName":"reference/sync","slug":"/reference/sync/","permalink":"/reference/sync/","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/reference/sync/index.md","tags":[],"version":"current","frontMatter":{"id":"index","title":"Introduction to ZIO\'s Synchronization Primitives"},"sidebar":"reference-sidebar","previous":{"title":"Fiber.Status","permalink":"/reference/fiber/fiberstatus"},"next":{"title":"ReentrantLock","permalink":"/reference/sync/reentrantlock"}}');var i=r(74848),c=r(28453);const o={id:"index",title:"Introduction to ZIO's Synchronization Primitives"},s=void 0,a={},l=[{value:"Installation",id:"installation",level:2},{value:"Synchronization",id:"synchronization",level:2},{value:"Concurrent Data Structures",id:"concurrent-data-structures",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["When we access shared resources in a concurrent environment, we should choose a proper synchronization mechanism to avoid incorrect results and data inconsistencies. ZIO provides a set of synchronization primitives and concurrent data structures in the ",(0,i.jsx)(n.code,{children:"zio-concurrent"})," module that helps us to achieve the desired synchronization."]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(n.p,{children:["In order to use this library, we need to add the following line in our ",(0,i.jsx)(n.code,{children:"build.sbt"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:'libraryDependencies += "dev.zio" %% "zio-concurrent" % "2.x.x"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"synchronization",children:"Synchronization"}),"\n",(0,i.jsx)(n.p,{children:"ZIO has several synchronization tools:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/reference/sync/reentrantlock",children:(0,i.jsx)(n.code,{children:"ReentrantLock"})})}),"\u2014 The ",(0,i.jsx)(n.code,{children:"ReentrantLock"})," is a synchronization tool that is useful for synchronizing blocks of code."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/reference/sync/countdownlatch",children:(0,i.jsx)(n.code,{children:"CountDownLatch"})})}),"\u2014 The ",(0,i.jsx)(n.code,{children:"CountDownLatch"})," is a synchronization tool that allows one or more fibers to wait for the finalization of multiple operations."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/reference/sync/cyclicbarrier",children:(0,i.jsx)(n.code,{children:"CyclicBarrier"})})}),"\u2014 The ",(0,i.jsx)(n.code,{children:"CyclicBarrier"})," is a synchronization tool that allows a set of fibers to all wait for each other to reach a common barrier point."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"concurrent-data-structures",children:"Concurrent Data Structures"}),"\n",(0,i.jsx)(n.p,{children:"It also has some concurrent data structure:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/reference/sync/concurrentmap",children:(0,i.jsx)(n.code,{children:"ConcurrentMap"})})}),"\u2014 A ",(0,i.jsx)(n.code,{children:"ConcurrentMap"})," is a Map wrapper over ",(0,i.jsx)(n.code,{children:"java.util.concurrent.ConcurrentHashMap"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/reference/sync/concurrentset",children:(0,i.jsx)(n.code,{children:"ConcurrentSet"})})}),"\u2014 A ",(0,i.jsx)(n.code,{children:"ConcurrentSet"})," is a Set wrapper over ",(0,i.jsx)(n.code,{children:"java.util.concurrent.ConcurrentHashMap"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>s});var t=r(96540);const i={},c=t.createContext(i);function o(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);