"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[92040],{8727:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"reference/core/zioapp","title":"ZIOApp","description":"The ZIOApp trait is an entry point for a ZIO application that allows sharing layers between applications. It also","source":"@site/docs/reference/core/zioapp.md","sourceDirName":"reference/core","slug":"/reference/core/zioapp","permalink":"/reference/core/zioapp","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/reference/core/zioapp.md","tags":[],"version":"current","frontMatter":{"id":"zioapp","title":"ZIOApp"},"sidebar":"reference-sidebar","previous":{"title":"IO","permalink":"/reference/core/zio/io"},"next":{"title":"Runtime","permalink":"/reference/core/runtime"}}');var t=i(74848),r=i(28453);const s={id:"zioapp",title:"ZIOApp"},a=void 0,c={},l=[{value:"Running a ZIO effect",id:"running-a-zio-effect",level:2},{value:"Accessing Command-line Arguments",id:"accessing-command-line-arguments",level:2},{value:"Customized Runtime",id:"customized-runtime",level:2},{value:"Installing Low-level Functionalities",id:"installing-low-level-functionalities",level:2},{value:"Composing ZIO Applications",id:"composing-zio-applications",level:2}];function p(e){const n={a:"a",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"ZIOApp"})," trait is an entry point for a ZIO application that allows sharing layers between applications. It also\nprovides us the ability to compose multiple ZIO applications."]}),"\n",(0,t.jsxs)(n.p,{children:["There is another simpler version of ",(0,t.jsx)(n.code,{children:"ZIOApp"})," called ",(0,t.jsx)(n.code,{children:"ZIOAppDefault"}),". We usually use ",(0,t.jsx)(n.code,{children:"ZIOAppDefault"})," which uses the default ZIO environment (",(0,t.jsx)(n.code,{children:"ZEnv"}),")."]}),"\n",(0,t.jsx)(n.h2,{id:"running-a-zio-effect",children:"Running a ZIO effect"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"ZIOAppDefault"})," has a ",(0,t.jsx)(n.code,{children:"run"})," function, which is the main entry point for running a ZIO application on the JVM:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'import zio._\n\nobject MyApp extends ZIOAppDefault {\n  def run = for {\n    _ <- Console.printLine("Hello! What is your name?")\n    n <- Console.readLine\n    _ <- Console.printLine("Hello, " + n + ", good to meet you!")\n  } yield ()\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"accessing-command-line-arguments",children:"Accessing Command-line Arguments"}),"\n",(0,t.jsxs)(n.p,{children:["ZIO has a service that contains command-line arguments of an application called ",(0,t.jsx)(n.code,{children:"ZIOAppArgs"}),". We can access command-line arguments using the built-in ",(0,t.jsx)(n.code,{children:"getArgs"})," method:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'import zio._\n\nobject HelloApp extends ZIOAppDefault {\n  def run = for {\n    args <- getArgs\n    _ <-\n      if (args.isEmpty)\n        Console.printLine("Please provide your name as an argument")\n      else\n        Console.printLine(s"Hello, ${args.head}!")\n  } yield ()\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"customized-runtime",children:"Customized Runtime"}),"\n",(0,t.jsxs)(n.p,{children:["In the ZIO app, by overriding its ",(0,t.jsx)(n.code,{children:"bootstrap"})," value, we can map the current runtime to a customized one. Let's customize it by introducing our own executor:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:"import zio._\nimport zio.Executor\nimport java.util.concurrent.{LinkedBlockingQueue, ThreadPoolExecutor, TimeUnit}\n\nobject CustomizedRuntimeZIOApp extends ZIOAppDefault {\n  override val bootstrap = Runtime.setExecutor(\n    Executor.fromThreadPoolExecutor(\n      new ThreadPoolExecutor(\n        5,\n        10,\n        5000,\n        TimeUnit.MILLISECONDS,\n        new LinkedBlockingQueue[Runnable]()\n      )\n    )\n  )\n\n  def run = myAppLogic\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["A detailed explanation of the ZIO runtime system can be found on the ",(0,t.jsx)(n.a,{href:"/reference/core/runtime",children:"runtime"})," page."]}),"\n",(0,t.jsx)(n.h2,{id:"installing-low-level-functionalities",children:"Installing Low-level Functionalities"}),"\n",(0,t.jsxs)(n.p,{children:["We can hook into the ZIO runtime to install low-level functionalities into the ZIO application, such as ",(0,t.jsx)(n.em,{children:"logging"}),", ",(0,t.jsx)(n.em,{children:"profiling"}),", and other similar foundational pieces of infrastructure."]}),"\n",(0,t.jsxs)(n.p,{children:["A detailed explanation can be found on the ",(0,t.jsx)(n.a,{href:"/reference/core/runtime",children:"runtime"})," page."]}),"\n",(0,t.jsx)(n.h2,{id:"composing-zio-applications",children:"Composing ZIO Applications"}),"\n",(0,t.jsxs)(n.p,{children:["To compose ZIO applications, we can use ",(0,t.jsx)(n.code,{children:"<>"})," operator:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:"import zio._\n\nobject MyApp1 extends ZIOAppDefault {    \n  def run = ZIO.succeed(???)\n}\n\nobject MyApp2 extends ZIOAppDefault {\n  override val bootstrap: ZLayer[Any, Any, Any] =\n    asyncProfiler ++ slf4j ++ loggly ++ newRelic\n\n  def run = ZIO.succeed(???)\n}\n\nobject Main extends ZIOApp.Proxy(MyApp1 <> MyApp2)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"<>"})," operator combines the layers of the two applications and then runs the two applications in parallel."]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var o=i(96540);const t={},r=o.createContext(t);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);