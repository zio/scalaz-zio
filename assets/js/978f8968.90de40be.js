"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[87918],{10414:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"zio-optics/constructing-optics","title":"Constructing Optics","description":"ZIO Optics comes included with a variety of optics for working with data structures defined in the Scala standard library.","source":"@site/docs/zio-optics/constructing-optics.md","sourceDirName":"zio-optics","slug":"/zio-optics/constructing-optics","permalink":"/zio-optics/constructing-optics","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-optics/constructing-optics.md","tags":[],"version":"current","frontMatter":{"id":"constructing-optics","title":"Constructing Optics"},"sidebar":"ecosystem-sidebar","previous":{"title":"Understanding Optics","permalink":"/zio-optics/understanding-optics"},"next":{"title":"Composing Optics","permalink":"/zio-optics/composing-optics"}}');var s=n(74848),o=n(28453);const c={id:"constructing-optics",title:"Constructing Optics"},r=void 0,a={},d=[];function l(t){const e={code:"code",p:"p",pre:"pre",...(0,o.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.p,{children:"ZIO Optics comes included with a variety of optics for working with data structures defined in the Scala standard library."}),"\n",(0,s.jsxs)(e.p,{children:["All of these are available in the ",(0,s.jsx)(e.code,{children:"Optic"})," companion object. For example, if we want to access the first value in a ",(0,s.jsx)(e.code,{children:"(String, Int)"})," we could do:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-scala",children:"import zio.optics._\n\nval first: Lens[(String, Int), String] =\n  Optic.first\n"})}),"\n",(0,s.jsxs)(e.p,{children:["In addition, constructors are available in the companion object of each optic. So if we wanted to access the right value of an ",(0,s.jsx)(e.code,{children:"Either"})," we could also do it as:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-scala",children:"val right: Prism[Either[String, Int], Int] =\n  Prism.right\n"})}),"\n",(0,s.jsx)(e.p,{children:"To create optics for your own data types you just need to define a getter and a setter. For instance, we can create an optic that accesses the age of a person like this:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-scala",children:"case class Person(name: String, age: Int)\n\nobject Person {\n  val age: Lens[Person, Int] =\n    Lens(\n      person => Right(person.age),\n      age => person => Right(person.copy(age = age))\n    )\n}\n"})}),"\n",(0,s.jsxs)(e.p,{children:["If your optic fails you should return a ",(0,s.jsx)(e.code,{children:"Left"})," with an ",(0,s.jsx)(e.code,{children:"OpticFailure"}),". An ",(0,s.jsx)(e.code,{children:"OpticFailure"})," allows you to provide an error message which you can use to describe why the optic failed."]}),"\n",(0,s.jsx)(e.p,{children:"In the future ZIO Optics will derive these optics automatically so you will not have to do this yourself."})]})}function p(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(l,{...t})}):l(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>c,x:()=>r});var i=n(96540);const s={},o=i.createContext(s);function c(t){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:c(t.components),i.createElement(o.Provider,{value:e},t.children)}}}]);