"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[66910],{79234:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"overview/getting-started","title":"Getting Started with ZIO","description":"Include ZIO in your project by adding the following to your build.sbt file:","source":"@site/docs/overview/index.md","sourceDirName":"overview","slug":"/overview/getting-started","permalink":"/overview/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/overview/index.md","tags":[],"version":"current","frontMatter":{"id":"getting-started","title":"Getting Started with ZIO","sidebar_label":"Getting Started","slug":"getting-started"},"sidebar":"overview_sidebar","next":{"title":"Summary","permalink":"/overview/summary"}}');var o=i(74848),r=i(28453);const s={id:"getting-started",title:"Getting Started with ZIO",sidebar_label:"Getting Started",slug:"getting-started"},l=void 0,d={},a=[{value:"Main",id:"main",level:2},{value:"Console",id:"console",level:2}];function c(e){const n={br:"br",code:"code",em:"em",h2:"h2",hr:"hr",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Include ZIO in your project by adding the following to your ",(0,o.jsx)(n.code,{children:"build.sbt"})," file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'libraryDependencies += "dev.zio" %% "zio" % "2.1.14"\n'})}),"\n",(0,o.jsx)(n.p,{children:"If you want to use ZIO streams, you should also include the following dependency:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'libraryDependencies += "dev.zio" %% "zio-streams" % "2.1.14"\n'})}),"\n",(0,o.jsx)(n.h2,{id:"main",children:"Main"}),"\n",(0,o.jsxs)(n.p,{children:["Your application can extend ",(0,o.jsx)(n.code,{children:"ZIOAppDefault"}),", which provides a complete runtime system and allows you to write your whole program using ZIO:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-scala",children:'import zio._\nimport zio.Console._\n\nobject MyApp extends ZIOAppDefault {\n\n  def run = myAppLogic\n\n  val myAppLogic =\n    for {\n      _    <- printLine("Hello! What is your name?")\n      name <- readLine\n      _    <- printLine(s"Hello, ${name}, welcome to ZIO!")\n    } yield ()\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"run"})," method should return a ZIO value which has all its errors handled,",(0,o.jsx)(n.br,{}),"\n","which, in ZIO parlance, is an unexceptional ZIO value."]}),"\n",(0,o.jsxs)(n.p,{children:["One way to do this is to invoke ",(0,o.jsx)(n.code,{children:"fold"})," over a ZIO value, to get an unexceptional ZIO value.\nThat requires two handler functions: ",(0,o.jsx)(n.code,{children:"eh: E => B"})," (the error handler) and ",(0,o.jsx)(n.code,{children:"ah: A => B"})," (the success handler)."]}),"\n",(0,o.jsxs)(n.p,{children:["If ",(0,o.jsx)(n.code,{children:"myAppLogic"})," fails, ",(0,o.jsx)(n.code,{children:"eh"})," will be used to get from ",(0,o.jsx)(n.code,{children:"e: E"})," to ",(0,o.jsx)(n.code,{children:"b: B"}),";\nif it succeeds, ",(0,o.jsx)(n.code,{children:"ah"})," will be used to get from ",(0,o.jsx)(n.code,{children:"a: A"})," to ",(0,o.jsx)(n.code,{children:"b: B"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"myAppLogic"}),", as folded above, produces an unexceptional ZIO value, with ",(0,o.jsx)(n.code,{children:"B"})," being ",(0,o.jsx)(n.code,{children:"Int"}),".",(0,o.jsx)(n.br,{}),"\n","If ",(0,o.jsx)(n.code,{children:"myAppLogic"})," fails, there will be a 1; if it succeeds, there will be a 0."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.p,{children:"If you are integrating ZIO into an existing application, using dependency injection, or do not control your main function, then you can create a runtime system in order to execute your ZIO programs:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-scala",children:'import zio._\n\nobject IntegrationExample {\n  val runtime = Runtime.default\n\n  Unsafe.unsafe { implicit unsafe =>\n    runtime.unsafe.run(ZIO.attempt(println("Hello World!"))).getOrThrowFiberFailure()\n  }\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Ideally, your application should have a ",(0,o.jsx)(n.em,{children:"single"})," runtime, because each runtime has its own resources (including thread pool and unhandled error reporter)."]}),"\n",(0,o.jsx)(n.h2,{id:"console",children:"Console"}),"\n",(0,o.jsx)(n.p,{children:"ZIO provides a module for interacting with the console. You can import the functions in this module with the following code snippet:"}),"\n",(0,o.jsxs)(n.p,{children:["If you need to print text to the console, you can use ",(0,o.jsx)(n.code,{children:"print"})," and ",(0,o.jsx)(n.code,{children:"printLine"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-scala",children:'import zio._\n\n// Print without trailing line break\nConsole.print("Hello World")\n\n// Print string and include trailing line break\nConsole.printLine("Hello World")\n'})}),"\n",(0,o.jsxs)(n.p,{children:["If you need to read input from the console, you can use ",(0,o.jsx)(n.code,{children:"readLine"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-scala",children:"import zio._\n\nval echo = Console.readLine.flatMap(line => Console.printLine(line))\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var t=i(96540);const o={},r=t.createContext(o);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);