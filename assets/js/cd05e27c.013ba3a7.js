"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[34764],{16676:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"zio-dynamodb/reference/hi-level-api/scan-and-query-operations/query-all","title":"queryAll","description":"The queryAll operation must be used in conjunction with the whereKey combinator which allows you to specify the partition key and optionally sort key expression the query.","source":"@site/docs/zio-dynamodb/reference/hi-level-api/scan-and-query-operations/query-all.md","sourceDirName":"zio-dynamodb/reference/hi-level-api/scan-and-query-operations","slug":"/zio-dynamodb/reference/hi-level-api/scan-and-query-operations/query-all","permalink":"/zio-dynamodb/reference/hi-level-api/scan-and-query-operations/query-all","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-dynamodb/reference/hi-level-api/scan-and-query-operations/query-all.md","tags":[],"version":"current","frontMatter":{"id":"query-all","title":"queryAll"},"sidebar":"ecosystem-sidebar","previous":{"title":"scanSome","permalink":"/zio-dynamodb/reference/hi-level-api/scan-and-query-operations/scan-some"},"next":{"title":"querySome","permalink":"/zio-dynamodb/reference/hi-level-api/scan-and-query-operations/query-some"}}');var i=t(74848),o=t(28453);const a={id:"query-all",title:"queryAll"},s=void 0,l={},c=[{value:"Combinators",id:"combinators",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:"  def queryAll[A: Schema](\n    tableName: String\n  ): DynamoDBQuery[A, Stream[Throwable, A]] = ???\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"queryAll"})," operation must be used in conjunction with the ",(0,i.jsx)(n.code,{children:"whereKey"})," combinator which allows you to specify the partition key and optionally sort key expression the query."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:'for {\n  _          <- put(tableName, Equipment("1", 2020, "Widget1", 1.0)).execute\n  _          <- put(tableName, Equipment("1", 2021, "Widget1", 2.0)).execute\n  stream     <- queryAll[Equipment](tableName)\n                  .whereKey(Equipment.id.partitionKey === "1" && Equipment.year.sortKey > 2020)\n                  .execute\n} yield ()\n'})}),"\n",(0,i.jsx)(n.h2,{id:"combinators",children:"Combinators"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:'<SCAN_ALL_QUERY>\n  .consistency(<ConsistencyMode>)\n  .whereKey(<KeyConditionExpr>)  // eg Equipment.id.partitionKey === "1" && Equipment.year.sortKey > 2020\n  .filter(<ConditionExpression>) // eg Equipment.price > 1.0 - filtering is done server side AFTER the scan  \n  .indexName(<IndexName>)        // use a secondary index    \n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var r=t(96540);const i={},o=r.createContext(i);function a(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);