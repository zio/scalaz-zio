"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[38713],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(96540);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}},36490:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"ecosystem/community/munit-zio","title":"MUnit ZIO","description":"MUnit ZIO is an integration library between MUnit and ZIO.","source":"@site/docs/ecosystem/community/munit-zio.md","sourceDirName":"ecosystem/community","slug":"/ecosystem/community/munit-zio","permalink":"/ecosystem/community/munit-zio","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/ecosystem/community/munit-zio.md","tags":[],"version":"current","frontMatter":{"id":"munit-zio","title":"MUnit ZIO"},"sidebar":"ecosystem-sidebar","previous":{"title":"LogStage","permalink":"/ecosystem/community/logstage"},"next":{"title":"Rezilience","permalink":"/ecosystem/community/rezilience"}}');var s=n(74848),o=n(28453);const r={id:"munit-zio",title:"MUnit ZIO"},a=void 0,l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Installation",id:"installation",level:2},{value:"Example",id:"example",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://github.com/poslegm/munit-zio",children:"MUnit ZIO"})," is an integration library between MUnit and ZIO."]}),"\n",(0,s.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://scalameta.org/munit/",children:"MUnit"})," is a Scala testing library that is implemented as a JUnit runner. It has ",(0,s.jsx)(t.em,{children:"actionable errors"}),", so the test reports are colorfully pretty-printed, stack traces are highlighted, error messages are pointed to the source code location where the failure happened."]}),"\n",(0,s.jsxs)(t.p,{children:["The MUnit ZIO enables us to write tests that return ",(0,s.jsx)(t.code,{children:"ZIO"})," values without needing to call any unsafe methods (e.g. ",(0,s.jsx)(t.code,{children:"Runtime#unsafeRun"}),")."]}),"\n",(0,s.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsxs)(t.p,{children:["In order to use this library, we need to add the following lines in our ",(0,s.jsx)(t.code,{children:"build.sbt"})," file:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:'libraryDependencies += "org.scalameta" %% "munit" % "0.7.27" % Test\nlibraryDependencies += "com.github.poslegm" %% "munit-zio" % "0.0.2" % Test\n'})}),"\n",(0,s.jsx)(t.p,{children:"If we are using a version of sbt lower than 1.5.0, we will also need to add:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:'testFrameworks += new TestFramework("munit.Framework")\n'})}),"\n",(0,s.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,s.jsxs)(t.p,{children:["Here is a simple MUnit spec that is integrated with the ",(0,s.jsx)(t.code,{children:"ZIO"})," effect:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:'import munit._\nimport zio._\n\nclass SimpleZIOSpec extends ZSuite {\n  testZ("1 + 1 = 2") {\n    for {\n      a <- ZIO(1)\n      b <- ZIO(1)\n    }\n    yield assertEquals(a + b, 2)\n  }\n}\n'})})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);