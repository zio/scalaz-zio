"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[67],{28453:(e,i,t)=>{t.d(i,{R:()=>n,x:()=>a});var s=t(96540);const o={},l=s.createContext(o);function n(e){const i=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:n(e.components),s.createElement(l.Provider,{value:i},e.children)}},54706:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>r,contentTitle:()=>a,default:()=>u,frontMatter:()=>n,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"zio-quill/index","title":"Introduction to ZIO Quill","description":"Quill provides a Quoted Domain Specific Language (QDSL) to express queries in Scala and execute them in a target language.","source":"@site/docs/zio-quill/index.md","sourceDirName":"zio-quill","slug":"/zio-quill/","permalink":"/zio-quill/","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-quill/index.md","tags":[],"version":"current","frontMatter":{"id":"index","title":"Introduction to ZIO Quill","sidebar_label":"ZIO Quill"},"sidebar":"ecosystem-sidebar","previous":{"title":"Running Queries","permalink":"/zio-query/running-queries"},"next":{"title":"Getting Started","permalink":"/zio-quill/getting-started"}}');var o=t(74848),l=t(28453);const n={id:"index",title:"Introduction to ZIO Quill",sidebar_label:"ZIO Quill"},a=void 0,r={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Scala 3 Support",id:"scala-3-support",level:3},{value:"Doobie Support",id:"doobie-support",level:3},{value:"Example",id:"example",level:2}];function d(e){const i={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(i.p,{children:["Quill provides a Quoted Domain Specific Language (",(0,o.jsx)(i.a,{href:"https://homepages.inf.ed.ac.uk/wadler/papers/qdsl/qdsl.pdf",children:"QDSL"}),") to express queries in Scala and execute them in a target language."]}),"\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.a,{href:"https://github.com/zio/zio/wiki/Project-Stages",children:(0,o.jsx)(i.img,{src:"https://img.shields.io/badge/Project%20Stage-Production%20Ready-brightgreen.svg",alt:"Production Ready"})})," ",(0,o.jsx)(i.img,{src:"https://github.com/zio/zio-quill/workflows/CI/badge.svg",alt:"CI Badge"})," ",(0,o.jsx)(i.a,{href:"https://oss.sonatype.org/content/repositories/releases/io/getquill/quill-core_2.12/",children:(0,o.jsx)(i.img,{src:"https://img.shields.io/nexus/r/https/oss.sonatype.org/io.getquill/quill-core_2.12.svg?label=Sonatype%20Release",alt:"Sonatype Releases"})})," ",(0,o.jsx)(i.a,{href:"https://oss.sonatype.org/content/repositories/snapshots/io/getquill/quill-core_2.12/",children:(0,o.jsx)(i.img,{src:"https://img.shields.io/nexus/s/https/oss.sonatype.org/io.getquill/quill-core_2.12.svg?label=Sonatype%20Snapshot",alt:"Sonatype Snapshots"})})," ",(0,o.jsx)(i.a,{href:"https://javadoc.io/doc/io.getquill/zio-quill-docs_2.12",children:(0,o.jsx)(i.img,{src:"https://javadoc.io/badge2/io.getquill/zio-quill-docs_2.12/javadoc.svg",alt:"javadoc"})})," ",(0,o.jsx)(i.a,{href:"https://github.com/zio/zio-quill",children:(0,o.jsx)(i.img,{src:"https://img.shields.io/github/stars/zio/zio-quill?style=social",alt:"ZIO Quill"})})]}),"\n",(0,o.jsx)(i.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsxs)(i.p,{children:["The library's core is designed to support multiple target languages, currently featuring specializations for Structured Query Language (",(0,o.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/SQL",children:"SQL"}),") and Cassandra Query Language (",(0,o.jsx)(i.a,{href:"https://cassandra.apache.org/doc/latest/cql/",children:"CQL"}),")."]}),"\n",(0,o.jsxs)(i.ol,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"Boilerplate-free mapping"}),": The database schema is mapped using simple case classes."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"Quoted DSL"}),": Queries are defined inside a ",(0,o.jsx)(i.code,{children:"quote"})," block. Quill parses each quoted block of code (quotation) at compile time and translates them to an internal Abstract Syntax Tree (AST)"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"Compile-time query generation"}),": The ",(0,o.jsx)(i.code,{children:"ctx.run"})," call reads the quotation's AST and translates it to the target language at compile time, emitting the query string as a compilation message. As the query string is known at compile time, the runtime overhead is very low and similar to using the database driver directly."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"Compile-time query validation"}),": If configured, the query is verified against the database at compile time and the compilation fails if it is not valid. The query validation ",(0,o.jsx)(i.strong,{children:"does not"})," alter the database state."]}),"\n"]}),"\n",(0,o.jsxs)(i.blockquote,{children:["\n",(0,o.jsx)(i.h3,{id:"scala-3-support",children:"Scala 3 Support"}),"\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.a,{href:"https://github.com/zio/zio-protoquill",children:"ProtoQuill"})," provides Scala 3 support for Quill rebuilding on top of new metaprogramming capabilities from the ground > up! It is published to maven-central as the ",(0,o.jsx)(i.code,{children:"quill-<module>_3"})," line of artifacts."]}),"\n"]}),"\n",(0,o.jsxs)(i.blockquote,{children:["\n",(0,o.jsx)(i.h3,{id:"doobie-support",children:"Doobie Support"}),"\n",(0,o.jsxs)(i.p,{children:["See ",(0,o.jsx)(i.a,{href:"/zio-quill/contexts#quill-doobie",children:"here"})," for Doobie integration instructions."]}),"\n"]}),"\n",(0,o.jsx)(i.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(i.p,{children:(0,o.jsx)(i.img,{src:"https://raw.githubusercontent.com/getquill/quill/master/example.gif",alt:"example"})}),"\n",(0,o.jsx)(i.p,{children:"Note: The GIF example uses Eclipse, which shows compilation messages to the user."})]})}function u(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);