"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[77893],{28453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>c});var n=s(96540);const r={},i=n.createContext(r);function a(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(i.Provider,{value:t},e.children)}},95740:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>m,frontMatter:()=>a,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"reference/test/aspects/configuring-tests","title":"Configuring Tests","description":"To run cases, there are some default configuration settings which are used by test runner, such as repeats, retries, samples and shrinks. We can change these settings using test aspects:","source":"@site/docs/reference/test/aspects/configuring-tests.md","sourceDirName":"reference/test/aspects","slug":"/reference/test/aspects/configuring-tests","permalink":"/reference/test/aspects/configuring-tests","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/reference/test/aspects/configuring-tests.md","tags":[],"version":"current","frontMatter":{"id":"configuring-tests","title":"Configuring Tests"},"sidebar":"reference-sidebar","previous":{"title":"Annotating Tests","permalink":"/reference/test/aspects/annotating-tests"},"next":{"title":"Timing-out Tests","permalink":"/reference/test/aspects/timing-out-tests"}}');var r=s(74848),i=s(28453);const a={id:"configuring-tests",title:"Configuring Tests"},c=void 0,o={},u=[{value:"Number of Repeats",id:"number-of-repeats",level:2},{value:"Number of Retries",id:"number-of-retries",level:2},{value:"Number of Samples",id:"number-of-samples",level:2},{value:"Maximum Number of Shrinks",id:"maximum-number-of-shrinks",level:2}];function l(e){const t={a:"a",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["To run cases, there are some ",(0,r.jsx)(t.a,{href:"/reference/test/services/config",children:"default configuration settings"})," which are used by test runner, such as ",(0,r.jsx)(t.em,{children:"repeats"}),", ",(0,r.jsx)(t.em,{children:"retries"}),", ",(0,r.jsx)(t.em,{children:"samples"})," and ",(0,r.jsx)(t.em,{children:"shrinks"}),". We can change these settings using test aspects:"]}),"\n",(0,r.jsx)(t.h2,{id:"number-of-repeats",children:"Number of Repeats"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"repeats(n: Int)"})," test aspect runs each test with the number of times to repeat tests to ensure they are stable set to the specified value:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-scala",children:'import zio._\nimport zio.test.{ test, _ }\n\ntest("repeating a test") {\n  ZIO.attempt("Repeating a test to ensure its stability")\n    .debug\n    .map(_ => assertTrue(true))\n} @@ TestAspect.nonFlaky @@ TestAspect.repeats(5)\n'})}),"\n",(0,r.jsx)(t.h2,{id:"number-of-retries",children:"Number of Retries"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"retries(n: Int)"})," test aspect runs each test with the number of times to retry flaky tests set to the specified value."]}),"\n",(0,r.jsx)(t.h2,{id:"number-of-samples",children:"Number of Samples"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"samples(n: Int)"})," test aspect runs each test with the number of sufficient samples to check for a random variable set to the specified value."]}),"\n",(0,r.jsx)(t.p,{children:"Let's change the number of default samples in the following example:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-scala",children:'import zio._\nimport zio.test.{ test, _ }\n\ntest("customized number of samples") {\n  for {\n    ref <- Ref.make(0)\n    _ <- check(Gen.int)(_ => assertZIO(ref.update(_ + 1))(Assertion.anything))\n    value <- ref.get\n  } yield assertTrue(value == 50)\n} @@ TestAspect.samples(50)\n'})}),"\n",(0,r.jsx)(t.h2,{id:"maximum-number-of-shrinks",children:"Maximum Number of Shrinks"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"shrinks(n: Int)"})," test aspect runs each test with the maximum number of shrinkings to minimize large failures set to the specified value."]})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);