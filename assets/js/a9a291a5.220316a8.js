"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[87504],{4804:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"reference/test/aspects/flaky-and-non-flaky-tests","title":"Flaky and Non-flaky Tests","description":"Whenever we deal with concurrency issues or race conditions, we should ensure that our tests pass consistently. The nonFlaky is a test aspect to do that.","source":"@site/docs/reference/test/aspects/flaky-and-non-flaky-tests.md","sourceDirName":"reference/test/aspects","slug":"/reference/test/aspects/flaky-and-non-flaky-tests","permalink":"/reference/test/aspects/flaky-and-non-flaky-tests","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/reference/test/aspects/flaky-and-non-flaky-tests.md","tags":[],"version":"current","frontMatter":{"id":"flaky-and-non-flaky-tests","title":"Flaky and Non-flaky Tests"},"sidebar":"reference-sidebar","previous":{"title":"Execution Strategy","permalink":"/reference/test/aspects/execution-strategy"},"next":{"title":"Ignoring Tests","permalink":"/reference/test/aspects/ignoring-tests"}}');var a=s(74848),r=s(28453);const o={id:"flaky-and-non-flaky-tests",title:"Flaky and Non-flaky Tests"},i=void 0,c={},l=[];function d(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["Whenever we deal with concurrency issues or race conditions, we should ensure that our tests pass consistently. The ",(0,a.jsx)(t.code,{children:"nonFlaky"})," is a test aspect to do that."]}),"\n",(0,a.jsx)(t.p,{children:"It will run a test several times, by default 100 times, and if all those times pass, it will pass, otherwise, it will fail:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-scala",children:'import zio._\nimport zio.test.{test, _}\nimport zio.test.TestAspect._\n\ntest("random value is always greater than zero") {\n  for {\n    random <- Random.nextIntBounded(100)\n  } yield assertTrue(random > 0)\n} @@ nonFlaky\n'})}),"\n",(0,a.jsxs)(t.p,{children:["Additionally, there is a ",(0,a.jsx)(t.code,{children:"TestAspect.flaky"})," test aspect which retries a test until it succeeds."]})]})}function f(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>i});var n=s(96540);const a={},r=n.createContext(a);function o(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);