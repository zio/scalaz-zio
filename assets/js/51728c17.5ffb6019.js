"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[36949],{19349:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"zio-cli/built-in-commands","title":"Built-in commands","description":"ZIO CLI automatically constructs some common commands:","source":"@site/docs/zio-cli/built-in-commands.md","sourceDirName":"zio-cli","slug":"/zio-cli/built-in-commands","permalink":"/zio-cli/built-in-commands","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-cli/built-in-commands.md","tags":[],"version":"current","frontMatter":{"id":"built-in-commands","title":"Built-in commands"},"sidebar":"ecosystem-sidebar","previous":{"title":"Help Documentation","permalink":"/zio-cli/helpdoc"},"next":{"title":"Cli Configuration","permalink":"/zio-cli/cli-config"}}');var t=i(74848),c=i(28453);const l={id:"built-in-commands",title:"Built-in commands"},s=void 0,d={},a=[{value:"Examples",id:"examples",level:2},{value:"Help",id:"help",level:3},{value:"Wizard",id:"wizard",level:3}];function r(n){const e={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"ZIO CLI"})," automatically constructs some common commands:"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"--help"})," or ",(0,t.jsx)(e.code,{children:"-h"})," shows a description of the CLI's commands."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"--wizard"})," executes wizard mode."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"--shell-completion-index"}),", ",(0,t.jsx)(e.code,{children:"--shell-completion-script"})," and ",(0,t.jsx)(e.code,{children:"--shell-type"})," are used for Bash and Zsh Completion."]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"These commands are automatically generated also for all subcommands of a command."}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-scala",children:'import zio.cli._\n\nval cliApp = CliApp.make(\n    name = "SampleCliApp",\n    version = "0.0.1",\n    summary = HelpDoc.Span.text("Sample CLI application"),\n    command = Command("command")\n) {\n    case _ => ???\n}\n\n// Prints help of the cliApp command\ncliApp.run(List("-h"))\n\n// Prints help of subcommand\ncliApp.run(List("subcommand", "-h"))\n'})}),"\n",(0,t.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-scala",children:'import zio.cli._\nimport java.nio.file.Path\n\n// Construction of basic commands and HelpDoc\nval helpGit = "This is command git."\nval helpGitAdd = "Stages changes in the working repository."\nval helpGitClone = "Creates a copy of an existing repository."\n\nval git: Command[Unit] = Command("git").withHelp(helpGit)\nval gitAdd: Command[Unit] = Command("add").withHelp(helpGitAdd)\nval gitClone: Command[Path] = Command("clone", Options.directory("directory")).withHelp(helpGitClone)\n\n// Adds subcommands add and clone to command git\nval finalCommand: Command[Any] = git.subcommands(gitAdd, gitClone)\n\n'})}),"\n",(0,t.jsx)(e.h3,{id:"help",children:"Help"}),"\n",(0,t.jsxs)(e.p,{children:["The output produced by command ",(0,t.jsx)(e.code,{children:"--help"})," or ",(0,t.jsx)(e.code,{children:"-h"})," is"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"USAGE\n\n  $ git <command>\n\nDESCRIPTION\n\n  This is command git.\n\nCOMMANDS\n\n  - add                          Stages changes in the working repository.\n  - clone --directory directory  Creates a copy of an existing repository.\n"})}),"\n",(0,t.jsxs)(e.p,{children:["If we desire to consult the help of a subcommand, like ",(0,t.jsx)(e.code,{children:"clone"}),", we would get the following."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"USAGE\n\n  $ git clone --directory directory\n\nDESCRIPTION\n\n  Creates a copy of an existing repository.\n\nOPTIONS\n\n  --directory directory\n    A directory.\n"})}),"\n",(0,t.jsx)(e.h3,{id:"wizard",children:"Wizard"}),"\n",(0,t.jsx)(e.p,{children:"Wizard mode allows to construct a command by choosing between parameters offered by the application. The output would be the following."}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"Command(add|clone): \n"})}),"\n",(0,t.jsxs)(e.p,{children:["If we input ",(0,t.jsx)(e.code,{children:"clone"}),", we will get:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"--directory (directory): \n"})})]})}function m(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(r,{...n})}):r(n)}},28453:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>s});var o=i(96540);const t={},c=o.createContext(t);function l(n){const e=o.useContext(c);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),o.createElement(c.Provider,{value:e},n.children)}}}]);