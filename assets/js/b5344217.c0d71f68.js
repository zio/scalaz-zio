"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[70463],{28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>c});var n=s(96540);const r={},i=n.createContext(r);function o(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(i.Provider,{value:t},e.children)}},82754:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"reference/test/aspects/ignoring-tests","title":"Ignoring Tests","description":"To ignore running a test, we can use the ignore test aspect:","source":"@site/docs/reference/test/aspects/ignoring-tests.md","sourceDirName":"reference/test/aspects","slug":"/reference/test/aspects/ignoring-tests","permalink":"/reference/test/aspects/ignoring-tests","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/reference/test/aspects/ignoring-tests.md","tags":[],"version":"current","frontMatter":{"id":"ignoring-tests","title":"Ignoring Tests"},"sidebar":"reference-sidebar","previous":{"title":"Flaky and Non-flaky Tests","permalink":"/reference/test/aspects/flaky-and-non-flaky-tests"},"next":{"title":"Non-deterministic Test Data","permalink":"/reference/test/aspects/non-deterministic-test-data"}}');var r=s(74848),i=s(28453);const o={id:"ignoring-tests",title:"Ignoring Tests"},c=void 0,a={},l=[];function p(e){const t={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["To ignore running a test, we can use the ",(0,r.jsx)(t.code,{children:"ignore"})," test aspect:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-scala",children:'import zio._\nimport zio.test.{test, _}\n\ntest("an ignored test") {\n  assertTrue(false)\n} @@ TestAspect.ignore\n'})}),"\n",(0,r.jsxs)(t.p,{children:["To fail all ignored tests, we can use the ",(0,r.jsx)(t.code,{children:"success"})," test aspect:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-scala",children:'import zio._\nimport zio.test.{test, _}\n\nsuite("sample tests")(\n  test("an ignored test") {\n    assertTrue(false)\n  } @@ TestAspect.ignore,\n  test("another ignored test") {\n    assertTrue(true)\n  } @@ TestAspect.ignore\n) @@ TestAspect.success\n'})})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);