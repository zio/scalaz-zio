"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[25540],{99167:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>r,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"zio-redis/index","title":"Introduction to ZIO Redis","description":"Development CI Badge Sonatype Releases Sonatype Snapshots javadoc ZIO Redis","source":"@site/docs/zio-redis/index.md","sourceDirName":"zio-redis","slug":"/zio-redis/","permalink":"/zio-redis/","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-redis/index.md","tags":[],"version":"current","frontMatter":{"id":"index","title":"Introduction to ZIO Redis","sidebar_label":"ZIO Redis"},"sidebar":"ecosystem-sidebar","previous":{"title":"How to Contribute?","permalink":"/zio-quill/how-to-contribute"},"next":{"title":"ZIO RocksDB","permalink":"/zio-rocksdb/"}}');var o=s(74848),t=s(28453);const r={id:"index",title:"Introduction to ZIO Redis",sidebar_label:"ZIO Redis"},d=void 0,c={},a=[{value:"Introduction",id:"introduction",level:2},{value:"Installation",id:"installation",level:2},{value:"Example",id:"example",level:2},{value:"Testing",id:"testing",level:2},{value:"Resources",id:"resources",level:2}];function l(e){const i={a:"a",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.a,{href:"https://github.com/zio/zio/wiki/Project-Stages",children:(0,o.jsx)(i.img,{src:"https://img.shields.io/badge/Project%20Stage-Development-green.svg",alt:"Development"})})," ",(0,o.jsx)(i.img,{src:"https://github.com/zio/zio-redis/workflows/CI/badge.svg",alt:"CI Badge"})," ",(0,o.jsx)(i.a,{href:"https://oss.sonatype.org/content/repositories/releases/dev/zio/zio-redis_2.13/",children:(0,o.jsx)(i.img,{src:"https://img.shields.io/nexus/r/https/oss.sonatype.org/dev.zio/zio-redis_2.13.svg?label=Sonatype%20Release",alt:"Sonatype Releases"})})," ",(0,o.jsx)(i.a,{href:"https://oss.sonatype.org/content/repositories/snapshots/dev/zio/zio-redis_2.13/",children:(0,o.jsx)(i.img,{src:"https://img.shields.io/nexus/s/https/oss.sonatype.org/dev.zio/zio-redis_2.13.svg?label=Sonatype%20Snapshot",alt:"Sonatype Snapshots"})})," ",(0,o.jsx)(i.a,{href:"https://javadoc.io/doc/dev.zio/zio-redis-docs_2.13",children:(0,o.jsx)(i.img,{src:"https://javadoc.io/badge2/dev.zio/zio-redis-docs_2.13/javadoc.svg",alt:"javadoc"})})," ",(0,o.jsx)(i.a,{href:"https://github.com/zio/zio-redis",children:(0,o.jsx)(i.img,{src:"https://img.shields.io/github/stars/zio/zio-redis?style=social",alt:"ZIO Redis"})})]}),"\n",(0,o.jsx)(i.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.a,{href:"https://github.com/zio/zio-redis",children:"ZIO Redis"})," is a ZIO-native Redis client.\nIt aims to provide a ",(0,o.jsx)(i.strong,{children:"type-safe"})," and ",(0,o.jsx)(i.strong,{children:"performant"})," API for accessing Redis\ninstances."]}),"\n",(0,o.jsx)(i.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsxs)(i.p,{children:["To use ZIO Redis, add the following line to your ",(0,o.jsx)(i.code,{children:"build.sbt"}),":"]}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-scala",children:'libraryDependencies += "dev.zio" %% "zio-redis" % "1.0.0"\n'})}),"\n",(0,o.jsx)(i.h2,{id:"example",children:"Example"}),"\n",(0,o.jsxs)(i.p,{children:["To execute our ZIO Redis effect, we should provide the ",(0,o.jsx)(i.code,{children:"RedisExecutor"})," layer to that effect. To create this layer we\nshould also provide the following layers:"]}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"RedisConfig"})," \u2014 Using default one, will connect to the ",(0,o.jsx)(i.code,{children:"localhost:6379"})," Redis instance."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"BinaryCodec"})," \u2014 In this example, we are going to use the built-in ",(0,o.jsx)(i.code,{children:"ProtobufCodec"})," codec from zio-schema project."]}),"\n"]}),"\n",(0,o.jsxs)(i.p,{children:["To run this example we should put following dependencies in our ",(0,o.jsx)(i.code,{children:"build.sbt"})," file:"]}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-scala",children:'libraryDependencies ++= Seq(\n  "dev.zio" %% "zio-redis" % "1.0.0",\n  "dev.zio" %% "zio-schema-protobuf" % "0.4.9"\n)\n'})}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-scala",children:'import zio._\nimport zio.redis._\nimport zio.schema._\nimport zio.schema.codec._\n\nobject ZIORedisExample extends ZIOAppDefault {\n  \n  object ProtobufCodecSupplier extends CodecSupplier {\n    def get[A: Schema]: BinaryCodec[A] = ProtobufCodec.protobufCodec\n  }\n  \n  val myApp: ZIO[Redis, RedisError, Unit] = \n    for {\n      redis <- ZIO.service[Redis]\n      _     <- redis.set("myKey", 8L, Some(1.minutes))\n      v     <- redis.get("myKey").returning[Long]\n      _     <- Console.printLine(s"Value of myKey: $v").orDie\n      _     <- redis.hSet("myHash", ("k1", 6), ("k2", 2))\n      _     <- redis.rPush("myList", 1, 2, 3, 4)\n      _     <- redis.sAdd("mySet", "a", "b", "a", "c")\n    } yield ()\n\n  override def run = \n    myApp.provide(Redis.local, ZLayer.succeed[CodecSupplier](ProtobufCodecSupplier))\n}\n'})}),"\n",(0,o.jsx)(i.h2,{id:"testing",children:"Testing"}),"\n",(0,o.jsx)(i.p,{children:"To test you can use the embedded redis instance by adding to your build:"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-scala",children:'libraryDependencies := "dev.zio" %% "zio-redis-embedded" % "1.0.0"\n'})}),"\n",(0,o.jsxs)(i.p,{children:["Then you can supply ",(0,o.jsx)(i.code,{children:"EmbeddedRedis.layer.orDie"})," as your ",(0,o.jsx)(i.code,{children:"RedisConfig"})," and you're good to go!"]}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-scala",children:'import zio._\nimport zio.redis._\nimport zio.redis.embedded.EmbeddedRedis\nimport zio.schema.{DeriveSchema, Schema}\nimport zio.schema.codec.{BinaryCodec, ProtobufCodec}\nimport zio.test._\nimport zio.test.Assertion._\nimport java.util.UUID\n\nobject EmbeddedRedisSpec extends ZIOSpecDefault {\n  object ProtobufCodecSupplier extends CodecSupplier {\n    def get[A: Schema]: BinaryCodec[A] = ProtobufCodec.protobufCodec\n  }\n  \n  final case class Item private (id: UUID, name: String, quantity: Int)\n  object Item {\n    implicit val itemSchema: Schema[Item] = DeriveSchema.gen[Item]\n  }\n  \n  def spec = suite("EmbeddedRedis should")(\n    test("set and get values") {\n      for {\n        redis <- ZIO.service[Redis]\n        item   = Item(UUID.randomUUID, "foo", 2)\n        _     <- redis.set(s"item.${item.id.toString}", item)\n        found <- redis.get(s"item.${item.id.toString}").returning[Item]\n      } yield assert(found)(isSome(equalTo(item)))\n    }\n  ).provideShared(\n    EmbeddedRedis.layer,\n    ZLayer.succeed[CodecSupplier](ProtobufCodecSupplier),\n    Redis.singleNode\n  ) @@ TestAspect.silentLogging\n}\n'})}),"\n",(0,o.jsx)(i.h2,{id:"resources",children:"Resources"}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.a,{href:"https://www.youtube.com/watch?v=yqFt3b3RBkI",children:"ZIO Redis"})," by Dejan Mijic \u2014 Redis is one of the most commonly used\nin-memory data structure stores. In this talk, Dejan will introduce ZIO Redis, a purely functional, strongly typed\nclient library backed by ZIO, with excellent performance and extensive support for nearly all of Redis' features. He\nwill explain the library design using the bottom-up approach - from communication protocol to public APIs. Finally, he\nwill wrap the talk by demonstrating the client's usage and discussing its performance characteristics."]}),"\n"]})]})}function p(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,i,s)=>{s.d(i,{R:()=>r,x:()=>d});var n=s(96540);const o={},t=n.createContext(o);function r(e){const i=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(t.Provider,{value:i},e.children)}}}]);