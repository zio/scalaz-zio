"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[43678],{28453:(e,i,s)=>{s.d(i,{R:()=>r,x:()=>o});var a=s(96540);const t={},n=a.createContext(t);function r(e){const i=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(n.Provider,{value:i},e.children)}},62047:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"guides/interop/with-scalaz-7x","title":"How to Interop with Scalaz 7.x?","description":"ZIO Instances","source":"@site/versioned_docs/version-1.0.18/guides/interop/with-scalaz-7x.md","sourceDirName":"guides/interop","slug":"/guides/interop/with-scalaz-7x","permalink":"/1.0.18/guides/interop/with-scalaz-7x","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/versioned_docs/version-1.0.18/guides/interop/with-scalaz-7x.md","tags":[],"version":"1.0.18","frontMatter":{"id":"with-scalaz-7x","title":"How to Interop with Scalaz 7.x?"},"sidebar":"overview_sidebar","previous":{"title":"How to Interop with Monix?","permalink":"/1.0.18/guides/interop/with-monix"},"next":{"title":"How to Interop with Reactive Streams?","permalink":"/1.0.18/guides/interop/with-reactive-streams"}}');var t=s(74848),n=s(28453);const r={id:"with-scalaz-7x",title:"How to Interop with Scalaz 7.x?"},o=void 0,c={},l=[{value:"<code>ZIO</code> Instances",id:"zio-instances",level:2},{value:"Example",id:"example",level:3},{value:"<code>ZIO</code> parallel <code>Applicative</code> instance",id:"zio-parallel-applicative-instance",level:2},{value:"Example",id:"example-1",level:3}];function d(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(i.h2,{id:"zio-instances",children:[(0,t.jsx)(i.code,{children:"ZIO"})," Instances"]}),"\n",(0,t.jsxs)(i.p,{children:["If you are a happy Scalaz 7.2 user ",(0,t.jsx)(i.a,{href:"https://github.com/zio/interop-scalaz",children:(0,t.jsx)(i.code,{children:"interop-scala7x"})})," module offers ",(0,t.jsx)(i.code,{children:"ZIO"})," instances for several typeclasses."]}),"\n",(0,t.jsx)(i.h3,{id:"example",children:"Example"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-scala",children:"import scalaz._, Scalaz._\nimport zio.interop.scalaz72._\n\ntype Database = IList[User]\n\ndef findUser(id: UserId): ZIO[Database, UserError, User] = ...\ndef findUsers(ids: IList[UserId]): ZIO[Database, UserError, IList[User]] = ids.traverse(findUser(_))\n"})}),"\n",(0,t.jsxs)(i.h2,{id:"zio-parallel-applicative-instance",children:[(0,t.jsx)(i.code,{children:"ZIO"})," parallel ",(0,t.jsx)(i.code,{children:"Applicative"})," instance"]}),"\n",(0,t.jsxs)(i.p,{children:["Due to ",(0,t.jsx)(i.code,{children:"Applicative"})," and ",(0,t.jsx)(i.code,{children:"Monad"})," coherence law ",(0,t.jsx)(i.code,{children:"ZIO"}),"'s ",(0,t.jsx)(i.code,{children:"Applicative"})," instance has to be implemented in terms of ",(0,t.jsx)(i.code,{children:"bind"})," hence when composing multiple effects using ",(0,t.jsx)(i.code,{children:"Applicative"})," they will be sequenced. To cope with that limitation ",(0,t.jsx)(i.code,{children:"ZIO"})," tagged with ",(0,t.jsx)(i.code,{children:"Parallel"})," has an ",(0,t.jsx)(i.code,{children:"Applicative"})," instance which is not ",(0,t.jsx)(i.code,{children:"Monad"})," and operates in parallel."]}),"\n",(0,t.jsx)(i.h3,{id:"example-1",children:"Example"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-scala",children:"import scalaz._, Scalaz._\nimport zio.interop.scalaz72._\n\ncase class Dashboard(details: UserDetails, history: TransactionHistory)\n\ndef getDetails(id: UserId): ZIO[Database, UserError, UserDetails] = ...\ndef getHistory(id: UserId): ZIO[Database, UserError, TransactionHistory] = ...\n\ndef buildDashboard(id: UserId): ZIO[Database, UserError, Dashboard] =\n  Tag.unwrap(^(par(getDetails(id)), par(getHistory(id)))(Dashboard.apply))\n\ndef par[R, E, A](io: ZIO[R, E, A]): scalaz72.ParIO[R, E, A] = Tag(io)\n"})})]})}function p(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);