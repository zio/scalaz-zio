"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[64729],{58724:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"guides/interop/with-twitter","title":"How to Interop with Twitter?","description":"interop-twitter module provides capability to convert Twitter Future into ZIO Task.","source":"@site/versioned_docs/version-1.0.18/guides/interop/with-twitter.md","sourceDirName":"guides/interop","slug":"/guides/interop/with-twitter","permalink":"/1.0.18/guides/interop/with-twitter","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/versioned_docs/version-1.0.18/guides/interop/with-twitter.md","tags":[],"version":"1.0.18","frontMatter":{"id":"with-twitter","title":"How to Interop with Twitter?"},"sidebar":"overview_sidebar","previous":{"title":"How to Interop with Reactive Streams?","permalink":"/1.0.18/guides/interop/with-reactive-streams"},"next":{"title":"How to Interop with Guava?","permalink":"/1.0.18/guides/interop/with-guava"}}');var n=i(74848),o=i(28453);const s={id:"with-twitter",title:"How to Interop with Twitter?"},a=void 0,p={},c=[{value:"Example",id:"example",level:3}];function u(t){const e={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:"https://github.com/zio/interop-twitter",children:(0,n.jsx)(e.code,{children:"interop-twitter"})})," module provides capability to convert ",(0,n.jsxs)(e.a,{href:"https://twitter.github.io/util/docs/com/twitter/util/Future.html",children:["Twitter ",(0,n.jsx)(e.code,{children:"Future"})]})," into ZIO ",(0,n.jsx)(e.code,{children:"Task"}),"."]}),"\n",(0,n.jsx)(e.h3,{id:"example",children:"Example"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-scala",children:'import com.twitter.util.Future\nimport zio.{ App, Task }\nimport zio.console._\nimport zio.interop.twitter._\n\nobject Example extends App {\n  def run(args: List[String]) = {\n    val program =\n      for {\n        _        <- putStrLn("Hello! What is your name?")\n        name     <- getStrLn\n        greeting <- Task.fromTwitterFuture(Task(greet(name)))\n        _        <- putStrLn(greeting)\n      } yield ()\n\n    program.exitCode\n  }\n\n  private def greet(name: String): Future[String] = Future.value(s"Hello, $name!")\n}\n'})})]})}function d(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(u,{...t})}):u(t)}},28453:(t,e,i)=>{i.d(e,{R:()=>s,x:()=>a});var r=i(96540);const n={},o=r.createContext(n);function s(t){const e=r.useContext(o);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:s(t.components),r.createElement(o.Provider,{value:e},t.children)}}}]);