"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[71829],{88036:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"reference/error-management/operations/rejecting-some-success-values","title":"Rejecting Some Success Values","description":"We can reject some success values using the ZIO#reject operator:","source":"@site/docs/reference/error-management/operations/rejecting-some-success-values.md","sourceDirName":"reference/error-management/operations","slug":"/reference/error-management/operations/rejecting-some-success-values","permalink":"/reference/error-management/operations/rejecting-some-success-values","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/reference/error-management/operations/rejecting-some-success-values.md","tags":[],"version":"current","frontMatter":{"id":"rejecting-some-success-values","title":"Rejecting Some Success Values"},"sidebar":"reference-sidebar","previous":{"title":"Flipping Error and Success Channels","permalink":"/reference/error-management/operations/flipping-error-and-success-channels"},"next":{"title":"Zooming In on Nested Values","permalink":"/reference/error-management/operations/zooming-in-on-nested-values"}}');var t=s(74848),c=s(28453);const o={id:"rejecting-some-success-values",title:"Rejecting Some Success Values"},a=void 0,i={},u=[];function l(e){const n={code:"code",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["We can reject some success values using the ",(0,t.jsx)(n.code,{children:"ZIO#reject"})," operator:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:"trait ZIO[-R, +E, +A] {\n  def reject[E1 >: E](pf: PartialFunction[A, E1]): ZIO[R, E1, A]\n\n  def rejectZIO[R1 <: R, E1 >: E](\n    pf: PartialFunction[A, ZIO[R1, E1, E1]]\n  ): ZIO[R1, E1, A]\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If the ",(0,t.jsx)(n.code,{children:"PartialFunction"})," matches, it will reject that success value and convert that to a failure, otherwise it will continue with the original success value:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'import zio._\n\nval myApp: ZIO[Any, String, Int] =\n  Random\n    .nextIntBounded(20)\n    .reject {\n      case n if n % 2 == 0 => s"even number rejected: $n"\n      case 5               => "number 5 was rejected"\n    }\n    .debug\n'})})]})}function m(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var r=s(96540);const t={},c=r.createContext(t);function o(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);