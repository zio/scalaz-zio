"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[76863],{28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var t=i(96540);const o={},r=t.createContext(o);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:n},e.children)}},71906:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"zio-dynamodb/reference/hi-level-api/crud-operations/put","title":"put","description":"The put operation is used to insert or replace an item in a table.","source":"@site/docs/zio-dynamodb/reference/hi-level-api/crud-operations/put.md","sourceDirName":"zio-dynamodb/reference/hi-level-api/crud-operations","slug":"/zio-dynamodb/reference/hi-level-api/crud-operations/put","permalink":"/zio-dynamodb/reference/hi-level-api/crud-operations/put","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-dynamodb/reference/hi-level-api/crud-operations/put.md","tags":[],"version":"current","frontMatter":{"id":"put","title":"put"},"sidebar":"ecosystem-sidebar","previous":{"title":"CRUD Operations","permalink":"/zio-dynamodb/reference/hi-level-api/crud-operations/"},"next":{"title":"get","permalink":"/zio-dynamodb/reference/hi-level-api/crud-operations/get"}}');var o=i(74848),r=i(28453);const s={id:"put",title:"put"},a=void 0,c={},d=[{value:"<code>put</code> query operations",id:"put-query-operations",level:3},{value:"Using <code>put</code> with Top level traits using <code>discriminatorName</code> annotation",id:"using-put-with-top-level-traits-using-discriminatorname-annotation",level:3}];function l(e){const n={code:"code",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-scala",children:"def put[A: Schema](tableName: String, a: A): DynamoDBQuery[A, Option[A]] = ???\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"put"})," operation is used to insert or replace an item in a table."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-scala",children:'for {\n  _ <- DynamoDBQuery.put("person", Person("1", "John", 21))\n        .where(Person.id.notExists) // a ConditionExpression\n        .execute\n} yield ()\n'})}),"\n",(0,o.jsxs)(n.h3,{id:"put-query-operations",children:[(0,o.jsx)(n.code,{children:"put"})," query operations"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-scala",children:"<PUT_QUERY>\n  .returns(<ReturnValues>) // ReturnValues.AllOld | ReturnValues.None <default>\n  .where(<ConditionExpression>) // eg Person.id.notExists\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"using-put-with-top-level-traits-using-discriminatorname-annotation",children:["Using ",(0,o.jsx)(n.code,{children:"put"})," with Top level traits using ",(0,o.jsx)(n.code,{children:"discriminatorName"})," annotation"]}),"\n",(0,o.jsxs)(n.p,{children:["When using a top level sealed trait with ",(0,o.jsx)(n.code,{children:"@discriminatorName"})," annotation, it must be provided explicitly to the ",(0,o.jsx)(n.code,{children:"put"}),"\nto ensure that discriminator field is encoded."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-scala",children:'@discriminatorName("invoiceType")\nsealed trait Invoice\nfinal case class PreBilledInvoice(/* ... */) extends Invoice\nfinal case class BilledInvoice(/* ... */) extends Invoice\n\nfor {\n  _ <- DynamoDBQuery.put[Invoice]("invoice", BilledInvoice(/* ... */)).execute // OK - discriminator encoded\n  _ <- DynamoDBQuery.put[BilledInvoice]("invoice", BilledInvoice(/* ... */)).execute // WRONG - discriminator not encoded\n} yield ()\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);