"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[51914],{75949:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"reference/observability/metrics/metriclabel","title":"MetricLabel","description":"A MetricLabel metadata represents a key-value pair that allows analyzing metrics at an additional level of granularity. For example, if a metric tracks the response time of a service, labels could be used to create separate versions that track response times for different clients.","source":"@site/docs/reference/observability/metrics/metriclabel.md","sourceDirName":"reference/observability/metrics","slug":"/reference/observability/metrics/metriclabel","permalink":"/reference/observability/metrics/metriclabel","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/reference/observability/metrics/metriclabel.md","tags":[],"version":"current","frontMatter":{"id":"metriclabel","title":"MetricLabel"},"sidebar":"reference-sidebar","previous":{"title":"Frequency","permalink":"/reference/observability/metrics/frequency"},"next":{"title":"JVM Metrics","permalink":"/reference/observability/metrics/jvm"}}');var i=r(74848),s=r(28453);const a={id:"metriclabel",title:"MetricLabel"},l=void 0,c={},o=[];function d(e){const t={code:"code",em:"em",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["A ",(0,i.jsx)(t.code,{children:"MetricLabel"})," metadata represents a key-value pair that allows analyzing metrics at an additional level of granularity. For example, if a metric tracks the response time of a service, labels could be used to create separate versions that track response times for different clients."]}),"\n",(0,i.jsxs)(t.p,{children:["ZIO Metrics has a ",(0,i.jsx)(t.em,{children:"label based dimensional"})," data model where we have a metric name and just a list of key-value pairs attached to that metric name. So labels are the first-class citizen in ZIO Metrics. In monitoring dashboards, we can find or filter metrics using these labels."]}),"\n",(0,i.jsx)(t.p,{children:"For example, we can append following labels (dimensions) to our metric aspects:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Endpoint (/api/users, /api/documents)"}),"\n",(0,i.jsx)(t.li,{children:"HTTP Method (POST, GET)"}),"\n",(0,i.jsx)(t.li,{children:"Deployment Environment (Staging, Production)"}),"\n",(0,i.jsx)(t.li,{children:"HTTP Response Code"}),"\n",(0,i.jsx)(t.li,{children:"Error code (404, 503)"}),"\n",(0,i.jsx)(t.li,{children:"Datacenter Zone (us-east, eu-west)"}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-scala",children:'import zio._\nimport zio.metrics._\n\nval counter = Metric.counter("http_requests")\n  .tagged(\n    MetricLabel("env", "production"),\n    MetricLabel("method", "GET"),\n    MetricLabel("endpoint", "/api/users"),\n    MetricLabel("zone", "ap-northeast"),\n  )\n'})}),"\n",(0,i.jsx)(t.p,{children:"By labeling metrics, we can query in a more granular way in monitoring dashboards, such as"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"How many requests have been sent to each endpoint in total?"}),"\n",(0,i.jsx)(t.li,{children:"In which zone are we about to violate SLAs?"}),"\n",(0,i.jsx)(t.li,{children:"Which endpoint has the most latency?"}),"\n"]})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>l});var n=r(96540);const i={},s=n.createContext(i);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);