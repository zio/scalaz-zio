"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[23986],{31485:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"zio-dynamodb/reference/hi-level-api/scan-and-query-operations/query-some","title":"querySome","description":"The scanSome operation is used page limit number of items in a table, and returns them in a tuple of Chunk[A] and LastEvaluatedKey. The LastEvaluatedKey can be used to continue scanning the table from where the last page left off using the startKey combinator.","source":"@site/docs/zio-dynamodb/reference/hi-level-api/scan-and-query-operations/query-some.md","sourceDirName":"zio-dynamodb/reference/hi-level-api/scan-and-query-operations","slug":"/zio-dynamodb/reference/hi-level-api/scan-and-query-operations/query-some","permalink":"/zio-dynamodb/reference/hi-level-api/scan-and-query-operations/query-some","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-dynamodb/reference/hi-level-api/scan-and-query-operations/query-some.md","tags":[],"version":"current","frontMatter":{"id":"query-some","title":"querySome"},"sidebar":"ecosystem-sidebar","previous":{"title":"queryAll","permalink":"/zio-dynamodb/reference/hi-level-api/scan-and-query-operations/query-all"},"next":{"title":"Primary Keys","permalink":"/zio-dynamodb/reference/hi-level-api/primary-keys"}}');var i=t(74848),o=t(28453);const r={id:"query-some",title:"querySome"},s=void 0,l={},c=[{value:"Combinators",id:"combinators",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:"  def scanSome[A: Schema](\n    tableName: String,\n    limit: Int\n  ): DynamoDBQuery[A, (Chunk[A], LastEvaluatedKey)] = ???  \n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"scanSome"})," operation is used page ",(0,i.jsx)(n.code,{children:"limit"})," number of items in a table, and returns them in a tuple of ",(0,i.jsx)(n.code,{children:"Chunk[A]"})," and ",(0,i.jsx)(n.code,{children:"LastEvaluatedKey"}),". The ",(0,i.jsx)(n.code,{children:"LastEvaluatedKey"})," can be used to continue scanning the table from where the last page left off using the ",(0,i.jsx)(n.code,{children:"startKey"})," combinator."]}),"\n",(0,i.jsx)(n.p,{children:"This paging behavior is useful when you have a large number of items in a table and you want to process them in smaller chunks to avoid memory issues - eg a REST API for a paging front end."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:'for {\n  _                          <- put(tableName, Equipment("1", 2020, "Widget1", 1.0)).execute\n  _                          <- put(tableName, Equipment("1", 2021, "Widget1", 2.0)).execute\n  _                          <- put(tableName, Equipment("1", 2022, "Widget1", 2.1)).execute\n  t                          <- querySome[Equipment](tableName, limit = 2).execute\n  (page1, lastEvaluatedKey1) =  t\n  t2                         <- querySome[Equipment](tableName, limit = 1).startKey(lastEvaluatedKey1).execute\n  (page2, lastEvaluatedKey2) =  t2\n} yield ()\n'})}),"\n",(0,i.jsx)(n.h2,{id:"combinators",children:"Combinators"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:'<SCAN_SOME_QUERY>\n  .consistency(<ConsistencyMode>)\n  .whereKey(<KeyConditionExpr>)  // eg Equipment.id.partitionKey === "1" && Equipment.year.sortKey > 2020\n  .startKey(<LastEvaluatedKey>)\n  .filter(<ConditionExpression>) // eg Equipment.price > 1.0 - filtering is done server side AFTER the scan  \n  .indexName(<IndexName>)        // use a secondary index    \n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var a=t(96540);const i={},o=a.createContext(i);function r(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);