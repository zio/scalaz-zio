"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[18152],{16157:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"reference/test/aspects/passing-failed-tests","title":"Passing Failed Tests","description":"The failing aspect makes a test that failed for any reason pass.","source":"@site/docs/reference/test/aspects/passing-failed-tests.md","sourceDirName":"reference/test/aspects","slug":"/reference/test/aspects/passing-failed-tests","permalink":"/reference/test/aspects/passing-failed-tests","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/reference/test/aspects/passing-failed-tests.md","tags":[],"version":"current","frontMatter":{"id":"passing-failed-tests","title":"Passing Failed Tests"},"sidebar":"reference-sidebar","previous":{"title":"Non-deterministic Test Data","permalink":"/reference/test/aspects/non-deterministic-test-data"},"next":{"title":"Repeat and Retry","permalink":"/reference/test/aspects/repeat-and-retry"}}');var a=t(74848),i=t(28453);const r={id:"passing-failed-tests",title:"Passing Failed Tests"},c=void 0,o={},l=[];function p(e){const s={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(s.p,{children:["The ",(0,a.jsx)(s.code,{children:"failing"})," aspect makes a test that failed for any reason pass."]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-scala",children:'import zio._\nimport zio.test.{test, _}\n\ntest("failing a passing test") {\n  assertTrue(true)\n} @@ TestAspect.failing\n'})}),"\n",(0,a.jsx)(s.p,{children:"If the test passes this aspect will make it fail:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-scala",children:'import zio._\nimport zio.test.{test, _}\n\ntest("passing a failing test") {\n  assertTrue(false)\n} @@ TestAspect.failing\n'})}),"\n",(0,a.jsx)(s.p,{children:"It is also possible to pass a failing test on a specified failure:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-scala",children:'import zio._\nimport zio.test.{test, _}\n\ntest("a test that will only pass on a specified failure") {\n  ZIO.fail("Boom!").map(_ => assertTrue(true))\n} @@ TestAspect.failing[String] {\n  case TestFailure.Assertion(_, _) => true\n  case TestFailure.Runtime(cause: Cause[String], _) => cause match {\n    case Cause.Fail(value, _)\n      if value == "Boom!" => true\n    case _ => false\n  }\n}\n'})})]})}function d(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>c});var n=t(96540);const a={},i=n.createContext(a);function r(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);