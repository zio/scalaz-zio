"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[81295],{35755:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"reference/error-management/operations/exposing-the-cause-in-the-success-channel","title":"Exposing the Cause in The Success Channel","description":"Using the ZIO#cause operation we can expose the cause, and then by using ZIO#uncause we can reverse this operation:","source":"@site/docs/reference/error-management/operations/exposing-the-cause-in-the-succcess-channel.md","sourceDirName":"reference/error-management/operations","slug":"/reference/error-management/operations/exposing-the-cause-in-the-success-channel","permalink":"/reference/error-management/operations/exposing-the-cause-in-the-success-channel","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/reference/error-management/operations/exposing-the-cause-in-the-succcess-channel.md","tags":[],"version":"current","frontMatter":{"id":"exposing-the-cause-in-the-success-channel","title":"Exposing the Cause in The Success Channel"},"sidebar":"reference-sidebar","previous":{"title":"Exposing Errors in The Success Channel","permalink":"/reference/error-management/operations/exposing-errors-in-the-success-channel"},"next":{"title":"Converting Defects to Failures","permalink":"/reference/error-management/operations/converting-defects-to-failures"}}');var r=s(74848),a=s(28453);const c={id:"exposing-the-cause-in-the-success-channel",title:"Exposing the Cause in The Success Channel"},o=void 0,i={},u=[];function p(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Using the ",(0,r.jsx)(n.code,{children:"ZIO#cause"})," operation we can expose the cause, and then by using ",(0,r.jsx)(n.code,{children:"ZIO#uncause"})," we can reverse this operation:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-scala",children:"trait ZIO[-R, +E, +A] {\n  def cause: URIO[R, Cause[E]]\n  def uncause[E1 >: E](implicit ev: A IsSubtypeOfOutput Cause[E1]): ZIO[R, E1, Unit]\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"In the following example, we expose and then untrace the underlying cause:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-scala",children:'import zio._\n\nobject MainApp extends ZIOAppDefault {\n  val f1: ZIO[Any, String, Int] =\n    ZIO.fail("Oh uh!").as(1)\n\n  val f2: ZIO[Any, String, Int] =\n    ZIO.fail("Oh error!").as(2)\n\n  val myApp: ZIO[Any, String, (Int, Int)] = f1 zipPar f2\n\n  def run = myApp.cause.map(_.untraced).debug\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Sometimes the ",(0,r.jsx)(n.a,{href:"/reference/error-management/operations/map-operations#ziomaperrorziomaperrorcause",children:(0,r.jsx)(n.code,{children:"ZIO#mapErrorCause"})})," operator is a better choice when we just want to map the underlying cause without exposing the cause."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>o});var t=s(96540);const r={},a=t.createContext(r);function c(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);