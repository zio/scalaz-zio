"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[29738],{28453:(e,o,n)=>{n.d(o,{R:()=>l,x:()=>g});var i=n(96540);const t={},r=i.createContext(t);function l(e){const o=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function g(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:o},e.children)}},45628:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>s,contentTitle:()=>g,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"zio-logging/log-filter","title":"Log Filter","description":"A LogFilter represents function/conditions for log filtering.","source":"@site/docs/zio-logging/log-filter.md","sourceDirName":"zio-logging","slug":"/zio-logging/log-filter","permalink":"/zio-logging/log-filter","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-logging/log-filter.md","tags":[],"version":"current","frontMatter":{"id":"log-filter","title":"Log Filter"},"sidebar":"ecosystem-sidebar","previous":{"title":"Logger Context and Annotations","permalink":"/zio-logging/logger-context-and-annotations"},"next":{"title":"Console Logger","permalink":"/zio-logging/console-logger"}}');var t=n(74848),r=n(28453);const l={id:"log-filter",title:"Log Filter"},g=void 0,s={},c=[{value:"Configuration",id:"configuration",level:2}];function a(e){const o={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(o.p,{children:["A ",(0,t.jsx)(o.code,{children:"LogFilter"})," represents function/conditions for log filtering."]}),"\n",(0,t.jsx)(o.p,{children:"Following filter"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-scala",children:'import zio.LogLevel\nimport zio.logging.LogFilter\n\nval filter = LogFilter.logLevelByName(\n    LogLevel.Debug,\n    "io.netty" -> LogLevel.Info, \n    "io.grpc.netty" -> LogLevel.Info,\n    "org.my.**.ServiceX" -> LogLevel.Trace, // glob-like (any paths) filter\n    "org.my.X*Layers" -> LogLevel.Info // glob-like (single or partial path) filter\n)\n'})}),"\n",(0,t.jsxs)(o.p,{children:["will use the ",(0,t.jsx)(o.code,{children:"Debug"})," log level for everything except for log events with the logger name\nprefixed by either ",(0,t.jsx)(o.code,{children:'List("io", "netty")'})," or ",(0,t.jsx)(o.code,{children:'List("io", "grpc", "netty")'})," or ",(0,t.jsx)(o.code,{children:'List("org", "my", "**", "ServiceX")'})," or ",(0,t.jsx)(o.code,{children:'List("org", "my", "X*Layers")'}),".\nLogger name is extracted from log annotation or ",(0,t.jsx)(o.code,{children:"zio.Trace"}),"."]}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"LogFilter.filter"})," returns a version of ",(0,t.jsx)(o.code,{children:"zio.ZLogger"})," that only logs messages when this filter is satisfied."]}),"\n",(0,t.jsx)(o.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsxs)(o.p,{children:["the configuration for filter (",(0,t.jsx)(o.code,{children:"zio.logging.LogFilter.LogLevelByNameConfig"}),") has the following configuration structure:"]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:'{\n    # LogLevel values: ALL, FATAL, ERROR, WARN, INFO, DEBUG, TRACE, OFF\n    \n    # root LogLevel, default value: INFO\n    rootLevel = DEBUG \n    \n    # LogLevel configurations for specific logger names, or prefixes, default value: empty\n    mappings {\n      "io.netty" = "INFO"\n      "io.grpc.netty" = "INFO"\n    }\n}\n'})}),"\n",(0,t.jsx)(o.p,{children:"this configuration is equivalent to following:"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-scala",children:'import zio.LogLevel\nimport zio.logging.LogFilter\n\nval config =\n  LogFilter.LogLevelByNameConfig(LogLevel.Debug, Map("io.netty" -> LogLevel.Info, "io.grpc.netty" -> LogLevel.Info))\n\nval filter = LogFilter.logLevelByName(config)    \n'})})]})}function d(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);