"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[63284],{24981:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"zio-telemetry/opentelemetry-instrumentation-example","title":"OpenTelemetry Automatic Instrumentation Example","description":"You can find the source code here.","source":"@site/docs/zio-telemetry/opentelemetry-instrumentation-example.md","sourceDirName":"zio-telemetry","slug":"/zio-telemetry/opentelemetry-instrumentation-example","permalink":"/zio-telemetry/opentelemetry-instrumentation-example","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-telemetry/opentelemetry-instrumentation-example.md","tags":[],"version":"current","frontMatter":{"id":"opentelemetry-instrumentation-example","title":"OpenTelemetry Automatic Instrumentation Example"},"sidebar":"ecosystem-sidebar","previous":{"title":"OpenTelemetry Example","permalink":"/zio-telemetry/opentelemetry-example"},"next":{"title":"ZIO Webhooks","permalink":"/zio-webhooks/"}}');var o=n(74848),a=n(28453);const s={id:"opentelemetry-instrumentation-example",title:"OpenTelemetry Automatic Instrumentation Example"},l=void 0,i={},p=[];function c(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["You can find the source code ",(0,o.jsx)(t.a,{href:"https://github.com/zio/zio-telemetry/tree/series/2.x/opentelemetry-instrumentation-example",children:"here"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["Firstly, we need to start the observability backends (",(0,o.jsx)(t.a,{href:"https://www.jaegertracing.io/",children:"Jaeger"})," and ",(0,o.jsx)(t.a,{href:"https://datalust.co/seq",children:"Seq"}),")"]}),"\n",(0,o.jsx)(t.p,{children:"Start Jaeger by running the following command:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"docker run --rm -it \\\n  -d \\\n  -e COLLECTOR_OTLP_ENABLED=true \\\n  -p 14250:14250 \\\n  -p 16686:16686 \\\n  -p 4317:4317 \\\n  jaegertracing/all-in-one:1.47\n"})}),"\n",(0,o.jsxs)(t.p,{children:["To run Seq, you also need to specify an admin password (user is ",(0,o.jsx)(t.code,{children:"admin"}),"):"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"PH=$(echo 'admin123' | docker run --rm -i datalust/seq config hash)\n\ndocker run \\\n  -d \\\n  --restart unless-stopped \\\n  -e ACCEPT_EULA=Y \\\n  -e SEQ_FIRSTRUN_ADMINPASSWORDHASH=\"$PH\" \\\n  -p 80:80 \\\n  -p 5341:5341 \\\n  datalust/seq\n"})}),"\n",(0,o.jsx)(t.p,{children:"After this, we can kick off our application to generate some metrics."}),"\n",(0,o.jsx)(t.p,{children:"For this, we have to download OpenTelemetry JVM agent JAR:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'OTEL_AGENT_PATH=$(cs fetch --classpath "io.opentelemetry.javaagent:opentelemetry-javaagent:latest.release")\n'})}),"\n",(0,o.jsx)(t.p,{children:"Then start the server application"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'sbt -J-javaagent:$OTEL_AGENT_PATH \\\n    -J-Dotel.service.name=example-server \\\n    -J-Dotel.traces.sampler=always_on \\\n    -J-Dotel.traces.exporter=otlp \\\n    -J-Dotel.logs.exporter=otlp \\\n    -J-Dotel.exporter.otlp.logs.protocol="http/protobuf" \\\n    -J-Dotel.exporter.otlp.logs.endpoint="http://localhost:5341/ingest/otlp/v1/logs" \\\n    -J-Dotel.metrics.exporter=none \\\n    "opentelemetryInstrumentationExample/runMain zio.telemetry.opentelemetry.instrumentation.example.ServerApp"\n'})}),"\n",(0,o.jsx)(t.p,{children:"and the client application which will send one request to the server application"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'sbt -J-javaagent:$OTEL_AGENT_PATH \\\n    -J-Dotel.service.name=example-client \\\n    -J-Dotel.traces.sampler=always_on \\\n    -J-Dotel.traces.exporter=otlp \\\n    -J-Dotel.metrics.exporter=none \\\n    "opentelemetryInstrumentationExample/runMain zio.telemetry.opentelemetry.instrumentation.example.ClientApp"\n'})}),"\n",(0,o.jsxs)(t.p,{children:["Head over to ",(0,o.jsx)(t.a,{href:"http://localhost:16686/",children:"Jaeger UI"})," and ",(0,o.jsx)(t.a,{href:"http://localhost:80/",children:"Seq UI"})," to see the result."]})]})}function m(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>l});var r=n(96540);const o={},a=r.createContext(o);function s(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);