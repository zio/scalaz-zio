"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[24548],{28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var r=n(96540);const o={},i=r.createContext(o);function s(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:t},e.children)}},66347:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"zio-http/examples/server-sent-events-in-endpoints","title":"Server Sent Events in Endpoints Example","description":"","source":"@site/docs/zio-http/examples/server-sent-events-in-endpoints.md","sourceDirName":"zio-http/examples","slug":"/zio-http/examples/server-sent-events-in-endpoints","permalink":"/zio-http/examples/server-sent-events-in-endpoints","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-http/examples/server-sent-events-in-endpoints.md","tags":[],"version":"current","frontMatter":{"id":"server-sent-events-in-endpoints","title":"Server Sent Events in Endpoints Example","sidebar_label":"Server Sent Events in Endpoints"},"sidebar":"ecosystem-sidebar","previous":{"title":"Multipart Form Data","permalink":"/zio-http/examples/multipart-form-data"},"next":{"title":"FAQ","permalink":"/zio-http/faq"}}');var o=n(74848),i=n(28453);const s={id:"server-sent-events-in-endpoints",title:"Server Sent Events in Endpoints Example",sidebar_label:"Server Sent Events in Endpoints"},a=void 0,p={},d=[];function c(e){const t={code:"code",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-scala",metastring:'title="zio-http-example/src/main/scala/example/ServerSentEventEndpoint.scala" ',children:'package example\n\nimport java.time.LocalDateTime\nimport java.time.format.DateTimeFormatter.ISO_LOCAL_TIME\n\nimport zio._\n\nimport zio.stream.ZStream\n\nimport zio.http._\nimport zio.http.codec._\nimport zio.http.endpoint._\n\nobject ServerSentEventEndpoint extends ZIOAppDefault {\n\n  val sseEndpoint: Endpoint[Unit, Unit, ZNothing, ZStream[Any, Nothing, ServerSentEvent[String]], AuthType.None] =\n    Endpoint(Method.GET / "sse")\n      .outStream[ServerSentEvent[String]](MediaType.text.`event-stream`)\n      .inCodec(HttpCodec.header(Header.Accept).const(Header.Accept(MediaType.text.`event-stream`)))\n\n  val stream: ZStream[Any, Nothing, ServerSentEvent[String]] =\n    ZStream.repeatWithSchedule(ServerSentEvent(ISO_LOCAL_TIME.format(LocalDateTime.now)), Schedule.spaced(1.second))\n\n  val sseRoute = sseEndpoint.implementHandler(Handler.succeed(stream))\n\n  val routes: Routes[Any, Response] =\n    sseRoute.toRoutes @@ Middleware.requestLogging(logRequestBody = true) @@ Middleware.debug\n\n  override def run = {\n    Server.serve(routes).provide(Server.default)\n  }\n\n}\n\nobject ServerSentEventEndpointClient extends ZIOAppDefault {\n  val locator: EndpointLocator = EndpointLocator.fromURL(url"http://localhost:8080")\n\n  private val invocation\n    : Invocation[Unit, Unit, ZNothing, ZStream[Any, Nothing, ServerSentEvent[String]], AuthType.None] =\n    ServerSentEventEndpoint.sseEndpoint(())\n\n  override def run =\n    ZIO\n      .scoped(for {\n        client <- ZIO.service[Client]\n        executor = EndpointExecutor(client, locator)\n        stream <- executor(invocation)\n        _      <- stream.foreach(event => ZIO.logInfo(event.data))\n      } yield ())\n      .provide(ZClient.default)\n}\n'})})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}}}]);