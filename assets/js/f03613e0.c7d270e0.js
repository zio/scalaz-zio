"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[88097],{85197:(e,i,o)=>{o.r(i),o.d(i,{assets:()=>g,contentTitle:()=>r,default:()=>c,frontMatter:()=>t,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"zio-logging/index","title":"Introduction to ZIO Logging","description":"ZIO Logging is simple logging for ZIO apps, with correlation, context, and pluggable backends out of the box with integrations for common logging backends.","source":"@site/docs/zio-logging/index.md","sourceDirName":"zio-logging","slug":"/zio-logging/","permalink":"/zio-logging/","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-logging/index.md","tags":[],"version":"current","frontMatter":{"id":"index","title":"Introduction to ZIO Logging","sidebar_label":"Introduction"},"sidebar":"ecosystem-sidebar","previous":{"title":"ZIO Lambda","permalink":"/zio-lambda/"},"next":{"title":"Formatting Log Records","permalink":"/zio-logging/formatting-log-records"}}');var s=o(74848),l=o(28453);const t={id:"index",title:"Introduction to ZIO Logging",sidebar_label:"Introduction"},r=void 0,g={},a=[{value:"Introduction",id:"introduction",level:2},{value:"Installation",id:"installation",level:2},{value:"Example",id:"example",level:2}];function d(e){const i={a:"a",code:"code",em:"em",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"https://github.com/zio/zio-logging",children:"ZIO Logging"})," is simple logging for ZIO apps, with correlation, context, and pluggable backends out of the box with integrations for common logging backends."]}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"https://github.com/zio/zio/wiki/Project-Stages",children:(0,s.jsx)(i.img,{src:"https://img.shields.io/badge/Project%20Stage-Production%20Ready-brightgreen.svg",alt:"Production Ready"})})," ",(0,s.jsx)(i.img,{src:"https://github.com/zio/zio-logging/workflows/CI/badge.svg",alt:"CI Badge"})," ",(0,s.jsx)(i.a,{href:"https://oss.sonatype.org/content/repositories/releases/dev/zio/zio-logging_2.13/",children:(0,s.jsx)(i.img,{src:"https://img.shields.io/nexus/r/https/oss.sonatype.org/dev.zio/zio-logging_2.13.svg?label=Sonatype%20Release",alt:"Sonatype Releases"})})," ",(0,s.jsx)(i.a,{href:"https://oss.sonatype.org/content/repositories/snapshots/dev/zio/zio-logging_2.13/",children:(0,s.jsx)(i.img,{src:"https://img.shields.io/nexus/s/https/oss.sonatype.org/dev.zio/zio-logging_2.13.svg?label=Sonatype%20Snapshot",alt:"Sonatype Snapshots"})})," ",(0,s.jsx)(i.a,{href:"https://javadoc.io/doc/dev.zio/zio-logging-docs_2.13",children:(0,s.jsx)(i.img,{src:"https://javadoc.io/badge2/dev.zio/zio-logging-docs_2.13/javadoc.svg",alt:"javadoc"})})," ",(0,s.jsx)(i.a,{href:"https://github.com/zio/zio-logging",children:(0,s.jsx)(i.img,{src:"https://img.shields.io/github/stars/zio/zio-logging?style=social",alt:"zio-logging"})})]}),"\n",(0,s.jsx)(i.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsx)(i.p,{children:"When we are writing our applications using ZIO effects, to log easy way we need a ZIO native solution for logging."}),"\n",(0,s.jsx)(i.p,{children:"Key features of ZIO Logging:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"ZIO Native"})," \u2014 Other than it is a type-safe and purely functional solution, it leverages ZIO's features."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Multi-Platform"})," - It supports both JVM and JS platforms."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Composable"})," \u2014 Loggers are composable together via contraMap."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Pluggable Backends"})," \u2014 Support multiple backends like ZIO Console, SLF4j, JPL."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Logger Context"})," \u2014 It has a first citizen ",(0,s.jsx)(i.em,{children:"Logger Context"})," implemented on top of ",(0,s.jsx)(i.code,{children:"FiberRef"}),". The Logger Context maintains information like logger name, filters, correlation id, and so forth across different fibers. It supports ",(0,s.jsx)(i.em,{children:"Mapped Diagnostic Context (MDC)"})," which manages contextual information across fibers in a concurrent environment."]}),"\n",(0,s.jsx)(i.li,{children:"Richly integrated into ZIO 2's built-in logging facilities"}),"\n",(0,s.jsx)(i.li,{children:"ZIO Console, SLF4j, and other backends"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsxs)(i.p,{children:["In order to use this library, we need to add the following line in our ",(0,s.jsx)(i.code,{children:"build.sbt"})," file:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-scala",children:'// ZIO Logging backends\nlibraryDependencies += "dev.zio" %% "zio-logging" % "2.4.0"\n'})}),"\n",(0,s.jsx)(i.p,{children:"The main module contains the following features:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/zio-logging/console-logger",children:"console loggers"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/zio-logging/file-logger",children:"file loggers"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/zio-logging/metrics",children:"log metrics"})}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Other modules:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:["SLF4J backend - if you like to use ",(0,s.jsx)(i.a,{href:"https://www.slf4j.org/",children:(0,s.jsx)(i.code,{children:"SLF4J"})})," logging backends (e.g. java.util.logging, logback, log4j), add the one of following lines to your ",(0,s.jsx)(i.code,{children:"build.sbt"})," file:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-scala",children:'// SLF4j v1 integration\nlibraryDependencies += "dev.zio" %% "zio-logging-slf4j" % "2.4.0"\n\n// SLF4j v2 integration\nlibraryDependencies += "dev.zio" %% "zio-logging-slf4j2" % "2.4.0"\n'})}),"\n",(0,s.jsxs)(i.p,{children:["When to use this module: you are already using SLF4J logger in some other project, and you like to have same log outputs.\nSee SLF4J ",(0,s.jsx)(i.a,{href:"/zio-logging/slf4j2",children:"v2"})," or ",(0,s.jsx)(i.a,{href:"/zio-logging/slf4j1",children:"v1"})," section for more details."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:["SLF4J bridge - with this logging bridge, it is possible to use ",(0,s.jsx)(i.code,{children:"zio-logging"})," for SLF4J loggers (usually third-party non-ZIO libraries), add the one of following lines to your ",(0,s.jsx)(i.code,{children:"build.sbt"})," file:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-scala",children:'// Using ZIO Logging for SLF4j v1 loggers, usually third-party non-ZIO libraries\nlibraryDependencies += "dev.zio" %% "zio-logging-slf4j-bridge" % "2.4.0"\n\n// Using ZIO Logging for SLF4j v2 loggers, usually third-party non-ZIO libraries\nlibraryDependencies += "dev.zio" %% "zio-logging-slf4j2-bridge" % "2.4.0"\n'})}),"\n",(0,s.jsxs)(i.p,{children:["When to use this module: you want to use some zio-logger implementation, but also you are using some java library which using SLF4J interface for logging.\nSee SLF4J bridge ",(0,s.jsx)(i.a,{href:"/zio-logging/slf4j2-bridge",children:"v2"})," or ",(0,s.jsx)(i.a,{href:"/zio-logging/slf4j1-bridge",children:"v1"})," section for more details."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:["Java Platform/System Logger backend - if you like to use  ",(0,s.jsx)(i.a,{href:"https://openjdk.org/jeps/264",children:(0,s.jsx)(i.code,{children:"Java Platform/System Logger"})})," logging backend, add the following line to your ",(0,s.jsx)(i.code,{children:"build.sbt"})," file:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-scala",children:'// JPL integration\nlibraryDependencies += "dev.zio" %% "zio-logging-jpl" % "2.4.0"\n'})}),"\n",(0,s.jsxs)(i.p,{children:["When to use this module: you are already using Java Platform/System Logger in some other project, and you like to have same log outputs.\nSee ",(0,s.jsx)(i.a,{href:"/zio-logging/jpl",children:"Java Platform/System Logger"})," section for more details."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:["java.util.logging bridge - with this logging bridge, it is possible to use ",(0,s.jsx)(i.code,{children:"zio-logging"})," for JUL loggers (usually third-party non-ZIO libraries), add the one of following lines to your ",(0,s.jsx)(i.code,{children:"build.sbt"})," file:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-scala",children:'// JUL bridge\nlibraryDependencies += "dev.zio" %% "zio-logging-jul-bridge" % "2.4.0"\n'})}),"\n",(0,s.jsxs)(i.p,{children:["When to use this module: you are already using JUL logger in some other project, and you like to have same log outputs.\nSee ",(0,s.jsx)(i.a,{href:"/zio-logging/jul-bridge",children:"java.util.logging bridge"})," section for more details."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(i.p,{children:"Let's try an example of ZIO Logging which demonstrates a simple application of ZIO logging."}),"\n",(0,s.jsx)(i.p,{children:"The recommended place for setting the logger is application boostrap. In this case, custom logger will be set for whole application runtime (also application failures will be logged with specified logger)."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-scala",children:'package zio.logging.example\n\nimport zio.logging.consoleLogger\nimport zio.{ ExitCode, Runtime, Scope, ZIO, ZIOAppArgs, ZIOAppDefault, ZLayer }\n\nobject SimpleApp extends ZIOAppDefault {\n\n  override val bootstrap: ZLayer[ZIOAppArgs, Any, Any] =\n    Runtime.removeDefaultLoggers >>> consoleLogger()\n\n  override def run: ZIO[Scope, Any, ExitCode] =\n    for {\n      _ <- ZIO.logInfo("Start")\n      _ <- ZIO.fail("FAILURE")\n      _ <- ZIO.logInfo("Done")\n    } yield ExitCode.success\n\n}\n'})}),"\n",(0,s.jsx)(i.p,{children:"Expected console output:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:'timestamp=2023-03-15T08:36:24.421098+01:00 level=INFO thread=zio-fiber-4 message="Start"\ntimestamp=2023-03-15T08:36:24.440181+01:00 level=ERROR thread=zio-fiber-0 message="" cause=Exception in thread "zio-fiber-4" java.lang.String: FAILURE\n\tat zio.logging.example.SimpleApp.run(SimpleApp.scala:29)\n'})}),"\n",(0,s.jsxs)(i.p,{children:["You can find the source code of examples ",(0,s.jsx)(i.a,{href:"https://github.com/zio/zio-logging/tree/master/examples",children:"here"})]})]})}function c(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,i,o)=>{o.d(i,{R:()=>t,x:()=>r});var n=o(96540);const s={},l=n.createContext(s);function t(e){const i=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),n.createElement(l.Provider,{value:i},e.children)}}}]);