"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[61560],{41084:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"zio-telemetry/opentelemetry-example","title":"OpenTelemetry Example","description":"You can find the source code here.","source":"@site/docs/zio-telemetry/opentelemetry-example.md","sourceDirName":"zio-telemetry","slug":"/zio-telemetry/opentelemetry-example","permalink":"/zio-telemetry/opentelemetry-example","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-telemetry/opentelemetry-example.md","tags":[],"version":"current","frontMatter":{"id":"opentelemetry-example","title":"OpenTelemetry Example"},"sidebar":"ecosystem-sidebar","previous":{"title":"OpenTelemetry ZIO Logging","permalink":"/zio-telemetry/opentelemetry-zio-logging"},"next":{"title":"OpenTelemetry Automatic Instrumentation Example","permalink":"/zio-telemetry/opentelemetry-instrumentation-example"}}');var s=n(74848),o=n(28453);const l={id:"opentelemetry-example",title:"OpenTelemetry Example"},a="Run",i={},c=[{value:"Print OTEL signals to console",id:"print-otel-signals-to-console",level:2},{value:"Publish OTEL signals to other observability platforms",id:"publish-otel-signals-to-other-observability-platforms",level:2},{value:"Publish OTEL signals to Jaeger and Seq",id:"publish-otel-signals-to-jaeger-and-seq",level:2}];function p(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["You can find the source code ",(0,s.jsx)(t.a,{href:"https://github.com/zio/zio-telemetry/tree/series/2.x/opentelemetry-example",children:"here"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["For an explanation in more detail, check the ",(0,s.jsx)(t.a,{href:"/zio-telemetry/opentracing-example",children:"OpenTracing Example"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["We're going to show an example of how to pass contextual information using ",(0,s.jsx)(t.a,{href:"https://opentelemetry.io/docs/concepts/signals/baggage/",children:"Baggage"})," and collect traces, metrics, and logs."]}),"\n",(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"run",children:"Run"})}),"\n",(0,s.jsx)(t.h2,{id:"print-otel-signals-to-console",children:"Print OTEL signals to console"}),"\n",(0,s.jsxs)(t.p,{children:["By default the example code uses ",(0,s.jsx)(t.a,{href:"https://github.com/open-telemetry/opentelemetry-java/tree/main/exporters/logging-otlp",children:"OTLP Logging Exporters"})," to print all signals to stdout in OTLP JSON encoding. This means that you can run the application immediately and observe the results."]}),"\n",(0,s.jsx)(t.p,{children:"For this, you need to run proxy and backend parts of application in different terminals via sbt."}),"\n",(0,s.jsx)(t.p,{children:"Run proxy:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'sbt "opentelemetryExample/runMain zio.telemetry.opentelemetry.example.ProxyApp"\n'})}),"\n",(0,s.jsx)(t.p,{children:"Run backend:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'sbt "opentelemetryExample/runMain zio.telemetry.opentelemetry.example.BackendApp"\n'})}),"\n",(0,s.jsx)(t.p,{children:"Now perform the following request to see the results immediately:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"curl -X GET http://localhost:8080/statuses\n"})}),"\n",(0,s.jsx)(t.h2,{id:"publish-otel-signals-to-other-observability-platforms",children:"Publish OTEL signals to other observability platforms"}),"\n",(0,s.jsxs)(t.p,{children:["In case you want to try different observability platforms such as ",(0,s.jsx)(t.a,{href:"https://www.jaegertracing.io/",children:"Jaeger"}),", ",(0,s.jsx)(t.a,{href:"https://fluentbit.io/",children:"Fluentbit"}),", ",(0,s.jsx)(t.a,{href:"https://datalust.co/seq",children:"Seq"}),", ",(0,s.jsx)(t.a,{href:"https://www.datadoghq.com/",children:"DataDog"}),", ",(0,s.jsx)(t.a,{href:"https://www.honeycomb.io/",children:"Honeycomb"})," or others, please change the ",(0,s.jsx)(t.a,{href:"https://github.com/zio/zio-telemetry/blob/series/2.x/opentelemetry-example/src/main/scala/zio/telemetry/opentelemetry/example/otel/OtelSdk.scala",children:"OtelSdk.scala"})," file by choosing from the available tracer, meter, and logger providers or by implementing your own."]}),"\n",(0,s.jsx)(t.h2,{id:"publish-otel-signals-to-jaeger-and-seq",children:"Publish OTEL signals to Jaeger and Seq"}),"\n",(0,s.jsxs)(t.p,{children:["We chose ",(0,s.jsx)(t.a,{href:"https://www.jaegertracing.io/",children:"Jaeger"})," for distributed traces and ",(0,s.jsx)(t.a,{href:"https://datalust.co/seq",children:"Seq"})," to store logs to demonstrate how the library works with available open-source observability platforms."]}),"\n",(0,s.jsx)(t.p,{children:"Start Jaeger by running the following command:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"docker run --rm -it \\\n  -d \\\n  -e COLLECTOR_OTLP_ENABLED=true \\\n  -p 4317:4317 \\\n  -p 16686:16686 \\\n  jaegertracing/all-in-one:1.47\n"})}),"\n",(0,s.jsxs)(t.p,{children:["To run Seq, you also need to specify an admin password (user is ",(0,s.jsx)(t.code,{children:"admin"}),"):"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"PH=$(echo 'admin123' | docker run --rm -i datalust/seq config hash)\n\ndocker run \\\n  -d \\\n  --restart unless-stopped \\\n  -e ACCEPT_EULA=Y \\\n  -e SEQ_FIRSTRUN_ADMINPASSWORDHASH=\"$PH\" \\\n  -p 80:80 \\\n  -p 5341:5341 \\\n  datalust/seq\n"})}),"\n",(0,s.jsxs)(t.p,{children:["You must also switch the Tracing and Logging providers to Jaeger and Seq. For this, you need to swap the ",(0,s.jsx)(t.code,{children:"stdout"})," providers we use by default in ",(0,s.jsx)(t.a,{href:"https://github.com/zio/zio-telemetry/blob/series/2.x/opentelemetry-example/src/main/scala/zio/telemetry/opentelemetry/example/otel/OtelSdk.scala#L10",children:"OtelSdk.scala"})," to ",(0,s.jsx)(t.a,{href:"https://github.com/zio/zio-telemetry/blob/series/2.x/opentelemetry-example/src/main/scala/zio/telemetry/opentelemetry/example/otel/TracerProvider.scala#L37",children:"TracerProvider.jaeger"})," and ",(0,s.jsx)(t.a,{href:"https://github.com/zio/zio-telemetry/blob/series/2.x/opentelemetry-example/src/main/scala/zio/telemetry/opentelemetry/example/otel/LoggerProvider.scala#L36",children:"LoggerProvider.seq"})]}),"\n",(0,s.jsxs)(t.p,{children:["Run the application and fire a curl request as shown above. Head over to ",(0,s.jsx)(t.a,{href:"http://localhost:16686/",children:"Jaeger UI"})," and ",(0,s.jsx)(t.a,{href:"http://localhost:80/",children:"Seq UI"})," to see the result."]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>a});var r=n(96540);const s={},o=r.createContext(s);function l(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);