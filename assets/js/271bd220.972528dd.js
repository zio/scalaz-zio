"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[68955],{1378:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"zio-dynamodb/guides/ce-interop","title":"Cats Effect Interop","description":"The zio-dynamodb-ce cats effect interop module provides a way to use ZIO DynamoDB with Cats Effect 3 with minimal","source":"@site/docs/zio-dynamodb/guides/ce-interop.md","sourceDirName":"zio-dynamodb/guides","slug":"/zio-dynamodb/guides/ce-interop","permalink":"/zio-dynamodb/guides/ce-interop","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-dynamodb/guides/ce-interop.md","tags":[],"version":"current","frontMatter":{"id":"ce-interop","title":"Cats Effect Interop"},"sidebar":"ecosystem-sidebar","previous":{"title":"Testing ZIO DynamoDB Applications","permalink":"/zio-dynamodb/guides/testing"},"next":{"title":"High Level API","permalink":"/zio-dynamodb/reference/hi-level-api/"}}');var i=o(74848),r=o(28453);const a={id:"ce-interop",title:"Cats Effect Interop"},s=void 0,c={},d=[{value:"Usage",id:"usage",level:2},{value:"Example",id:"example",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"zio-dynamodb-ce"})})," cats effect interop module provides a way to use ZIO DynamoDB with Cats Effect 3 with minimal\neffort."]}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:["Add the following line to your ",(0,i.jsx)(n.code,{children:"build.sbt"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:'libraryDependencies ++= Seq(\n  "dev.zio" %% "zio-dynamodb-ce" % "1.0.0-RC18"\n)\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The entry points are the ",(0,i.jsx)(n.code,{children:"DynamoDBExecutorF.of"})," and ",(0,i.jsx)(n.code,{children:"DynamoDBExecutorF.ofCustomised"})," constructors which provide a ",(0,i.jsx)(n.code,{children:"Resource"})," managed\n",(0,i.jsx)(n.code,{children:"DynamoDBExecutorF"})," instance. Once we have this instance in implicit scope we can use the extension method ",(0,i.jsx)(n.code,{children:"executeToF"}),"\nto run the queries. Queries that would normally return a ",(0,i.jsx)(n.code,{children:"ZIO"})," effect now return a ",(0,i.jsx)(n.code,{children:"F"})," effect, and queries that would\nnormally return a ",(0,i.jsx)(n.code,{children:"ZStream"})," now return an FS2 ",(0,i.jsx)(n.code,{children:"Stream"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:'package zio.dynamodb.examples.dynamodblocal.interop\n\nimport software.amazon.awssdk.auth.credentials.AwsBasicCredentials\nimport software.amazon.awssdk.auth.credentials.StaticCredentialsProvider\nimport software.amazon.awssdk.regions.Region\nimport zio.dynamodb.DynamoDBQuery.{ createTable, deleteTable, get, put }\n\nimport cats.effect.std.Console\nimport cats.effect.IO\nimport cats.effect.IOApp\nimport cats.syntax.all._\n\nimport java.net.URI\n\nimport zio.dynamodb.interop.ce.syntax._\nimport zio.dynamodb.ProjectionExpression\nimport zio.schema.DeriveSchema\nimport zio.schema.Schema\nimport zio.dynamodb.KeySchema\nimport zio.dynamodb.BillingMode\nimport zio.dynamodb.AttributeDefinition\nimport zio.dynamodb.DynamoDBQuery\nimport cats.effect.kernel.Async\n\n/**\n * example cats effect interop application\n *\n * to run in the sbt console:\n * {{{\n * zio-dynamodb-examples/runMain zio.dynamodb.examples.dynamodblocal.interop.CeInteropExample\n * }}}\n */\nobject CeInteropExample extends IOApp.Simple {\n\n  final case class Person(id: String, name: String)\n  object Person {\n    implicit val schema: Schema.CaseClass2[String, String, Person] = DeriveSchema.gen[Person]\n    val (id, name)                                                 = ProjectionExpression.accessors[Person]\n  }\n\n  def program[F[_]](implicit F: Async[F]) = {\n    val console = Console.make[F]\n\n    for {\n      _ <- DynamoDBExceutorF\n             .ofCustomised[F] { builder => // note only AWS SDK model is exposed here, not zio.aws\n               builder\n                 .endpointOverride(URI.create("http://localhost:8000"))\n                 .region(Region.US_EAST_1)\n                 .credentialsProvider(StaticCredentialsProvider.create(AwsBasicCredentials.create("dummy", "dummy")))\n             }\n             .use { implicit dynamoDBExecutorF => // To use extension method "executeToF" we need implicit here\n               for {\n                 _         <- createTable("Person", KeySchema("id"), BillingMode.PayPerRequest)(\n                                AttributeDefinition.attrDefnString("id")\n                              ).executeToF\n                 _         <- put(tableName = "Person", Person(id = "avi", name = "Avinder")).executeToF\n                 result    <- get(tableName = "Person")(Person.id.partitionKey === "avi").executeToF\n                 _         <- console.println(s"found=$result")\n                 fs2Stream <- DynamoDBQuery\n                                .scanAll[Person](tableName = "Person")\n                                .parallel(50) // server side parallel scan\n                                .filter(Person.name.beginsWith("Avi") && Person.name.contains("de"))\n                                .executeToF\n                 _         <- fs2Stream.evalTap(person => console.println(s"person=$person")).compile.drain\n                 _         <- deleteTable("Person").executeToF\n               } yield ()\n             }\n    } yield ()\n  }\n\n  val run = program[IO]\n}\n'})})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>s});var t=o(96540);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);