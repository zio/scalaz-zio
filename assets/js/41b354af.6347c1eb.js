"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[10321],{35065:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"zio-aws/wrappers","title":"Wrappers","description":"Service modules","source":"@site/docs/zio-aws/wrappers.md","sourceDirName":"zio-aws","slug":"/zio-aws/wrappers","permalink":"/zio-aws/wrappers","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-aws/wrappers.md","tags":[],"version":"current","frontMatter":{"id":"wrappers","title":"Wrappers"},"sidebar":"ecosystem-sidebar","previous":{"title":"Artifacts","permalink":"/zio-aws/artifacts"},"next":{"title":"Configuration","permalink":"/zio-aws/configuration"}}');var s=r(74848),t=r(28453);const i={id:"wrappers",title:"Wrappers"},l="Client wrappers",o={},c=[{value:"Service modules",id:"service-modules",level:3},{value:"Operations",id:"operations",level:3},{value:"Model wrappers",id:"model-wrappers",level:3},{value:"Mocks",id:"mocks",level:3}];function d(e){const a={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.header,{children:(0,s.jsx)(a.h1,{id:"client-wrappers",children:"Client wrappers"})}),"\n",(0,s.jsx)(a.h3,{id:"service-modules",children:"Service modules"}),"\n",(0,s.jsxs)(a.p,{children:["For each AWS Service the library defines a ",(0,s.jsx)(a.em,{children:"ZIO service"})," with wrapper functions for all the ",(0,s.jsx)(a.em,{children:"operations"}),", a ",(0,s.jsx)(a.code,{children:"live"}),"\nimplementation calling the Java SDK and a ",(0,s.jsx)(a.code,{children:"mock"})," implementation using ",(0,s.jsx)(a.a,{href:"https://github.com/zio/zio-mock",children:"zio-mock"}),"."]}),"\n",(0,s.jsxs)(a.p,{children:["The live implementation depends on a core ",(0,s.jsx)(a.em,{children:"AWS configuration layer"}),":"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-scala",children:"val live: ZLayer[AwsConfig, Throwable, Ec2]\n"})}),"\n",(0,s.jsxs)(a.p,{children:["The ",(0,s.jsx)(a.code,{children:"AwsConfig"})," layer defines how each service's async Java client gets configured, including the http client which is\nprovided by another layer ",(0,s.jsx)(a.code,{children:"AwsConfig"})," is depending on."]}),"\n",(0,s.jsxs)(a.p,{children:["Each module has accessor functions for ",(0,s.jsx)(a.em,{children:"all operations"})," of the given service."]}),"\n",(0,s.jsx)(a.h3,{id:"operations",children:"Operations"}),"\n",(0,s.jsx)(a.p,{children:"For simple request-response operations the library generates a very light wrapper:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-scala",children:"def deleteVolume(request: DeleteVolumeRequest): ZIO[Ec2, AwsError, DeleteVolumeResponse.ReadOnly]\n"})}),"\n",(0,s.jsxs)(a.p,{children:["For operations where either the input or the output or both are ",(0,s.jsx)(a.em,{children:"byte streams"}),", a ",(0,s.jsx)(a.code,{children:"ZStream"})," wrapper is generated:"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-scala",children:"def getObject(request: GetObjectRequest): ZIO[S3, AwsError, StreamingOutputResult[Any, GetObjectResponse.ReadOnly, Byte]]\ndef putObject(request: PutObjectRequest, body: ZStream[Any, AwsError, Byte]): ZIO[S3, AwsError, PutObjectResponse.ReadOnly]\n"})}),"\n",(0,s.jsx)(a.p,{children:"where the output is a stream packed together with additional response data:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-scala",children:"case class StreamingOutputResult[R, Response, Item](\n  response: Response,\n  output: ZStream[R, AwsError, Item]\n)\n"})}),"\n",(0,s.jsxs)(a.p,{children:["For operations with ",(0,s.jsx)(a.em,{children:"event streams"})," a ",(0,s.jsx)(a.code,{children:"ZStream"})," of a model type gets generated:"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-scala",children:"def startStreamTranscription(request: StartStreamTranscriptionRequest, input: ZStream[Any, AwsError, AudioStream]): ZStream[TranscribeStreaming, AwsError, TranscriptEvent.ReadOnly]\n"})}),"\n",(0,s.jsxs)(a.p,{children:["And for all operations that supports ",(0,s.jsx)(a.em,{children:"pagination"}),", streaming wrappers gets generated:"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-scala",children:"def scan(request: ScanRequest): ZStream[DynamoDb, AwsError, Map[AttributeName, AttributeValue.ReadOnly]]\n"})}),"\n",(0,s.jsxs)(a.p,{children:["Note that for event streaming or paginating operations returning a ",(0,s.jsx)(a.code,{children:"ZStream"})," the actual AWS call happens when the stream gets pulled."]}),"\n",(0,s.jsxs)(a.p,{children:["For use cases when calling the ",(0,s.jsx)(a.em,{children:"paginating"})," interface directly is necessary - for example when forwarding paginated results through a HTTP API, the library generates non-streaming wrappers as well for these methods."]}),"\n",(0,s.jsxs)(a.p,{children:["For example the DynamoDB ",(0,s.jsx)(a.code,{children:"scan"})," method's non-streaming variant is defined as:"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-scala",children:"def scanPaginated(request: ScanRequest): ZIO[DynamoDb, ScanResponse.ReadOnly]\n"})}),"\n",(0,s.jsx)(a.h3,{id:"model-wrappers",children:"Model wrappers"}),"\n",(0,s.jsx)(a.p,{children:"For each model type a set of wrappers are generated, providing the following functionality:"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["Case classes with default parameter values instead of the ",(0,s.jsx)(a.em,{children:"builder pattern"})]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.a,{href:"https://zio.github.io/zio-prelude/docs/newtypes/",children:"zio-prelude's newtype wrappers"})," for primitive types"]}),"\n",(0,s.jsx)(a.li,{children:"Automatic conversion to Scala collection types"}),"\n",(0,s.jsx)(a.li,{children:"ADTs instead of the Java enums"}),"\n",(0,s.jsx)(a.li,{children:'ZIO getter functions to "get or fail" the optional model fields'}),"\n",(0,s.jsxs)(a.li,{children:["Using zio-prelude's ",(0,s.jsx)(a.code,{children:"Optional"})," type to eliminate boilerplate when constructing models with many optional fields"]}),"\n"]}),"\n",(0,s.jsxs)(a.p,{children:["The following example from the ",(0,s.jsx)(a.code,{children:"zio-aws-elasticsearch"})," library shows how the generated case classes look like, to be used as input for the service operations:"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-scala",children:"case class DescribePackagesFilter(name: Optional[DescribePackagesFilterName] = Optional.Absent, \n                                  value: Optional[Iterable[primitives.DescribePackagesFilterValue]] = Optional.Absent) {\n    def buildAwsValue(): software.amazon.awssdk.services.elasticsearch.model.DescribePackagesFilter = {\n      import DescribePackagesFilter.zioAwsBuilderHelper.BuilderOps\n      software.amazon.awssdk.services.elasticsearch.model.DescribePackagesFilter\n        .builder()\n        .optionallyWith(name.map(value => value.unwrap))(_.name)\n        .optionallyWith(value.map(value => value.map { item => item: java.lang.String }.asJava))(_.value)\n        .build()\n    }\n\n    def asReadOnly: DescribePackagesFilter.ReadOnly = DescribePackagesFilter.wrap(buildAwsValue())\n}\n"})}),"\n",(0,s.jsxs)(a.p,{children:["When processing the ",(0,s.jsx)(a.em,{children:"results"})," of the operations (either directly or though the ",(0,s.jsx)(a.code,{children:"ZStream"})," wrappers), the AWS Java model types are wrapped\nby a ",(0,s.jsx)(a.em,{children:"read-only wrapper interface"}),". The following example shows one from the ",(0,s.jsx)(a.code,{children:"transcribe"})," module:"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-scala",children:'object CreateMedicalVocabularyResponse {\n  private lazy val zioAwsBuilderHelper: BuilderHelper[software.amazon.awssdk.services.transcribe.model.CreateMedicalVocabularyResponse] = BuilderHelper.apply\n\n  trait ReadOnly {\n    def editable: CreateMedicalVocabularyResponse = CreateMedicalVocabularyResponse(vocabularyNameValue.map(value => value), languageCodeValue.map(value => value), vocabularyStateValue.map(value => value), lastModifiedTimeValue.map(value => value), failureReasonValue.map(value => value))\n    def vocabularyName: Optional[VocabularyName]\n    def languageCode: Optional[LanguageCode]\n    def vocabularyState: Optional[VocabularyState]\n    def lastModifiedTime: Optional[DateTime]\n    def failureReason: Optional[FailureReason]\n    def getVocabularyName: ZIO[Any, AwsError, VocabularyName] = AwsError.unwrapOptionField("vocabularyName", vocabularyNameValue)\n    def getLanguageCode: ZIO[Any, AwsError, LanguageCode] = AwsError.unwrapOptionField("languageCode", languageCodeValue)\n    def getVocabularyState: ZIO[Any, AwsError, VocabularyState] = AwsError.unwrapOptionField("vocabularyState", vocabularyStateValue)\n    def getLastModifiedTime: ZIO[Any, AwsError, DateTime] = AwsError.unwrapOptionField("lastModifiedTime", lastModifiedTimeValue)\n    def getFailureReason: ZIO[Any, AwsError, FailureReason] = AwsError.unwrapOptionField("failureReason", failureReasonValue)\n  }\n\n  private class Wrapper(impl: software.amazon.awssdk.services.transcribe.model.CreateMedicalVocabularyResponse) extends CreateMedicalVocabularyResponse.ReadOnly {\n    // ... implements the ReadOnly interface by querying the underlying Java object\n  }\n\n  def wrap(impl: software.amazon.awssdk.services.transcribe.model.CreateMedicalVocabularyResponse): ReadOnly = new Wrapper(impl)\n}\n'})}),"\n",(0,s.jsxs)(a.p,{children:["As a large part of the models in the AWS SDK are defined as ",(0,s.jsx)(a.em,{children:"optional"}),", the generated wrapper also contains ZIO accessor functions,\nwhich lift the option value to make it more comfortable to chain the AWS operations."]}),"\n",(0,s.jsx)(a.h3,{id:"mocks",children:"Mocks"}),"\n",(0,s.jsxs)(a.p,{children:["Each module also contains generated ",(0,s.jsx)(a.a,{href:"https://github.com/zio/zio-mock",children:(0,s.jsx)(a.em,{children:"ZIO Test mocks"})})," for the given service."]}),"\n",(0,s.jsxs)(a.p,{children:["The following example shows how to use them with the ",(0,s.jsx)(a.code,{children:"zio-aws-athena"})," library:"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-scala",children:'val athena = AthenaMock.StartQueryExecution(\n  hasField(\n    "queryString",\n    (startQueryExecutionRequest: StartQueryExecutionRequest) =>\n      startQueryExecutionRequest.queryString,\n      equalTo(givenQuery)\n  ),\n  value(\n    StartQueryExecutionResponse.wrap(\n      software.amazon.awssdk.services.athena.model.StartQueryExecutionResponse\n        .builder()\n        .queryExecutionId(executionId)\n        build()\n    )\n  )\n)\n\ncodeUsingAthena.provide(athena)\n'})})]})}function p(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,a,r)=>{r.d(a,{R:()=>i,x:()=>l});var n=r(96540);const s={},t=n.createContext(s);function i(e){const a=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(t.Provider,{value:a},e.children)}}}]);