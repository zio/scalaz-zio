"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[28121],{21360:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>m,frontMatter:()=>s,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"ecosystem/community/zio-saga","title":"ZIO Saga","description":"ZIO Saga is a distributed transaction manager using Saga Pattern.","source":"@site/docs/ecosystem/community/zio-saga.md","sourceDirName":"ecosystem/community","slug":"/ecosystem/community/zio-saga","permalink":"/ecosystem/community/zio-saga","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/ecosystem/community/zio-saga.md","tags":[],"version":"current","frontMatter":{"id":"zio-saga","title":"ZIO Saga"},"sidebar":"ecosystem-sidebar","previous":{"title":"ZIO Pulsar","permalink":"/ecosystem/community/zio-pulsar"},"next":{"title":"ZIO Slick Interop","permalink":"/ecosystem/community/zio-slick-interop"}}');var i=t(74848),o=t(28453);const s={id:"zio-saga",title:"ZIO Saga"},c=void 0,r={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Installation",id:"installation",level:2},{value:"Example",id:"example",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://github.com/VladKopanev/zio-saga",children:"ZIO Saga"})," is a distributed transaction manager using Saga Pattern."]}),"\n",(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(n.p,{children:"Sometimes when we are architecting the business logic using microservice architecture we need distributed transactions that are across services."}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"Saga Pattern"})," lets us manage distributed transactions by sequencing local transactions with their corresponding compensating actions. A ",(0,i.jsx)(n.em,{children:"Saga Pattern"})," runs all operations. In the case of failure, it guarantees us to undo all previous works by running the compensating actions."]}),"\n",(0,i.jsx)(n.p,{children:"ZIO Saga allows us to compose our requests and compensating actions from the Saga pattern in one transaction with no boilerplate."}),"\n",(0,i.jsxs)(n.p,{children:["ZIO Saga adds a simple abstraction called ",(0,i.jsx)(n.code,{children:"Saga"})," that takes the responsibility of proper composition of effects and associated compensating actions."]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(n.p,{children:["In order to use this library, we need to add the following line in our ",(0,i.jsx)(n.code,{children:"build.sbt"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:'libraryDependencies += "com.vladkopanev" %% "zio-saga-core" % "0.4.0"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.p,{children:"In the following example, all API requests have a compensating action. We compose all them together and then run the whole as one transaction:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:"import zio.{IO, UIO, URIO, ZIO}\ndef bookHotel: UIO[Unit] = IO.unit\ndef cancelHotel: UIO[Unit] = IO.unit\n\ndef bookTaxi: IO[String, Unit] = IO.unit\ndef cancelTaxi: IO[String, Unit] = IO.unit\n\ndef bookFlight: IO[String, Unit] = IO.unit\ndef cancelFlight: IO[String, Unit] = IO.unit\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:"import com.vladkopanev.zio.saga.Saga\nimport zio.{IO, UIO, URIO, ZIO}\n\nimport com.vladkopanev.zio.saga.Saga._\n\nval transaction: Saga[Any, String, Unit] =\n  for {\n    _ <- bookHotel compensate cancelHotel\n    _ <- bookTaxi compensate cancelTaxi\n    _ <- bookFlight compensate cancelFlight\n  } yield ()\n\nval myApp: ZIO[Any, String, Unit] = transaction.transact\n"})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var a=t(96540);const i={},o=a.createContext(i);function s(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);