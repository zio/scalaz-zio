"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[56967],{2673:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>t,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"reference/misc/supervisor","title":"Supervisor","description":"A Supervisor[A] is allowed to supervise the launching and termination of fibers, producing some visible value of type A from the supervision.","source":"@site/versioned_docs/version-1.0.18/reference/misc/supervisor.md","sourceDirName":"reference/misc","slug":"/reference/misc/supervisor","permalink":"/1.0.18/reference/misc/supervisor","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/versioned_docs/version-1.0.18/reference/misc/supervisor.md","tags":[],"version":"1.0.18","frontMatter":{"id":"supervisor","title":"Supervisor"},"sidebar":"overview_sidebar","previous":{"title":"Schedule","permalink":"/1.0.18/reference/misc/schedule"},"next":{"title":"Introduction","permalink":"/1.0.18/reference/services/"}}');var s=i(74848),o=i(28453);const t={id:"supervisor",title:"Supervisor"},c=void 0,a={},l=[{value:"Creation",id:"creation",level:2},{value:"track",id:"track",level:3},{value:"fibersIn",id:"fibersin",level:3},{value:"Supervising",id:"supervising",level:2},{value:"Example",id:"example",level:2}];function d(e){const r={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:["A ",(0,s.jsx)(r.code,{children:"Supervisor[A]"})," is allowed to supervise the launching and termination of fibers, producing some visible value of type ",(0,s.jsx)(r.code,{children:"A"})," from the supervision."]}),"\n",(0,s.jsx)(r.h2,{id:"creation",children:"Creation"}),"\n",(0,s.jsx)(r.h3,{id:"track",children:"track"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"track"})," creates a new supervisor that tracks children in a set. It takes a boolean ",(0,s.jsx)(r.code,{children:"weak"})," parameter as input, which indicates whether track children in a ",(0,s.jsx)(r.code,{children:"Weakset"})," or not."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-scala",children:"val supervisor = Supervisor.track(true)\n// supervisor: zio.package.UIO[Supervisor[zio.Chunk[zio.Fiber.Runtime[Any, Any]]]] = zio.ZIO$EffectTotal@1fab7211\n"})}),"\n",(0,s.jsx)(r.p,{children:"We can periodically, report the status of the fibers of our program with the help of the Supervisor."}),"\n",(0,s.jsx)(r.h3,{id:"fibersin",children:"fibersIn"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"fibersIn"})," creates a new supervisor with an initial sorted set of fibers."]}),"\n",(0,s.jsx)(r.p,{children:"In the following example we are creating a new supervisor from an initial set of fibers:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-scala",children:"def fiberListSupervisor = for { \n  ref <- Ref.make(SortedSet.from(fibers))\n  s <- Supervisor.fibersIn(ref)\n} yield (s)\n"})}),"\n",(0,s.jsx)(r.h2,{id:"supervising",children:"Supervising"}),"\n",(0,s.jsxs)(r.p,{children:["Whenever we need to supervise a ZIO effect, we can call ",(0,s.jsx)(r.code,{children:"ZIO#supervised"})," function, ",(0,s.jsx)(r.code,{children:"supervised"})," takes a supervisor and return another effect. The behavior of children fibers is reported to the provided supervisor:"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-scala",children:"val supervised = supervisor.flatMap(s => fib(20).supervised(s))\n"})}),"\n",(0,s.jsx)(r.p,{children:"Now we can access all information of children fibers through the supervisor."}),"\n",(0,s.jsx)(r.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(r.p,{children:"In the following example we are going to periodically monitor the number of fibers throughout our application life cycle:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-scala",children:'object SupervisorExample extends zio.App {\n  import zio.duration._\n\n  val program = for {\n    supervisor <- Supervisor.track(true)\n    fiber <- fib(20).supervised(supervisor).fork\n    policy = Schedule\n      .spaced(500.milliseconds)\n      .whileInputM[Any, Unit](_ => fiber.status.map(x => !x.isDone))\n    logger <- monitorFibers(supervisor)\n      .repeat(policy).fork\n    _ <- logger.join\n    result <- fiber.join\n    _ <- putStrLn(s"fibonacci result: $result")\n  } yield ()\n\n  def monitorFibers(supervisor: Supervisor[Chunk[Fiber.Runtime[Any, Any]]]) = for {\n    length <- supervisor.value.map(_.length)\n    _ <- putStrLn(s"number of fibers: $length")\n  } yield ()\n\n  def fib(n: Int): ZIO[Clock, Nothing, Int] =\n    if (n <= 1) {\n      ZIO.succeed(1)\n    } else {\n      for {\n        _ <- sleep(500.milliseconds)\n        fiber1 <- fib(n - 2).fork\n        fiber2 <- fib(n - 1).fork\n        v2 <- fiber2.join\n        v1 <- fiber1.join\n      } yield v1 + v2\n    }\n\n  override def run(args: List[String]) = program.exitCode\n}\n'})})]})}function p(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,r,i)=>{i.d(r,{R:()=>t,x:()=>c});var n=i(96540);const s={},o=n.createContext(s);function t(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);