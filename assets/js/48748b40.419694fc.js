"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[9e4],{2501:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"ecosystem/community/zio-pulsar","title":"ZIO Pulsar","description":"ZIO Pulsar is the Apache Pulsar client for Scala with ZIO and ZIO Streams integration.","source":"@site/docs/ecosystem/community/zio-pulsar.md","sourceDirName":"ecosystem/community","slug":"/ecosystem/community/zio-pulsar","permalink":"/ecosystem/community/zio-pulsar","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/ecosystem/community/zio-pulsar.md","tags":[],"version":"current","frontMatter":{"id":"zio-pulsar","title":"ZIO Pulsar"},"sidebar":"ecosystem-sidebar","previous":{"title":"ZIO NebulaGraph","permalink":"/ecosystem/community/zio-nebula"},"next":{"title":"ZIO Saga","permalink":"/ecosystem/community/zio-saga"}}');var s=t(74848),r=t(28453);const a={id:"zio-pulsar",title:"ZIO Pulsar"},o=void 0,l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Installation",id:"installation",level:2},{value:"Example",id:"example",level:2},{value:"Resources",id:"resources",level:2}];function u(e){const n={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/apache/pulsar",children:"ZIO Pulsar"})," is the ",(0,s.jsx)(n.em,{children:"Apache Pulsar"})," client for Scala with ZIO and ZIO Streams integration."]}),"\n",(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsx)(n.p,{children:"ZIO Pulsar is a purely functional Scala wrapper over the official Pulsar client. Some key features of this library:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Type-safe"})," \u2014 Utilizes Scala type system to reduce runtime exceptions present in the official Java client."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Streaming-enabled"})," \u2014 Naturally integrates with ZIO Streams."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ZIO integrated"})," \u2014 Uses common ZIO primitives like ZIO effect and ",(0,s.jsx)(n.code,{children:"ZManaged"})," to reduce the boilerplate and increase expressiveness."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this library, we need to add the following line in our ",(0,s.jsx)(n.code,{children:"build.sbt"})," file for ",(0,s.jsx)(n.em,{children:"Scala 3"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",children:'libraryDependencies += "com.github.jczuchnowski" %% "zio-pulsar" % "0.1"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsxs)(n.p,{children:["First of all we need to create an instance of ",(0,s.jsx)(n.em,{children:"Apache Pulsar"})," and run that:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"docker run -it \\\n  -p 6650:6650 \\\n  -p 8080:8080 \\\n  --mount source=pulsardata,target=/pulsar/data \\\n  --mount source=pulsarconf,target=/pulsar/conf \\\n  --network pulsar \\\n  apachepulsar/pulsar:2.7.0 \\\n  bin/pulsar standalone\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now we can run the following example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",children:'import org.apache.pulsar.client.api.{PulsarClientException, Schema}\nimport zio._\nimport zio.blocking._\nimport zio.clock._\nimport zio.console._\nimport zio.pulsar._\nimport zio.stream._\n\nimport java.nio.charset.StandardCharsets\n\nobject StreamingExample extends zio.App {\n  val topic = "my-topic"\n\n  val producer: ZManaged[Has[PulsarClient], PulsarClientException, Unit] =\n    for {\n      sink <- Producer.make(topic, Schema.STRING).map(_.asSink)\n      _ <- Stream.fromIterable(0 to 100).map(i => s"Message $i").run(sink).toManaged_\n    } yield ()\n\n  val consumer: ZManaged[Has[PulsarClient] with Blocking with Console, PulsarClientException, Unit] =\n    for {\n      builder <- ConsumerBuilder.make(Schema.STRING).toManaged_\n      consumer <- builder\n        .subscription(Subscription("my-subscription", SubscriptionType.Exclusive))\n        .topic(topic)\n        .build\n      _ <- consumer.receiveStream.take(10).foreach { e =>\n        consumer.acknowledge(e.getMessageId) *>\n          putStrLn(new String(e.getData, StandardCharsets.UTF_8)).orDie\n      }.toManaged_\n    } yield ()\n\n  val myApp =\n    for {\n      f <- consumer.fork\n      _ <- producer\n      _ <- f.join.toManaged_\n    } yield ()\n\n  def run(args: List[String]): URIO[ZEnv, ExitCode] =\n    myApp\n      .provideCustom(\n        (Console.live ++ Clock.live) >+>\n          PulsarClient.live("localhost", 6650)\n      ).useNow.exitCode\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.youtube.com/watch?v=tpwydDqQBmk",children:"ZIO World - ZIO PULSAR"})," by Jakub Czuchnowski (March 2020) \u2014 A new library that offers a native, first-class ZIO experience for Pulsar, the Kafka competitor gaining traction for some use cases."]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(96540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);