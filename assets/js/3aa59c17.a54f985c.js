"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[85729],{93808:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"zio-http/reference/response/response","title":"Response","description":"ZIO HTTP Response is designed to encode HTTP Response.","source":"@site/docs/zio-http/reference/response/response.md","sourceDirName":"zio-http/reference/response","slug":"/zio-http/reference/response/","permalink":"/zio-http/reference/response/","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-http/reference/response/response.md","tags":[],"version":"current","frontMatter":{"id":"response","title":"Response"},"sidebar":"ecosystem-sidebar","previous":{"title":"Request","permalink":"/zio-http/reference/request"},"next":{"title":"Status Codes","permalink":"/zio-http/reference/response/status"}}');var t=n(74848),o=n(28453);const d={id:"response",title:"Response"},i=void 0,a={},c=[{value:"Response Usage",id:"response-usage",level:2},{value:"Server Side",id:"server-side",level:3},{value:"Client Side",id:"client-side",level:3},{value:"Creating a Response",id:"creating-a-response",level:2},{value:"Status Codes",id:"status-codes",level:3},{value:"From Plain Text, JSON, and HTML",id:"from-plain-text-json-and-html",level:3},{value:"Converting Failures to Responses",id:"converting-failures-to-responses",level:3},{value:"Specialized Response Operators",id:"specialized-response-operators",level:3},{value:"Response from HTTP Errors",id:"response-from-http-errors",level:3},{value:"Creating a Response from Server-Sent Events",id:"creating-a-response-from-server-sent-events",level:3},{value:"Creating a Response from a WebSocketApp",id:"creating-a-response-from-a-websocketapp",level:3},{value:"Operations",id:"operations",level:2},{value:"Adding Cookies and Flashes to Response",id:"adding-cookies-and-flashes-to-response",level:3},{value:"Working with Headers",id:"working-with-headers",level:3}];function l(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"ZIO HTTP"})," ",(0,t.jsx)(s.code,{children:"Response"})," is designed to encode HTTP Response.\nIt supports all HTTP status codes and headers along with custom methods and headers (as defined in ",(0,t.jsx)(s.a,{href:"https://datatracker.ietf.org/doc/html/rfc2616",children:"RFC2616"})," )"]}),"\n",(0,t.jsx)(s.h2,{id:"response-usage",children:"Response Usage"}),"\n",(0,t.jsxs)(s.p,{children:["In ZIO HTTP, a ",(0,t.jsx)(s.code,{children:"Response"})," is used in two contexts, server-side and client-side."]}),"\n",(0,t.jsx)(s.h3,{id:"server-side",children:"Server Side"}),"\n",(0,t.jsxs)(s.p,{children:["In the server-side context, a ",(0,t.jsx)(s.code,{children:"Response"})," is created and returned by a ",(0,t.jsx)(s.code,{children:"Handler"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:'import zio._\nimport zio.http._\n\nobject HelloWorldExample extends ZIOAppDefault {\n  val routes: Routes[Any, Response] =\n    Routes(\n      Method.GET / "text" ->\n        handler {\n          Response.text("Hello World!")\n        },\n      )\n\n  override val run = Server.serve(routes).provide(Server.default)\n}\n'})}),"\n",(0,t.jsx)(s.h3,{id:"client-side",children:"Client Side"}),"\n",(0,t.jsxs)(s.p,{children:["In the client-side context, a ",(0,t.jsx)(s.code,{children:"Response"})," is received from the client after making a request to a server:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:'import zio._\nimport zio.http.Header.ContentType.render\nimport zio.http._\n\nobject ClientExample extends ZIOAppDefault {\n  val program = for {\n    res         <- Client.batched(Request.get("https://zio.dev/"))\n    contentType <- ZIO.from(res.header(Header.ContentType))\n    _           <- Console.printLine("------Content Type------")\n    _           <- Console.printLine(render(contentType))\n    data        <- res.body.asString\n    _           <- Console.printLine("----------Body----------")\n    _           <- Console.printLine(data)\n  } yield ()\n\n  override val run = program.provide(Client.default)\n}\n'})}),"\n",(0,t.jsx)(s.h2,{id:"creating-a-response",children:"Creating a Response"}),"\n",(0,t.jsxs)(s.p,{children:["A ",(0,t.jsx)(s.code,{children:"Response"})," can be created with ",(0,t.jsx)(s.code,{children:"status"}),", ",(0,t.jsx)(s.code,{children:"headers"}),", and ",(0,t.jsx)(s.code,{children:"data"})," using the default constructor:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:"case class Response(\n  status: Status = Status.Ok,\n  headers: Headers = Headers.empty,\n  body: Body = Body.empty,\n)\n"})}),"\n",(0,t.jsxs)(s.p,{children:["The below snippet creates a response with default params, ",(0,t.jsx)(s.code,{children:"status"})," as ",(0,t.jsx)(s.code,{children:"Status.OK"}),", ",(0,t.jsx)(s.code,{children:"headers"})," as ",(0,t.jsx)(s.code,{children:"Headers.empty"}),", and ",(0,t.jsx)(s.code,{children:"data"})," as ",(0,t.jsx)(s.code,{children:"Body.Empty"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:"import zio.http._\nimport zio._\n\nResponse()\n// res2: Response = Response(\n//   status = Ok,\n//   headers = Iterable(),\n//   body = Body.empty\n// )\n"})}),"\n",(0,t.jsx)(s.h3,{id:"status-codes",children:"Status Codes"}),"\n",(0,t.jsx)(s.p,{children:"ZIO HTTP has several constructors for the most common status codes:"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Method"}),(0,t.jsx)(s.th,{children:"Description"}),(0,t.jsx)(s.th,{children:"Status Code"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Response.ok"})}),(0,t.jsx)(s.td,{children:"Successful request"}),(0,t.jsx)(s.td,{children:"200 OK"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Response.badRequest"})}),(0,t.jsx)(s.td,{children:"The server cannot or will not process the request due to an apparent client error"}),(0,t.jsx)(s.td,{children:"400 Bad Request"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Response.unauthorized"})}),(0,t.jsx)(s.td,{children:"Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided"}),(0,t.jsx)(s.td,{children:"401 Unauthorized"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Response.forbidden"})}),(0,t.jsx)(s.td,{children:"The client does not have access rights to the content; that is, it is unauthorized"}),(0,t.jsx)(s.td,{children:"403 Forbidden"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Response.notFound"})}),(0,t.jsx)(s.td,{children:"The requested resource could not be found but may be available in the future"}),(0,t.jsx)(s.td,{children:"404 Not Found"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Response.internalServerError"})}),(0,t.jsx)(s.td,{children:"A generic error message, given when an unexpected condition was encountered and no more specific message is suitable"}),(0,t.jsx)(s.td,{children:"500 Internal Server Error"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Response.serviceUnavailable"})}),(0,t.jsx)(s.td,{children:"The server cannot handle the request (because it is overloaded or down for maintenance)"}),(0,t.jsx)(s.td,{children:"503 Service Unavailable"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Response.redirect"})}),(0,t.jsx)(s.td,{children:"Used to inform the client that the resource they're requesting is located at a different URI"}),(0,t.jsx)(s.td,{children:"302 Found (Moved Temporarily)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Response.seeOther"})}),(0,t.jsx)(s.td,{children:"Tells the client to look at a different URL for the requested resource"}),(0,t.jsx)(s.td,{children:"303 See Other"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Response.gatewayTimeout"})}),(0,t.jsx)(s.td,{children:"The server was acting as a gateway or proxy and did not receive a timely response from the upstream server"}),(0,t.jsx)(s.td,{children:"504 Gateway Timeout"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Response.httpVersionNotSupported"})}),(0,t.jsx)(s.td,{children:"The server does not support the HTTP protocol version that was used in the request"}),(0,t.jsx)(s.td,{children:"505 HTTP Version Not Supported"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Response.networkAuthenticationRequired"})}),(0,t.jsx)(s.td,{children:"The client needs to authenticate to gain network access"}),(0,t.jsx)(s.td,{children:"511 Network Authentication Required"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Response.notExtended"})}),(0,t.jsx)(s.td,{children:"Further extensions to the request are required for the server to fulfill it"}),(0,t.jsx)(s.td,{children:"510 Not Extended"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Response.notImplemented"})}),(0,t.jsx)(s.td,{children:"The server either does not recognize the request method, or it lacks the ability to fulfill the request"}),(0,t.jsx)(s.td,{children:"501 Not Implemented"})]})]})]}),"\n",(0,t.jsxs)(s.p,{children:["For example, to create a response with status code 200, we can use ",(0,t.jsx)(s.code,{children:"Response.ok"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:"Response.ok\n// res3: Response = Response(\n//   status = Ok,\n//   headers = Iterable(),\n//   body = Body.empty\n// )\n"})}),"\n",(0,t.jsxs)(s.p,{children:["And also to create a response with status code 404, we can use ",(0,t.jsx)(s.code,{children:"Response.badRequest"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:'Response.notFound\n// res4: Response = Response(\n//   status = NotFound,\n//   headers = Iterable(),\n//   body = Body.empty\n// )\n\nResponse.notFound("The requested resource could not be found!")\n// res5: Response = Response(\n//   status = NotFound,\n//   headers = Iterable(),\n//   body = AsciiStringBody(\n//     asciiString = The requested resource could not be found!,\n//     contentType = None\n//   )\n// )\n'})}),"\n",(0,t.jsxs)(s.p,{children:["If we want to create a response with a more specific status code, we can use the ",(0,t.jsx)(s.code,{children:"status"})," method. It takes a ",(0,t.jsx)(s.code,{children:"Status"})," as a parameter and returns a new ",(0,t.jsx)(s.code,{children:"Response"})," with the corresponding status code:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:"Response.status(Status.Continue)\n"})}),"\n",(0,t.jsxs)(s.p,{children:["To learn more about status codes, see ",(0,t.jsx)(s.a,{href:"/zio-http/reference/response/status",children:"Status"})," page."]}),"\n",(0,t.jsx)(s.h3,{id:"from-plain-text-json-and-html",children:"From Plain Text, JSON, and HTML"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"Response.text"})})," creates a response with data as text, content-type header set to text/plain, and status code 200:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:'Response.text("hey")\n// res7: Response = Response(\n//   status = Ok,\n//   headers = Iterable(Custom(customName = "content-type", value = "text/plain")),\n//   body = AsciiStringBody(asciiString = hey, contentType = None)\n// )\n'})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"Response.json"})})," creates a response with data as JSON, content-type header set to ",(0,t.jsx)(s.code,{children:"application/json"}),", and status code 200:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:'Response.json("""{"greetings": "Hello World!"}""")\n// res8: Response = Response(\n//   status = Ok,\n//   headers = Iterable(\n//     Custom(customName = "content-type", value = "application/json")\n//   ),\n//   body = AsciiStringBody(\n//     asciiString = {"greetings": "Hello World!"},\n//     contentType = None\n//   )\n// )\n'})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"Response.html"})})," creates a response with data as HTML, content-type header set to ",(0,t.jsx)(s.code,{children:"text/html"}),", and status code 200."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:'import zio.http.template._\n\nResponse.html(Html.fromString("html text"))\n// res9: Response = Response(\n//   status = Ok,\n//   headers = Iterable(Custom(customName = "content-type", value = "text/html")),\n//   body = AsciiStringBody(\n//     asciiString = <!DOCTYPE html>html text,\n//     contentType = None\n//   )\n// )\n'})}),"\n",(0,t.jsx)(s.h3,{id:"converting-failures-to-responses",children:"Converting Failures to Responses"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"Response"})," companion object provides some constructors to convert exceptions into responses. These constructors are useful for error handling by converting failures into appropriate HTTP responses:"]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"Response.fromThrowable"})})," Creates a new HTTP response based on the type of throwable provided. This method facilitates the conversion of various types of exceptions into appropriate HTTP responses, making error handling more streamlined:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:"object Response {\n  def fromThrowable(throwable: Throwable): Response = ???\n}\n"})}),"\n",(0,t.jsx)(s.p,{children:"Here is the table of exceptions and their corresponding status code:"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Throwable Type"}),(0,t.jsx)(s.th,{children:"Status Class"}),(0,t.jsx)(s.th,{children:"Status Code"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"AccessDeniedException"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Forbidden"})}),(0,t.jsx)(s.td,{children:"403"}),(0,t.jsx)(s.td,{children:"Access to a resource is denied."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"IllegalAccessException"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Forbidden"})}),(0,t.jsx)(s.td,{children:"403"}),(0,t.jsx)(s.td,{children:"Illegal access to a resource is attempted."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"IllegalAccessError"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Forbidden"})}),(0,t.jsx)(s.td,{children:"403"}),(0,t.jsx)(s.td,{children:"Illegal access to a resource occurs."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"NotDirectoryException"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"BadRequest"})}),(0,t.jsx)(s.td,{children:"400"}),(0,t.jsx)(s.td,{children:"The specified path is not a directory."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"IllegalArgumentException"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"BadRequest"})}),(0,t.jsx)(s.td,{children:"400"}),(0,t.jsx)(s.td,{children:"An invalid argument is provided."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"java.io.FileNotFoundException"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"NotFound"})}),(0,t.jsx)(s.td,{children:"404"}),(0,t.jsx)(s.td,{children:"The specified file or resource is not found."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"java.net.ConnectException"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"ServiceUnavailable"})}),(0,t.jsx)(s.td,{children:"503"}),(0,t.jsx)(s.td,{children:"Unable to connect to a service."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"java.net.SocketTimeoutException"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"GatewayTimeout"})}),(0,t.jsx)(s.td,{children:"504"}),(0,t.jsx)(s.td,{children:"Connection or read operation timed out."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Others (unrecognized throwable)"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"InternalServerError"})}),(0,t.jsx)(s.td,{children:"500"}),(0,t.jsx)(s.td,{children:"An unexpected error occurred."})]})]})]}),"\n",(0,t.jsxs)(s.p,{children:["Another low-level method for error handling is ",(0,t.jsx)(s.code,{children:"Response.fromCause"})," which creates a response from a ",(0,t.jsx)(s.code,{children:"Cause"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:"object Response {\n  def fromCause(cause: Cause[Any]): Response = ???\n}\n"})}),"\n",(0,t.jsxs)(s.p,{children:["This constructor is similar to ",(0,t.jsx)(s.code,{children:"Response.fromThrowable"}),", but it also captures the interruption of the fiber. If the provided ",(0,t.jsx)(s.code,{children:"Cause"})," is a failure due to interruption, the status code of the response will be ",(0,t.jsx)(s.code,{children:"Status.RequestTimeout"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["We can use ",(0,t.jsx)(s.code,{children:"Response.fromCause"})," in combination with the ",(0,t.jsx)(s.code,{children:"Handler#mapErrorCause"}),", ",(0,t.jsx)(s.code,{children:"Route#handleErrorCause"}),", and ",(0,t.jsx)(s.code,{children:"Routes#handleErrorCause"})," methods. These methods take a function that maps the ",(0,t.jsx)(s.code,{children:"Cause[Err] => Err"})," and return a ",(0,t.jsx)(s.code,{children:"Handler"}),", ",(0,t.jsx)(s.code,{children:"Route"})," or a ",(0,t.jsx)(s.code,{children:"Routes"})," with the error handling logic applied:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:"import zio.http._\nimport java.io.IOException\n\nval failedHandler = Handler.fail(new IOException())\n// failedHandler: Handler[Any, IOException, Any, Nothing] = zio.http.Handler$$anon$13@3182d2cf\n\nfailedHandler.mapErrorCause(Response.fromCause)\n// res10: Handler[Any, Response, Any, Nothing] = zio.http.Handler$$anon$4@ba6addb\n"})}),"\n",(0,t.jsx)(s.admonition,{type:"note",children:(0,t.jsxs)(s.p,{children:["In many cases, it is more convenient to use the ",(0,t.jsx)(s.code,{children:"sandbox"})," method to automatically convert all failures into a corresponding ",(0,t.jsx)(s.code,{children:"Response"}),". But in some cases, to have more granular control over the error handling, we may want to use ",(0,t.jsx)(s.code,{children:"Response.fromCause"})," and ",(0,t.jsx)(s.code,{children:"Response.fromThrowable"})," directly."]})}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"Cause"})," is a data structure that represents the result of a failed computation in ZIO. To learn more about ",(0,t.jsx)(s.code,{children:"Cause"}),", see the ",(0,t.jsx)(s.a,{href:"https://zio.dev/reference/core/cause",children:"Cause"})," page on the ZIO core documentation."]})}),"\n",(0,t.jsx)(s.h3,{id:"specialized-response-operators",children:"Specialized Response Operators"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"status"})," to update the ",(0,t.jsx)(s.code,{children:"status"})," of ",(0,t.jsx)(s.code,{children:"Response"})]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:'Response.text("Hello World!").status(Status.NotFound)\n// res11: Response = Response(\n//   status = NotFound,\n//   headers = Iterable(Custom(customName = "content-type", value = "text/plain")),\n//   body = AsciiStringBody(asciiString = Hello World!, contentType = None)\n// )\n'})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"updateHeaders"})," to update the ",(0,t.jsx)(s.code,{children:"headers"})," of ",(0,t.jsx)(s.code,{children:"Response"})]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:'Response.ok.updateHeaders(_ => Headers("key", "value"))\n// res12: Response = Response(\n//   status = Ok,\n//   headers = Iterable(Custom(customName = "key", value = "value")),\n//   body = Body.empty\n// )\n'})}),"\n",(0,t.jsx)(s.h3,{id:"response-from-http-errors",children:"Response from HTTP Errors"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"error"})," creates a response with a provided status code and message."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:'Response.error(Status.BadRequest, "It\'s not good!")\n// res13: Response = Response(\n//   status = BadRequest,\n//   headers = Iterable(),\n//   body = AsciiStringBody(asciiString = It&#x27;s not good!, contentType = None)\n// )\n'})}),"\n",(0,t.jsx)(s.h3,{id:"creating-a-response-from-server-sent-events",children:"Creating a Response from Server-Sent Events"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"Response.fromServerSentEvents"})," method creates a response with a stream of server-sent events:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:"object Response {\n  def fromServerSentEvents(stream: ZStream[Any, Nothing, ServerSentEvent[String]]): Response = ???\n}\n"})}),"\n",(0,t.jsx)(s.p,{children:"Let's try a complete example:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:'import zio._\nimport zio.http._\nimport zio.stream._\nimport java.time.LocalDateTime\nimport java.time.format.DateTimeFormatter.ISO_LOCAL_TIME\n\nobject ServerSentExample extends ZIOAppDefault {\n\n  val stream: ZStream[Any, Nothing, ServerSentEvent[String]] =\n    ZStream.repeatWithSchedule(\n      ServerSentEvent(ISO_LOCAL_TIME.format(LocalDateTime.now)),\n      Schedule.spaced(1.second),\n    )\n\n  val app =\n    Routes(\n      Method.GET / "events" -> handler {\n        Response.fromServerSentEvents(stream)\n      },\n    )\n  def run = Server.serve(app).provide(Server.default)\n}\n'})}),"\n",(0,t.jsxs)(s.p,{children:["After running the above example, we can open the browser and navigate to ",(0,t.jsx)(s.code,{children:"http://localhost:8080/events"})," to see the server-sent events in action. The browser will display the time every second."]}),"\n",(0,t.jsxs)(s.p,{children:["Also, we can use the ",(0,t.jsx)(s.code,{children:"curl"})," command to see the server-sent events:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"curl -N http://localhost:8080/events\n"})}),"\n",(0,t.jsx)(s.p,{children:"This will display the time every second in the terminal:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"data: 13:51:31.036249\n\ndata: 13:51:32.037663\n\ndata: 13:51:33.039565\n\ndata: 13:51:34.041464\n\n...\n"})}),"\n",(0,t.jsx)(s.h3,{id:"creating-a-response-from-a-websocketapp",children:"Creating a Response from a WebSocketApp"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"Response.fromWebSocketApp"})," constructor takes a ",(0,t.jsx)(s.code,{children:"WebSocketApp"})," and creates a ",(0,t.jsx)(s.code,{children:"Response"})," with a WebSocket connection:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:"object Response {\n  def fromWebSocketApp[R](app: WebSocketApp[R]): ZIO[R, Nothing, Response] = ???\n}\n"})}),"\n",(0,t.jsx)(s.p,{children:"Let's try an echo server which sends back the received messages:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:'import zio._\nimport zio.http._\n\nobject WebsocketExample extends ZIOAppDefault {\n\n  val routes: Routes[Any, Response] = {\n    Routes(\n      Method.GET / "echo" -> handler {\n        Response.fromSocketApp(\n          WebSocketApp(\n            handler { (channel: WebSocketChannel) =>\n              channel.receiveAll {\n                case ChannelEvent.Read(message) =>\n                  channel.send(ChannelEvent.read(message))\n                case other =>\n                  ZIO.debug(other)\n              }\n            },\n            ),\n          )\n      },\n      )\n  }\n\n  def run =\n    Server.serve(routes).provide(Server.default)\n}\n'})}),"\n",(0,t.jsxs)(s.p,{children:["To test this example, we can use the ",(0,t.jsx)(s.code,{children:"websocat"})," command-line tool:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"> websocat ws://localhost:8080/echo\nhello\nhello\nbye\nbye\n"})}),"\n",(0,t.jsx)(s.h2,{id:"operations",children:"Operations"}),"\n",(0,t.jsx)(s.h3,{id:"adding-cookies-and-flashes-to-response",children:"Adding Cookies and Flashes to Response"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"addCookie"})})," adds cookies in the headers of the response:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:'import zio.http._\n\nval cookie = Cookie.Response("key", "value")\nResponse.ok.addCookie(cookie)\n'})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"addFlash"})})," adds flash messages in the headers of the response:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:'import zio.http._\n\nval flash = Flash.setValue("key1", "value1")\nResponse.ok.addFlash(flash)\n'})}),"\n",(0,t.jsx)(s.h3,{id:"working-with-headers",children:"Working with Headers"}),"\n",(0,t.jsxs)(s.p,{children:["There are various methods to work with headers in ",(0,t.jsx)(s.code,{children:"Response"})," which we have discussed in the ",(0,t.jsx)(s.a,{href:"/zio-http/reference/headers/#headers-operations",children:"Headers"})," page."]})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>i});var r=n(96540);const t={},o=r.createContext(t);function d(e){const s=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);