"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[79910],{28453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>a});var n=s(96540);const r={},i=n.createContext(r);function c(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(i.Provider,{value:t},e.children)}},49917:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"reference/test/aspects/sized","title":"Changing the Size of Sized Generators","description":"To change the default size used by sized generators we can use size test aspect:","source":"@site/docs/reference/test/aspects/sized.md","sourceDirName":"reference/test/aspects","slug":"/reference/test/aspects/sized","permalink":"/reference/test/aspects/sized","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/reference/test/aspects/sized.md","tags":[],"version":"current","frontMatter":{"id":"sized","title":"Changing the Size of Sized Generators"},"sidebar":"reference-sidebar","previous":{"title":"Restoring State of Test Services","permalink":"/reference/test/aspects/restoring-state-of-test-services"},"next":{"title":"Annotating Tests","permalink":"/reference/test/aspects/annotating-tests"}}');var r=s(74848),i=s(28453);const c={id:"sized",title:"Changing the Size of Sized Generators"},a=void 0,o={},d=[];function l(e){const t={a:"a",code:"code",em:"em",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["To change the default ",(0,r.jsx)(t.em,{children:"size"})," used by ",(0,r.jsx)(t.a,{href:"/reference/test/property-testing/built-in-generators#sized-generators",children:"sized generators"})," we can use ",(0,r.jsx)(t.code,{children:"size"})," test aspect:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-scala",children:'import zio._\nimport zio.test.{ test, _ }\n\ntest("generating small list of characters") {\n  check(Gen.small(Gen.listOfN(_)(Gen.alphaNumericChar))) { n =>\n    ZIO.attempt(n).debug *> Sized.size.map(s => assertTrue(s == 50))\n  }\n} @@ TestAspect.size(50) @@ TestAspect.samples(5)\n'})}),"\n",(0,r.jsx)(t.p,{children:"Sample output:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"List(p, M)\nList()\nList(0, m, 5)\nList(Y)\nList(O, b, B, V)\n+ generating small list of characters\nRan 1 test in 676 ms: 1 succeeded, 0 ignored, 0 failed\n"})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);