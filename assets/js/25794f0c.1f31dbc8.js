"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[52621],{67156:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"zio-dynamodb/reference/low-level-api/dollar-function","title":"$ and parse functions","description":"The $ and parse functions are the primary way to create a ProjectionExpression in the Low Level API.","source":"@site/docs/zio-dynamodb/reference/low-level-api/dollar-function.md","sourceDirName":"zio-dynamodb/reference/low-level-api","slug":"/zio-dynamodb/reference/low-level-api/dollar-function","permalink":"/zio-dynamodb/reference/low-level-api/dollar-function","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-dynamodb/reference/low-level-api/dollar-function.md","tags":[],"version":"current","frontMatter":{"id":"dollar-function","title":"$ and parse functions"},"sidebar":"ecosystem-sidebar","previous":{"title":"AttributeValue","permalink":"/zio-dynamodb/reference/low-level-api/attribute-value"},"next":{"title":"DynamoDBQuery","permalink":"/zio-dynamodb/reference/dynamodb-query"}}');var o=s(74848),r=s(28453);const i={id:"dollar-function",title:"$ and parse functions"},a=void 0,c={},d=[{value:"Low level representation of <code>ProjectionExpression</code>",id:"low-level-representation-of-projectionexpression",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"$"})," and ",(0,o.jsx)(n.code,{children:"parse"})," functions are the primary way to create a ",(0,o.jsx)(n.code,{children:"ProjectionExpression"})," in the Low Level API."]}),"\n",(0,o.jsxs)(n.p,{children:["They take a string representation of the attribute path that uses the\n",(0,o.jsx)(n.a,{href:"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.ProjectionExpressions.html",children:"standard AWS DynamoDB path expression syntax"}),"\nand return a ",(0,o.jsx)(n.code,{children:"ProjectionExpression"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"eg"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-scala",children:'final case class Person(email: String, hobbies: Map[String, List[String]])\n\nval errorOrProjectionExpression: Either[String, ProjectionExpression] = ProjectionExpression.parse("hobbies.sport[0]")\nval projectionExpression: ProjectionExpression = ProjectionExpression.$("hobbies.sport[0]")\n'})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"parse"})," function takes a string representation of the path expression (that uses standard AWS DynamoDB path expression syntax).\nIt returns an ",(0,o.jsx)(n.code,{children:"Either"})," which is a ",(0,o.jsx)(n.code,{children:"Left[String]"})," when the string projection expression is invalid, or a ",(0,o.jsx)(n.code,{children:"Right[ProjectionExpression]"}),"\nwhen the string projection expression valid and successfully parsed."]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"$"})," function is the unsafe version of the ",(0,o.jsx)(n.code,{children:"parse"})," function - if the string projection expression is invalid it throws an ",(0,o.jsx)(n.code,{children:"IllegalStateException"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"The below table shows the supported path expression syntax:"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Expression Syntax"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:'"foo"'})}),(0,o.jsx)(n.td,{children:"top level element"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:'"foos[0]"'})}),(0,o.jsx)(n.td,{children:"simple top level list element - indexes are zero based"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:'"foo.bar"'})}),(0,o.jsx)(n.td,{children:"addressing a map element inside a top level element"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:'"foo_bar"'})}),(0,o.jsx)(n.td,{children:"underscores are valid"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:'"foo-bar"'})}),(0,o.jsx)(n.td,{children:"hyphens are valid"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsxs)(n.td,{children:["&#96",(0,o.jsx)(n.code,{children:"foo.bar"}),"&#96"]}),(0,o.jsx)(n.td,{children:'special characters such as "dot" need to be escaped with backticks. Here we have an attribute name that contains a special character.'})]})]})]}),"\n",(0,o.jsxs)(n.p,{children:["After the expression is parsed into a ",(0,o.jsx)(n.code,{children:"ProjectionExpression"}),", at execution time the AWS API ",(0,o.jsx)(n.a,{href:"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.ExpressionAttributeNames.html",children:"Expression Attributes Names"})," and\n",(0,o.jsx)(n.a,{href:"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.ExpressionAttributeValues.html",children:"Expression Attributes Values"}),"\nmaps are used to escape all path elements safely when required."]}),"\n",(0,o.jsxs)(n.h2,{id:"low-level-representation-of-projectionexpression",children:["Low level representation of ",(0,o.jsx)(n.code,{children:"ProjectionExpression"})]}),"\n",(0,o.jsxs)(n.p,{children:["For those who are interested the below code snippet shows the slightly simplified version of the ",(0,o.jsx)(n.code,{children:"ProjectionExpression"})," implementation:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-scala",children:'sealed trait ProjectionExpression\nobject ProjectionExpression {\n  final case object Root extends ProjectionExpression\n  final case class ListElement(parent: ProjectionExpression, index: Int) extends ProjectionExpression\n  final case class MapElement(parent: ProjectionExpression, key: String) extends ProjectionExpression\n}\n\nval projectionExpression: ProjectionExpression = ProjectionExpression.$("hobbies.sport[0]")\nprintln(projectionExpression) // ListElement(MapElement(MapElement(Root, "hobbies"), "sport"), 0)\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Note that top level elements are represented as ",(0,o.jsx)(n.code,{children:"MapElement(Root, <ELEMENT_NAME>)"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var t=s(96540);const o={},r=t.createContext(o);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);