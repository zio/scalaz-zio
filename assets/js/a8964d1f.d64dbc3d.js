"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[80024],{62444:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"zio-nio/sockets","title":"Socket Channel","description":"AsynchronousSocketChannel and AsynchronousServerSocketChannel provide methods for communicating with remote clients.","source":"@site/docs/zio-nio/sockets.md","sourceDirName":"zio-nio","slug":"/zio-nio/sockets","permalink":"/zio-nio/sockets","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-nio/sockets.md","tags":[],"version":"current","frontMatter":{"id":"sockets","title":"Socket Channel"},"sidebar":"ecosystem-sidebar","previous":{"title":"File Channel","permalink":"/zio-nio/files"},"next":{"title":"Resource Management","permalink":"/zio-nio/resources"}}');var t=o(74848),r=o(28453);const c={id:"sockets",title:"Socket Channel"},i=void 0,a={},l=[{value:"Creating sockets",id:"creating-sockets",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"AsynchronousSocketChannel"})," and ",(0,t.jsx)(n.code,{children:"AsynchronousServerSocketChannel"})," provide methods for communicating with remote clients."]}),"\n",(0,t.jsx)(n.p,{children:"Required imports for snippets:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:"import zio._\nimport zio.clock._\nimport zio.console._\nimport zio.nio.channels._\nimport zio.nio._\n"})}),"\n",(0,t.jsx)(n.h2,{id:"creating-sockets",children:"Creating sockets"}),"\n",(0,t.jsx)(n.p,{children:"Creating a server socket:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'val server = AsynchronousServerSocketChannel.open\n  .mapM { socket =>\n    for {\n      address <- InetSocketAddress.hostName("127.0.0.1", 1337)\n      _ <- socket.bindTo(address)\n      _ <- socket.accept.preallocate.flatMap(_.use(channel => doWork(channel).catchAll(ex => putStrLn(ex.getMessage))).fork).forever.fork\n    } yield ()\n  }.useForever\n\ndef doWork(channel: AsynchronousSocketChannel): ZIO[Console with Clock, Throwable, Unit] = {\n  val process =\n    for {\n      chunk <- channel.readChunk(3)\n      str = chunk.toArray.map(_.toChar).mkString\n      _ <- putStrLn(s"received: [$str] [${chunk.length}]")\n    } yield ()\n\n  process.whenM(channel.isOpen).forever\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Creating a client socket:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:"val clientM: Managed[Exception, AsynchronousSocketChannel] = AsynchronousSocketChannel.open\n  .mapM { client =>\n    for {\n      host    <- InetAddress.localHost\n      address <- InetSocketAddress.inetAddress(host, 2552)\n      _       <- client.connect(address)\n    } yield client\n  }\n"})}),"\n",(0,t.jsx)(n.p,{children:"Reading and writing to a socket:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:"for {\n  serverFiber <- server.fork\n  _ <- clientM.use(_.writeChunk(Chunk.fromArray(Array(1, 2, 3).map(_.toByte))))\n  _           <- serverFiber.join\n} yield ()\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>c,x:()=>i});var s=o(96540);const t={},r=s.createContext(t);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);