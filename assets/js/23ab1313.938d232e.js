"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[62211],{17150:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"guides/quickstarts/hello-world","title":"ZIO Quickstart: Hello World","description":"This is the simplest quickstart for a ZIO application. You can download and run it very quickly. This will give you an idea of how to write similar apps.","source":"@site/docs/guides/quickstarts/hello-world.md","sourceDirName":"guides/quickstarts","slug":"/guides/quickstarts/hello-world","permalink":"/guides/quickstarts/hello-world","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/guides/quickstarts/hello-world.md","tags":[],"version":"current","frontMatter":{"id":"hello-world","title":"ZIO Quickstart: Hello World","sidebar_label":"Hello World"},"sidebar":"guides-sidebar","previous":{"title":"Overview","permalink":"/guides/"},"next":{"title":"RESTful Web Service","permalink":"/guides/quickstarts/restful-webservice"}}');var s=t(74848),o=t(28453);const r={id:"hello-world",title:"ZIO Quickstart: Hello World",sidebar_label:"Hello World"},l=void 0,a={},c=[{value:"Running The Example",id:"running-the-example",level:2},{value:"Testing The Quickstart",id:"testing-the-quickstart",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"This is the simplest quickstart for a ZIO application. You can download and run it very quickly. This will give you an idea of how to write similar apps."}),"\n",(0,s.jsx)(n.h2,{id:"running-the-example",children:"Running The Example"}),"\n",(0,s.jsxs)(n.p,{children:["First, open the console and clone the ",(0,s.jsx)(n.a,{href:"https://github.com/zio/zio-quickstarts",children:"ZIO Quickstarts"})," project using ",(0,s.jsx)(n.code,{children:"git"})," (or you can simply download the project) and then change the directory:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ git clone https://github.com/zio/zio-quickstarts.git\n$ cd zio-quickstarts/zio-quickstart-hello-world\n"})}),"\n",(0,s.jsx)(n.p,{children:"Once you are inside the project directory, run the application:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sbt run\n"})}),"\n",(0,s.jsx)(n.p,{children:"Alternatively, to enable hot-reloading and prevent port binding issues, you can use:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sbt reStart\n"})}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsxs)(n.p,{children:['If you encounter a "port already in use" error, you can use ',(0,s.jsx)(n.code,{children:"sbt-revolver"})," to manage server restarts more effectively. The ",(0,s.jsx)(n.code,{children:"reStart"})," command will start your server and ",(0,s.jsx)(n.code,{children:"reStop"})," will properly stop it, releasing the port."]}),(0,s.jsxs)(n.p,{children:["To enable this feature, we have included ",(0,s.jsx)(n.code,{children:"sbt-revolver"})," in the project. For more details on this, refer to the ",(0,s.jsx)(n.a,{href:"https://zio.dev/zio-http/installation#hot-reload-changes-watch-mode",children:"ZIO HTTP documentation on hot-reloading"}),"."]})]}),"\n",(0,s.jsx)(n.h2,{id:"testing-the-quickstart",children:"Testing The Quickstart"}),"\n",(0,s.jsxs)(n.p,{children:["When we prompt the ",(0,s.jsx)(n.code,{children:"sbt run"})," the sbt search for the executable class and will find the ",(0,s.jsx)(n.code,{children:"zio.dev.quickstart.MainApp"})," which contains the following code:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",children:'import zio._\n\nobject MainApp extends ZIOAppDefault {\n  def run = Console.printLine("Hello, World!")\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"MainApp"})," is the main object of our application which extends the ",(0,s.jsx)(n.code,{children:"ZIOAppDefault"})," trait. This trait provides the ",(0,s.jsx)(n.code,{children:"main"})," function which can be invoked from IDEs or the command-line, e.g. the ",(0,s.jsx)(n.code,{children:"sbt run"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"This example is the simplest, example we can run. Let's change it so that we ask the name of the user and print a hello along with the user's name:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",children:'import zio._\n\nobject MainApp extends ZIOAppDefault {\n  def run =\n    for {\n      _    <- Console.print("Please enter your name: ")\n      name <- Console.readLine\n      _    <- Console.printLine(s"Hello, $name!")\n    } yield ()\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In this example, we used ",(0,s.jsx)(n.code,{children:"for-comprehension"})," to compose ",(0,s.jsx)(n.code,{children:"print"}),", ",(0,s.jsx)(n.code,{children:"readLine"})," and ",(0,s.jsx)(n.code,{children:"printLine"})," workflows. We can think of it as the following ",(0,s.jsx)(n.code,{children:"flatMap"})," operations:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",children:'import zio._\n\nobject MainApp extends ZIOAppDefault {\n  def run =\n    Console.print("Please enter your name: ")\n      .flatMap { _ =>\n        Console.readLine\n          .flatMap { name =>\n            Console.printLine(s"Hello, $name!")\n          }\n      }\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(96540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);