"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[79659],{34898:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"zio-dynamodb/reference/projection-expression","title":"ProjectionExpression","description":"The ProjectionExpression API is common to both the Type Safe High Level API (with the exception the primary keys API)","source":"@site/docs/zio-dynamodb/reference/projection-expression.md","sourceDirName":"zio-dynamodb/reference","slug":"/zio-dynamodb/reference/projection-expression","permalink":"/zio-dynamodb/reference/projection-expression","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-dynamodb/reference/projection-expression.md","tags":[],"version":"current","frontMatter":{"id":"projection-expression","title":"ProjectionExpression"},"sidebar":"ecosystem-sidebar","previous":{"title":"DynamoDBQuery","permalink":"/zio-dynamodb/reference/dynamodb-query"},"next":{"title":"Error Handling","permalink":"/zio-dynamodb/reference/error-handling"}}');var t=r(74848),i=r(28453);const d={id:"projection-expression",title:"ProjectionExpression"},c=void 0,o={},l=[{value:"<code>ProjectionExpression</code> API Summary",id:"projectionexpression-api-summary",level:3}];function x(e){const s={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"ProjectionExpression"})," API is common to both the Type Safe High Level API (with the exception the primary keys API)\nand the Low Level API - however the way one is constructed is different."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"High Level API construction"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:"final case class Person(id: String, group: String name: String)\nobject Person {\n  implicit val schema: Schema.CaseClass3[String, String, String, Person] = DeriveSchema.gen[Person]\n  \n  // id and name are ProjectionExpressions\n  val (id, group, name) = ProjectionExpression.accessors[Person]\n}\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Low Level API construction"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:'// id and name are ProjectionExpressions\nval id = ProjectionExpression.$("id")\nval name = ProjectionExpression.$("name")\n'})}),"\n",(0,t.jsxs)(s.p,{children:["For more details see ",(0,t.jsx)(s.a,{href:"low-level-api/dollar-function",children:"$ and Parse functions"})," section"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Type Safety"})}),"\n",(0,t.jsx)(s.p,{children:"The other notable difference is that High Level API is totally type safe and many subtle errors are caught at compile time:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:'Person.id === 1 // will not compile\nPerson.id === "1" && Person.name === 2 // will not compile\nPerson.id === "1" && Employee.name === "2" // will not compile\n\nProjectionExpression.$("name") === 1 // will compile!\n'})}),"\n",(0,t.jsxs)(s.h3,{id:"projectionexpression-api-summary",children:[(0,t.jsx)(s.code,{children:"ProjectionExpression"})," API Summary"]}),"\n",(0,t.jsxs)(s.p,{children:["Once we have a ",(0,t.jsx)(s.code,{children:"ProjectionExpression"})," we can use it as a springboard to create further expressions such as\n",(0,t.jsx)(s.code,{children:"ConditionExpression"}),", ",(0,t.jsx)(s.code,{children:"UpdateExpression"})," and ",(0,t.jsx)(s.code,{children:"PrimaryKeyExpression"}),":"]}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Category"}),(0,t.jsx)(s.th,{children:"Method"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Primary Keys (High Level API only)"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"partitionKey"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:'Person.id.partitionKey === "1"'})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"sortKey"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:'Person.id.partitionKey === "1" && Person.group.sortKey === "2"'})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"ConditionExpression"})," / ",(0,t.jsx)(s.code,{children:"FilterExpression"})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"==="})}),(0,t.jsx)(s.td,{children:"Equality"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"<>"})}),(0,t.jsx)(s.td,{children:"Inequality"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:">"})}),(0,t.jsx)(s.td,{children:"Greater than"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:">="})}),(0,t.jsx)(s.td,{children:"Greater than or equal"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"<"})}),(0,t.jsx)(s.td,{children:"Less than"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"<="})}),(0,t.jsx)(s.td,{children:"Less than or equal"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"exists"})}),(0,t.jsx)(s.td,{children:"returns true if the attribute exists"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"notExists"})}),(0,t.jsx)(s.td,{children:"returns true if the attribute does not exists"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"size"})}),(0,t.jsx)(s.td,{children:"returns size of attribute. Applies to all types except Number and Boolean"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"isXXXX"})}),(0,t.jsxs)(s.td,{children:["There is a function per type eg ",(0,t.jsx)(s.code,{children:"isBinary"})," - returns true if the attribute is of the specified type"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"between(from, to)"})}),(0,t.jsx)(s.td,{children:"returns true if the attribute is between the supplied values, inclusive"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"beginsWith"})}),(0,t.jsx)(s.td,{children:"Only applies to string attributes"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"inSet"})}),(0,t.jsx)(s.td,{children:"returns true if the attribute is in the supplied set"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"in(a, b, c ...)"})}),(0,t.jsx)(s.td,{children:"returns true if the attribute matches one of the supplied values"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"contains"})}),(0,t.jsx)(s.td,{children:"returns true if the attribute contains the supplied value - applies to a String or a Set"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"UpdateExpression"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"+"})}),(0,t.jsxs)(s.td,{children:["combines update actions eg ",(0,t.jsx)(s.code,{children:"Person.name.set(42) + Person.age.set(42)"})]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"set"})}),(0,t.jsxs)(s.td,{children:["Set an attribute ",(0,t.jsx)(s.code,{children:'Person.name.set("John")'})]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"setIfNotExists"})}),(0,t.jsxs)(s.td,{children:["Set attribute if it does not exists ",(0,t.jsx)(s.code,{children:'Person.name.setIfNotExists("John")'})]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"appendList"})}),(0,t.jsx)(s.td,{children:"Add supplied list to the end of this list attribute"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"prepend"})}),(0,t.jsx)(s.td,{children:"Prepend an element to a list attribute"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"prependList"})}),(0,t.jsx)(s.td,{children:"Prepend a list to list attribute"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"deleteFromSet"})}),(0,t.jsx)(s.td,{children:"delete all elements that match the supplied set"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"add(a: To)"})}),(0,t.jsx)(s.td,{children:"adds this value as a number attribute if it does not exists, else adds the numeric value to the existing attribute"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"addSet"})}),(0,t.jsx)(s.td,{children:"Adds this set as an attribute if it does not exists, else if it exists it adds the elements of the set"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"remove(index: Int)"})}),(0,t.jsx)(s.td,{children:"remove an element at the specified index"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"remove"})}),(0,t.jsx)(s.td,{children:"Removes this path expression from an item"})]})]})]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>d,x:()=>c});var n=r(96540);const t={},i=n.createContext(t);function d(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);