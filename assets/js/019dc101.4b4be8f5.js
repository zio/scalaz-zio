"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[44596],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var s=t(96540);const o={},i=s.createContext(o);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:n},e.children)}},68081:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"zio-amqp/index","title":"ZIO AMQP","description":"ZIO AMQP is a ZIO-based wrapper around the RabbitMQ client. It provides a streaming interface to AMQP queues and helps to prevent you from shooting yourself in the foot with thread-safety issues.","source":"@site/docs/zio-amqp/index.md","sourceDirName":"zio-amqp","slug":"/zio-amqp/","permalink":"/zio-amqp/","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-amqp/index.md","tags":[],"version":"current","frontMatter":{"id":"index","title":"ZIO AMQP"},"sidebar":"ecosystem-sidebar","previous":{"title":"ZIO 2.x Interop Cats 2.x","permalink":"/zio2-interop-cats2/"},"next":{"title":"Overview","permalink":"/zio-aws/"}}');var o=t(74848),i=t(28453);const a={id:"index",title:"ZIO AMQP"},r=void 0,c={},l=[{value:"Installation",id:"installation",level:2},{value:"Consuming",id:"consuming",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"ZIO AMQP is a ZIO-based wrapper around the RabbitMQ client. It provides a streaming interface to AMQP queues and helps to prevent you from shooting yourself in the foot with thread-safety issues."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://github.com/zio/zio/wiki/Project-Stages",children:(0,o.jsx)(n.img,{src:"https://img.shields.io/badge/Project%20Stage-Development-green.svg",alt:"Development"})})," ",(0,o.jsx)(n.img,{src:"https://github.com/zio/zio-amqp/workflows/CI/badge.svg",alt:"CI Badge"})," ",(0,o.jsx)(n.a,{href:"https://oss.sonatype.org/content/repositories/releases/dev/zio/zio-amqp_2.13/",children:(0,o.jsx)(n.img,{src:"https://img.shields.io/nexus/r/https/oss.sonatype.org/dev.zio/zio-amqp_2.13.svg?label=Sonatype%20Release",alt:"Sonatype Releases"})})," ",(0,o.jsx)(n.a,{href:"https://oss.sonatype.org/content/repositories/snapshots/dev/zio/zio-amqp_2.13/",children:(0,o.jsx)(n.img,{src:"https://img.shields.io/nexus/s/https/oss.sonatype.org/dev.zio/zio-amqp_2.13.svg?label=Sonatype%20Snapshot",alt:"Sonatype Snapshots"})})," ",(0,o.jsx)(n.a,{href:"https://javadoc.io/doc/dev.zio/zio-amqp-docs_2.13",children:(0,o.jsx)(n.img,{src:"https://javadoc.io/badge2/dev.zio/zio-amqp-docs_2.13/javadoc.svg",alt:"javadoc"})})," ",(0,o.jsx)(n.a,{href:"https://github.com/zio/zio-amqp",children:(0,o.jsx)(n.img,{src:"https://img.shields.io/github/stars/zio/zio-amqp?style=social",alt:"ZIO AMQP"})})]}),"\n",(0,o.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsxs)(n.p,{children:["Add the following lines to your ",(0,o.jsx)(n.code,{children:"build.sbt"})," file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-scala",children:'libraryDependencies += "dev.zio" %% "zio-amqp" % "1.0.0-alpha.3"\n'})}),"\n",(0,o.jsx)(n.p,{children:"The latest version is built against ZIO 2.0.0-RC6."}),"\n",(0,o.jsx)(n.h2,{id:"consuming",children:"Consuming"}),"\n",(0,o.jsx)(n.p,{children:"The example below creates a connection to an AMQP server and then creates a channel. Both are created as Managed resources, which means they are closed automatically after using even in the face of errors."}),"\n",(0,o.jsxs)(n.p,{children:["The example then creates a stream of the messages consumed from a queue named ",(0,o.jsx)(n.code,{children:'"queueName"'}),". Each received message is acknowledged back to the AMQP server."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-scala",children:'import nl.vroste.zio.amqp._\nimport nl.vroste.zio.amqp.model._\nimport java.net.URI\nimport zio._\nimport zio.Console._\n\nval channel: ZIO[Scope, Throwable, Channel] = for {\n  connection <- Amqp.connect(URI.create("amqp://my_amqp_server_uri"))\n  channel    <- Amqp.createChannel(connection)\n} yield channel\n\nval effect: ZIO[Any, Throwable, Unit] =\n  ZIO.scoped {\n    channel.flatMap { channel =>\n      channel\n        .consume(queue = QueueName("queueName"), consumerTag = ConsumerTag("test"))\n        .mapZIO { record =>\n          val deliveryTag = record.getEnvelope.getDeliveryTag\n          printLine(s"Received ${deliveryTag}: ${new String(record.getBody)}") *>\n            channel.ack(DeliveryTag(deliveryTag))\n        }\n        .take(5)\n        .runDrain\n    }\n  }\n'})}),"\n",(0,o.jsxs)(n.p,{children:["See the ",(0,o.jsx)(n.a,{href:"https://zio.dev/docs/overview/overview_running_effects#defaultruntime",children:"ZIO documentation"})," for more information on how to run this effect or integrate with an existing application."]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);