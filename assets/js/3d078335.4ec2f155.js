"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[39402],{80372:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"zio-sqs/index","title":"Introduction to ZIO SQS","description":"This library is a ZIO-powered client for AWS SQS. It is built on top of the AWS SDK for Java 2.0 via the automatically generated wrappers from zio-aws.","source":"@site/docs/zio-sqs/index.md","sourceDirName":"zio-sqs","slug":"/zio-sqs/","permalink":"/zio-sqs/","draft":false,"unlisted":false,"editUrl":"https://github.com/zio/zio/edit/series/2.x/docs/zio-sqs/index.md","tags":[],"version":"current","frontMatter":{"id":"index","title":"Introduction to ZIO SQS","sidebar_label":"ZIO SQS"},"sidebar":"ecosystem-sidebar","previous":{"title":"ZIO SBT","permalink":"/zio-sbt/"},"next":{"title":"Introduction","permalink":"/zio-schema/"}}');var i=s(74848),t=s(28453);const o={id:"index",title:"Introduction to ZIO SQS",sidebar_label:"ZIO SQS"},l=void 0,a={},d=[{value:"Add the dependency",id:"add-the-dependency",level:2},{value:"How to use",id:"how-to-use",level:2},{value:"Publish messages",id:"publish-messages",level:3},{value:"Producer",id:"producer",level:4},{value:"ProducerEvent",id:"producerevent",level:4},{value:"ProducerError",id:"producererror",level:4},{value:"Publish Example",id:"publish-example",level:4},{value:"Consume messages",id:"consume-messages",level:3},{value:"Full example",id:"full-example",level:3}];function c(e){const r={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.p,{children:["This library is a ",(0,i.jsx)(r.a,{href:"https://github.com/zio/zio",children:"ZIO"}),"-powered client for AWS SQS. It is built on top of the ",(0,i.jsx)(r.a,{href:"https://docs.aws.amazon.com/sdk-for-java/v2/developer-guide/basics.html",children:"AWS SDK for Java 2.0"})," via the automatically generated wrappers from ",(0,i.jsx)(r.a,{href:"https://github.com/vigoo/zio-aws",children:"zio-aws"}),"."]}),"\n",(0,i.jsx)(r.h2,{id:"add-the-dependency",children:"Add the dependency"}),"\n",(0,i.jsxs)(r.p,{children:["To use ",(0,i.jsx)(r.code,{children:"zio-sqs"}),", add the following line in your ",(0,i.jsx)(r.code,{children:"build.sbt"})," file:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'libraryDependencies += "dev.zio" %% "zio-sqs" % "0.5.0"\n'})}),"\n",(0,i.jsx)(r.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,i.jsxs)(r.p,{children:["In order to use the connector, you need to provide your program with a configured SQS client as an ",(0,i.jsx)(r.code,{children:"Sqs"})," ZLayer. You can use ",(0,i.jsx)(r.code,{children:"io.github.vigoo.zioaws.sqs.live"})," to use default AWS SDK settings or use ",(0,i.jsx)(r.code,{children:".customized"})," (refer to the ",(0,i.jsx)(r.a,{href:"https://docs.aws.amazon.com/sdk-for-java/v2/developer-guide/creating-clients.html",children:"AWS SDK Documentation"})," if you need help customizing it). See also the ",(0,i.jsx)(r.a,{href:"https://zio.dev/docs/howto/howto_use_layers",children:"ZIO documentation"})," on how to use layers."]}),"\n",(0,i.jsx)(r.h3,{id:"publish-messages",children:"Publish messages"}),"\n",(0,i.jsxs)(r.p,{children:["Use ",(0,i.jsx)(r.code,{children:"Producer.make"})," to instantiate an instance of ",(0,i.jsx)(r.code,{children:"Producer"})," trait that can be used to publish objects of type ",(0,i.jsx)(r.code,{children:"T"})," to the queue."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-scala",children:"def make[R, T](\n    queueUrl: String,\n    serializer: Serializer[T],\n    settings: ProducerSettings = ProducerSettings()\n  ): ZManaged[R with Sqs with Clock, Throwable, Producer[T]]\n"})}),"\n",(0,i.jsx)(r.p,{children:"where:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"queueUrl: String"})," - an SQS queue URL"]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"serializer: Serializer[T]"})," - an instance of ",(0,i.jsx)(r.code,{children:"zio.sqs.serialization.Serializer"})," that can be used to convert an object of type ",(0,i.jsx)(r.code,{children:"T"})," to a string."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-scala",children:"  trait Serializer[T] {\n    def apply(t: T): String\n  }\n"})}),"\n",(0,i.jsxs)(r.p,{children:["If a published message is already a string, ",(0,i.jsx)(r.code,{children:"Serializer.serializeString"})," can be used."]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"settings: ProducerSettings"})," - a set of settings (",(0,i.jsx)(r.code,{children:"ProducerSettings"}),") used to configure the producer."]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"batchSize: Int"})," - The size of the batch to use, [1-10] (default: 10)."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"duration: Duration"})," - Time to wait for the batch to be full (have the specified batchSize) (default: 500 milliseconds)."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"parallelism: Int"})," - The number of concurrent requests to make to SQS (default: 16)."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"retryDelay: Duration"})," - Time to wait before retrying event republishing if it failed with a recoverable error (default: 250 milliseconds).\nThe errors returned from SQS could either recoverable or not. An example of recoverable error -- when the server returned the code: ",(0,i.jsx)(r.code,{children:"ServiceUnavailable"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"retryMaxCount: Int"})," - The number of retries to make for a posted event (default: 10)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"producer",children:"Producer"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"Producer"})," contains two set of methods:"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:["methods that fail the resulting ",(0,i.jsx)(r.em,{children:"Task"})," or ",(0,i.jsx)(r.em,{children:"Stream"})," if SQS server returns an error for a published event."]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"def produce(e: ProducerEvent[T]): Task[ProducerEvent[T]]"})," - Publishes a single event and fails the task.\nFails the ",(0,i.jsx)(r.code,{children:"Task"})," if the server returns an error."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"def produceBatch(es: Iterable[ProducerEvent[T]]): Task[List[ProducerEvent[T]]]"})," - Publishes a batch of events.\nFails the ",(0,i.jsx)(r.code,{children:"Task"})," if the server returns an error for any of the provided events."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"def sendStream: Stream[Throwable, ProducerEvent[T]] => ZStream[Any, Throwable, ProducerEvent[T]]"})," - Stream that takes the events and produces a stream with published events.\nFails if the server returns an error for any of the published events."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"def sendSink: ZSink[Any, Throwable, Nothing, Iterable[ProducerEvent[T]], Unit]"})," - Sink that can be used to publish events.\nFails if the server returns an error for any of the published events."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:["methods that do not fail the operation but return ",(0,i.jsx)(r.code,{children:"ErrorOrEvent[T]"})," (defied as ",(0,i.jsx)(r.code,{children:"Either[ProducerError[T], ProducerEvent[T]]"}),")."]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"def sendStreamE: Stream[Throwable, ProducerEvent[T]] => ZStream[Any, Throwable, ErrorOrEvent[T]]"})," - Stream that takes the events and produces a stream with the results.\nDoesn't fail if the server returns an error for any of the published events."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"def produceBatchE(es: Iterable[ProducerEvent[T]]): Task[List[ErrorOrEvent[T]]]"})," - Publishes a batch of events. Completes when all input events were processed (published to the server or failed with an error).\nDoesn't fail the ",(0,i.jsx)(r.code,{children:"Task"})," if the server returns an error for any of the provided events."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["Producer tries to accumulate messages in batches and send them to the server.\nIf messages should be sent one by one and batching is not expected, set ",(0,i.jsx)(r.code,{children:"ProducerSettings.batchSize"})," to ",(0,i.jsx)(r.code,{children:"1"}),"."]}),"\n",(0,i.jsx)(r.h4,{id:"producerevent",children:"ProducerEvent"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"ProducerEvent[T]"})," is an event that is published to SQS and contains the following parameters that could be configured:"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"data: T"})," - Object to publish to SQS. A serializer for this type should be provided when a ",(0,i.jsx)(r.code,{children:"Producer"})," is instantiated."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"attributes: Map[String, MessageAttributeValue]"})," - A map of ",(0,i.jsx)(r.a,{href:"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-message-attributes.html",children:"attributes"})," to set."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"groupId: Option[String]"})," - Assigns a specific ",(0,i.jsx)(r.a,{href:"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/using-messagegroupid-property.html",children:"message group"})," to the message."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"deduplicationId: Option[String]"})," - Token used for ",(0,i.jsx)(r.a,{href:"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/using-messagededuplicationid-property.html",children:"deduplication"})," of sent messages."]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["If a plain string should be published without any additional attributes a ",(0,i.jsx)(r.code,{children:"ProducerEvent"})," can be created directly:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-scala",children:'val str: String = "message to publish"\nval event: ProducerEvent = ProducerEvent(str)\n'})}),"\n",(0,i.jsx)(r.h4,{id:"producererror",children:"ProducerError"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"ProducerError[T]"})," represents an ",(0,i.jsx)(r.a,{href:"(https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_BatchResultErrorEntry.html)",children:"error details"})," that were returned from the server."]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"senderFault: Boolean"})," - Specifies whether the error happened due to the caller of the batch API action."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"code: String"})," - An error code representing why the action failed on this entry."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"message: Option[String]"})," - A message explaining why the action failed on this entry."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"event: ProducerEvent[T]"})," - An event that triggered this error on the server."]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"publish-example",children:"Publish Example"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-scala",children:'import io.github.vigoo.zioaws\nimport io.github.vigoo.zioaws.sqs.Sqs\nimport zio.clock.Clock\nimport zio.sqs._\nimport zio.sqs.producer._\nimport zio.sqs.serialization._\nimport zio.stream._\nimport zio.{ ExitCode, RIO, URIO, ZLayer }\n\nobject PublishExample extends zio.App {\n\n  val client: ZLayer[Any, Throwable, Sqs] = zioaws.netty.default >>>\n    zioaws.core.config.default >>>\n    zioaws.sqs.live\n\n  val events                                                = List("message1", "message2").map(ProducerEvent(_))\n  val queueName                                             = "TestQueue"\n  val program: RIO[Clock with Sqs, Either[Throwable, Unit]] = for {\n    queueUrl    <- Utils.getQueueUrl(queueName)\n    producer     = Producer.make(queueUrl, Serializer.serializeString)\n    errOrResult <- producer.use(p => p.sendStream(ZStream(events: _*)).runDrain.either)\n  } yield errOrResult\n\n  override def run(args: List[String]): URIO[zio.ZEnv, ExitCode] =\n    program.provideCustomLayer(client).exitCode\n}\n'})}),"\n",(0,i.jsx)(r.h3,{id:"consume-messages",children:"Consume messages"}),"\n",(0,i.jsxs)(r.p,{children:["Use ",(0,i.jsx)(r.code,{children:"SqsStream.apply"})," to get a stream of messages from a queue. It returns a ZIO ",(0,i.jsx)(r.code,{children:"Stream"})," that you can consume with all the operators available."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-scala",children:"def apply(\n  queueUrl: String,\n  settings: SqsStreamSettings = SqsStreamSettings()\n): ZStream[Sqs, Throwable, Message]\n"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"SqsStreamSettings"})," allows your to configure a number of things:"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"autoDelete"}),": if ",(0,i.jsx)(r.code,{children:"true"}),", messages will be automatically deleted from the queue when they're consumed by the stream, if ",(0,i.jsx)(r.code,{children:"false"})," you have to delete them explicitly by calling ",(0,i.jsx)(r.code,{children:"SqsStream.deleteMessage"})," (default ",(0,i.jsx)(r.code,{children:"true"}),")"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"stopWhenQueueEmpty"}),": if ",(0,i.jsx)(r.code,{children:"true"})," the stream will close when there the queue is empty, if ",(0,i.jsx)(r.code,{children:"false"})," the stream will go on forever (default ",(0,i.jsx)(r.code,{children:"false"}),")"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"attributeNames"}),": see the ",(0,i.jsx)(r.a,{href:"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_ReceiveMessage.html",children:"related page on AWS docs"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"maxNumberOfMessages"}),": number of messages to query at once from SQS (default ",(0,i.jsx)(r.code,{children:"1"}),")"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"messageAttributeNames"}),": see the ",(0,i.jsx)(r.a,{href:"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_ReceiveMessage.html",children:"related page on AWS docs"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"visibilityTimeout"}),": see the ",(0,i.jsx)(r.a,{href:"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html",children:"related page on AWS docs"})," (default ",(0,i.jsx)(r.code,{children:"Some(30)"}),". If set to ",(0,i.jsx)(r.code,{children:"None"}),", the queue's value will be used.)"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"waitTimeSeconds"}),": see the ",(0,i.jsx)(r.a,{href:"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-long-polling.html",children:"related page on AWS docs"})," (default ",(0,i.jsx)(r.code,{children:"Some(20)"}),". If set to ",(0,i.jsx)(r.code,{children:"None"}),", the queue's value will be used.)"]}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Example:"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-scala",children:"import zio.sqs.{SqsStream, SqsStreamSettings}\n\nSqsStream(\n  queueUrl,\n  SqsStreamSettings(stopWhenQueueEmpty = true, waitTimeSeconds = Some(3))\n).foreach(msg => UIO(println(msg.body)))\n"})}),"\n",(0,i.jsx)(r.h3,{id:"full-example",children:"Full example"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-scala",children:'import io.github.vigoo.zioaws\nimport io.github.vigoo.zioaws.core.config.CommonAwsConfig\nimport io.github.vigoo.zioaws.sqs.Sqs\nimport software.amazon.awssdk.auth.credentials.{ AwsBasicCredentials, StaticCredentialsProvider }\nimport software.amazon.awssdk.regions.Region\nimport zio.clock.Clock\nimport zio.sqs.producer.{ Producer, ProducerEvent }\nimport zio.sqs.serialization.Serializer\nimport zio.sqs.{ SqsStream, SqsStreamSettings, Utils }\nimport zio._\n\nobject TestApp extends zio.App {\n  val queueName = "TestQueue"\n\n  val client: ZLayer[Any, Throwable, Sqs] = zioaws.netty.default ++\n    ZLayer.succeed(\n      CommonAwsConfig(\n        region = Some(Region.of("ap-northeast-2")),\n        credentialsProvider = StaticCredentialsProvider.create(AwsBasicCredentials.create("key", "key")),\n        endpointOverride = None,\n        commonClientConfig = None\n      )\n    ) >>>\n    zioaws.core.config.configured() >>>\n    zioaws.sqs.live\n\n  val program: RIO[Sqs with Clock, Unit] = for {\n    _        <- Utils.createQueue(queueName)\n    queueUrl <- Utils.getQueueUrl(queueName)\n    producer  = Producer.make(queueUrl, Serializer.serializeString)\n    _        <- producer.use { p =>\n                  p.produce(ProducerEvent("hello"))\n                }\n    _        <- SqsStream(\n                  queueUrl,\n                  SqsStreamSettings(stopWhenQueueEmpty = true, waitTimeSeconds = Some(3))\n                ).foreach(msg => UIO(println(msg.body)))\n  } yield ()\n\n  override def run(args: List[String]): URIO[zio.ZEnv, ExitCode] =\n    program.provideCustomLayer(client).exitCode\n}\n'})})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,r,s)=>{s.d(r,{R:()=>o,x:()=>l});var n=s(96540);const i={},t=n.createContext(i);function o(e){const r=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(t.Provider,{value:r},e.children)}}}]);